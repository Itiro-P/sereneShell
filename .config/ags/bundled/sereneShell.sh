#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gc2-ags.js"

cat <<EOF | base64 --decode > $file
// sass:/home/itiro/.config/ags/styles/index.scss
var styles_default = '/* Catppuccin mocha colors */\n.ControlCenter, .Media, .Workspaces, .AudioControl, .DateTimeCalendar {\n  background: none;\n  padding: 4px;\n  margin: 2px;\n  border: none;\n  border-radius: 18px;\n}\n.ControlCenter *, .Media *, .Workspaces *, .AudioControl *, .DateTimeCalendar * {\n  margin: 0px 2px;\n}\n\n.TrayItem, .Workspaces .Workspace, .Workspaces .MoreWorkspacesButton, .Mixer .MixerEntry .Icon, .MemoryUsage, .CpuUsage, .Battery {\n  border-radius: 100%;\n  min-width: 24px;\n  min-height: 24px;\n}\n\n.Mixer .MixerEntry .Slider {\n  border-radius: 20px;\n  min-width: 160px;\n  min-height: 20px;\n}\n\n.DateTimeCalendar {\n  font-weight: bold;\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar * {\n  all: unset;\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar label.day-number, .DateTimeCalendar .Calendar label.other-month, .DateTimeCalendar .Calendar label.today {\n  border-radius: 10%;\n}\n.DateTimeCalendar .Calendar header {\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.DateTimeCalendar .Calendar button {\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar .Calendar button * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar button:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar .Calendar button:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid {\n  background-color: rgba(69, 71, 90, 0.7);\n}\n.DateTimeCalendar .Calendar grid label.other-month {\n  opacity: 0.5;\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.other-month:hover {\n  background: #f5e0dc;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.day-number {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.day-number:hover {\n  background: #cba6f7;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.today {\n  color: #1e1e2e;\n  background-color: #b4befe;\n}\n\n.SystemMonitor * {\n  margin: 0px 2px;\n  font-weight: bold;\n}\n\n.MemoryUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.MemoryUsage * {\n  color: #fab387;\n}\n.MemoryUsage:hover {\n  background: #fab387;\n}\n.MemoryUsage:hover * {\n  color: #1e1e2e;\n}\n\n.CpuUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.CpuUsage * {\n  color: #a6e3a1;\n}\n.CpuUsage:hover {\n  background: #a6e3a1;\n}\n.CpuUsage:hover * {\n  color: #1e1e2e;\n}\n\n.BatteryNormal {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryNormal * {\n  color: #b4befe;\n}\n.BatteryNormal:hover {\n  background: #b4befe;\n}\n.BatteryNormal:hover * {\n  color: #11111b;\n}\n\n.BatteryCritical {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryCritical * {\n  color: #f38ba8;\n}\n.BatteryCritical:hover {\n  background: #f38ba8;\n}\n.BatteryCritical:hover * {\n  color: #11111b;\n}\n\n.BatteryPopover {\n  background-color: rgba(49, 50, 68, 0.8);\n  padding: 2px;\n  border-radius: 16px;\n}\n.BatteryPopover .Title, .BatteryPopover .BatteryLife, .BatteryPopover .ToggleButton {\n  margin: 2px;\n}\n.BatteryPopover .Title {\n  color: #cdd6f4;\n  font-weight: bold;\n}\n.BatteryPopover .BatteryLife {\n  color: #cdd6f4;\n}\n.BatteryPopover .ToggleButton {\n  margin: 2px 4px;\n  padding: 2px;\n  border-radius: 10px;\n  background: rgba(137, 180, 250, 0.75);\n  color: rgba(30, 30, 46, 0.75);\n  transition: all 0.3s ease;\n}\n.BatteryPopover .ToggleButton:hover {\n  background: rgba(30, 30, 46, 0.75);\n  color: rgba(137, 180, 250, 0.75);\n}\n\n.AudioControl {\n  transition: all 0.3s ease;\n  background: none;\n}\n.AudioControl * {\n  color: #cdd6f4;\n}\n.AudioControl:hover {\n  background: #89b4fa;\n}\n.AudioControl:hover * {\n  color: #1e1e2e;\n}\n\n.Mixer {\n  padding: 6px;\n  border-radius: 16px;\n  background-color: rgba(49, 50, 68, 0.8);\n  border: none;\n}\n.Mixer .Label {\n  font-weight: bold;\n  font-size: 24px;\n  margin: 6px;\n  color: #cdd6f4;\n}\n.Mixer .MixerEntry {\n  background-color: #45475a;\n  padding: 2px;\n  margin: 2px;\n  border: none;\n  border-radius: 16px;\n}\n.Mixer .MixerEntry .Icon {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.Mixer .MixerEntry .Icon:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n.Mixer .MixerEntry .Slider {\n  background-color: #585b70;\n}\n.Mixer .MixerEntry .Slider highlight {\n  background-color: #89b4fa;\n}\n\n.Workspaces {\n  background-color: rgba(49, 50, 68, 0.8);\n  border-radius: 18px;\n}\n.Workspaces .Workspace, .Workspaces .MoreWorkspacesButton {\n  font-weight: bold;\n  background-color: rgba(17, 17, 27, 0.8);\n  border: none;\n  margin: 2px;\n  transition: all 0.2s ease;\n}\n.Workspaces .MoreWorkspacesButton {\n  transition: all 0.3s ease;\n  background: none;\n}\n.Workspaces .MoreWorkspacesButton * {\n  color: #cdd6f4;\n}\n.Workspaces .MoreWorkspacesButton:hover {\n  background: #89b4fa;\n}\n.Workspaces .MoreWorkspacesButton:hover * {\n  color: #1e1e2e;\n}\n.Workspaces .Active {\n  background-color: rgba(137, 180, 250, 0.9);\n}\n.Workspaces .Active label {\n  color: #11111b;\n}\n.Workspaces .Inactive {\n  transition: all 0.2s ease;\n}\n.Workspaces .Inactive:hover {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.Workspaces .WorkspacePopover {\n  border-radius: 16px;\n  padding: 6px;\n  background-color: rgba(49, 50, 68, 0.9);\n  margin: 2px;\n}\n\n.TrayItem {\n  margin: 2px;\n  -gtk-icon-size: 24px;\n  transition: all 0.25s ease;\n}\n.TrayItem:hover {\n  background-color: rgba(137, 180, 250, 0.8);\n  color: #11111b;\n}\n.TrayItem:active {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.TrayItem popover.menu {\n  margin: 10px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n.TrayItem popover.menu modelbutton {\n  padding: 2px;\n  border-radius: 4px;\n  margin: 0 2px;\n}\n.TrayItem popover.menu modelbutton:hover {\n  background: rgba(69, 71, 90, 0.2);\n}\n.TrayItem popover.menu modelbutton:active {\n  background: rgba(69, 71, 90, 0.4);\n}\n\n.Media {\n  margin: 2px;\n  border-radius: 20px;\n  transition: all 0.3s ease;\n  background: none;\n}\n.Media * {\n  color: #cdd6f4;\n}\n.Media:hover {\n  background: #89b4fa;\n}\n.Media:hover * {\n  color: #11111b;\n}\n.Media .MprisPopover {\n  background-color: rgba(24, 24, 37, 0.8);\n}\n.Media .MprisPopover .MprisPlayer {\n  padding: 16px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata {\n  margin-left: 12px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Title {\n  font-size: 20px;\n  color: #cdd6f4;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Artist {\n  font-size: 16px;\n  color: rgba(205, 214, 244, 0.7);\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Album {\n  font-size: 14px;\n  color: rgba(205, 214, 244, 0.5);\n  font-style: italic;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart {\n  margin-top: 12px;\n  padding: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider {\n  padding: 4px;\n  background-color: rgba(30, 30, 46, 0.6);\n  border: none;\n  border-radius: 14px;\n  margin: 5px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider {\n  min-width: 160px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider highlight {\n  background: #74c7ec;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .TimeLabel {\n  color: #cdd6f4;\n  margin-left: 10px;\n  font-size: 14px;\n  opacity: 0.8;\n  min-width: 40px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next {\n  margin: 4px;\n  border: none;\n  border-radius: 8px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next image {\n  margin: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next {\n  transition: all 0.3s ease;\n  background: #1e1e2e;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next * {\n  color: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover {\n  background: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover * {\n  color: #1e1e2e;\n}\n.Media .MprisPopover .Cava, .Media .MprisPopover .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.Cava, .Cava > *, .CavaOverlay, .CavaOverlay > * {\n  margin: 0;\n  padding: 0;\n}\n\n.Cava, .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.CavaOverlay {\n  border: none;\n  border-radius: 40px 40px 0px 0px;\n  background: none;\n  color: rgba(137, 180, 250, 0.6);\n  transition: all 0.3s ease;\n}\n.CavaOverlay:hover {\n  background: rgba(137, 180, 250, 0.6);\n  color: #1e1e2e;\n}\n\ntooltip {\n  padding: 6px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n\n.ControlCenter .Label {\n  font-size: 20px;\n}\n.ControlCenter {\n  transition: all 0.3s ease;\n}\n.ControlCenter:hover {\n  background-color: #89b4fa;\n}\n.ControlCenter:hover .Label {\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover {\n  padding: 5px;\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.ControlCenter .ControlCenterPopover .Subtitle {\n  font-size: 20px;\n  margin: 4px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option {\n  padding: 2px;\n  margin: 2px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option switch {\n  padding: 2px;\n  margin: 2px;\n  background-color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option switch image, .ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option switch slider {\n  background-color: #89b4fa;\n  min-width: 20px;\n  min-height: 5px;\n}\n\n.SelectorIndicator {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.SelectorIndicator .Option {\n  padding: 2px;\n  margin: 2px;\n}\n.SelectorIndicator .Option switch {\n  padding: 2px;\n  margin: 2px;\n  background-color: #1e1e2e;\n}\n.SelectorIndicator .Option switch image, .SelectorIndicator .Option switch slider {\n  background-color: #89b4fa;\n  min-width: 20px;\n  min-height: 5px;\n}\n\n.Cheatsheet {\n  padding: 10px;\n  border: 2px solid #89b4fa;\n  border-radius: 20px;\n  background-color: rgba(30, 30, 46, 0.8);\n}\n.Cheatsheet .Title {\n  font-weight: bolder;\n  font-size: 80px;\n}\n.Cheatsheet .Subtitle {\n  font-weight: bold;\n  font-size: 40px;\n}\n.Cheatsheet .Section {\n  margin: 4px;\n  padding: 4px;\n}\n.Cheatsheet .Entry {\n  margin: 3px;\n  border-radius: 6px;\n}\n.Cheatsheet .Entry .Bind, .Cheatsheet .Entry .Action {\n  padding: 2px;\n}\n.Cheatsheet .Entry .Bind {\n  transition: all 0.2s ease;\n  font-weight: bold;\n  color: #89b4fa;\n  background-color: #313244;\n}\n.Cheatsheet .Entry .Action {\n  transition: all 0.2s ease;\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Bind {\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Action {\n  color: #89b4fa;\n  background-color: #313244;\n}\n\n/* Resetting every decoration applied earlier */\n* {\n  font-family: "Monospace";\n  font-size: 16px;\n  -gtk-icon-size: 24px;\n  color: #cdd6f4;\n  background: none;\n  border: none;\n  box-shadow: none;\n  outline: none;\n  margin: 0;\n  padding: 0;\n}\n\n.Bar {\n  background: #1e1e2e;\n  border-radius: 28px;\n  margin: 4px 6px;\n}';

// ../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// modules/SystemMonitor.tsx
import AstalBattery from "gi://AstalBattery";
import GTop from "gi://GTop?version=2.0";

// services/TimeFormatter.ts
function formatTimeVerbose(seconds) {
  if (seconds >= 3600) {
    return `${Math.floor(seconds / 3600)}h${Math.floor(seconds % 3600 / 60)}m`;
  }
  return `${Math.floor(seconds / 60)}m`;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject2 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject from "gi://GObject";
import Gio from "gi://Gio";
import GLib from "gi://GLib";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputed(deps, transform) {
  let dispose;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const value = dep.get();
          if (cache[i] !== value) {
            cache[i] = dep.get();
            Array.from(subscribers).forEach((cb) => cb());
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  return new Accessor(get, subscribe);
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject2.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject3.Object, _b = GObject3.signals, _a = GObject3.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function callback(v) {
    for (const child of fragment.children) {
      fragment.removeChild(child);
      if (typeof cleanup === "function") {
        cleanup(child);
      } else if (cleanup !== null) {
        env.defaultCleanup(child);
      }
      if (scope) scope.dispose();
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    scope.dispose();
    dispose();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
function This({
  this: self,
  children,
  $type,
  ...props
}) {
  const cleanup = new Array();
  if ($type) setType(self, $type);
  for (const [key, value] of Object.entries(props)) {
    if (key === "css") {
      if (value instanceof Accessor) {
        env.setCss(self, value.get());
        cleanup.push(value.subscribe(() => env.setCss(self, value.get())));
      } else if (typeof value === "string") {
        env.setCss(self, value);
      }
    } else if (key === "class") {
      if (value instanceof Accessor) {
        env.setClass(self, value.get());
        cleanup.push(value.subscribe(() => env.setClass(self, value.get())));
      } else if (typeof value === "string") {
        env.setClass(self, value);
      }
    } else if (key.startsWith("on")) {
      const id = key.startsWith("onNotify") ? self.connect(`notify::${kebabify(key.slice(8))}`, value) : self.connect(kebabify(key.slice(2)), value);
      cleanup.push(() => self.disconnect(id));
    } else if (value instanceof Accessor) {
      set(self, key, value.get());
      cleanup.push(value.subscribe(() => set(self, key, value.get())));
    } else {
      set(self, key, value);
    }
  }
  if (Array.isArray(children)) {
    for (const ch of children) {
      if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
        env.addChild(self, ch, -1);
      }
    }
  } else {
    const ch = children;
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      env.addChild(self, ch, -1);
    }
  }
  if (cleanup.length > 0) {
    onCleanup(() => cleanup.forEach((cb) => cb()));
  }
  return self;
}

// ../../../../usr/share/ags/js/lib/time.ts
import AstalIO2 from "gi://AstalIO";

// ../../../../usr/share/ags/js/lib/process.ts
import AstalIO from "gi://AstalIO";
var Process = AstalIO.Process;
function exec(cmd) {
  return Array.isArray(cmd) ? AstalIO.Process.execv(cmd) : AstalIO.Process.exec(cmd);
}
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// ../../../../usr/share/ags/js/lib/time.ts
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk2 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject4 from "gi://GObject";
var dummyBuilder = new Gtk2.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk2.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk2.Widget && parent instanceof Gtk2.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk2.Popover && parent instanceof Gtk2.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk2.MenuButton || parent instanceof Gtk2.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk2.Window && parent instanceof Gtk2.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk2.TextBuffer && parent instanceof Gtk2.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if (parent instanceof Gtk2.Widget && child instanceof Gtk2.EventController) {
    return parent.remove_controller(child);
  }
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk2.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk2.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject4.Object)) {
      child = Gtk2.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk2.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk3.Box,
  button: Gtk3.Button,
  centerbox: Gtk3.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk3.DrawingArea,
  entry: Gtk3.Entry,
  image: Gtk3.Image,
  label: Gtk3.Label,
  levelbar: Gtk3.LevelBar,
  menubutton: Gtk3.MenuButton,
  overlay: Gtk3.Overlay,
  popover: Gtk3.Popover,
  revealer: Gtk3.Revealer,
  scrolledwindow: Gtk3.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk3.Stack,
  switch: Gtk3.Switch,
  togglebutton: Gtk3.ToggleButton,
  window: Astal2.Window
});

// modules/SystemMonitor.tsx
var pollTime = 3e3;
var SystemMonitorClass = class {
  constructor() {
    this.battery = AstalBattery.get_default();
    this.batteryIcon = createBinding(this.battery, "batteryIconName");
    this.batteryPercentage = createBinding(this.battery, "percentage");
    this.batteryCharging = createBinding(this.battery, "charging");
    this.batteryCritical = createComputed([this.batteryPercentage, this.batteryCharging], (p, c) => ["Battery", p <= 0.3 && !c ? "BatteryCritical" : "BatteryNormal"]);
    this.batteryLifeLabel = this.batteryCharging.as((c) => c ? `Charging: ${formatTimeVerbose(this.battery.time_to_full)} left` : `Discharging: ${formatTimeVerbose(this.battery.time_to_empty)} left`);
    this.cpuSource = new GTop.glibtop_cpu();
    this.memSource = new GTop.glibtop_mem();
    this.cpuData = { prev: { user: 0, sys: 0, total: 0 }, diff: { user: 0, sys: 0, total: 0 } };
    this._metrics = createPoll({ cpu: 0, mem: 0 }, pollTime, () => {
      try {
        GTop.glibtop_get_cpu(this.cpuSource);
        GTop.glibtop_get_mem(this.memSource);
        const cpu = this.cpuSource;
        const prev = this.cpuData.prev;
        this.cpuData.diff = {
          user: cpu.user - prev.user,
          sys: cpu.sys - prev.sys,
          total: cpu.total - prev.total
        };
        this.cpuData.prev = {
          user: cpu.user,
          sys: cpu.sys,
          total: cpu.total
        };
        const cpuDiff = this.cpuData.diff;
        const cpuPercent = cpuDiff.total > 0 ? Math.round((cpuDiff.user + cpuDiff.sys) / cpuDiff.total * 100) : 0;
        const memPercent = this.memSource.total > 0 ? Math.round(this.memSource.user / this.memSource.total * 100) : 0;
        return { cpu: Math.min(100, cpuPercent), mem: Math.min(100, memPercent) };
      } catch (error) {
        console.warn("Error when obtaining system metrics:", error);
        return { cpu: 0, mem: 0 };
      }
    });
  }
  indicator(widgets, cssClasses) {
    const [hoveredChild, setHoveredChild] = createState(widgets.icon);
    const hover = new Gtk.EventControllerMotion();
    const onEnter = hover.connect("enter", () => setHoveredChild(widgets.label));
    const onLeave = hover.connect("leave", () => setHoveredChild(widgets.icon));
    onCleanup(() => {
      hover.disconnect(onEnter);
      hover.disconnect(onLeave);
    });
    return /* @__PURE__ */ jsx("box", { $: (self) => self.add_controller(hover), children: /* @__PURE__ */ jsxs(
      "stack",
      {
        cssClasses,
        visibleChild: hoveredChild,
        transitionType: Gtk.StackTransitionType.CROSSFADE,
        transitionDuration: 200,
        children: [
          widgets.icon,
          widgets.label
        ]
      }
    ) });
  }
  get SystemMonitor() {
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["SystemMonitor"], children: [
      this.indicator(
        {
          icon: /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\uEC19" }),
          label: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.cpu}%`), widthChars: 4 })
        },
        ["CpuUsage"]
      ),
      this.indicator(
        {
          icon: /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\u{F061A}" }),
          label: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.mem}%`), widthChars: 4 })
        },
        ["MemoryUsage"]
      ),
      this.indicator(
        {
          icon: /* @__PURE__ */ jsx("image", { cssClasses: ["BatteryIcon"], iconName: this.batteryIcon }),
          label: /* @__PURE__ */ jsx("label", { cssClasses: ["BatteryUsageLabel"], label: this.batteryPercentage.as((p) => `${Math.round(Math.min(1, p) * 100) ?? 0}%`), widthChars: 4 })
        },
        this.batteryCritical
      )
    ] });
  }
};
var systemMonitor = new SystemMonitorClass();
var SystemMonitor_default = systemMonitor;

// modules/SystemTray.tsx
import AstalTray from "gi://AstalTray?version=0.1";
var SystemTrayClass = class {
  constructor() {
    this.setupTrayItem = (btn, item) => {
      btn.menuModel = item.menuModel;
      btn.insert_action_group("dbusmenu", item.actionGroup);
      const agId = item.connect("notify::action-group", () => {
        btn.insert_action_group("dbusmenu", item.actionGroup);
      });
      const mmId = item.connect("notify::menu-model", () => {
        btn.set_menu_model(item.menuModel);
      });
      onCleanup(() => {
        item.disconnect(agId);
        item.disconnect(mmId);
      });
    };
    this.default = AstalTray.get_default();
    this.itemsBinding = createBinding(this.default, "items");
  }
  TrayItem({ item }) {
    return /* @__PURE__ */ jsx(
      "menubutton",
      {
        cssClasses: ["TrayItem"],
        tooltipMarkup: createBinding(item, "tooltipMarkup"),
        $: (self) => this.setupTrayItem(self, item),
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER,
        children: /* @__PURE__ */ jsx("image", { gicon: createBinding(item, "gicon") })
      }
    );
  }
  get SystemTray() {
    return /* @__PURE__ */ jsx("box", { cssClasses: ["SystemTray"], children: /* @__PURE__ */ jsx(For, { each: this.itemsBinding, children: (item) => this.TrayItem({ item }) }) });
  }
};
var systemTray = new SystemTrayClass();
var SystemTray_default = systemTray;

// modules/Media.tsx
import AstalMpris from "gi://AstalMpris?version=0.1";
var PlayerButtonIcons = {
  playing: "media-playback-start-symbolic",
  paused: "media-playback-pause-symbolic",
  stopped: "media-playback-stop-symbolic",
  next: "media-skip-forward-symbolic",
  previous: "media-skip-backward-symbolic"
};
var MediaClass = class {
  constructor() {
    this.mpris = AstalMpris.get_default();
    this._activePlayerData = createBinding(this.mpris, "players").as(
      (players) => {
        let playing = null;
        let paused = null;
        let final = null;
        for (const player of players) {
          const status = player.get_playback_status();
          if (status === AstalMpris.PlaybackStatus.PLAYING) {
            playing = player;
            break;
          } else if (status === AstalMpris.PlaybackStatus.PAUSED) {
            paused = player;
          }
        }
        final = playing || paused;
        if (final !== null) {
          const status = createBinding(final, "playbackStatus");
          const canGoNext = createBinding(final, "canGoNext");
          const canGoPrevious = createBinding(final, "canGoPrevious");
          const canPause = createBinding(final, "canPause");
          const canPlay = createBinding(final, "canPlay");
          return {
            active: true,
            title: createBinding(final, "title"),
            artist: createBinding(final, "artist"),
            album: createBinding(final, "album"),
            statusIcon: status.as((st) => this.getPlayerStatusIcon(st === AstalMpris.PlaybackStatus.PLAYING ? "paused" : "playing")),
            statusText: status.as((st) => this.getPlayerStatus(st)),
            next: () => {
              if (canGoNext.get()) final.next();
            },
            previous: () => {
              if (canGoPrevious.get()) final.previous();
            },
            playPause: () => {
              if (canPause.get() || canPlay.get()) final.play_pause();
            }
          };
        }
        return {
          active: false,
          title: "Nenhum player ativo",
          artist: "",
          album: "",
          statusIcon: PlayerButtonIcons.stopped,
          statusText: this.getPlayerStatus(AstalMpris.PlaybackStatus.STOPPED),
          next: () => {
          },
          previous: () => {
          },
          playPause: () => {
          }
        };
      }
    );
  }
  getPlayerStatus(status) {
    switch (status) {
      case AstalMpris.PlaybackStatus.PLAYING:
        return "Playing";
      case AstalMpris.PlaybackStatus.PAUSED:
        return "Paused";
      default:
        return "Nothing Playing";
    }
  }
  getPlayerStatusIcon(status) {
    switch (status) {
      case "previous":
        return PlayerButtonIcons.previous;
      case "playing":
        return PlayerButtonIcons.playing;
      case "paused":
        return PlayerButtonIcons.paused;
      case "stopped":
        return PlayerButtonIcons.stopped;
      case "next":
        return PlayerButtonIcons.next;
      default:
        return PlayerButtonIcons.stopped;
    }
  }
  get Media() {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: this._activePlayerData, children: (player) => {
      return /* @__PURE__ */ jsx(
        "menubutton",
        {
          alwaysShowArrow: false,
          cssClasses: ["Media"],
          sensitive: player.active,
          popover: /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { cssClasses: ["MprisPopover"], overflow: Gtk.Overflow.HIDDEN, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["MprisPlayer"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Metadata"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: player.title, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Artist"], label: player.artist, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Album"], label: player.album, ellipsize: 3, maxWidthChars: 15, widthChars: 30 })
            ] }),
            /* @__PURE__ */ jsx("box", { cssClasses: ["LowerPart"], orientation: Gtk.Orientation.VERTICAL, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Controllers"], halign: Gtk.Align.CENTER, children: [
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: ["Previous"],
                  iconName: PlayerButtonIcons.previous,
                  onClicked: player.previous
                }
              ),
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: ["PlayPause"],
                  iconName: player.statusIcon,
                  onClicked: player.playPause
                }
              ),
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: ["Next"],
                  iconName: PlayerButtonIcons.next,
                  onClicked: player.next
                }
              )
            ] }) })
          ] }) }) }),
          children: /* @__PURE__ */ jsx("label", { label: player.statusText, widthChars: 12 })
        }
      );
    } }) });
  }
};
var media = new MediaClass();
var Media_default = media;

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib2 from "gi://GLib?version=2.0";
import Gtk4 from "gi://Gtk?version=4.0";
import Astal3 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/lib/overrides.ts
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify2(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland: Hyprland2, Monitor, Workspace }) => {
  patch(Hyprland2.prototype, "binds");
  patch(Hyprland2.prototype, "monitors");
  patch(Hyprland2.prototype, "workspaces");
  patch(Hyprland2.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp: Wp2, Audio, Video }) => {
  patch(Wp2.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../usr/share/ags/js/lib/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";
import IO from "gi://AstalIO";
import GObject5 from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject5.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main: main2, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main2?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk4.init();
GLib2.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal3.Application);

// modules/DateTime.tsx
import GLib3 from "gi://GLib?version=2.0";
var pollTime2 = 6e4;
var DateTimeClass = class {
  constructor() {
    this.formatterTime = "%H:%M";
    this.formatterDate = "Today is: %A, %d de %B de %Y";
    this._dateTime = createPoll({ date: "", time: "" }, pollTime2, () => {
      const now = GLib3.DateTime.new_now_local();
      return {
        date: now.format(this.formatterDate),
        time: now.format(this.formatterTime)
      };
    });
  }
  get DateTimePopover() {
    return /* @__PURE__ */ jsx(Gtk.Popover, { children: /* @__PURE__ */ jsx(Gtk.Calendar, { cssClasses: ["Calendar"] }) });
  }
  get DateTime() {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["DateTimeCalendar"], popover: this.DateTimePopover, children: /* @__PURE__ */ jsx("label", { cssClasses: ["Time"], label: this._dateTime.as((t) => `\uF017 ${t.time}`), tooltipMarkup: this._dateTime.as((d) => `\u{F00ED} ${d.date}`) }) });
  }
};
var dateTime = new DateTimeClass();
var DateTime_default = dateTime;

// modules/AudioControl.tsx
import Wp from "gi://AstalWp";
import GLib4 from "gi://GLib?version=2.0";
var AudioControlClass = class {
  constructor() {
    this.step = 0.02;
    this.default = Wp.get_default();
    this.defaultSpeaker = createBinding(this.default, "defaultSpeaker");
    this.defaultMicrophone = createBinding(this.default, "defaultMicrophone");
  }
  handleScroll(edp, dy) {
    let newVolume = edp.get_volume();
    if (dy < 0) newVolume += this.step;
    else newVolume -= this.step;
    edp.set_volume(Math.min(newVolume, 1));
  }
  Endpoint(endpoint) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume").as((a) => `${Math.round(a * 100)}%`);
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => scroll.disconnect(scrollHandler));
      return /* @__PURE__ */ jsx(
        "button",
        {
          cssClasses: ["Endpoint"],
          $: (self) => self.add_controller(scroll),
          onClicked: () => edp.set_mute(!edp.get_mute()),
          children: /* @__PURE__ */ jsxs("box", { children: [
            /* @__PURE__ */ jsx("image", { cssClasses: ["Icon"], iconName: icon }),
            /* @__PURE__ */ jsx("label", { cssClasses: ["Volume"], label: volume, widthChars: 4 })
          ] })
        }
      );
    } }) });
  }
  MixerEntry(endpoint) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume");
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => scroll.disconnect(scrollHandler));
      return /* @__PURE__ */ jsxs("box", { cssClasses: ["MixerEntry"], children: [
        /* @__PURE__ */ jsx("button", { cssClasses: ["Icon"], iconName: icon, onClicked: () => edp.set_mute(!edp.get_mute()) }),
        /* @__PURE__ */ jsx("slider", { cssClasses: ["Slider"], $: (self) => self.add_controller(scroll), value: volume, step: 0.1, min: 0, max: 1, onChangeValue: ({ value }) => edp.set_volume(value) })
      ] });
    } }) });
  }
  get Mixer() {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["Mixer"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "Mixer" }),
      this.MixerEntry(this.defaultSpeaker),
      this.MixerEntry(this.defaultMicrophone)
    ] }) });
  }
  get AudioControl() {
    const spawnPavucontrolClick = new Gtk.GestureClick({ button: Gdk.BUTTON_SECONDARY });
    const spawnPavucontrolHandler = spawnPavucontrolClick.connect("pressed", () => GLib4.spawn_command_line_async("pavucontrol"));
    onCleanup(() => spawnPavucontrolClick.disconnect(spawnPavucontrolHandler));
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["AudioControl"], $: (self) => self.add_controller(spawnPavucontrolClick), children: [
      this.Endpoint(this.defaultSpeaker),
      /* @__PURE__ */ jsx("menubutton", { popover: this.Mixer, child: /* @__PURE__ */ jsx("label", { label: "\uEAF8" }) })
    ] });
  }
};
var audioControl = new AudioControlClass();
var AudioControl_default = audioControl;

// services/Settings.ts
import GLib5 from "gi://GLib?version=2.0";

// ../../../../usr/share/ags/js/lib/file.ts
import Astal4 from "gi://AstalIO";
function readFile(path3) {
  return Astal4.read_file(path3) || "";
}
function writeFile(path3, content) {
  Astal4.write_file(path3, content);
}

// services/Settings.ts
var optionsFallback = {
  animationsEnabled: true,
  cavaVisible: true,
  wallpaperSelectorActive: true
};
var path = GLib5.get_home_dir() + "/.config/ags/options/options.json";
var SettingsClass = class {
  constructor() {
    const fileStr = readFile(path);
    try {
      const parsed = JSON.parse(fileStr);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(parsed.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(parsed.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(parsed.wallpaperSelectorActive);
    } catch (err) {
      console.error("Erro ao ler options.json: " + err);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(optionsFallback.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(optionsFallback.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(optionsFallback.wallpaperSelectorActive);
    }
  }
  saveOptions() {
    const options = {
      animationsEnabled: this._animationsEnabled.get(),
      cavaVisible: this._cavaVisible.get(),
      wallpaperSelectorActive: this._wallpaperSelectorActive.get()
    };
    writeFile(path, JSON.stringify(options, null, 2));
  }
  get animationsEnabled() {
    return this._animationsEnabled;
  }
  get cavaVisible() {
    return this._cavaVisible;
  }
  get wallpaperSelectorActive() {
    return this._wallpaperSelectorActive;
  }
  set setWallpaperSelectorActive(newState) {
    if (this._wallpaperSelectorActive.get() !== newState) this._setWallpaperSelectorActive(newState);
  }
  set setAnimationsEnabled(newState) {
    if (this._animationsEnabled.get() !== newState) this._setAnimationsEnabled(newState);
  }
  set setCavaVisible(newState) {
    if (this._cavaVisible.get() !== newState) this._setCavaVisible(newState);
  }
};
var settingsService = new SettingsClass();
var Settings_default = settingsService;

// modules/WallpaperSelector.tsx
import Gio3 from "gi://Gio?version=2.0";
import GLib7 from "gi://GLib?version=2.0";

// utils/Swww.ts
import GLib6 from "gi://GLib?version=2.0";
var Swww;
((Swww2) => {
  let Resize;
  ((Resize2) => {
    Resize2["NO"] = "no";
    Resize2["CROP"] = "crop";
    Resize2["FIT"] = "fit";
    Resize2["STRETCH"] = "stretch";
  })(Resize = Swww2.Resize || (Swww2.Resize = {}));
  let Filter;
  ((Filter2) => {
    Filter2["NEAREST"] = "Nearest";
    Filter2["BILINEAR"] = "Bilinear";
    Filter2["CATMULLROM"] = "CatmullRom";
    Filter2["MITCHELL"] = "Mitchell";
    Filter2["LANCZOS3"] = "Lanczos3";
  })(Filter = Swww2.Filter || (Swww2.Filter = {}));
  let TransitionType;
  ((TransitionType2) => {
    TransitionType2["NONE"] = "none";
    TransitionType2["SIMPLE"] = "simple";
    TransitionType2["FADE"] = "fade";
    TransitionType2["LEFT"] = "left";
    TransitionType2["RIGHT"] = "right";
    TransitionType2["TOP"] = "top";
    TransitionType2["BOTTOM"] = "bottom";
    TransitionType2["WIPE"] = "wipe";
    TransitionType2["WAVE"] = "wave";
    TransitionType2["GROW"] = "grow";
    TransitionType2["CENTER"] = "center";
    TransitionType2["ANY"] = "any";
    TransitionType2["RANDOM"] = "random";
  })(TransitionType = Swww2.TransitionType || (Swww2.TransitionType = {}));
  let TransitionPos;
  ((TransitionPos2) => {
    TransitionPos2["CENTER"] = "center";
    TransitionPos2["TOP"] = "top";
    TransitionPos2["LEFT"] = "left";
    TransitionPos2["RIGHT"] = "right";
    TransitionPos2["BOTTOM"] = "bottom";
    TransitionPos2["TOP_LEFT"] = "top-left";
    TransitionPos2["TOP_RIGHT"] = "top-right";
    TransitionPos2["BOTTOM_LEFT"] = "bottom-left";
    TransitionPos2["BOTTOM_RIGHT"] = "bottom-right";
  })(TransitionPos = Swww2.TransitionPos || (Swww2.TransitionPos = {}));
  class Manager {
    constructor() {
      GLib6.spawn_command_line_async("swww clear");
    }
    setWallpaper(path3, options) {
      let command = `swww img ${path3}`;
      if (options) {
        if (options.resize) command += ` --resize ${options.resize}`;
        if (options.filter) command += ` -f ${options.filter}`;
        if (options.invertY) command += ` --invert-y ${options.invertY.valueOf()}`;
        if (options.transitionAngle) command += ` --transition-angle ${options.transitionAngle}`;
        if (options.transitionDurantion) command += ` --transition-duration ${options.transitionDurantion}`;
        if (options.transitionPos) command += ` --transition-pos ${options.transitionPos}`;
        if (options.transitionStep) command += ` --transition-step ${options.transitionStep}`;
        if (options.transitionType) command += ` --transition-type ${options.transitionType}`;
        if (options.transitionWave) command += ` --transition-wave ${options.transitionWave.x},${options.transitionWave.y}`;
        if (options.outputs) command += ` --outputs ${options.outputs}`;
      }
      GLib6.spawn_command_line_async(command);
      return true;
    }
  }
  Swww2.manager = new Manager();
})(Swww || (Swww = {}));

// modules/WallpaperSelector.tsx
var path2 = GLib7.get_home_dir() + "/.config/ags/wallpapers";
var pollTime3 = 24e4;
var imageExtensions = [".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp", ".svg"];
var WallpaperSelectorClass = class {
  constructor() {
    [this.images, this.setImages] = createState([]);
    this._timerActive = Settings_default.wallpaperSelectorActive;
    this.polling = createPoll(true, pollTime3, (prev) => !prev);
    this.setImages(this.readImageFiles(path2));
  }
  isImageFile(filename) {
    const extension = filename.toLowerCase().substring(filename.lastIndexOf("."));
    return imageExtensions.includes(extension) ? extension : null;
  }
  readImageFiles(directoryPath) {
    try {
      const file = Gio3.File.new_for_path(directoryPath);
      if (!file.query_exists(null)) return [];
      const enumerator = file.enumerate_children("standard::name,standard::type", Gio3.FileQueryInfoFlags.NONE, null);
      const images = [];
      let fileInfo;
      while ((fileInfo = enumerator.next_file(null)) !== null) {
        if (fileInfo.get_file_type() === Gio3.FileType.REGULAR) {
          const fileName = fileInfo.get_name();
          const ext = this.isImageFile(fileName);
          if (ext) images.push(fileName);
        }
      }
      enumerator.close(null);
      return images;
    } catch (error) {
      console.error("\u274C Erro Gio ao ler diret\xF3rio:", directoryPath, error);
      return [];
    }
  }
  get timerActive() {
    return this._timerActive;
  }
  SelectorIndicator(gdkmonitor) {
    const unsub = this.polling.subscribe(() => {
      if (this._timerActive.get()) {
        const connector = gdkmonitor.get_connector();
        if (connector) {
          const imgArray = this.images.get();
          const img = imgArray[Math.floor(Math.random() * imgArray.length)];
          Swww.manager.setWallpaper(`${path2}/${img}`, { outputs: connector, transitionType: Swww.TransitionType.GROW });
        } else {
          execAsync(`notify-send "Monitor ${gdkmonitor.get_description()} n\xE3o tem conector" "${gdkmonitor.get_description()} n\xE3o tem conector."`);
        }
      }
    });
    onCleanup(() => unsub());
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["SelectorIndicator"], orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["Subtitle"],
          label: "Wallpaper Selector"
        }
      ),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleActive", "Option"], children: [
        /* @__PURE__ */ jsx("label", { label: "Active ", halign: Gtk.Align.START }),
        /* @__PURE__ */ jsx(Gtk.Switch, { active: this._timerActive, onStateSet: (src, val) => Settings_default.setWallpaperSelectorActive = val })
      ] })
    ] });
  }
};
var wallpaperSelector = new WallpaperSelectorClass();
var WallpaperSelector_default = wallpaperSelector;

// services/CompositorManager.ts
import AstalHyprland from "gi://AstalHyprland?version=0.1";
var Hyprland = class {
  constructor() {
    this.default = AstalHyprland.get_default();
    this._workspaces = createBinding(this.default, "workspaces").as((workspaces2) => workspaces2.sort((a, b) => a.id - b.id));
    this._focusedWorkspace = createBinding(this.default, "focusedWorkspace");
    this.toggleAnimations(Settings_default.animationsEnabled.get());
  }
  getWorkspaces() {
    return this._workspaces;
  }
  getFocusedWorkspace() {
    return this._focusedWorkspace;
  }
  areMonitorsEqual(monitor, compMonitor) {
    const geometry = monitor.get_geometry();
    if (compMonitor.get_model() === monitor.get_model() && compMonitor.get_height() === geometry.height && compMonitor.get_width() === geometry.width && compMonitor.get_x() === geometry.x && compMonitor.get_y() === geometry.y) {
      return true;
    }
    return false;
  }
  getCompositorMonitor(monitor) {
    const compMonitors = this.default.get_monitors();
    return compMonitors.find((compMonitor) => this.areMonitorsEqual(monitor, compMonitor));
  }
  getAnimationState() {
    try {
      return JSON.parse(exec("hyprctl getoption animations:enabled -j")) === 1;
    } catch (error) {
      console.warn("Erro ao verificar estado das anima\xE7\xF5es:", error);
      return false;
    }
  }
  toggleAnimations(val) {
    const newState = val ?? !this.getAnimationState();
    try {
      exec(`hyprctl keyword animations:enabled ${newState ? 1 : 0}`);
      exec(`hyprctl keyword decoration:shadow:enabled ${newState ? 1 : 0}`);
    } catch (error) {
      console.error("Erro ao alterar anima\xE7\xF5es:", error);
    }
  }
};
var Niri = class {
  constructor() {
    this.default = AstalHyprland.get_default();
    this._workspaces = createBinding(this.default, "workspaces").as((workspaces2) => workspaces2.sort((a, b) => a.id - b.id));
    this._focusedWorkspace = createBinding(this.default, "focusedWorkspace");
  }
  getWorkspaces() {
    return this._workspaces;
  }
  getFocusedWorkspace() {
    return this._focusedWorkspace;
  }
  areMonitorsEqual(monitor, compMonitor) {
    const geometry = monitor.get_geometry();
    if (compMonitor.get_model() === monitor.get_model() && compMonitor.get_height() === geometry.height && compMonitor.get_width() === geometry.width && compMonitor.get_x() === geometry.x && compMonitor.get_y() === geometry.y) {
      return true;
    }
    return false;
  }
  getCompositorMonitor(monitor) {
    const compMonitors = this.default.get_monitors();
    return compMonitors.find((compMonitor) => this.areMonitorsEqual(monitor, compMonitor));
  }
  getAnimationState() {
    try {
      return JSON.parse(exec("hyprctl getoption animations:enabled -j")) === 1;
    } catch (error) {
      console.warn("Erro ao verificar estado das anima\xE7\xF5es:", error);
      return false;
    }
  }
  toggleAnimations(val) {
    const newState = val ?? !this.getAnimationState();
    try {
      exec(`hyprctl keyword animations:enabled ${newState ? 1 : 0}`);
      exec(`hyprctl keyword decoration:shadow:enabled ${newState ? 1 : 0}`);
    } catch (error) {
      console.error("Erro ao alterar anima\xE7\xF5es:", error);
    }
  }
};
var CompositorManagerClass = class {
  constructor() {
    const compositor = exec(["bash", "-c", "echo $XDG_CURRENT_DESKTOP"]);
    switch (compositor) {
      case "Hyprland":
        this.service = new Hyprland();
        break;
      case "Niri":
        this.service = new Niri();
        break;
      default:
        console.error("Compositor n\xE3o identificado. Fallback para Hyprland");
        this.service = new Hyprland();
        break;
    }
  }
  get workspaces() {
    return this.service.getWorkspaces();
  }
  get focusedWorkspace() {
    return this.service.getFocusedWorkspace();
  }
  areMonitorsEqual(monitor, compMonitor) {
    return this.service.areMonitorsEqual(monitor, compMonitor);
  }
  getCompositorMonitor(monitor) {
    return this.service.getCompositorMonitor(monitor);
  }
  get animationState() {
    return this.service.getAnimationState();
  }
  toggleAnimations(val) {
    this.service.toggleAnimations(val);
  }
};
var compositorManager = new CompositorManagerClass();
var CompositorManager_default = compositorManager;

// modules/ControlCenter.tsx
var ControlCenterClass = class {
  constructor() {
  }
  get ToggleVisibleComponents() {
    onCleanup(() => Settings_default.saveOptions());
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleVisibleComponents"], orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Animations & Components" }),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleAnimations", "Option"], children: [
        /* @__PURE__ */ jsx("label", { label: "Animations ", halign: Gtk.Align.START }),
        /* @__PURE__ */ jsx(
          Gtk.Switch,
          {
            active: Settings_default.animationsEnabled,
            onStateSet: (src, val) => {
              Settings_default.setAnimationsEnabled = val;
              CompositorManager_default.toggleAnimations(val);
            }
          }
        )
      ] }),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleCava", "Option"], children: [
        /* @__PURE__ */ jsx("label", { label: "Cava ", halign: Gtk.Align.START }),
        /* @__PURE__ */ jsx(Gtk.Switch, { active: Settings_default.cavaVisible, onStateSet: (src, val) => Settings_default.setCavaVisible = val })
      ] })
    ] });
  }
  ControlCenterPopover(gdkmonitor) {
    return /* @__PURE__ */ jsx("popover", { onClosed: () => Settings_default.saveOptions(), children: /* @__PURE__ */ jsx("box", { cssClasses: ["ControlCenterPopover"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      this.ToggleVisibleComponents,
      WallpaperSelector_default.SelectorIndicator(gdkmonitor)
    ] }) }) });
  }
  ControlCenter(gdkmonitor) {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["ControlCenter"], popover: this.ControlCenterPopover(gdkmonitor), children: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "\u{F08C7}" }) });
  }
};
var controlCenter = new ControlCenterClass();
var ControlCenter_default = controlCenter;

// modules/Workspaces.tsx
var WorkspacesClass = class {
  constructor() {
    this.maxWorkspaces = 10;
  }
  Workspace({ workspace }) {
    return /* @__PURE__ */ jsx(
      "button",
      {
        cssClasses: CompositorManager_default.focusedWorkspace.as((focused) => ["Workspace", workspace.get_id() === focused.get_id() ? "Active" : "Inactive"]),
        onClicked: () => {
          if (CompositorManager_default.focusedWorkspace.get().get_id() !== workspace.get_id()) workspace.focus();
        },
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER,
        label: workspace.get_id().toString()
      }
    );
  }
  WorkspacePopover({ theRest }) {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["WorkspacePopover"], children: /* @__PURE__ */ jsx(Gtk.FlowBox, { maxChildrenPerLine: 4, children: /* @__PURE__ */ jsx(For, { each: theRest, children: (item) => this.Workspace({ workspace: item }) }) }) });
  }
  MoreWorkspacesButton({ theRest }) {
    return /* @__PURE__ */ jsx(
      "menubutton",
      {
        cssClasses: ["MoreWorkspacesButton"],
        sensitive: theRest.as((tr) => tr.length > 0),
        popover: this.WorkspacePopover({ theRest }),
        children: /* @__PURE__ */ jsx("label", { label: "\u{F054F}" })
      }
    );
  }
  Workspaces({ monitor }) {
    const monitorWorkspaces = CompositorManager_default.workspaces.as((ws) => {
      const filtered = ws.filter((workspace) => workspace.get_monitor() === monitor);
      return {
        main: filtered.slice(0, this.maxWorkspaces),
        theRest: filtered.slice(this.maxWorkspaces)
      };
    });
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["Workspaces"], children: [
      /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(For, { each: monitorWorkspaces.as((mw) => mw.main), children: (w) => this.Workspace({ workspace: w }) }) }),
      this.MoreWorkspacesButton({ theRest: monitorWorkspaces.as(({ theRest }) => theRest) })
    ] });
  }
};
var workspaces = new WorkspacesClass();
var Workspaces_default = workspaces;

// widget/Bar.tsx
function Bar({ gdkmonitor }) {
  const { TOP, LEFT, RIGHT } = Astal.WindowAnchor;
  const compMonitor = CompositorManager_default.getCompositorMonitor(gdkmonitor);
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "Bar",
      cssClasses: ["Bar"],
      visible: true,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: TOP | RIGHT | LEFT,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Bar"], halign: Gtk.Align.FILL, homogeneous: true, children: [
        /* @__PURE__ */ jsx("box", { halign: Gtk.Align.START, children: SystemTray_default.SystemTray }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.CENTER, children: [
          Media_default.Media,
          Workspaces_default.Workspaces({ monitor: compMonitor })
        ] }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.END, children: [
          DateTime_default.DateTime,
          AudioControl_default.AudioControl,
          SystemMonitor_default.SystemMonitor,
          ControlCenter_default.ControlCenter(gdkmonitor)
        ] })
      ] })
    }
  );
}

// modules/Cava.tsx
import Gsk from "gi://Gsk";
import AstalCava from "gi://AstalCava?version=0.1";
import GObject6 from "gi://GObject";
var CavaConfig = {
  autosens: true,
  bars: 25,
  framerate: 60,
  input: AstalCava.Input.PIPEWIRE,
  noiseReduction: 0.77,
  sensitivity: 0.75,
  stereo: false
};
var CavaWidget = class extends Gtk.DrawingArea {
  constructor(v) {
    super();
    this.set_hexpand(true);
    this.set_vexpand(true);
    this.valuesAccessor = v.as((v2) => {
      const height = this.get_allocated_height();
      return v2.map((i) => height * (1 - i));
    });
    this.unsubAccessor = this.valuesAccessor.subscribe(() => this.queue_draw());
    onCleanup(() => this.unsubAccessor());
  }
  vfunc_snapshot(snapshot) {
    if (!this.get_mapped()) return;
    try {
      if (!this.visible) return;
      const width = this.get_allocated_width();
      const height = this.get_allocated_height();
      if (width <= 0 || height <= 0) return;
      const values = this.valuesAccessor.get();
      if (values.length === 0) return;
      const barWidth = width / (values.length - 1);
      const color = this.parent.get_color();
      const builder = new Gsk.PathBuilder();
      builder.move_to(0, values[0]);
      const invSix = 1 / 6;
      for (let i = 0; i < values.length - 1; i++) {
        const p0x = (i - 1) * barWidth;
        const p0y = values[Math.max(0, i - 1)];
        const p1x = i * barWidth;
        const p1y = values[i];
        const p2x = (i + 1) * barWidth;
        const p2y = values[i + 1];
        const p3x = (i + 2) * barWidth;
        const p3y = values[Math.min(values.length - 1, i + 2)];
        const c1x = p1x + (p2x - p0x) * invSix;
        const c1y = p1y + (p2y - p0y) * invSix;
        const c2x = p2x - (p3x - p1x) * invSix;
        const c2y = p2y - (p3y - p1y) * invSix;
        builder.cubic_to(c1x, c1y, c2x, c2y, p2x, p2y);
      }
      builder.line_to(width, height);
      builder.line_to(0, height);
      builder.close();
      snapshot.append_fill(builder.to_path(), Gsk.FillRule.WINDING, color);
    } catch (error) {
      console.warn("Erro no snapshot do Cava:", error);
    }
  }
};
var _cava = GObject6.registerClass({ GTypeName: "Cava" }, CavaWidget);
var CavaClass = class _CavaClass {
  static {
    this.widgetCount = 0;
  }
  constructor() {
    [this._visibilityState, this._setVisibilityState] = createState(Settings_default.cavaVisible.get());
    this.unsub = Settings_default.cavaVisible.subscribe(() => this._setVisibilityState(Settings_default.cavaVisible.get()));
    this.default = AstalCava.get_default();
    if (this.default) {
      this.default.set_autosens(CavaConfig.autosens);
      this.default.set_bars(CavaConfig.bars);
      this.default.set_framerate(CavaConfig.framerate);
      this.default.set_input(CavaConfig.input);
      this.default.set_noise_reduction(CavaConfig.noiseReduction);
      this.default.set_stereo(CavaConfig.stereo);
      this._values = createBinding(this.default, "values").as((v) => {
        try {
          const sens = CavaConfig.sensitivity;
          return v.map((i) => i * sens);
        } catch (error) {
          console.warn("Erro no handler global do Cava:", error);
          return [];
        }
      });
    } else {
      console.error("N\xE3o foi poss\xEDvel inicializar o Cava");
      this._values = createState([])[0];
    }
  }
  get visibilityState() {
    return this._visibilityState;
  }
  Cava(cssClasses) {
    return /* @__PURE__ */ jsx(
      "box",
      {
        cssClasses: [...cssClasses, "Cava"],
        overflow: Gtk.Overflow.HIDDEN,
        $: () => _CavaClass.widgetCount += 1,
        onDestroy: () => {
          _CavaClass.widgetCount -= 1;
          if (_CavaClass.widgetCount <= 0) this.unsub();
        },
        children: new _cava(this._values)
      }
    );
  }
};
var cava = new CavaClass();
var Cava_default = cava;

// widget/CavaOverlay.tsx
function CavaOverlay({ gdkmonitor }) {
  const { LEFT, RIGHT, BOTTOM } = Astal.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "CavaOverlay",
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: RIGHT | LEFT | BOTTOM,
      visible: Cava_default.visibilityState,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsx("box", { halign: Gtk.Align.FILL, valign: Gtk.Align.END, heightRequest: Math.floor(gdkmonitor.get_geometry().height * 0.25), children: Cava_default.Cava(["CavaOverlay"]) })
    }
  );
}

// widget/Cheatsheet.tsx
function Entry({ bind, action }) {
  return /* @__PURE__ */ jsxs("box", { cssClasses: ["Entry"], overflow: Gtk.Overflow.HIDDEN, homogeneous: true, children: [
    /* @__PURE__ */ jsx("label", { cssClasses: ["Bind"], label: bind }),
    /* @__PURE__ */ jsx("label", { cssClasses: ["Action"], label: action })
  ] });
}
function Cheatsheet({ gdkmonitor }) {
  return /* @__PURE__ */ jsxs(
    "window",
    {
      name: "Cheatsheet",
      layer: Astal.Layer.OVERLAY,
      gdkmonitor,
      keymode: Astal.Keymode.ON_DEMAND,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: [
        /* @__PURE__ */ jsx(
          Gtk.EventControllerKey,
          {
            onKeyPressed: ({ widget }, keyval) => {
              switch (keyval) {
                case Gdk.KEY_Escape:
                  widget.hide();
                  break;
                default:
              }
            }
          }
        ),
        /* @__PURE__ */ jsxs("box", { cssClasses: ["Cheatsheet"], orientation: Gtk.Orientation.VERTICAL, children: [
          /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: "Cheatsheet" }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Clients Workflow" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + P", action: "Pin client" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Q", action: "Close client" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + V", action: "Toggle floating" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + F", action: "Toggle fullscreen" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + J", action: "Toggle Dwindle" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF062", action: "Move focus to the client at above" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF063", action: "Move focus to the client at below" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF060", action: "Move focus to the clienFixar clientet at left" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF061", action: "Move focus to the client at right" })
              ] })
            ] }),
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Workspaces Workflow" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF060", action: "Go to workspace at the left" }),
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF061", action: "Go to workspace at the right" }),
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF060", action: "Move to workspace at the left side" }),
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF061", action: "Move to workspace at the right side" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + S", action: "Go to special workspace" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + SHIFT + S", action: "Move to special workspace" })
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Default Programs" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Enter", action: "Terminal" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + R", action: "Launcher" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + E", action: "Open File Manager" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + D", action: "Toggle Dock" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + C", action: "Toggle Cheatsheet" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + ESC", action: "Toggle Wlogout" })
              ] })
            ] }),
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Others" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "PRINT", action: "Screenshot output" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + PRINT", action: "Screenshot region" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + M", action: "Logout" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + L", action: "Lock Screen" })
              ] })
            ] })
          ] })
        ] })
      ]
    }
  );
}

// app.tsx
function main() {
  const monitors = createBinding(app_default, "monitors");
  return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsxs(This, { this: app_default, children: [
    /* @__PURE__ */ jsx(Bar, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(CavaOverlay, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(Cheatsheet, { gdkmonitor: monitor })
  ] }) });
}
app_default.start({ css: styles_default, main });
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic2FzczovaG9tZS9pdGlyby8uY29uZmlnL2Fncy9zdHlsZXMvaW5kZXguc2NzcyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzIiwgIm1vZHVsZXMvU3lzdGVtTW9uaXRvci50c3giLCAic2VydmljZXMvVGltZUZvcm1hdHRlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvZW52LnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ25vbWUvc2lnbmFsVHJhY2tlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L0Zvci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L1dpdGgudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9UaGlzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3RpbWUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIm1vZHVsZXMvU3lzdGVtVHJheS50c3giLCAibW9kdWxlcy9NZWRpYS50c3giLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMiLCAibW9kdWxlcy9EYXRlVGltZS50c3giLCAibW9kdWxlcy9BdWRpb0NvbnRyb2wudHN4IiwgInNlcnZpY2VzL1NldHRpbmdzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2ZpbGUudHMiLCAibW9kdWxlcy9XYWxscGFwZXJTZWxlY3Rvci50c3giLCAidXRpbHMvU3d3dy50cyIsICJzZXJ2aWNlcy9Db21wb3NpdG9yTWFuYWdlci50cyIsICJtb2R1bGVzL0NvbnRyb2xDZW50ZXIudHN4IiwgIm1vZHVsZXMvV29ya3NwYWNlcy50c3giLCAid2lkZ2V0L0Jhci50c3giLCAibW9kdWxlcy9DYXZhLnRzeCIsICJ3aWRnZXQvQ2F2YU92ZXJsYXkudHN4IiwgIndpZGdldC9DaGVhdHNoZWV0LnRzeCIsICJhcHAudHN4Il0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKiBDYXRwcHVjY2luIG1vY2hhIGNvbG9ycyAqL1xuLkNvbnRyb2xDZW50ZXIsIC5NZWRpYSwgLldvcmtzcGFjZXMsIC5BdWRpb0NvbnRyb2wsIC5EYXRlVGltZUNhbGVuZGFyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgcGFkZGluZzogNHB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxOHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgKiwgLk1lZGlhICosIC5Xb3Jrc3BhY2VzICosIC5BdWRpb0NvbnRyb2wgKiwgLkRhdGVUaW1lQ2FsZW5kYXIgKiB7XG4gIG1hcmdpbjogMHB4IDJweDtcbn1cblxuLlRyYXlJdGVtLCAuV29ya3NwYWNlcyAuV29ya3NwYWNlLCAuV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b24sIC5NaXhlciAuTWl4ZXJFbnRyeSAuSWNvbiwgLk1lbW9yeVVzYWdlLCAuQ3B1VXNhZ2UsIC5CYXR0ZXJ5IHtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgbWluLXdpZHRoOiAyNHB4O1xuICBtaW4taGVpZ2h0OiAyNHB4O1xufVxuXG4uTWl4ZXIgLk1peGVyRW50cnkgLlNsaWRlciB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG1pbi13aWR0aDogMTYwcHg7XG4gIG1pbi1oZWlnaHQ6IDIwcHg7XG59XG5cbi5EYXRlVGltZUNhbGVuZGFyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAqIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uRGF0ZVRpbWVDYWxlbmRhcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uRGF0ZVRpbWVDYWxlbmRhcjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgKiB7XG4gIGFsbDogdW5zZXQ7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGxhYmVsLmRheS1udW1iZXIsIC5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBsYWJlbC5vdGhlci1tb250aCwgLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGxhYmVsLnRvZGF5IHtcbiAgYm9yZGVyLXJhZGl1czogMTAlO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b24ge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgYnV0dG9uICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGJ1dHRvbjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDcxLCA5MCwgMC43KTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLm90aGVyLW1vbnRoIHtcbiAgb3BhY2l0eTogMC41O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLm90aGVyLW1vbnRoOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2Y1ZTBkYztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5kYXktbnVtYmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5kYXktbnVtYmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2NiYTZmNztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC50b2RheSB7XG4gIGNvbG9yOiAjMWUxZTJlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjRiZWZlO1xufVxuXG4uU3lzdGVtTW9uaXRvciAqIHtcbiAgbWFyZ2luOiAwcHggMnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLk1lbW9yeVVzYWdlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5NZW1vcnlVc2FnZSAqIHtcbiAgY29sb3I6ICNmYWIzODc7XG59XG4uTWVtb3J5VXNhZ2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZmFiMzg3O1xufVxuLk1lbW9yeVVzYWdlOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxuLkNwdVVzYWdlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5DcHVVc2FnZSAqIHtcbiAgY29sb3I6ICNhNmUzYTE7XG59XG4uQ3B1VXNhZ2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjYTZlM2ExO1xufVxuLkNwdVVzYWdlOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxuLkJhdHRlcnlOb3JtYWwge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLkJhdHRlcnlOb3JtYWwgKiB7XG4gIGNvbG9yOiAjYjRiZWZlO1xufVxuLkJhdHRlcnlOb3JtYWw6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjYjRiZWZlO1xufVxuLkJhdHRlcnlOb3JtYWw6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuXG4uQmF0dGVyeUNyaXRpY2FsIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5CYXR0ZXJ5Q3JpdGljYWwgKiB7XG4gIGNvbG9yOiAjZjM4YmE4O1xufVxuLkJhdHRlcnlDcml0aWNhbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmMzhiYTg7XG59XG4uQmF0dGVyeUNyaXRpY2FsOmhvdmVyICoge1xuICBjb2xvcjogIzExMTExYjtcbn1cblxuLkJhdHRlcnlQb3BvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBwYWRkaW5nOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG59XG4uQmF0dGVyeVBvcG92ZXIgLlRpdGxlLCAuQmF0dGVyeVBvcG92ZXIgLkJhdHRlcnlMaWZlLCAuQmF0dGVyeVBvcG92ZXIgLlRvZ2dsZUJ1dHRvbiB7XG4gIG1hcmdpbjogMnB4O1xufVxuLkJhdHRlcnlQb3BvdmVyIC5UaXRsZSB7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuQmF0dGVyeUxpZmUge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuVG9nZ2xlQnV0dG9uIHtcbiAgbWFyZ2luOiAycHggNHB4O1xuICBwYWRkaW5nOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC43NSk7XG4gIGNvbG9yOiByZ2JhKDMwLCAzMCwgNDYsIDAuNzUpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkJhdHRlcnlQb3BvdmVyIC5Ub2dnbGVCdXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMwLCAzMCwgNDYsIDAuNzUpO1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjc1KTtcbn1cblxuLkF1ZGlvQ29udHJvbCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uQXVkaW9Db250cm9sICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5BdWRpb0NvbnRyb2w6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLkF1ZGlvQ29udHJvbDpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG5cbi5NaXhlciB7XG4gIHBhZGRpbmc6IDZweDtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBib3JkZXI6IG5vbmU7XG59XG4uTWl4ZXIgLkxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbWFyZ2luOiA2cHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLk1peGVyIC5NaXhlckVudHJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDc1YTtcbiAgcGFkZGluZzogMnB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xufVxuLk1peGVyIC5NaXhlckVudHJ5IC5JY29uIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uTWl4ZXIgLk1peGVyRW50cnkgLkljb246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU4NWI3MDtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIGhpZ2hsaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG59XG5cbi5Xb3Jrc3BhY2VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiAxOHB4O1xufVxuLldvcmtzcGFjZXMgLldvcmtzcGFjZSwgLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTcsIDE3LCAyNywgMC44KTtcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW46IDJweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b24gKiB7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uV29ya3NwYWNlcyAuQWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjkpO1xufVxuLldvcmtzcGFjZXMgLkFjdGl2ZSBsYWJlbCB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLldvcmtzcGFjZXMgLkluYWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5Xb3Jrc3BhY2VzIC5JbmFjdGl2ZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uV29ya3NwYWNlcyAuV29ya3NwYWNlUG9wb3ZlciB7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIHBhZGRpbmc6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjkpO1xuICBtYXJnaW46IDJweDtcbn1cblxuLlRyYXlJdGVtIHtcbiAgbWFyZ2luOiAycHg7XG4gIC1ndGstaWNvbi1zaXplOiAyNHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZTtcbn1cbi5UcmF5SXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC44KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uVHJheUl0ZW06YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICBjb2xvcjogIzExMTExYjtcbn1cbi5UcmF5SXRlbSBwb3BvdmVyLm1lbnUge1xuICBtYXJnaW46IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IG1vZGVsYnV0dG9uIHtcbiAgcGFkZGluZzogMnB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIG1hcmdpbjogMCAycHg7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IG1vZGVsYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSg2OSwgNzEsIDkwLCAwLjIpO1xufVxuLlRyYXlJdGVtIHBvcG92ZXIubWVudSBtb2RlbGJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDY5LCA3MSwgOTAsIDAuNCk7XG59XG5cbi5NZWRpYSB7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLk1lZGlhICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5NZWRpYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uTWVkaWE6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0LCAyNCwgMzcsIDAuOCk7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSB7XG4gIG1hcmdpbi1sZWZ0OiAxMnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuVGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuQXJ0aXN0IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogcmdiYSgyMDUsIDIxNCwgMjQ0LCAwLjcpO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuQWxidW0ge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiByZ2JhKDIwNSwgMjE0LCAyNDQsIDAuNSk7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IHtcbiAgbWFyZ2luLXRvcDogMTJweDtcbiAgcGFkZGluZzogMTJweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIge1xuICBwYWRkaW5nOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzAsIDMwLCA0NiwgMC42KTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxNHB4O1xuICBtYXJnaW46IDVweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIgLlNsaWRlciB7XG4gIG1pbi13aWR0aDogMTYwcHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuUGxheWVyU2xpZGVyIC5TbGlkZXIgaGlnaGxpZ2h0IHtcbiAgYmFja2dyb3VuZDogIzc0YzdlYztcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIgLlRpbWVMYWJlbCB7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBvcGFjaXR5OiAwLjg7XG4gIG1pbi13aWR0aDogNDBweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXMsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQge1xuICBtYXJnaW46IDRweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzIGltYWdlLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZSBpbWFnZSwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0IGltYWdlIHtcbiAgbWFyZ2luOiAxMnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91cywgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2UsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6ICMxZTFlMmU7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dCAqIHtcbiAgY29sb3I6ICM4OWI0ZmE7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzOmhvdmVyLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZTpob3ZlciwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXM6aG92ZXIgKiwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2U6aG92ZXIgKiwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0OmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5DYXZhLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuQ2F2YSA+ICoge1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjUpO1xufVxuXG4uQ2F2YSwgLkNhdmEgPiAqLCAuQ2F2YU92ZXJsYXksIC5DYXZhT3ZlcmxheSA+ICoge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5DYXZhLCAuQ2F2YSA+ICoge1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjUpO1xufVxuXG4uQ2F2YU92ZXJsYXkge1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDQwcHggNDBweCAwcHggMHB4O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkNhdmFPdmVybGF5OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxudG9vbHRpcCB7XG4gIHBhZGRpbmc6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzI0NDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuLkNvbnRyb2xDZW50ZXIgLkxhYmVsIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuLkNvbnRyb2xDZW50ZXIge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkNvbnRyb2xDZW50ZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xufVxuLkNvbnRyb2xDZW50ZXI6aG92ZXIgLkxhYmVsIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIge1xuICBwYWRkaW5nOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuU3VidGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIG1hcmdpbjogNHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyB7XG4gIG1hcmdpbjogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDY5LCA3MSwgOTAsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLk9wdGlvbiB7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAycHg7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5PcHRpb24gc3dpdGNoIHtcbiAgcGFkZGluZzogMnB4O1xuICBtYXJnaW46IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFlMWUyZTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLk9wdGlvbiBzd2l0Y2ggaW1hZ2UsIC5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLk9wdGlvbiBzd2l0Y2ggc2xpZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbiAgbWluLXdpZHRoOiAyMHB4O1xuICBtaW4taGVpZ2h0OiA1cHg7XG59XG5cbi5TZWxlY3RvckluZGljYXRvciB7XG4gIG1hcmdpbjogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDY5LCA3MSwgOTAsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5TZWxlY3RvckluZGljYXRvciAuT3B0aW9uIHtcbiAgcGFkZGluZzogMnB4O1xuICBtYXJnaW46IDJweDtcbn1cbi5TZWxlY3RvckluZGljYXRvciAuT3B0aW9uIHN3aXRjaCB7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTFlMmU7XG59XG4uU2VsZWN0b3JJbmRpY2F0b3IgLk9wdGlvbiBzd2l0Y2ggaW1hZ2UsIC5TZWxlY3RvckluZGljYXRvciAuT3B0aW9uIHN3aXRjaCBzbGlkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xuICBtaW4td2lkdGg6IDIwcHg7XG4gIG1pbi1oZWlnaHQ6IDVweDtcbn1cblxuLkNoZWF0c2hlZXQge1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjODliNGZhO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMwLCAzMCwgNDYsIDAuOCk7XG59XG4uQ2hlYXRzaGVldCAuVGl0bGUge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDgwcHg7XG59XG4uQ2hlYXRzaGVldCAuU3VidGl0bGUge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiA0MHB4O1xufVxuLkNoZWF0c2hlZXQgLlNlY3Rpb24ge1xuICBtYXJnaW46IDRweDtcbiAgcGFkZGluZzogNHB4O1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5IHtcbiAgbWFyZ2luOiAzcHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeSAuQmluZCwgLkNoZWF0c2hlZXQgLkVudHJ5IC5BY3Rpb24ge1xuICBwYWRkaW5nOiAycHg7XG59XG4uQ2hlYXRzaGVldCAuRW50cnkgLkJpbmQge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICM4OWI0ZmE7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG59XG4uQ2hlYXRzaGVldCAuRW50cnkgLkFjdGlvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIGNvbG9yOiAjMzEzMjQ0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5OmhvdmVyIC5CaW5kIHtcbiAgY29sb3I6ICMzMTMyNDQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG59XG4uQ2hlYXRzaGVldCAuRW50cnk6aG92ZXIgLkFjdGlvbiB7XG4gIGNvbG9yOiAjODliNGZhO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMjQ0O1xufVxuXG4vKiBSZXNldHRpbmcgZXZlcnkgZGVjb3JhdGlvbiBhcHBsaWVkIGVhcmxpZXIgKi9cbioge1xuICBmb250LWZhbWlseTogXCJNb25vc3BhY2VcIjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICAtZ3RrLWljb24tc2l6ZTogMjRweDtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uQmFyIHtcbiAgYmFja2dyb3VuZDogIzFlMWUyZTtcbiAgYm9yZGVyLXJhZGl1czogMjhweDtcbiAgbWFyZ2luOiA0cHggNnB4O1xufSIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuZXhwb3J0IHsgQXN0YWwsIEd0aywgR2RrIH1cbiIsICJpbXBvcnQgQXN0YWxCYXR0ZXJ5IGZyb20gXCJnaTovL0FzdGFsQmF0dGVyeVwiXG5pbXBvcnQgR1RvcCBmcm9tIFwiZ2k6Ly9HVG9wP3ZlcnNpb249Mi4wXCI7XG5pbXBvcnQgeyBmb3JtYXRUaW1lVmVyYm9zZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9UaW1lRm9ybWF0dGVyXCI7XG5pbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgY3JlYXRlQ29tcHV0ZWQsIGNyZWF0ZVN0YXRlLCBvbkNsZWFudXAgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcblxudHlwZSBNZXRyaWNzID0ge1xuICAgIGNwdTogbnVtYmVyLFxuICAgIG1lbTogbnVtYmVyXG59XG5cbnR5cGUgSW5kaWNhdG9yV2lkZ2V0cyA9IHtcbiAgICBpY29uOiBHdGsuV2lkZ2V0LFxuICAgIGxhYmVsOiBHdGsuV2lkZ2V0XG59XG5cbmNvbnN0IHBvbGxUaW1lID0gMzAwMDtcblxuY2xhc3MgU3lzdGVtTW9uaXRvckNsYXNzIHtcbiAgICBwcml2YXRlIGJhdHRlcnk6IEFzdGFsQmF0dGVyeS5EZXZpY2U7XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5UGVyY2VudGFnZTogQWNjZXNzb3I8bnVtYmVyPjtcbiAgICBwcml2YXRlIGJhdHRlcnlDaGFyZ2luZzogQWNjZXNzb3I8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5Q3JpdGljYWw6IEFjY2Vzc29yPHN0cmluZ1tdPjtcbiAgICBwcml2YXRlIGJhdHRlcnlMaWZlTGFiZWw6IEFjY2Vzc29yPHN0cmluZz47XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5SWNvbjogQWNjZXNzb3I8c3RyaW5nPjtcblxuICAgIHByaXZhdGUgY3B1U291cmNlOiBHVG9wLmdsaWJ0b3BfY3B1O1xuICAgIHByaXZhdGUgY3B1RGF0YTogeyBwcmV2OiB7IHVzZXI6IG51bWJlciwgc3lzOiBudW1iZXIsIHRvdGFsOiBudW1iZXIgfSwgZGlmZjogeyB1c2VyOiBudW1iZXIsIHN5czogbnVtYmVyLCB0b3RhbDogbnVtYmVyIH0gfTtcbiAgICBwcml2YXRlIG1lbVNvdXJjZTogR1RvcC5nbGlidG9wX21lbTtcbiAgICBwcml2YXRlIF9tZXRyaWNzOiBBY2Nlc3NvcjxNZXRyaWNzPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5ID0gQXN0YWxCYXR0ZXJ5LmdldF9kZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuYmF0dGVyeUljb24gPSBjcmVhdGVCaW5kaW5nKHRoaXMuYmF0dGVyeSwgXCJiYXR0ZXJ5SWNvbk5hbWVcIik7XG4gICAgICAgIHRoaXMuYmF0dGVyeVBlcmNlbnRhZ2UgPSBjcmVhdGVCaW5kaW5nKHRoaXMuYmF0dGVyeSwgXCJwZXJjZW50YWdlXCIpO1xuICAgICAgICB0aGlzLmJhdHRlcnlDaGFyZ2luZyA9IGNyZWF0ZUJpbmRpbmcodGhpcy5iYXR0ZXJ5LCBcImNoYXJnaW5nXCIpO1xuICAgICAgICB0aGlzLmJhdHRlcnlDcml0aWNhbCA9IGNyZWF0ZUNvbXB1dGVkKFt0aGlzLmJhdHRlcnlQZXJjZW50YWdlLCB0aGlzLmJhdHRlcnlDaGFyZ2luZ10sIChwLCBjKSA9PiBbXCJCYXR0ZXJ5XCIsIHAgPD0gMC4zICYmICFjID8gXCJCYXR0ZXJ5Q3JpdGljYWxcIiA6IFwiQmF0dGVyeU5vcm1hbFwiXSk7XG4gICAgICAgIHRoaXMuYmF0dGVyeUxpZmVMYWJlbCA9IHRoaXMuYmF0dGVyeUNoYXJnaW5nLmFzKGMgPT4gYyA/IGBDaGFyZ2luZzogJHtmb3JtYXRUaW1lVmVyYm9zZSh0aGlzLmJhdHRlcnkudGltZV90b19mdWxsKX0gbGVmdGAgOiBgRGlzY2hhcmdpbmc6ICR7Zm9ybWF0VGltZVZlcmJvc2UodGhpcy5iYXR0ZXJ5LnRpbWVfdG9fZW1wdHkpfSBsZWZ0YCk7XG5cbiAgICAgICAgdGhpcy5jcHVTb3VyY2UgPSBuZXcgR1RvcC5nbGlidG9wX2NwdSgpO1xuICAgICAgICB0aGlzLm1lbVNvdXJjZSA9IG5ldyBHVG9wLmdsaWJ0b3BfbWVtKCk7XG5cbiAgICAgICAgdGhpcy5jcHVEYXRhID0geyBwcmV2OiB7IHVzZXI6IDAsIHN5czogMCwgdG90YWw6IDAgfSwgZGlmZjogeyB1c2VyOiAwLCBzeXM6IDAsIHRvdGFsOiAwIH0gfTtcblxuICAgICAgICB0aGlzLl9tZXRyaWNzID0gY3JlYXRlUG9sbCh7IGNwdTogMCwgbWVtOiAwIH0sIHBvbGxUaW1lLCAoKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIEdUb3AuZ2xpYnRvcF9nZXRfY3B1KHRoaXMuY3B1U291cmNlKTtcbiAgICAgICAgICAgICAgICBHVG9wLmdsaWJ0b3BfZ2V0X21lbSh0aGlzLm1lbVNvdXJjZSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBjcHUgPSB0aGlzLmNwdVNvdXJjZTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IHByZXYgPSB0aGlzLmNwdURhdGEucHJldjtcblxuICAgICAgICAgICAgICAgIHRoaXMuY3B1RGF0YS5kaWZmID0ge1xuICAgICAgICAgICAgICAgICAgICB1c2VyOiBjcHUudXNlciAtIHByZXYudXNlcixcbiAgICAgICAgICAgICAgICAgICAgc3lzOiBjcHUuc3lzIC0gcHJldi5zeXMsXG4gICAgICAgICAgICAgICAgICAgIHRvdGFsOiBjcHUudG90YWwgLSBwcmV2LnRvdGFsXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5jcHVEYXRhLnByZXYgPSB7XG4gICAgICAgICAgICAgICAgICAgIHVzZXI6IGNwdS51c2VyLFxuICAgICAgICAgICAgICAgICAgICBzeXM6IGNwdS5zeXMsXG4gICAgICAgICAgICAgICAgICAgIHRvdGFsOiBjcHUudG90YWxcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb25zdCBjcHVEaWZmID0gdGhpcy5jcHVEYXRhLmRpZmY7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBjcHVQZXJjZW50ID0gY3B1RGlmZi50b3RhbCA+IDAgPyBNYXRoLnJvdW5kKCgoY3B1RGlmZi51c2VyICsgY3B1RGlmZi5zeXMpIC8gY3B1RGlmZi50b3RhbCkgKiAxMDApIDogMDtcbiAgICAgICAgICAgICAgICBjb25zdCBtZW1QZXJjZW50ID0gdGhpcy5tZW1Tb3VyY2UudG90YWwgPiAwID8gTWF0aC5yb3VuZCgodGhpcy5tZW1Tb3VyY2UudXNlciAvIHRoaXMubWVtU291cmNlLnRvdGFsKSAqIDEwMCkgOiAwO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY3B1OiBNYXRoLm1pbigxMDAsIGNwdVBlcmNlbnQpLCBtZW06IE1hdGgubWluKDEwMCwgbWVtUGVyY2VudCkgfTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiRXJyb3Igd2hlbiBvYnRhaW5pbmcgc3lzdGVtIG1ldHJpY3M6XCIsIGVycm9yKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBjcHU6IDAsIG1lbTogMCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGluZGljYXRvcih3aWRnZXRzOiBJbmRpY2F0b3JXaWRnZXRzLCBjc3NDbGFzc2VzPzogc3RyaW5nW10gfCBBY2Nlc3NvcjxzdHJpbmdbXT4pIHtcbiAgICAgICAgY29uc3QgW2hvdmVyZWRDaGlsZCwgc2V0SG92ZXJlZENoaWxkXT0gY3JlYXRlU3RhdGUod2lkZ2V0cy5pY29uKTtcbiAgICAgICAgY29uc3QgaG92ZXIgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlck1vdGlvbjtcbiAgICAgICAgY29uc3Qgb25FbnRlciA9IGhvdmVyLmNvbm5lY3QoJ2VudGVyJywgKCkgPT4gc2V0SG92ZXJlZENoaWxkKHdpZGdldHMubGFiZWwpKTtcbiAgICAgICAgY29uc3Qgb25MZWF2ZSA9IGhvdmVyLmNvbm5lY3QoJ2xlYXZlJywgKCkgPT4gc2V0SG92ZXJlZENoaWxkKHdpZGdldHMuaWNvbikpO1xuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBob3Zlci5kaXNjb25uZWN0KG9uRW50ZXIpO1xuICAgICAgICAgICAgaG92ZXIuZGlzY29ubmVjdChvbkxlYXZlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKGhvdmVyKX0+XG4gICAgICAgICAgICAgICAgPHN0YWNrXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e2Nzc0NsYXNzZXN9XG4gICAgICAgICAgICAgICAgICAgIHZpc2libGVDaGlsZD17aG92ZXJlZENoaWxkfVxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uVHlwZT17R3RrLlN0YWNrVHJhbnNpdGlvblR5cGUuQ1JPU1NGQURFfVxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb249ezIwMH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHt3aWRnZXRzLmljb259XG4gICAgICAgICAgICAgICAgICAgIHt3aWRnZXRzLmxhYmVsfVxuICAgICAgICAgICAgICAgIDwvc3RhY2s+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IFN5c3RlbU1vbml0b3IoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIlN5c3RlbU1vbml0b3JcIl19PlxuICAgICAgICAgICAgICAgIHt0aGlzLmluZGljYXRvcihcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogPGxhYmVsIGNzc0NsYXNzZXM9e1snSWNvbiddfSBsYWJlbD17J1x1RUMxOSd9IC8+IGFzIEd0ay5XaWRnZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogPGxhYmVsIGNzc0NsYXNzZXM9e1snTGFiZWwnXX0gbGFiZWw9e3RoaXMuX21ldHJpY3MuYXMobSA9PiBgJHttLmNwdX0lYCl9IHdpZHRoQ2hhcnM9ezR9IC8+ICBhcyBHdGsuV2lkZ2V0XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcIkNwdVVzYWdlXCJdXG4gICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgIHt0aGlzLmluZGljYXRvcihcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogPGxhYmVsIGNzc0NsYXNzZXM9e1snSWNvbiddfSBsYWJlbD17J1x1REI4MVx1REUxQSd9IC8+ICBhcyBHdGsuV2lkZ2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0xhYmVsJ119IGxhYmVsPXt0aGlzLl9tZXRyaWNzLmFzKG0gPT4gYCR7bS5tZW19JWApfSB3aWR0aENoYXJzPXs0fSAvPiAgYXMgR3RrLldpZGdldFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBbXCJNZW1vcnlVc2FnZVwiXVxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICB7dGhpcy5pbmRpY2F0b3IoXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246IDxpbWFnZSBjc3NDbGFzc2VzPXtbXCJCYXR0ZXJ5SWNvblwiXX0gaWNvbk5hbWU9e3RoaXMuYmF0dGVyeUljb259IC8+IGFzIEd0ay5XaWRnZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkJhdHRlcnlVc2FnZUxhYmVsXCJdfSBsYWJlbD17dGhpcy5iYXR0ZXJ5UGVyY2VudGFnZS5hcyhwID0+IGAke01hdGgucm91bmQoTWF0aC5taW4oMSwgcCkgKiAxMDApID8/IDB9JWApfSB3aWR0aENoYXJzPXs0fSAvPiAgYXMgR3RrLldpZGdldFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJhdHRlcnlDcml0aWNhbFxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IHN5c3RlbU1vbml0b3IgPSBuZXcgU3lzdGVtTW9uaXRvckNsYXNzO1xuZXhwb3J0IGRlZmF1bHQgc3lzdGVtTW9uaXRvcjtcbiIsICJleHBvcnQgZnVuY3Rpb24gZm9ybWF0VGltZShzZWNvbmRzOiBudW1iZXIpOiBzdHJpbmcge1xuICAgIGlmICghc2Vjb25kcyB8fCBzZWNvbmRzIDwgMCkgcmV0dXJuIFwiMDowMFwiO1xuXG4gICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKHNlY29uZHMgLyAzNjAwKTtcbiAgICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcigoc2Vjb25kcyAlIDM2MDApIC8gNjApO1xuICAgIGNvbnN0IHJlbWFpbmluZ1NlY29uZHMgPSBNYXRoLmZsb29yKHNlY29uZHMgJSA2MCk7XG5cbiAgICBpZiAoaG91cnMgPiAwKSB7XG4gICAgICAgIHJldHVybiBgJHtob3Vyc306JHttaW51dGVzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHtyZW1haW5pbmdTZWNvbmRzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBgJHttaW51dGVzfToke3JlbWFpbmluZ1NlY29uZHMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWA7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0VGltZVZlcmJvc2Uoc2Vjb25kczogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBpZihzZWNvbmRzID49IDM2MDApIHtcbiAgICAgICAgcmV0dXJuIGAke01hdGguZmxvb3Ioc2Vjb25kcyAvIDM2MDApfWgke01hdGguZmxvb3IoKHNlY29uZHMgJSAzNjAwKSAvIDYwKX1tYDtcbiAgICB9XG5cbiAgICByZXR1cm4gYCR7TWF0aC5mbG9vcihzZWNvbmRzIC8gNjApfW1gO1xufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IHR5cGUgQ0MsIHR5cGUgRkMsIGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBrZWJhYmlmeSwgdHlwZSBQYXNjYWxpZnksIHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFsbCBvZiB0aGUgdGhpbmdzIHRoYXQgY2FuIGJlIHBhc3NlZCBhcyBhIGNoaWxkIHRvIGNsYXNzIGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCB0eXBlIE5vZGUgPVxuICAgIHwgQXJyYXk8R09iamVjdC5PYmplY3Q+XG4gICAgfCBHT2JqZWN0Lk9iamVjdFxuICAgIHwgbnVtYmVyXG4gICAgfCBzdHJpbmdcbiAgICB8IGJvb2xlYW5cbiAgICB8IG51bGxcbiAgICB8IHVuZGVmaW5lZFxuXG5leHBvcnQgY29uc3QgZ3RrVHlwZSA9IFN5bWJvbChcImd0ayBidWlsZGVyIHR5cGVcIilcblxuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIG9iamVjdCBzcGVjaWZpZWQgdGhyb3VnaCB0aGUgYCR0eXBlYCBwcm9wZXJ0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZShvYmplY3Q6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgcmV0dXJuIGd0a1R5cGUgaW4gb2JqZWN0ID8gKG9iamVjdFtndGtUeXBlXSBhcyBzdHJpbmcpIDogbnVsbFxufVxuXG4vKipcbiAqIEZ1bmN0aW9uIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIEZDUHJvcHM8U2VsZiwgUHJvcHM+ID0gUHJvcHMgJiB7XG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb25cbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxufVxuXG4vKipcbiAqIENsYXNzIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIENDUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQcm9wcz4gPSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsIGNoaWxkcmVuIGVsZW1lbnRzXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgIGNoaWxkcmVuPzogQXJyYXk8Tm9kZT4gfCBOb2RlXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIHRvIHVzZSBhcyBhIGNvbnN0cnVjdG9yLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkY29uc3RydWN0b3I/KHByb3BzOiBQYXJ0aWFsPFByb3BzPik6IFNlbGZcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvbixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBQcm9wc106IEFjY2Vzc29yPE5vbk51bGxhYmxlPFByb3BzW0tdPj4gfCBQcm9wc1tLXVxufSAmIHtcbiAgICBbUyBpbiBrZXlvZiBTZWxmW1wiJHNpZ25hbHNcIl0gYXMgUyBleHRlbmRzIGBub3RpZnk6OiR7aW5mZXIgUH1gXG4gICAgICAgID8gYG9uTm90aWZ5JHtQYXNjYWxpZnk8UD59YFxuICAgICAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PFM+fWBcbiAgICAgICAgICA6IG5ldmVyXT86IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8U2VsZiwgU2VsZltcIiRzaWduYWxzXCJdW1NdPlxufVxuXG4vLyBwcmV0dGllci1pZ25vcmVcbnR5cGUgSnN4UHJvcHM8QywgUHJvcHM+ID1cbiAgICBDIGV4dGVuZHMgdHlwZW9mIEZyYWdtZW50ID8gKFByb3BzICYge30pXG4gICAgLy8gaW50cmluc2ljRWxlbWVudHMgYWx3YXlzIHJlc29sdmUgYXMgRkNcbiAgICAvLyBzbyB3ZSBjYW4ndCBuYXJyb3cgaXQgZG93biwgYW5kIGluIHNvbWUgY2FzZXNcbiAgICAvLyB0aGUgc2V0dXAgZnVuY3Rpb24gaXMgdHlwZWQgYXMgYSB1bmlvbiBvZiBPYmplY3QgYW5kIGFjdHVhbCB0eXBlXG4gICAgLy8gYXMgYSBmaXggdXNlcnMgY2FuIGFuZCBzaG91bGQgdXNlIEZDUHJvcHNcbiAgICA6IEMgZXh0ZW5kcyBGQyA/IFByb3BzICYgT21pdDxGQ1Byb3BzPFJldHVyblR5cGU8Qz4sIFByb3BzPiwgXCIkXCI+XG4gICAgOiBDIGV4dGVuZHMgQ0MgPyBDQ1Byb3BzPEluc3RhbmNlVHlwZTxDPiwgUHJvcHM+XG4gICAgOiBuZXZlclxuXG5mdW5jdGlvbiBpc0dPYmplY3RDdG9yKGN0b3I6IGFueSk6IGN0b3IgaXMgQ0Mge1xuICAgIHJldHVybiBjdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0XG59XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb25DdG9yKGN0b3I6IGFueSk6IGN0b3IgaXMgRkMge1xuICAgIHJldHVybiB0eXBlb2YgY3RvciA9PT0gXCJmdW5jdGlvblwiICYmICFpc0dPYmplY3RDdG9yKGN0b3IpXG59XG5cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRUeXBlKG9iamVjdDogb2JqZWN0LCB0eXBlOiBzdHJpbmcpIHtcbiAgICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSBcIlwiKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKVxuICAgIH1cblxuICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtndGtUeXBlXTogdHlwZSB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIFBhcmFtZXRlcnM8VD5bMF0+LFxuKTogUmV0dXJuVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBuZXcgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8VD5bMF0+LFxuKTogSW5zdGFuY2VUeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBrZXlvZiAodHlwZW9mIGVudilbXCJpbnRyaW5zaWNFbGVtZW50c1wiXSB8IChuZXcgKHByb3BzOiBhbnkpID0+IFQpIHwgKChwcm9wczogYW55KSA9PiBUKSxcbiAgICBpbnByb3BzOiBhbnksXG4gICAgLy8ga2V5IGlzIGEgc3BlY2lhbCBwcm9wIGluIGpzeCB3aGljaCBpcyBwYXNzZWQgYXMgYSB0aGlyZCBhcmd1bWVudCBhbmQgbm90IGluIHByb3BzXG4gICAga2V5Pzogc3RyaW5nLFxuKTogVCB7XG4gICAgY29uc3QgeyAkLCAkdHlwZSwgJGNvbnN0cnVjdG9yLCBjaGlsZHJlbiwgLi4ucmVzdCB9ID0gaW5wcm9wcyBhcyBDQ1Byb3BzPFQsIGFueT5cbiAgICBjb25zdCBwcm9wcyA9IHJlc3QgYXMgUmVjb3JkPHN0cmluZywgYW55PlxuXG4gICAgaWYgKGtleSkgT2JqZWN0LmFzc2lnbihwcm9wcywgeyBrZXkgfSlcbiAgICBlbnYuaW5pdFByb3BzKHByb3BzKVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSBkZWxldGUgcHJvcHNba2V5XVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgY3RvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAoY3RvciBpbiBlbnYuaW50cmluc2ljRWxlbWVudHMpIHtcbiAgICAgICAgICAgIGN0b3IgPSBlbnYuaW50cmluc2ljRWxlbWVudHNbY3Rvcl0gYXMgRkM8VD4gfCBDQzxUPlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYHVua25vd24gaW50cmluc2ljIGVsZW1lbnQgXCIke2N0b3J9XCJgKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb25DdG9yKGN0b3IpKSB7XG4gICAgICAgIGNvbnN0IG9iamVjdCA9IGN0b3IoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSlcbiAgICAgICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG4gICAgICAgICQ/LihvYmplY3QpXG4gICAgICAgIHJldHVybiBvYmplY3RcbiAgICB9XG5cbiAgICAvLyBjb2xsZWN0IGNzcyBhbmQgY2xhc3NOYW1lXG4gICAgY29uc3QgeyBjc3MsIGNsYXNzOiBjbGFzc05hbWUgfSA9IHByb3BzXG4gICAgZGVsZXRlIHByb3BzLmNzc1xuICAgIGRlbGV0ZSBwcm9wcy5jbGFzc1xuXG4gICAgY29uc3Qgc2lnbmFsczogQXJyYXk8W3N0cmluZywgKC4uLnByb3BzOiB1bmtub3duW10pID0+IHVua25vd25dPiA9IFtdXG4gICAgY29uc3QgYmluZGluZ3M6IEFycmF5PFtzdHJpbmcsIEFjY2Vzc29yPHVua25vd24+XT4gPSBbXVxuXG4gICAgLy8gY29sbGVjdCBzaWduYWxzIGFuZCBiaW5kaW5nc1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgc2lnbmFscy5wdXNoKFtrZXkuc2xpY2UoMiksIHZhbHVlIGFzICgpID0+IHVua25vd25dKVxuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgICAgICBwcm9wc1trZXldID0gdmFsdWUuZ2V0KClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvbnN0cnVjdFxuICAgIGNvbnN0IG9iamVjdCA9ICRjb25zdHJ1Y3RvciA/ICRjb25zdHJ1Y3Rvcihwcm9wcykgOiBuZXcgKGN0b3IgYXMgQ0M8VD4pKHByb3BzKVxuICAgIGlmICgkY29uc3RydWN0b3IpIE9iamVjdC5hc3NpZ24ob2JqZWN0LCBwcm9wcylcbiAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSlcblxuICAgIGlmIChjc3MpIGVudi5zZXRDc3Mob2JqZWN0LCBjc3MpXG4gICAgaWYgKGNsYXNzTmFtZSkgZW52LnNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKVxuXG4gICAgLy8gYWRkIGNoaWxkcmVuXG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC5cIilcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaCwgLTEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoY2hpbGQpIHtcbiAgICAgICAgICAgIGVudi5hZGRDaGlsZChvYmplY3QsIGNoaWxkLCAtMSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBzaWduYWxzXG4gICAgY29uc3QgZGlzcG9zZUhhbmRsZXJzID0gc2lnbmFscy5tYXAoKFtzaWcsIGhhbmRsZXJdKSA9PiB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBrZWJhYmlmeShzaWcpXG4gICAgICAgIGNvbnN0IGlkID0gbmFtZS5zdGFydHNXaXRoKFwibm90aWZ5LVwiKVxuICAgICAgICAgICAgPyBvYmplY3QuY29ubmVjdChgbm90aWZ5Ojoke25hbWUuc2xpY2UoNyl9YCwgaGFuZGxlcilcbiAgICAgICAgICAgIDogb2JqZWN0LmNvbm5lY3Qoa2ViYWJpZnkoc2lnKSwgaGFuZGxlcilcblxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfSlcblxuICAgIC8vIGhhbmRsZSBiaW5kaW5nc1xuICAgIGNvbnN0IGRpc3Bvc2VCaW5kaW5ncyA9IGJpbmRpbmdzLm1hcCgoW3Byb3AsIGJpbmRpbmddKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICB9KVxuICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICByZXR1cm4gZGlzcG9zZVxuICAgIH0pXG5cbiAgICAvLyBjbGVhbnVwXG4gICAgaWYgKGRpc3Bvc2VCaW5kaW5ncy5sZW5ndGggPiAwIHx8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NlSGFuZGxlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICBkaXNwb3NlQmluZGluZ3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgJD8uKG9iamVjdClcbiAgICByZXR1cm4gb2JqZWN0XG59XG5cbmV4cG9ydCBjb25zdCBqc3hzID0ganN4XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICB0eXBlIEVsZW1lbnRUeXBlID0ga2V5b2YgSW50cmluc2ljRWxlbWVudHMgfCBGQyB8IENDXG4gICAgICAgIHR5cGUgRWxlbWVudCA9IEdPYmplY3QuT2JqZWN0XG4gICAgICAgIHR5cGUgRWxlbWVudENsYXNzID0gR09iamVjdC5PYmplY3RcblxuICAgICAgICB0eXBlIExpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczxDLCBQcm9wcz4gPSBKc3hQcm9wczxDLCBQcm9wcz4gJiB7XG4gICAgICAgICAgICAvLyBGSVhNRTogd2h5IGRvZXMgYW4gaW50cmluc2ljIGVsZW1lbnQgYWx3YXlzIHJlc29sdmUgYXMgRkM/XG4gICAgICAgICAgICAvLyBfX3R5cGU/OiBDIGV4dGVuZHMgQ0MgPyBcIkNDXCIgOiBDIGV4dGVuZHMgRkMgPyBcIkZDXCIgOiBuZXZlclxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgLy8gY2M6IENDUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzLCBHdGsuQm94LlNpZ25hbFNpZ25hdHVyZXM+XG4gICAgICAgICAgICAvLyBmYzogRkNQcm9wczxHdGsuV2lkZ2V0LCBGblByb3BzPlxuICAgICAgICB9XG5cbiAgICAgICAgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgICAgICBjaGlsZHJlbjoge31cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IHsgdHlwZSBQYXNjYWxpZnksIGNhbWVsaWZ5LCBrZWJhYmlmeSB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB0eXBlIHsgRGVlcEluZmVyLCBSZWN1cnNpdmVJbmZlciB9IGZyb20gXCIuLi92YXJpYW50LmpzXCJcblxudHlwZSBTdWJzY3JpYmVDYWxsYmFjayA9ICgpID0+IHZvaWRcbnR5cGUgRGlzcG9zZUZ1bmN0aW9uID0gKCkgPT4gdm9pZFxudHlwZSBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spID0+IERpc3Bvc2VGdW5jdGlvblxuXG5leHBvcnQgdHlwZSBBY2Nlc3NlZDxUPiA9IFQgZXh0ZW5kcyBBY2Nlc3NvcjxpbmZlciBWPiA/IFYgOiBuZXZlclxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1kZWNsYXJhdGlvbi1tZXJnaW5nXG5leHBvcnQgY2xhc3MgQWNjZXNzb3I8VCA9IHVua25vd24+IGV4dGVuZHMgRnVuY3Rpb24ge1xuICAgIHN0YXRpYyAkZ3R5cGUgPSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1QgYXMgdW5rbm93biBhcyBHT2JqZWN0LkdUeXBlPEFjY2Vzc29yPlxuXG4gICAgI2dldDogKCkgPT4gVFxuICAgICNzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uXG5cbiAgICBjb25zdHJ1Y3RvcihnZXQ6ICgpID0+IFQsIHN1YnNjcmliZT86IFN1YnNjcmliZUZ1bmN0aW9uKSB7XG4gICAgICAgIHN1cGVyKFwicmV0dXJuIGFyZ3VtZW50cy5jYWxsZWUuX2NhbGwuYXBwbHkoYXJndW1lbnRzLmNhbGxlZSwgYXJndW1lbnRzKVwiKVxuICAgICAgICB0aGlzLiNzdWJzY3JpYmUgPSBzdWJzY3JpYmUgPz8gKCgpID0+ICgpID0+IHZvaWQgMClcbiAgICAgICAgdGhpcy4jZ2V0ID0gZ2V0XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3Vic2NyaWJlIGZvciB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnQgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcmV0dXJucyBVbnN1YnNjcmliZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBzdWJzY3JpYmUoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKTogRGlzcG9zZUZ1bmN0aW9uIHtcbiAgICAgICAgLy8gVE9ETzogYXV0byB1bnN1YiB3aGVuIGEgc2NvcGUgaXMgYXZhaWxhYmxlP1xuICAgICAgICByZXR1cm4gdGhpcy4jc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIFRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAqL1xuICAgIGdldCgpOiBUIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2dldCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGFzPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB0cmFuc2Zvcm0odGhpcy4jZ2V0KCkpLCB0aGlzLiNzdWJzY3JpYmUpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jYWxsPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXModHJhbnNmb3JtKVxuICAgIH1cblxuICAgIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgQWNjZXNzb3I8JHt0aGlzLmdldCgpfT5gXG4gICAgfVxuXG4gICAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLlwiKVxuICAgICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc29yPFQ+IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+XG59XG5cbmV4cG9ydCB0eXBlIFNldHRlcjxUPiA9IHtcbiAgICAodmFsdWU6IFQpOiB2b2lkXG4gICAgKHZhbHVlOiAocHJldjogVCkgPT4gVCk6IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgU3RhdGU8VD4gPSBbQWNjZXNzb3I8VD4sIFNldHRlcjxUPl1cblxuLyoqXG4gKiBDcmVhdGUgYSB3cml0YWJsZSBzaWduYWwuXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGludGlhbCB2YWx1ZSBvZiB0aGUgc2lnbmFsXG4gKiBAcmV0dXJucyBBbiBgQWNjZXNzb3JgIGFuZCBhIHNldHRlciBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhdGU8VD4oaW5pdDogVCk6IFN0YXRlPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG4gICAgICAgIHJldHVybiAoKSA9PiBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY29uc3Qgc2V0ID0gKG5ld1ZhbHVlOiB1bmtub3duKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlOiBUID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuZXdWYWx1ZShjdXJyZW50VmFsdWUpIDogbmV3VmFsdWVcbiAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAvLyBydW5uaW5nIGNhbGxiYWNrcyBtaWdodCBtdXRhdGUgc3Vic2NyaWJlcnNcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFtuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpLCBzZXQgYXMgU2V0dGVyPFQ+XVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIGlzIGNvbXB1dGVkIGZyb20gYSBsaXN0IG9mIGBBY2Nlc3NvcmBzLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGxldCBhOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBsZXQgYjogQWNjZXNzb3I8c3RyaW5nPlxuICogY29uc3QgYzogQWNjZXNzb3I8W251bWJlciwgc3RyaW5nXT4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0pXG4gKiBjb25zdCBkOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdLCAoYTogbnVtYmVyLCBiOiBzdHJpbmcpID0+IGAke2F9ICR7Yn1gKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGRlcHMgTGlzdCBvZiBgQWNjZXNzb3JzYC5cbiAqIEBwYXJhbSB0cmFuc2Zvcm0gQW4gb3B0aW9uYWwgdHJhbnNmb3JtIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGNvbXB1dGVkIGBBY2Nlc3NvcmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgViA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBWKTogQWNjZXNzb3I8Vj4ge1xuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgQXJyYXk8dW5rbm93bj4oZGVwcy5sZW5ndGgpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gZGVwcy5tYXAoKGRlcCwgaSkgPT5cbiAgICAgICAgICAgICAgICBkZXAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlW2ldICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgICAgIGNhY2hlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBWID0+IHtcbiAgICAgICAgY29uc3QgYXJncyA9IGRlcHMubWFwKChkZXAsIGkpID0+IHtcbiAgICAgICAgICAgIGlmICghY2FjaGVbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVbaV1cbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtID8gdHJhbnNmb3JtKC4uLihhcmdzIGFzIEFyZ3MpKSA6IChhcmdzIGFzIFYpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHT2JqZWN0Lk9iamVjdGAncyBgcHJvcGVydHlgLlxuICpcbiAqIEBwYXJhbSBvYmplY3QgVGhlIGBHT2JqZWN0Lk9iamVjdGAgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIHByb3BlcnR5IE9uZSBvZiBpdHMgcmVnaXN0ZXJlZCBwcm9wZXJ0aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFAgZXh0ZW5kcyBrZXlvZiBUPihcbiAgICBvYmplY3Q6IFQsXG4gICAgcHJvcGVydHk6IEV4dHJhY3Q8UCwgc3RyaW5nPixcbik6IEFjY2Vzc29yPFRbUF0+XG5cbi8vIFRPRE86IHN1cHBvcnQgbmVzdGVkIGJpbmRpbmdzXG4vLyBleHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxcbi8vICAgICBUIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4vLyAgICAgUDEgZXh0ZW5kcyBrZXlvZiBULFxuLy8gICAgIFAyIGV4dGVuZHMga2V5b2YgTm9uTnVsbGFibGU8VFtQMV0+LFxuLy8gPihcbi8vICAgICBvYmplY3Q6IFQsXG4vLyAgICAgcHJvcGVydHkxOiBFeHRyYWN0PFAxLCBzdHJpbmc+LFxuLy8gICAgIHByb3BlcnR5MjogRXh0cmFjdDxQMiwgc3RyaW5nPixcbi8vICk6IEFjY2Vzc29yPE5vbk51bGxhYmxlPFRbUDFdPltQMl0+XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR2lvLlNldHRpbmdzYCdzIGBrZXlgLlxuICogVmFsdWVzIGFyZSByZWN1cnNpdmVseSB1bnBhY2tlZC5cbiAqXG4gKiBAZGVwcmVjYXRlZCBwcmVmZXIgdXNpbmcge0BsaW5rIGNyZWF0ZVNldHRpbmdzfS5cbiAqIEBwYXJhbSBvYmplY3QgVGhlIGBHaW8uU2V0dGluZ3NgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBrZXkgVGhlIHNldHRpbmdzIGtleVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihzZXR0aW5nczogR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KG9iamVjdDogR09iamVjdC5PYmplY3QgfCBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD4ge1xuICAgIGNvbnN0IHByb3AgPSBrZWJhYmlmeShrZXkpIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgY29uc3Qgc2lnID0gb2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzID8gXCJjaGFuZ2VkXCIgOiBcIm5vdGlmeVwiXG4gICAgICAgIGNvbnN0IGlkID0gb2JqZWN0LmNvbm5lY3QoYCR7c2lnfTo6JHtwcm9wfWAsICgpID0+IGNhbGxiYWNrKCkpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmplY3QuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKCkgYXMgVFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke3Byb3AucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgICAgICAgICBpZiAoZ2V0dGVyIGluIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0W2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiAob2JqZWN0W2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKSBhcyBUXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm9wIGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtwcm9wXSBhcyBUXG4gICAgICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtrZXkgYXMga2V5b2YgdHlwZW9mIG9iamVjdF0gYXMgVFxuXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGdldCBwcm9wZXJ0eSAke2tleX1gKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxudHlwZSBDb25uZWN0aW9uSGFuZGxlcjxcbiAgICBPIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUyBleHRlbmRzIGtleW9mIE9bXCIkc2lnbmFsc1wiXSxcbiAgICBULFxuPiA9IE9bXCIkc2lnbmFsc1wiXVtTXSBleHRlbmRzICguLi5hcmdzOiBhbnlbXSkgPT4gaW5mZXIgUlxuICAgID8gdm9pZCBleHRlbmRzIFJcbiAgICAgICAgPyAoLi4uYXJnczogWy4uLlBhcmFtZXRlcnM8T1tcIiRzaWduYWxzXCJdW1NdPiwgY3VycmVudFZhbHVlOiBUXSkgPT4gVFxuICAgICAgICA6IG5ldmVyXG4gICAgOiBuZXZlclxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIHNldHMgdXAgYSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAgc2lnbmFsIGNvbm5lY3Rpb25zLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGNvbnN0IHZhbHVlOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29ubmVjdGlvbihcbiAqICAgXCJpbml0aWFsIHZhbHVlXCIsXG4gKiAgIFtvYmoxLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXSxcbiAqICAgW29iajIsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdXG4gKiApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHNpZ25hbHMgQSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAsIHNpZ25hbCBuYW1lIGFuZCBjYWxsYmFjayBwYWlycyB0byBjb25uZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbjxcbiAgICBULFxuICAgIE8xIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzEgZXh0ZW5kcyBrZXlvZiBPMVtcIiRzaWduYWxzXCJdLFxuICAgIE8yIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzIgZXh0ZW5kcyBrZXlvZiBPMltcIiRzaWduYWxzXCJdLFxuICAgIE8zIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzMgZXh0ZW5kcyBrZXlvZiBPM1tcIiRzaWduYWxzXCJdLFxuICAgIE80IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzQgZXh0ZW5kcyBrZXlvZiBPNFtcIiRzaWduYWxzXCJdLFxuICAgIE81IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzUgZXh0ZW5kcyBrZXlvZiBPNVtcIiRzaWduYWxzXCJdLFxuICAgIE82IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzYgZXh0ZW5kcyBrZXlvZiBPNltcIiRzaWduYWxzXCJdLFxuICAgIE83IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzcgZXh0ZW5kcyBrZXlvZiBPN1tcIiRzaWduYWxzXCJdLFxuICAgIE84IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzggZXh0ZW5kcyBrZXlvZiBPOFtcIiRzaWduYWxzXCJdLFxuICAgIE85IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzkgZXh0ZW5kcyBrZXlvZiBPOVtcIiRzaWduYWxzXCJdLFxuPihcbiAgICBpbml0OiBULFxuICAgIGgxOiBbTzEsIFMxLCBDb25uZWN0aW9uSGFuZGxlcjxPMSwgUzEsIFQ+XSxcbiAgICBoMj86IFtPMiwgUzIsIENvbm5lY3Rpb25IYW5kbGVyPE8yLCBTMiwgVD5dLFxuICAgIGgzPzogW08zLCBTMywgQ29ubmVjdGlvbkhhbmRsZXI8TzMsIFMzLCBUPl0sXG4gICAgaDQ/OiBbTzQsIFM0LCBDb25uZWN0aW9uSGFuZGxlcjxPNCwgUzQsIFQ+XSxcbiAgICBoNT86IFtPNSwgUzUsIENvbm5lY3Rpb25IYW5kbGVyPE81LCBTNSwgVD5dLFxuICAgIGg2PzogW082LCBTNiwgQ29ubmVjdGlvbkhhbmRsZXI8TzYsIFM2LCBUPl0sXG4gICAgaDc/OiBbTzcsIFM3LCBDb25uZWN0aW9uSGFuZGxlcjxPNywgUzcsIFQ+XSxcbiAgICBoOD86IFtPOCwgUzgsIENvbm5lY3Rpb25IYW5kbGVyPE84LCBTOCwgVD5dLFxuICAgIGg5PzogW085LCBTOSwgQ29ubmVjdGlvbkhhbmRsZXI8TzksIFM5LCBUPl0sXG4pIHtcbiAgICBsZXQgdmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBzaWduYWxzID0gW2gxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIGg3LCBoOCwgaDldLmZpbHRlcigoaCkgPT4gaCAhPT0gdW5kZWZpbmVkKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHNpZ25hbHMubWFwKChbb2JqZWN0LCBzaWduYWwsIGNhbGxiYWNrXSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmNvbm5lY3QuY2FsbChcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LFxuICAgICAgICAgICAgICAgICAgICBzaWduYWwgYXMgc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAoXywgLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBjYWxsYmFjayguLi5hcmdzLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5kaXNjb25uZWN0LmNhbGwob2JqZWN0LCBpZClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB2YWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHNpZ25hbCBmcm9tIGEgcHJvdmllciBmdW5jdGlvbi5cbiAqIFRoZSBwcm92aWRlciBpcyBjYWxsZWQgd2hlbiB0aGUgZmlyc3Qgc3Vic2NyaWJlciBhcHBlYXJzIGFuZCB0aGUgcmV0dXJuZWQgZGlzcG9zZVxuICogZnVuY3Rpb24gZnJvbSB0aGUgcHJvdmlkZXIgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgbnVtYmVyIG9mIHN1YnNjcmliZXJzIGRyb3AgdG8gemVyby5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCB2YWx1ZSA9IGNyZWF0ZUV4dGVybmFsKDAsIChzZXQpID0+IHtcbiAqICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiBzZXQoKHYpID0+IHYgKyAxKSlcbiAqICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXG4gKiB9KVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBwcm9kdWNlciBUaGUgcHJvZHVjZXIgZnVuY3Rpb24gd2hpY2ggc2hvdWxkIHJldHVybiBhIGNsZWFudXAgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUV4dGVybmFsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgcHJvZHVjZXI6IChzZXQ6IFNldHRlcjxUPikgPT4gRGlzcG9zZUZ1bmN0aW9uLFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IERpc3Bvc2VGdW5jdGlvblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHByb2R1Y2VyKCh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWU6IFQgPSB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihjdXJyZW50VmFsdWUpIDogdlxuICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xudHlwZSBTZXR0aW5nczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBVbmNhcGl0YWxpemU8UGFzY2FsaWZ5PEs+Pl06IEFjY2Vzc29yPFJlY3Vyc2l2ZUluZmVyPFRbS10+PlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIGBzZXQke1Bhc2NhbGlmeTxLPn1gXTogU2V0dGVyPERlZXBJbmZlcjxUW0tdPj5cbn1cblxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKlxuICogV3JhcCBhIHtAbGluayBHaW8uU2V0dGluZ3N9IGludG8gYSBjb2xsZWN0aW9uIG9mIHNldHRlcnMgYW5kIGFjY2Vzc29ycy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBzID0gY3JlYXRlU2V0dGluZ3Moc2V0dGluZ3MsIHtcbiAqICAgXCJjb21wbGV4LWtleVwiOiBcImF7c2F7c3N9fVwiLFxuICogICBcInNpbXBsZS1rZXlcIjogXCJzXCIsXG4gKiB9KVxuICpcbiAqIHMuY29tcGxleEtleS5zdWJzY3JpYmUoKCkgPT4ge1xuICogICBwcmludChzLmNvbXBsZXhLZXkuZ2V0KCkpXG4gKiB9KVxuICpcbiAqIHMuc2V0Q29tcGxleEtleSgocHJldikgPT4gKHtcbiAqICAgLi4ucHJldixcbiAqICAga2V5OiB7IG5lc3RlZDogXCJcIiB9LFxuICogfSkpXG4gKiBgYGBcbiAqL1xuLy8gVE9ETzogY29tZSB1cCB3aXRoIGFuIEFQSVxuLy8gLSB0byBtYW51YWxseSBhbm5vdGF0ZSBWYXJpYW50IHR5cGVkIHNldHRlcnMvZ2V0dGVyc1xuLy8gLSB0byBzZXQgcmVjdXJzaXZlIHZzIGRlZXAgdW5wYWNrIHBlciBrZXlcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXR0aW5nczxjb25zdCBUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4oXG4gICAgc2V0dGluZ3M6IEdpby5TZXR0aW5ncyxcbiAgICBrZXlzOiBULFxuKTogU2V0dGluZ3M8VD4ge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGtleXMpLmZsYXRNYXAoKFtrZXksIHR5cGVdKSA9PiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY2FtZWxpZnkoa2V5KSxcbiAgICAgICAgICAgICAgICBuZXcgQWNjZXNzb3IoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHNldHRpbmdzLmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpLFxuICAgICAgICAgICAgICAgICAgICAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gc2V0dGluZ3MuY29ubmVjdChgY2hhbmdlZDo6JHtrZXl9YCwgY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gc2V0dGluZ3MuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBgc2V0JHtrZXlbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaWZ5KGtleSkuc2xpY2UoMSl9YCxcbiAgICAgICAgICAgICAgICAodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zZXRfdmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkuZGVlcFVucGFjaygpKSA6IHYsXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIF0pLFxuICAgIClcbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxudHlwZSBDaGlsZEZuID0gKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmogfCBudW1iZXIgfCBzdHJpbmcsIGluZGV4PzogbnVtYmVyKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIGFkZENoaWxkOiBDaGlsZEZuXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgaW5pdFByb3BzOiAocHJvcHM6IGFueSkgPT4gdm9pZFxuICAgIGRlZmF1bHRDbGVhbnVwOiAob2JqZWN0OiBHT2JqKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIG1pc3NpbmdJbXBsKCkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgYWRkQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUgfSBmcm9tIFwiLi4vZ25vbWUvc2lnbmFsVHJhY2tlci5qc1wiXG5cbi8vIFRPRE86IEZyYWdtZW50IHNob3VsZCBpbXBsZW1lbnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgY2xhc3MgRnJhZ21lbnQ8VCA9IGFueT4gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBcImRlc3Ryb3lcIjoge30sXG5cbiAgICAgICAgXCJjaGlsZC1hZGRlZFwiOiB7XG4gICAgICAgICAgICBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1QsIEdPYmplY3QuVFlQRV9VSU5UXSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJjaGlsZC1yZW1vdmVkXCI6IHtcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVCwgR09iamVjdC5UWVBFX1VJTlRdLFxuICAgICAgICB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICAgICAgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUodGhpcylcbiAgICB9XG5cbiAgICBzdGF0aWMgbmV3PFQ+KGNoaWxkcmVuOiBBcnJheTxUPiA9IFtdKSB7XG4gICAgICAgIHJldHVybiBuZXcgRnJhZ21lbnQoeyBjaGlsZHJlbiB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgY29ubmVjdGlvbklkcyA9IG5ldyBTZXQ8bnVtYmVyPigpXG4gICAgcHJpdmF0ZSBfY2hpbGRyZW46IEFycmF5PFQ+XG5cbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5fY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgYWRkQ2hpbGQoY2hpbGQ6IFQsIGluZGV4OiBudW1iZXIgPSAtMSk6IHZvaWQge1xuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYG5lc3RpbmcgRnJhZ21lbnRzIGFyZSBub3QgeWV0IHN1cHBvcnRlZGApXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IFtcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZSgwLCBpbmRleCksXG4gICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgLi4udGhpcy5fY2hpbGRyZW4uc2xpY2UoaW5kZXgpLFxuICAgICAgICAgICAgXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgICAgICAgIGluZGV4ID0gdGhpcy5fY2hpbGRyZW4ubGVuZ3RoIC0gMVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5lbWl0KFwiY2hpbGQtYWRkZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgaGFzQ2hpbGQoY2hpbGQ6IFQpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoY2gpID0+IGNoID09PSBjaGlsZCkgPiAtMVxuICAgIH1cblxuICAgIHJlbW92ZUNoaWxkKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKVxuXG4gICAgICAgIHRoaXMuZW1pdChcImNoaWxkLXJlbW92ZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoeyBjaGlsZHJlbiA9IFtdIH06IFBhcnRpYWw8eyBjaGlsZHJlbjogQXJyYXk8VD4gfCBUIH0+ID0ge30pIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgY29ubmVjdChzaWduYWw6IHN0cmluZywgY2FsbGJhY2s6IChfOiB0aGlzLCAuLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IG51bWJlciB7XG4gICAgICAgIGNvbnN0IGlkID0gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25JZHMuYWRkKGlkKVxuICAgICAgICByZXR1cm4gaWRcbiAgICB9XG5cbiAgICBkaXNjb25uZWN0KGlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuZGlzY29ubmVjdChpZClcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uSWRzLmRlbGV0ZShpZClcbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmVtaXQoXCJkZXN0cm95XCIpXG4gICAgICAgIGZvciAoY29uc3QgaWQgb2YgdGhpcy5jb25uZWN0aW9uSWRzLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBzdXBlci5kaXNjb25uZWN0KGlkKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbnR5cGUgVHlwZSA9IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IEdPYmplY3QuT2JqZWN0IH1cblxuLy8gQHRzLWV4cGVjdC1lcnJvciBtaXNzaW5nIHR5cGVzXG5jb25zdCBtb2QgPSBpbXBvcnQoXCJyZXNvdXJjZTovLy9vcmcvZ25vbWUvc2hlbGwvbWlzYy9zaWduYWxUcmFja2VyLmpzXCIpXG5cbmV4cG9ydCBjb25zdCByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZTogKHR5cGU6IFR5cGUpID0+IHZvaWQgPSBhd2FpdCBtb2RcbiAgICAudGhlbigobW9kKSA9PiBtb2QucmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUpXG4gICAgLmNhdGNoKCgpID0+ICgpID0+IHZvaWQgMClcbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yLCB0eXBlIFN0YXRlLCBjcmVhdGVTdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuaW50ZXJmYWNlIEZvclByb3BzPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4ge1xuICAgIGVhY2g6IEFjY2Vzc29yPEl0ZXJhYmxlPEl0ZW0+PlxuICAgIGNoaWxkcmVuOiAoaXRlbTogSXRlbSwgaW5kZXg6IEFjY2Vzc29yPG51bWJlcj4pID0+IEVsXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFbCwgaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZClcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIHRoZSBrZXkgZm9yIGVhY2ggaXRlbS5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQgaXRlbXMgYXJlIG1hcHBlZCBieTpcbiAgICAgKiAtIHZhbHVlIGluIGNhc2Ugb2YgcHJpbWl0aXZlIHZhbHVlc1xuICAgICAqIC0gcmVmZXJlbmNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlkPzogKGl0ZW06IEl0ZW0pID0+IEtleSB8IEl0ZW1cbn1cblxuLy8gVE9ETzogc3VwcG9ydCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3I8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5Pih7XG4gICAgZWFjaCxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxuICAgIGlkID0gKGl0ZW06IEl0ZW0pID0+IGl0ZW0sXG59OiBGb3JQcm9wczxJdGVtLCBFbCwgS2V5Pik6IEZyYWdtZW50PEVsPiB7XG4gICAgdHlwZSBNYXBJdGVtID0geyBpdGVtOiBJdGVtOyBjaGlsZDogRWw7IGluZGV4OiBTdGF0ZTxudW1iZXI+OyBzY29wZTogU2NvcGUgfVxuXG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXA8SXRlbSB8IEtleSwgTWFwSXRlbT4oKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEVsPigpXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleF0sIHNjb3BlIH06IE1hcEl0ZW0pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQsIGl0ZW0sIGluZGV4LmdldCgpKVxuICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgfVxuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayhpdGFyZWFibGU6IEl0ZXJhYmxlPEl0ZW0+KSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gWy4uLml0YXJlYWJsZV1cbiAgICAgICAgY29uc3QgaWRzID0gaXRlbXMubWFwKGlkKVxuICAgICAgICBjb25zdCBpZFNldCA9IG5ldyBTZXQoaWRzKVxuXG4gICAgICAgIC8vIGNsZWFudXAgY2hpbGRyZW4gbWlzc2luZyBmcm9tIGFyclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtYXAuZW50cmllcygpKSB7XG4gICAgICAgICAgICAvLyB0aGVyZSBpcyBubyBnZW5lcmljIHdheSB0byBpbnNlcnQgY2hpbGQgYXQgaW5kZXhcbiAgICAgICAgICAgIC8vIHNvIHdlIHNvcnQgYnkgcmVtb3ZpbmcgZXZlcnkgY2hpbGQgYW5kIHJlYXBwZW5kaW5nIGluIG9yZGVyXG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZCh2YWx1ZS5jaGlsZClcblxuICAgICAgICAgICAgaWYgKCFpZFNldC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgICAgICAgICBtYXAuZGVsZXRlKGtleSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBpbmRleCBhbmQgYWRkIG5ldyBpdGVtc1xuICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGlkc1tpXVxuICAgICAgICAgICAgaWYgKG1hcC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgfSA9IG1hcC5nZXQoa2V5KSFcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKVxuICAgICAgICAgICAgICAgIGlmIChmcmFnbWVudC5oYXNDaGlsZChjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gY3JlYXRlU3RhdGUoaSlcbiAgICAgICAgICAgICAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpXG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSlcbiAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gZWFjaC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG5pbnRlcmZhY2UgV2l0aFByb3BzPFQsIEUgZXh0ZW5kcyBKU1guRWxlbWVudD4ge1xuICAgIHZhbHVlOiBBY2Nlc3NvcjxUPlxuICAgIGNoaWxkcmVuOiAodmFsdWU6IFQpID0+IEUgfCBcIlwiIHwgZmFsc2UgfCBudWxsIHwgdW5kZWZpbmVkXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFKSA9PiB2b2lkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gV2l0aDxULCBFIGV4dGVuZHMgSlNYLkVsZW1lbnQ+KHtcbiAgICB2YWx1ZSxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxufTogV2l0aFByb3BzPFQsIEU+KTogRnJhZ21lbnQ8RT4ge1xuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFPigpXG5cbiAgICBsZXQgc2NvcGU6IFNjb3BlXG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayh2OiBUKSB7XG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZnJhZ21lbnQuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGZyYWdtZW50LnJlbW92ZUNoaWxkKGNoaWxkKVxuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGNsZWFudXAoY2hpbGQpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBlbnYuZGVmYXVsdENsZWFudXAoY2hpbGQpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzY29wZSkgc2NvcGUuZGlzcG9zZSgpXG4gICAgICAgIH1cblxuICAgICAgICBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgIGNvbnN0IGNoID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQodikpXG4gICAgICAgIGlmIChjaCAhPT0gXCJcIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2gpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gdmFsdWUuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayh2YWx1ZS5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICBkaXNwb3NlKClcbiAgICB9KVxuXG4gICAgcmV0dXJuIGZyYWdtZW50XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBrZWJhYmlmeSwgdHlwZSBQYXNjYWxpZnksIHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcbmltcG9ydCB7IHNldFR5cGUgfSBmcm9tIFwiLi9qc3guanNcIlxuXG50eXBlIEVsZW1lbnQgPSBKU1guRWxlbWVudCB8IFwiXCIgfCBmYWxzZSB8IG51bGwgfCB1bmRlZmluZWRcblxudHlwZSBUaGlzUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0PiA9IHtcbiAgICB0aGlzOiBTZWxmXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuXG4gICAgY2hpbGRyZW4/OiBFbGVtZW50IHwgQXJyYXk8RWxlbWVudD5cbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBTZWxmXT86IFNlbGZbS10gfCBBY2Nlc3NvcjxOb25OdWxsYWJsZTxTZWxmW0tdPj5cbn0gJiB7XG4gICAgW1MgaW4ga2V5b2YgU2VsZltcIiRzaWduYWxzXCJdIGFzIFMgZXh0ZW5kcyBgbm90aWZ5Ojoke2luZmVyIFB9YFxuICAgICAgICA/IGBvbk5vdGlmeSR7UGFzY2FsaWZ5PFA+fWBcbiAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxTPn1gXG4gICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gVE9ETzpcbi8vIGNvbnNpZGVyIG1ha2luZyB0aGlzIGNvbXBvbmVudCBhIHBvdGVudGlhbCBzdWJzdGl0dXRlIGZvciBgY3JlYXRlUm9vdCgpYFxuLy8gZGlzcG9zaW5nIHRoZSBzY29wZSB1c2luZyBhIGRlc3Ryb3kgc2lnbmFsXG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgZnVuY3Rpb24gVGhpczxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KHtcbiAgICB0aGlzOiBzZWxmLFxuICAgIGNoaWxkcmVuLFxuICAgICR0eXBlLFxuICAgIC4uLnByb3BzXG59OiBUaGlzUHJvcHM8VD4pIHtcbiAgICBjb25zdCBjbGVhbnVwID0gbmV3IEFycmF5PCgpID0+IHZvaWQ+KClcblxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShzZWxmLCAkdHlwZSlcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5ID09PSBcImNzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcImNsYXNzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGtleS5zdGFydHNXaXRoKFwib25Ob3RpZnlcIilcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29ubmVjdChgbm90aWZ5Ojoke2tlYmFiaWZ5KGtleS5zbGljZSg4KSl9YCwgdmFsdWUpXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbm5lY3Qoa2ViYWJpZnkoa2V5LnNsaWNlKDIpKSwgdmFsdWUpXG5cbiAgICAgICAgICAgIGNsZWFudXAucHVzaCgoKSA9PiBzZWxmLmRpc2Nvbm5lY3QoaWQpKVxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgaWYgKGNoICE9PSBcIlwiICYmIGNoICE9PSBmYWxzZSAmJiBjaCAhPT0gbnVsbCAmJiBjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKHNlbGYsIGNoLCAtMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGNoID0gY2hpbGRyZW5cbiAgICAgICAgaWYgKGNoICE9PSBcIlwiICYmIGNoICE9PSBmYWxzZSAmJiBjaCAhPT0gbnVsbCAmJiBjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQoc2VsZiwgY2gsIC0xKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2xlYW51cC5mb3JFYWNoKChjYikgPT4gY2IoKSkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGZcbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcbmltcG9ydCBBc3RhbElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5cbmV4cG9ydCB0eXBlIFRpbWUgPSBBc3RhbElPLlRpbWVcbmV4cG9ydCBjb25zdCBUaW1lID0gQXN0YWxJTy5UaW1lXG5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLmludGVydmFsKGludGVydmFsLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLnRpbWVvdXQodGltZW91dCwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUuaWRsZSgoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBBc3RhbElPLlRpbWUgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgZnVuY3Rpb24gc2V0KHZhbHVlOiBUKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgdGltZXIgPSBpbnRlcnZhbChpdmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aW1lcj8uY2FuY2VsKClcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IEFzdGFsSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcblxudHlwZSBBcmdzID0ge1xuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW11cbiAgICBvdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWRcbiAgICBlcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgUHJvY2VzcyA9IEFzdGFsSU8uUHJvY2Vzc1xuZXhwb3J0IGNvbnN0IFByb2Nlc3MgPSBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoYXJnczogQXJncyk6IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkLFxuICAgIG9uRXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkLFxuKTogQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGFyZ3NPckNtZDogQXJncyB8IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQgPSBwcmludCxcbiAgICBvbkVycjogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnRlcnIsXG4pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkuaXNBcnJheShhcmdzT3JDbWQpIHx8IHR5cGVvZiBhcmdzT3JDbWQgPT09IFwic3RyaW5nXCJcbiAgICBjb25zdCB7IGNtZCwgZXJyLCBvdXQgfSA9IHtcbiAgICAgICAgY21kOiBhcmdzID8gYXJnc09yQ21kIDogYXJnc09yQ21kLmNtZCxcbiAgICAgICAgZXJyOiBhcmdzID8gb25FcnIgOiBhcmdzT3JDbWQuZXJyIHx8IG9uRXJyLFxuICAgICAgICBvdXQ6IGFyZ3MgPyBvbk91dCA6IGFyZ3NPckNtZC5vdXQgfHwgb25PdXQsXG4gICAgfVxuXG4gICAgY29uc3QgcHJvYyA9IEFycmF5LmlzQXJyYXkoY21kKVxuICAgICAgICA/IEFzdGFsSU8uUHJvY2Vzcy5zdWJwcm9jZXNzdihjbWQpXG4gICAgICAgIDogQXN0YWxJTy5Qcm9jZXNzLnN1YnByb2Nlc3MoY21kKVxuXG4gICAgcHJvYy5jb25uZWN0KFwic3Rkb3V0XCIsIChfLCBzdGRvdXQ6IHN0cmluZykgPT4gb3V0KHN0ZG91dCkpXG4gICAgcHJvYy5jb25uZWN0KFwic3RkZXJyXCIsIChfLCBzdGRlcnI6IHN0cmluZykgPT4gZXJyKHN0ZGVycikpXG4gICAgcmV0dXJuIHByb2Ncbn1cblxuLyoqIEB0aHJvd3Mge0dMaWIuRXJyb3J9IFRocm93cyBzdGRlcnIgKi9cbmV4cG9ydCBmdW5jdGlvbiBleGVjKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjbWQpID8gQXN0YWxJTy5Qcm9jZXNzLmV4ZWN2KGNtZCkgOiBBc3RhbElPLlByb2Nlc3MuZXhlYyhjbWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGVjQXN5bmMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY21kKSkge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2KGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2X2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmMoY21kLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbElPLlByb2Nlc3MuZXhlY19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzKGluaXQ6IHN0cmluZywgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBwcm9jOiBBc3RhbElPLlByb2Nlc3MgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHByb2MgPSBzdWJwcm9jZXNzKGV4ZWMsIChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcm9jPy5raWxsKClcbiAgICAgICAgICAgICAgICBwcm9jID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlICovXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgQ0NQcm9wcyB9IGZyb20gXCJnbmltXCJcbmltcG9ydCB7IGludHJpbnNpY0VsZW1lbnRzIH0gZnJvbSBcImduaW0vZ3RrNC9qc3gtcnVudGltZVwiXG5cbnR5cGUgUHJvcHM8VCBleHRlbmRzIEd0ay5XaWRnZXQsIFByb3BzPiA9IENDUHJvcHM8VCwgUGFydGlhbDxQcm9wcz4+XG5cbk9iamVjdC5hc3NpZ24oaW50cmluc2ljRWxlbWVudHMsIHtcbiAgICBib3g6IEd0ay5Cb3gsXG4gICAgYnV0dG9uOiBHdGsuQnV0dG9uLFxuICAgIGNlbnRlcmJveDogR3RrLkNlbnRlckJveCxcbiAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBBc3RhbC5DaXJjdWxhclByb2dyZXNzLFxuICAgIGRyYXdpbmdhcmVhOiBHdGsuRHJhd2luZ0FyZWEsXG4gICAgZW50cnk6IEd0ay5FbnRyeSxcbiAgICBpbWFnZTogR3RrLkltYWdlLFxuICAgIGxhYmVsOiBHdGsuTGFiZWwsXG4gICAgbGV2ZWxiYXI6IEd0ay5MZXZlbEJhcixcbiAgICBtZW51YnV0dG9uOiBHdGsuTWVudUJ1dHRvbixcbiAgICBvdmVybGF5OiBHdGsuT3ZlcmxheSxcbiAgICBwb3BvdmVyOiBHdGsuUG9wb3ZlcixcbiAgICByZXZlYWxlcjogR3RrLlJldmVhbGVyLFxuICAgIHNjcm9sbGVkd2luZG93OiBHdGsuU2Nyb2xsZWRXaW5kb3csXG4gICAgc2xpZGVyOiBBc3RhbC5TbGlkZXIsXG4gICAgc3RhY2s6IEd0ay5TdGFjayxcbiAgICBzd2l0Y2g6IEd0ay5Td2l0Y2gsXG4gICAgdG9nZ2xlYnV0dG9uOiBHdGsuVG9nZ2xlQnV0dG9uLFxuICAgIHdpbmRvdzogQXN0YWwuV2luZG93LFxufSlcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgYm94OiBQcm9wczxHdGsuQm94LCBHdGsuQm94LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBidXR0b246IFByb3BzPEd0ay5CdXR0b24sIEd0ay5CdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGNlbnRlcmJveDogUHJvcHM8R3RrLkNlbnRlckJveCwgR3RrLkNlbnRlckJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgLy8gY2lyY3VsYXJwcm9ncmVzczogUHJvcHM8QXN0YWwuQ2lyY3VsYXJQcm9ncmVzcywgQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZHJhd2luZ2FyZWE6IFByb3BzPEd0ay5EcmF3aW5nQXJlYSwgR3RrLkRyYXdpbmdBcmVhLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBlbnRyeTogUHJvcHM8R3RrLkVudHJ5LCBHdGsuRW50cnkuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGltYWdlOiBQcm9wczxHdGsuSW1hZ2UsIEd0ay5JbWFnZS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGFiZWw6IFByb3BzPEd0ay5MYWJlbCwgR3RrLkxhYmVsLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBsZXZlbGJhcjogUHJvcHM8R3RrLkxldmVsQmFyLCBHdGsuTGV2ZWxCYXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG1lbnVidXR0b246IFByb3BzPEd0ay5NZW51QnV0dG9uLCBHdGsuTWVudUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgb3ZlcmxheTogUHJvcHM8R3RrLk92ZXJsYXksIEd0ay5PdmVybGF5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBwb3BvdmVyOiBQcm9wczxHdGsuUG9wb3ZlciwgR3RrLlBvcG92ZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHJldmVhbGVyOiBQcm9wczxHdGsuUmV2ZWFsZXIsIEd0ay5SZXZlYWxlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2Nyb2xsZWR3aW5kb3c6IFByb3BzPEd0ay5TY3JvbGxlZFdpbmRvdywgR3RrLlNjcm9sbGVkV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzbGlkZXI6IFByb3BzPEFzdGFsLlNsaWRlciwgQXN0YWwuU2xpZGVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzdGFjazogUHJvcHM8R3RrLlN0YWNrLCBHdGsuU3RhY2suQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHN3aXRjaDogUHJvcHM8R3RrLlN3aXRjaCwgR3RrLlN3aXRjaC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgdG9nZ2xlYnV0dG9uOiBQcm9wczxHdGsuVG9nZ2xlQnV0dG9uLCBHdGsuVG9nZ2xlQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICB3aW5kb3c6IFByb3BzPEFzdGFsLldpbmRvdywgQXN0YWwuV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCAqIGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuIiwgImltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZ2V0VHlwZSwgb25DbGVhbnVwLCBBY2Nlc3NvciwgRnJhZ21lbnQgfSBmcm9tIFwiLi4vaW5kZXguanNcIlxuaW1wb3J0IHsgY29uZmlndWUgfSBmcm9tIFwiLi4vanN4L2Vudi5qc1wiXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmZ1bmN0aW9uIGFkZChwYXJlbnQ6IEd0ay5CdWlsZGFibGUsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCwgXzogbnVtYmVyKSB7XG4gICAgaWYgKCFzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIF8pKSB7XG4gICAgICAgIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBzcGVjaWFsUmVtb3ZlKF9wYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBfY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgLy8gVE9ETzogYWRkIGFueSBzcGVjaWFsIGNhc2VcbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gc3BlY2lhbEFkZChwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QsIF86IG51bWJlcikge1xuICAgIC8vIFRPRE86IGFkZCBhbnkgb3RoZXIgc3BlY2lhbCBjYXNlXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgIFwic2V0X2FkanVzdG1lbnRcIiBpbiBwYXJlbnQgJiZcbiAgICAgICAgdHlwZW9mIHBhcmVudC5zZXRfYWRqdXN0bWVudCA9PT0gXCJmdW5jdGlvblwiXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5zZXRfYWRqdXN0bWVudChjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLldpZGdldCAmJlxuICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgY2hpbGQubmFtZSAhPT0gXCJcIiAmJlxuICAgICAgICBjaGlsZC5uYW1lICE9PSBudWxsICYmXG4gICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICApIHtcbiAgICAgICAgcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuUG9wb3ZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbikge1xuICAgICAgICBwYXJlbnQuc2V0X3BvcG92ZXIoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51TW9kZWwgJiZcbiAgICAgICAgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uIHx8IHBhcmVudCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyTWVudSlcbiAgICApIHtcbiAgICAgICAgcGFyZW50LnNldF9tZW51X21vZGVsKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51SXRlbSAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHaW8uTWVudSkge1xuICAgICAgICAvLyBUT0RPOlxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLkFwcGxpY2F0aW9uKSB7XG4gICAgICAgIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5UZXh0Vmlldykge1xuICAgICAgICBwYXJlbnQuc2V0X2J1ZmZlcihjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChzcGVjaWFsUmVtb3ZlKHBhcmVudCwgY2hpbGQpKSByZXR1cm5cblxuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmIGNoaWxkIGluc3RhbmNlb2YgR3RrLkV2ZW50Q29udHJvbGxlcikge1xuICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKVxuICAgIH1cblxuICAgIGlmIChcInNldF9jaGlsZFwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9jaGlsZCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICB9XG5cbiAgICBpZiAoXCJyZW1vdmVcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgIH1cblxuICAgIHRocm93IEVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2hpbGR9IGZyb20gJHtwYXJlbnR9YClcbn1cblxuY29uc3QgeyBhZGRDaGlsZCwgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBzZXRDc3Mob2JqZWN0LCBjc3MpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY3NzIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY3R4ID0gb2JqZWN0LmdldF9zdHlsZV9jb250ZXh0KClcbiAgICAgICAgbGV0IHByb3ZpZGVyOiBHdGsuQ3NzUHJvdmlkZXJcblxuICAgICAgICBjb25zdCBzZXR0ZXIgPSAoY3NzOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGlmICghY3NzLmluY2x1ZGVzKFwie1wiKSB8fCAhY3NzLmluY2x1ZGVzKFwifVwiKSkge1xuICAgICAgICAgICAgICAgIGNzcyA9IGAqIHsgJHtjc3N9IH1gXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm92aWRlcikgY3R4LnJlbW92ZV9wcm92aWRlcihwcm92aWRlcilcblxuICAgICAgICAgICAgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzKVxuICAgICAgICAgICAgY3R4LmFkZF9wcm92aWRlcihwcm92aWRlciwgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3NzIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MuZ2V0KCkpXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY3NzLnN1YnNjcmliZSgoKSA9PiBzZXR0ZXIoY3NzLmdldCgpKSlcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0dGVyKGNzcylcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNsYXNzTmFtZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAoKSA9PiAob2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdC5zZXRfY3NzX2NsYXNzZXMoY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGFkZENoaWxkKHBhcmVudCwgY2hpbGQsIGluZGV4ID0gLTEpIHtcbiAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgIGNoaWxkID0gR3RrLkxhYmVsLm5ldyhTdHJpbmcoY2hpbGQpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpKSByZXR1cm5cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHBhcmVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5CdWlsZGFibGUpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZC5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICBhZGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLWFkZGVkXCIsIChfLCBjaDogdW5rbm93biwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhZGRDaGlsZChwYXJlbnQsIGNoLCBpbmRleClcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLXJlbW92ZWRcIiwgKF8sIGNoOiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjaGlsZC5kZXN0cm95KCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFkZChwYXJlbnQsIGNoaWxkLCBpbmRleClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBhZGQgJHtjaGlsZH0gdG8gJHtwYXJlbnR9YClcbiAgICB9LFxufSlcblxuZXhwb3J0IHsgRnJhZ21lbnQsIGludHJpbnNpY0VsZW1lbnRzIH1cbmV4cG9ydCB7IGpzeCwganN4cyB9IGZyb20gXCIuLi9qc3gvanN4LmpzXCJcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgRm9yLCBvbkNsZWFudXAgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCBBc3RhbFRyYXkgZnJvbSBcImdpOi8vQXN0YWxUcmF5P3ZlcnNpb249MC4xXCI7XG5cbmNsYXNzIFN5c3RlbVRyYXlDbGFzcyB7XG4gICAgcHJpdmF0ZSBkZWZhdWx0OiBBc3RhbFRyYXkuVHJheTtcbiAgICBwcml2YXRlIGl0ZW1zQmluZGluZzogQWNjZXNzb3I8QXN0YWxUcmF5LlRyYXlJdGVtW10+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHQgPSBBc3RhbFRyYXkuZ2V0X2RlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5pdGVtc0JpbmRpbmcgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJpdGVtc1wiKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldHVwVHJheUl0ZW0gPSAoYnRuOiBHdGsuTWVudUJ1dHRvbiwgaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtKSA9PiB7XG4gICAgICAgIGJ0bi5tZW51TW9kZWwgPSBpdGVtLm1lbnVNb2RlbDtcbiAgICAgICAgYnRuLmluc2VydF9hY3Rpb25fZ3JvdXAoXCJkYnVzbWVudVwiLCBpdGVtLmFjdGlvbkdyb3VwKTtcblxuICAgICAgICBjb25zdCBhZ0lkID0gaXRlbS5jb25uZWN0KFwibm90aWZ5OjphY3Rpb24tZ3JvdXBcIiwgKCkgPT4ge1xuICAgICAgICAgICAgYnRuLmluc2VydF9hY3Rpb25fZ3JvdXAoXCJkYnVzbWVudVwiLCBpdGVtLmFjdGlvbkdyb3VwKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgbW1JZCA9IGl0ZW0uY29ubmVjdChcIm5vdGlmeTo6bWVudS1tb2RlbFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBidG4uc2V0X21lbnVfbW9kZWwoaXRlbS5tZW51TW9kZWwpO1xuICAgICAgICB9KTtcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgaXRlbS5kaXNjb25uZWN0KGFnSWQpO1xuICAgICAgICAgICAgaXRlbS5kaXNjb25uZWN0KG1tSWQpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBUcmF5SXRlbSh7IGl0ZW0gfTogeyBpdGVtOiBBc3RhbFRyYXkuVHJheUl0ZW0gfSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b25cbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJUcmF5SXRlbVwiXX1cbiAgICAgICAgICAgICAgICB0b29sdGlwTWFya3VwPXtjcmVhdGVCaW5kaW5nKGl0ZW0sIFwidG9vbHRpcE1hcmt1cFwiKX1cbiAgICAgICAgICAgICAgICAkPXsoc2VsZikgPT4gdGhpcy5zZXR1cFRyYXlJdGVtKHNlbGYsIGl0ZW0pfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGltYWdlIGdpY29uPXtjcmVhdGVCaW5kaW5nKGl0ZW0sIFwiZ2ljb25cIil9IC8+XG4gICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBTeXN0ZW1UcmF5KCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJTeXN0ZW1UcmF5XCJdfT5cbiAgICAgICAgICAgICAgICA8Rm9yIGVhY2g9e3RoaXMuaXRlbXNCaW5kaW5nfSBjaGlsZHJlbj17KGl0ZW0pID0+IHRoaXMuVHJheUl0ZW0oeyBpdGVtIH0pfSAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBzeXN0ZW1UcmF5ID0gbmV3IFN5c3RlbVRyYXlDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgc3lzdGVtVHJheTtcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgb25DbGVhbnVwLCBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCBBc3RhbE1wcmlzIGZyb20gXCJnaTovL0FzdGFsTXByaXM/dmVyc2lvbj0wLjFcIjtcblxudHlwZSBQbGF5ZXJCdXR0b24gPSAncHJldmlvdXMnIHwgJ25leHQnIHwgJ3BsYXlpbmcnIHwgJ3BhdXNlZCcgfCAnc3RvcHBlZCc7XG5cbmNvbnN0IFBsYXllckJ1dHRvbkljb25zID0ge1xuICAgIHBsYXlpbmc6IFwibWVkaWEtcGxheWJhY2stc3RhcnQtc3ltYm9saWNcIixcbiAgICBwYXVzZWQ6IFwibWVkaWEtcGxheWJhY2stcGF1c2Utc3ltYm9saWNcIixcbiAgICBzdG9wcGVkOiBcIm1lZGlhLXBsYXliYWNrLXN0b3Atc3ltYm9saWNcIixcbiAgICBuZXh0OiBcIm1lZGlhLXNraXAtZm9yd2FyZC1zeW1ib2xpY1wiLFxuICAgIHByZXZpb3VzOiBcIm1lZGlhLXNraXAtYmFja3dhcmQtc3ltYm9saWNcIlxufVxuXG50eXBlIFBsYXllckRhdGEgPSB7XG4gICAgYWN0aXZlOiBib29sZWFuLFxuICAgIHRpdGxlOiBBY2Nlc3NvcjxzdHJpbmc+IHwgc3RyaW5nLFxuICAgIGFydGlzdDogQWNjZXNzb3I8c3RyaW5nPiB8IHN0cmluZyxcbiAgICBhbGJ1bTogQWNjZXNzb3I8c3RyaW5nPiB8IHN0cmluZyxcbiAgICBzdGF0dXNJY29uOiBBY2Nlc3NvcjxzdHJpbmc+IHwgc3RyaW5nLFxuICAgIHN0YXR1c1RleHQ6IEFjY2Vzc29yPHN0cmluZz4gfCBzdHJpbmcsXG4gICAgbmV4dDogKCkgPT4gdm9pZCxcbiAgICBwcmV2aW91czogKCkgPT4gdm9pZCxcbiAgICBwbGF5UGF1c2U6ICgpID0+IHZvaWRcbn1cblxuY2xhc3MgTWVkaWFDbGFzcyB7XG4gICAgcHJpdmF0ZSBtcHJpczogQXN0YWxNcHJpcy5NcHJpcztcbiAgICBwcml2YXRlIF9hY3RpdmVQbGF5ZXJEYXRhOiBBY2Nlc3NvcjxQbGF5ZXJEYXRhPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5tcHJpcyA9IEFzdGFsTXByaXMuZ2V0X2RlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5fYWN0aXZlUGxheWVyRGF0YSA9IGNyZWF0ZUJpbmRpbmcodGhpcy5tcHJpcywgXCJwbGF5ZXJzXCIpLmFzKFxuICAgICAgICAgICAgKHBsYXllcnMpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgcGxheWluZzogQXN0YWxNcHJpcy5QbGF5ZXIgfCBudWxsID0gbnVsbDtcbiAgICAgICAgICAgICAgICBsZXQgcGF1c2VkOiBBc3RhbE1wcmlzLlBsYXllciB8IG51bGwgPSBudWxsO1xuICAgICAgICAgICAgICAgIGxldCBmaW5hbDogQXN0YWxNcHJpcy5QbGF5ZXIgfCBudWxsID0gbnVsbDtcblxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcGxheWVyIG9mIHBsYXllcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gcGxheWVyLmdldF9wbGF5YmFja19zdGF0dXMoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5aW5nID0gcGxheWVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RhdHVzID09PSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBBVVNFRCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF1c2VkID0gcGxheWVyO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZmluYWwgPSBwbGF5aW5nIHx8IHBhdXNlZDtcblxuICAgICAgICAgICAgICAgIGlmIChmaW5hbCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAncGxheWJhY2tTdGF0dXMnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FuR29OZXh0ID0gY3JlYXRlQmluZGluZyhmaW5hbCwgJ2NhbkdvTmV4dCcpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYW5Hb1ByZXZpb3VzID0gY3JlYXRlQmluZGluZyhmaW5hbCwgJ2NhbkdvUHJldmlvdXMnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FuUGF1c2UgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAnY2FuUGF1c2UnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FuUGxheSA9IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdjYW5QbGF5Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjcmVhdGVCaW5kaW5nKGZpbmFsLCAndGl0bGUnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlzdDogY3JlYXRlQmluZGluZyhmaW5hbCwgJ2FydGlzdCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxidW06IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdhbGJ1bScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzSWNvbjogc3RhdHVzLmFzKHN0ID0+IHRoaXMuZ2V0UGxheWVyU3RhdHVzSWNvbihzdCA9PT0gQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HID8gJ3BhdXNlZCcgOiAncGxheWluZycpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6IHN0YXR1cy5hcyhzdCA9PiB0aGlzLmdldFBsYXllclN0YXR1cyhzdCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dDogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYW5Hb05leHQuZ2V0KCkpIGZpbmFsIS5uZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXM6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FuR29QcmV2aW91cy5nZXQoKSkgZmluYWwhLnByZXZpb3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheVBhdXNlOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhblBhdXNlLmdldCgpIHx8IGNhblBsYXkuZ2V0KCkpIGZpbmFsIS5wbGF5X3BhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdOZW5odW0gcGxheWVyIGF0aXZvJyxcbiAgICAgICAgICAgICAgICAgICAgYXJ0aXN0OiAnJyxcbiAgICAgICAgICAgICAgICAgICAgYWxidW06ICcnLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXNJY29uOiBQbGF5ZXJCdXR0b25JY29ucy5zdG9wcGVkLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiB0aGlzLmdldFBsYXllclN0YXR1cyhBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlNUT1BQRUQpLFxuICAgICAgICAgICAgICAgICAgICBuZXh0OiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgIHByZXZpb3VzOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgIHBsYXlQYXVzZTogKCkgPT4geyB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFBsYXllclN0YXR1cyhzdGF0dXM6IEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMpIHtcbiAgICAgICAgc3dpdGNoKHN0YXR1cykge1xuICAgICAgICAgICAgY2FzZSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBMQVlJTkc6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdQbGF5aW5nJztcbiAgICAgICAgICAgIGNhc2UgQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QQVVTRUQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdQYXVzZWQnO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ05vdGhpbmcgUGxheWluZyc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFBsYXllclN0YXR1c0ljb24oc3RhdHVzOiBQbGF5ZXJCdXR0b24pIHtcbiAgICAgICAgc3dpdGNoKHN0YXR1cykge1xuICAgICAgICAgICAgY2FzZSAncHJldmlvdXMnOlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5wcmV2aW91cztcbiAgICAgICAgICAgIGNhc2UgJ3BsYXlpbmcnOlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5wbGF5aW5nO1xuICAgICAgICAgICAgY2FzZSAncGF1c2VkJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMucGF1c2VkO1xuICAgICAgICAgICAgY2FzZSAnc3RvcHBlZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLnN0b3BwZWQ7XG4gICAgICAgICAgICBjYXNlICduZXh0JzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMubmV4dDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLnN0b3BwZWQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IE1lZGlhKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgIDxXaXRoIHZhbHVlPXt0aGlzLl9hY3RpdmVQbGF5ZXJEYXRhfT5cbiAgICAgICAgICAgICAgICB7cGxheWVyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxtZW51YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx3YXlzU2hvd0Fycm93PXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJNZWRpYVwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW5zaXRpdmU9e3BsYXllci5hY3RpdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9wb3Zlcj17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwb3BvdmVyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNcHJpc1BvcG92ZXJcIl19IG92ZXJmbG93PXtHdGsuT3ZlcmZsb3cuSElEREVOfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIk1wcmlzUGxheWVyXCJdfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNZXRhZGF0YVwiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiVGl0bGVcIl19IGxhYmVsPXtwbGF5ZXIudGl0bGV9IGVsbGlwc2l6ZT17M30gbWF4V2lkdGhDaGFycz17MTV9IHdpZHRoQ2hhcnM9ezMwfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkFydGlzdFwiXX0gbGFiZWw9e3BsYXllci5hcnRpc3R9IGVsbGlwc2l6ZT17M30gbWF4V2lkdGhDaGFycz17MTV9IHdpZHRoQ2hhcnM9ezMwfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkFsYnVtXCJdfSBsYWJlbD17cGxheWVyLmFsYnVtfSBlbGxpcHNpemU9ezN9IG1heFdpZHRoQ2hhcnM9ezE1fSB3aWR0aENoYXJzPXszMH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTG93ZXJQYXJ0XCJdfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiQ29udHJvbGxlcnNcIl19IGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJQcmV2aW91c1wiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbk5hbWU9e1BsYXllckJ1dHRvbkljb25zLnByZXZpb3VzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9e3BsYXllci5wcmV2aW91c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiUGxheVBhdXNlXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uTmFtZT17cGxheWVyLnN0YXR1c0ljb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17cGxheWVyLnBsYXlQYXVzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiTmV4dFwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbk5hbWU9e1BsYXllckJ1dHRvbkljb25zLm5leHR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17cGxheWVyLm5leHR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BvcG92ZXI+IGFzIEd0ay5Qb3BvdmVyfVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17cGxheWVyLnN0YXR1c1RleHR9IHdpZHRoQ2hhcnM9ezEyfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgbWVkaWEgPSBuZXcgTWVkaWFDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgbWVkaWE7XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgbWtBcHAgfSBmcm9tIFwiLi4vX2FwcC5qc1wiXG5cbkd0ay5pbml0KClcblxuLy8gc3RvcCB0aGlzIGZyb20gbGVha2luZyBpbnRvIHN1YnByb2Nlc3Nlc1xuLy8gYW5kIGdpbyBsYXVuY2ggaW52b2NhdGlvbnNcbkdMaWIudW5zZXRlbnYoXCJMRF9QUkVMT0FEXCIpXG5cbi8vIHVzZXJzIG1pZ2h0IHdhbnQgdG8gdXNlIEFkd2FpdGEgaW4gd2hpY2ggY2FzZSBpdCBoYXMgdG8gYmUgaW5pdGlhbGl6ZWRcbi8vIGl0IG1pZ2h0IGJlIGNvbW1vbiBwaXRmYWxsIHRvIGZvcmdldCBpdCBiZWNhdXNlIGBBcHBgIGlzIG5vdCBgQWR3LkFwcGxpY2F0aW9uYFxuYXdhaXQgaW1wb3J0KFwiZ2k6Ly9BZHc/dmVyc2lvbj0xXCIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMClcblxuZXhwb3J0IGRlZmF1bHQgbWtBcHAoQXN0YWwuQXBwbGljYXRpb24pXG4iLCAiLyoqXG4gKiBXb3JrYXJvdW5kIGZvciBcIkNhbid0IGNvbnZlcnQgbm9uLW51bGwgcG9pbnRlciB0byBKUyB2YWx1ZSBcIlxuICovXG5cbmV4cG9ydCB7fVxuXG5mdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDFfJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5hc3luYyBmdW5jdGlvbiBzdXBwcmVzczxUPihtb2Q6IFByb21pc2U8eyBkZWZhdWx0OiBUIH0+LCBwYXRjaDogKG06IFQpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gbW9kLnRoZW4oKG0pID0+IHBhdGNoKG0uZGVmYXVsdCkpLmNhdGNoKCgpID0+IHZvaWQgMClcbn1cblxuZnVuY3Rpb24gcGF0Y2g8UCBleHRlbmRzIG9iamVjdD4ocHJvdG86IFAsIHByb3A6IEV4dHJhY3Q8a2V5b2YgUCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90bywgcHJvcCwge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1tgZ2V0XyR7c25ha2VpZnkocHJvcCl9YF0oKVxuICAgICAgICB9LFxuICAgIH0pXG59XG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxBcHBzXCIpLCAoeyBBcHBzLCBBcHBsaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goQXBwcy5wcm90b3R5cGUsIFwibGlzdFwiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJrZXl3b3Jkc1wiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJjYXRlZ29yaWVzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmF0dGVyeVwiKSwgKHsgVVBvd2VyIH0pID0+IHtcbiAgICBwYXRjaChVUG93ZXIucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCbHVldG9vdGhcIiksICh7IEFkYXB0ZXIsIEJsdWV0b290aCwgRGV2aWNlIH0pID0+IHtcbiAgICBwYXRjaChBZGFwdGVyLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiYWRhcHRlcnNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChEZXZpY2UucHJvdG90eXBlLCBcInV1aWRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsSHlwcmxhbmRcIiksICh7IEh5cHJsYW5kLCBNb25pdG9yLCBXb3Jrc3BhY2UgfSkgPT4ge1xuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJiaW5kc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJtb25pdG9yc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJ3b3Jrc3BhY2VzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImNsaWVudHNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVNb2Rlc1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZV9tb2Rlc1wiKVxuICAgIHBhdGNoKFdvcmtzcGFjZS5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE1wcmlzXCIpLCAoeyBNcHJpcywgUGxheWVyIH0pID0+IHtcbiAgICBwYXRjaChNcHJpcy5wcm90b3R5cGUsIFwicGxheWVyc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX3VyaV9zY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRVcmlTY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfbWltZV90eXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkTWltZVR5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJjb21tZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIiksICh7IFdpZmkgfSkgPT4ge1xuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc19wb2ludHNcIilcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NQb2ludHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOb3RpZmRcIiksICh7IE5vdGlmZCwgTm90aWZpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChOb3RpZmQucHJvdG90eXBlLCBcIm5vdGlmaWNhdGlvbnNcIilcbiAgICBwYXRjaChOb3RpZmljYXRpb24ucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxQb3dlclByb2ZpbGVzXCIpLCAoeyBQb3dlclByb2ZpbGVzIH0pID0+IHtcbiAgICBwYXRjaChQb3dlclByb2ZpbGVzLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsV3BcIiksICh7IFdwLCBBdWRpbywgVmlkZW8gfSkgPT4ge1xuICAgIHBhdGNoKFdwLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcIm1pY3JvcGhvbmVzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInNwZWFrZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic2lua3NcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic291cmNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsVHJheVwiKSwgKHsgVHJheSB9KSA9PiB7XG4gICAgcGF0Y2goVHJheS5wcm90b3R5cGUsIFwiaXRlbXNcIilcbn0pXG4iLCAiaW1wb3J0IFwiLi9vdmVycmlkZXMuanNcIlxuaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gXCJjb25zb2xlXCJcbmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSBcInN5c3RlbVwiXG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSBcImduaW1cIlxuaW1wb3J0IElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgdHlwZSBBc3RhbDMgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj0zLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWw0IGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcblxudHlwZSBDb25maWcgPSBQYXJ0aWFsPHtcbiAgICBpbnN0YW5jZU5hbWU6IHN0cmluZ1xuICAgIGNzczogc3RyaW5nXG4gICAgaWNvbnM6IHN0cmluZ1xuICAgIGd0a1RoZW1lOiBzdHJpbmdcbiAgICBpY29uVGhlbWU6IHN0cmluZ1xuICAgIGN1cnNvclRoZW1lOiBzdHJpbmdcbiAgICBob2xkOiBib29sZWFuXG4gICAgcmVxdWVzdEhhbmRsZXIocmVxdWVzdDogc3RyaW5nLCByZXM6IChyZXNwb25zZTogYW55KSA9PiB2b2lkKTogdm9pZFxuICAgIG1haW4oLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG4gICAgY2xpZW50KG1lc3NhZ2U6IChtc2c6IHN0cmluZykgPT4gc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IHZvaWRcbn0+XG5cbmludGVyZmFjZSBBc3RhbDNKUyBleHRlbmRzIEFzdGFsMy5BcHBsaWNhdGlvbiB7XG4gICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT5cbiAgICByZXF1ZXN0SGFuZGxlcjogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cbiAgICBhcHBseV9jc3Moc3R5bGU6IHN0cmluZywgcmVzZXQ/OiBib29sZWFuKTogdm9pZFxuICAgIHF1aXQoY29kZT86IG51bWJlcik6IHZvaWRcbiAgICBzdGFydChjb25maWc/OiBDb25maWcpOiB2b2lkXG59XG5cbmludGVyZmFjZSBBc3RhbDRKUyBleHRlbmRzIEFzdGFsNC5BcHBsaWNhdGlvbiB7XG4gICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT5cbiAgICByZXF1ZXN0SGFuZGxlcj86IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG50eXBlIEFwcDMgPSB0eXBlb2YgQXN0YWwzLkFwcGxpY2F0aW9uXG50eXBlIEFwcDQgPSB0eXBlb2YgQXN0YWw0LkFwcGxpY2F0aW9uXG5cbmV4cG9ydCBmdW5jdGlvbiBta0FwcDxBcHAgZXh0ZW5kcyBBcHAzPihBcHA6IEFwcCk6IEFzdGFsM0pTXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwND4oQXBwOiBBcHApOiBBc3RhbDRKU1xuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHAoQXBwOiBBcHAzIHwgQXBwNCkge1xuICAgIHJldHVybiBuZXcgKGNsYXNzIEFzdGFsSlMgZXh0ZW5kcyBBcHAge1xuICAgICAgICBwcml2YXRlIGRpc3Bvc2VSb290PzogKCkgPT4gdm9pZFxuXG4gICAgICAgIHN0YXRpYyB7XG4gICAgICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6IFwiQXN0YWxKU1wiIH0sIHRoaXMgYXMgYW55KVxuICAgICAgICB9XG5cbiAgICAgICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZuID0gRnVuY3Rpb24oYHJldHVybiAoYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAke2JvZHkuaW5jbHVkZXMoXCI7XCIpID8gYm9keSA6IGByZXR1cm4gJHtib2R5fTtgfVxuICAgICAgICAgICAgICAgICAgICB9KWApXG4gICAgICAgICAgICAgICAgICAgIGZuKCkoKS50aGVuKHJlcykuY2F0Y2gocmVqKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlaihlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuXG4gICAgICAgIHZmdW5jX3NodXRkb3duKCk6IHZvaWQge1xuICAgICAgICAgICAgc3VwZXIudmZ1bmNfc2h1dGRvd24oKVxuICAgICAgICAgICAgdGhpcy5kaXNwb3NlUm9vdD8uKClcbiAgICAgICAgfVxuXG4gICAgICAgIHZmdW5jX3JlcXVlc3QobXNnOiBzdHJpbmcsIGNvbm46IEdpby5Tb2NrZXRDb25uZWN0aW9uKTogdm9pZCB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucmVxdWVzdEhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIobXNnLCAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgSU8ud3JpdGVfc29jayhjb25uLCBTdHJpbmcocmVzcG9uc2UpLCAoXywgcmVzKSA9PiBJTy53cml0ZV9zb2NrX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN1cGVyLnZmdW5jX3JlcXVlc3QobXNnLCBjb25uKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0ID0gZmFsc2UpIHtcbiAgICAgICAgICAgIHN1cGVyLmFwcGx5X2NzcyhzdHlsZSwgcmVzZXQpXG4gICAgICAgIH1cblxuICAgICAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnF1aXQoKVxuICAgICAgICAgICAgZXhpdChjb2RlID8/IDApXG4gICAgICAgIH1cblxuICAgICAgICBzdGFydCh7IHJlcXVlc3RIYW5kbGVyLCBjc3MsIGhvbGQsIG1haW4sIGNsaWVudCwgaWNvbnMsIC4uLmNmZyB9OiBDb25maWcgPSB7fSkge1xuICAgICAgICAgICAgY29uc3QgYXBwID0gdGhpcyBhcyB1bmtub3duIGFzIEluc3RhbmNlVHlwZTxBcHAzIHwgQXBwND5cblxuICAgICAgICAgICAgY2xpZW50ID8/PSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJpbnQoYEFzdGFsIGluc3RhbmNlIFwiJHthcHAuaW5zdGFuY2VOYW1lfVwiIGFscmVhZHkgcnVubmluZ2ApXG4gICAgICAgICAgICAgICAgZXhpdCgxKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNmZylcbiAgICAgICAgICAgIHNldENvbnNvbGVMb2dEb21haW4oYXBwLmluc3RhbmNlTmFtZSlcblxuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0SGFuZGxlciA9IHJlcXVlc3RIYW5kbGVyXG4gICAgICAgICAgICBhcHAuY29ubmVjdChcImFjdGl2YXRlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3QgPSBkaXNwb3NlXG4gICAgICAgICAgICAgICAgICAgIG1haW4/LiguLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhcHAuYWNxdWlyZV9zb2NrZXQoKVxuICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsaWVudCgobXNnKSA9PiBJTy5zZW5kX3JlcXVlc3QoYXBwLmluc3RhbmNlTmFtZSwgbXNnKSEsIC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY3NzKSB0aGlzLmFwcGx5X2Nzcyhjc3MsIGZhbHNlKVxuXG4gICAgICAgICAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpXG5cbiAgICAgICAgICAgIGhvbGQgPz89IHRydWVcbiAgICAgICAgICAgIGlmIChob2xkKSBhcHAuaG9sZCgpXG5cbiAgICAgICAgICAgIGFwcC5ydW5Bc3luYyhbXSlcbiAgICAgICAgfVxuICAgIH0pKClcbn1cbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuXG5jb25zdCBwb2xsVGltZSA9IDYwMDAwO1xuXG5jbGFzcyBEYXRlVGltZUNsYXNzIHtcbiAgICBwcml2YXRlIGZvcm1hdHRlclRpbWUgPSBcIiVIOiVNXCI7XG4gICAgcHJpdmF0ZSBmb3JtYXR0ZXJEYXRlID0gXCJUb2RheSBpczogJUEsICVkIGRlICVCIGRlICVZXCI7XG4gICAgcHJpdmF0ZSBfZGF0ZVRpbWU6IEFjY2Vzc29yPHsgZGF0ZTogc3RyaW5nLCB0aW1lOiBzdHJpbmcgfT47XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2RhdGVUaW1lID0gY3JlYXRlUG9sbCh7IGRhdGU6IFwiXCIsIHRpbWU6IFwiXCIgfSwgcG9sbFRpbWUsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IEdMaWIuRGF0ZVRpbWUubmV3X25vd19sb2NhbCgpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBkYXRlOiBub3cuZm9ybWF0KHRoaXMuZm9ybWF0dGVyRGF0ZSkhLFxuICAgICAgICAgICAgICAgIHRpbWU6IG5vdy5mb3JtYXQodGhpcy5mb3JtYXR0ZXJUaW1lKSFcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0IERhdGVUaW1lUG9wb3ZlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxHdGsuUG9wb3Zlcj5cbiAgICAgICAgICAgICAgICA8R3RrLkNhbGVuZGFyIGNzc0NsYXNzZXM9e1tcIkNhbGVuZGFyXCJdfSAvPlxuICAgICAgICAgICAgPC9HdGsuUG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IERhdGVUaW1lKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b24gY3NzQ2xhc3Nlcz17W1wiRGF0ZVRpbWVDYWxlbmRhclwiXX0gcG9wb3Zlcj17dGhpcy5EYXRlVGltZVBvcG92ZXIgYXMgR3RrLlBvcG92ZXJ9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJUaW1lXCJdfSBsYWJlbD17dGhpcy5fZGF0ZVRpbWUuYXModCA9PiBgXHVGMDE3ICR7dC50aW1lfWApfSB0b29sdGlwTWFya3VwPXt0aGlzLl9kYXRlVGltZS5hcyhkID0+IGBcdURCODBcdURDRUQgJHtkLmRhdGV9YCl9IC8+XG4gICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBkYXRlVGltZSA9IG5ldyBEYXRlVGltZUNsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBkYXRlVGltZTtcbiIsICJpbXBvcnQgV3AgZnJvbSBcImdpOi8vQXN0YWxXcFwiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgR3RrLCBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVCaW5kaW5nLCBvbkNsZWFudXAsIFdpdGggfSBmcm9tIFwiYWdzXCI7XG5cbmNsYXNzIEF1ZGlvQ29udHJvbENsYXNzIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IFdwLldwO1xuICAgIHByaXZhdGUgZGVmYXVsdFNwZWFrZXI6IEFjY2Vzc29yPFdwLkVuZHBvaW50PjtcbiAgICBwcml2YXRlIGRlZmF1bHRNaWNyb3Bob25lOiBBY2Nlc3NvcjxXcC5FbmRwb2ludD47XG4gICAgcHJpdmF0ZSByZWFkb25seSBzdGVwOiBudW1iZXIgPSAwLjAyO1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHQgPSBXcC5nZXRfZGVmYXVsdCgpITtcbiAgICAgICAgdGhpcy5kZWZhdWx0U3BlYWtlciA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAnZGVmYXVsdFNwZWFrZXInKTtcbiAgICAgICAgdGhpcy5kZWZhdWx0TWljcm9waG9uZSA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAnZGVmYXVsdE1pY3JvcGhvbmUnKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGhhbmRsZVNjcm9sbChlZHA6IFdwLkVuZHBvaW50LCBkeTogbnVtYmVyKSB7XG4gICAgICAgIGxldCBuZXdWb2x1bWUgPSBlZHAuZ2V0X3ZvbHVtZSgpO1xuICAgICAgICBpZihkeSA8IDApIG5ld1ZvbHVtZSArPSB0aGlzLnN0ZXA7XG4gICAgICAgIGVsc2UgbmV3Vm9sdW1lIC09IHRoaXMuc3RlcDtcbiAgICAgICAgZWRwLnNldF92b2x1bWUoTWF0aC5taW4obmV3Vm9sdW1lLCAxKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBFbmRwb2ludChlbmRwb2ludDogQWNjZXNzb3I8V3AuRW5kcG9pbnQ+KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgPFdpdGggdmFsdWU9e2VuZHBvaW50fT5cbiAgICAgICAgICAgICAgICB7ZWRwID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWNvbiA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAndm9sdW1lSWNvbicpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2b2x1bWUgPSBjcmVhdGVCaW5kaW5nKGVkcCwgJ3ZvbHVtZScpLmFzKGEgPT4gYCR7TWF0aC5yb3VuZChhICogMTAwKX0lYCk7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwoeyBmbGFnczogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMIH0pO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxIYW5kbGVyID0gc2Nyb2xsLmNvbm5lY3QoJ3Njcm9sbCcsIChjb250cm9sZXI6IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwsIGR4OiBudW1iZXIsIGR5OiBudW1iZXIpID0+IHRoaXMuaGFuZGxlU2Nyb2xsKGVkcCwgZHkpKTtcblxuICAgICAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT4gc2Nyb2xsLmRpc2Nvbm5lY3Qoc2Nyb2xsSGFuZGxlcikpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjc3NDbGFzc2VzPXtbXCJFbmRwb2ludFwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkPXsoc2VsZikgPT4gc2VsZi5hZGRfY29udHJvbGxlcihzY3JvbGwpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4gZWRwLnNldF9tdXRlKCFlZHAuZ2V0X211dGUoKSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltYWdlIGNzc0NsYXNzZXM9e1tcIkljb25cIl19IGljb25OYW1lPXtpY29ufSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiVm9sdW1lXCJdfSBsYWJlbD17dm9sdW1lfSB3aWR0aENoYXJzPXs0fSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgTWl4ZXJFbnRyeShlbmRwb2ludDogQWNjZXNzb3I8V3AuRW5kcG9pbnQ+KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgIDxXaXRoIHZhbHVlPXtlbmRwb2ludH0+XG4gICAgICAgICAgICAgICAgICAgIHtlZHAgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWNvbiA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAndm9sdW1lSWNvbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgdm9sdW1lID0gY3JlYXRlQmluZGluZyhlZHAsICd2b2x1bWUnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwoeyBmbGFnczogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsSGFuZGxlciA9IHNjcm9sbC5jb25uZWN0KCdzY3JvbGwnLCAoY29udHJvbGVyOiBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsLCBkeDogbnVtYmVyLCBkeTogbnVtYmVyKSA9PiB0aGlzLmhhbmRsZVNjcm9sbChlZHAsIGR5KSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiBzY3JvbGwuZGlzY29ubmVjdChzY3JvbGxIYW5kbGVyKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNaXhlckVudHJ5XCJdfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjc3NDbGFzc2VzPXtbXCJJY29uXCJdfSBpY29uTmFtZT17aWNvbn0gb25DbGlja2VkPXsoKSA9PiBlZHAuc2V0X211dGUoIWVkcC5nZXRfbXV0ZSgpKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNsaWRlciBjc3NDbGFzc2VzPXtbXCJTbGlkZXJcIl19ICQ9e3NlbGYgPT4gc2VsZi5hZGRfY29udHJvbGxlcihzY3JvbGwpfSB2YWx1ZT17dm9sdW1lfSBzdGVwPXswLjF9IG1pbj17MH0gbWF4PXsxfSBvbkNoYW5nZVZhbHVlPXsoeyB2YWx1ZSB9KSA9PiBlZHAuc2V0X3ZvbHVtZSh2YWx1ZSl9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0IE1peGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHBvcG92ZXIgY3NzQ2xhc3Nlcz17W1wiTWl4ZXJcIl19PlxuICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJMYWJlbFwiXX0gbGFiZWw9e1wiTWl4ZXJcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuTWl4ZXJFbnRyeSh0aGlzLmRlZmF1bHRTcGVha2VyKX1cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuTWl4ZXJFbnRyeSh0aGlzLmRlZmF1bHRNaWNyb3Bob25lKX1cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IEF1ZGlvQ29udHJvbCgpIHtcbiAgICAgICAgY29uc3Qgc3Bhd25QYXZ1Y29udHJvbENsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fU0VDT05EQVJZIH0pO1xuICAgICAgICBjb25zdCBzcGF3blBhdnVjb250cm9sSGFuZGxlciA9IHNwYXduUGF2dWNvbnRyb2xDbGljay5jb25uZWN0KCdwcmVzc2VkJywgKCkgPT4gR0xpYi5zcGF3bl9jb21tYW5kX2xpbmVfYXN5bmMoJ3BhdnVjb250cm9sJykpO1xuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiBzcGF3blBhdnVjb250cm9sQ2xpY2suZGlzY29ubmVjdChzcGF3blBhdnVjb250cm9sSGFuZGxlcikpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkF1ZGlvQ29udHJvbFwiXX0gJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKHNwYXduUGF2dWNvbnRyb2xDbGljayl9PlxuICAgICAgICAgICAgICAgIHt0aGlzLkVuZHBvaW50KHRoaXMuZGVmYXVsdFNwZWFrZXIpfVxuICAgICAgICAgICAgICAgIDxtZW51YnV0dG9uIHBvcG92ZXI9e3RoaXMuTWl4ZXIgYXMgR3RrLlBvcG92ZXJ9IGNoaWxkPXs8bGFiZWwgbGFiZWw9eydcdUVBRjgnfT48L2xhYmVsPiBhcyBHdGsuV2lkZ2V0fSAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBhdWRpb0NvbnRyb2wgPSBuZXcgQXVkaW9Db250cm9sQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IGF1ZGlvQ29udHJvbDtcbiIsICJpbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCI7XG5pbXBvcnQgeyByZWFkRmlsZSwgd3JpdGVGaWxlIH0gZnJvbSBcImFncy9maWxlXCI7XG5pbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlU3RhdGUsIFNldHRlciB9IGZyb20gXCJhZ3NcIjtcblxuaW50ZXJmYWNlIE9wdGlvbnMge1xuICAgIGFuaW1hdGlvbnNFbmFibGVkOiBib29sZWFuO1xuICAgIGNhdmFWaXNpYmxlOiBib29sZWFuO1xuICAgIHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiBib29sZWFuO1xufVxuXG5jb25zdCBvcHRpb25zRmFsbGJhY2s6IE9wdGlvbnMgPSB7XG4gICAgYW5pbWF0aW9uc0VuYWJsZWQ6IHRydWUsXG4gICAgY2F2YVZpc2libGU6IHRydWUsXG4gICAgd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmU6IHRydWVcbn1cblxuY29uc3QgcGF0aCA9IEdMaWIuZ2V0X2hvbWVfZGlyKCkgKyAnLy5jb25maWcvYWdzL29wdGlvbnMvb3B0aW9ucy5qc29uJztcblxuY2xhc3MgU2V0dGluZ3NDbGFzcyB7XG4gICAgcHJpdmF0ZSBfYW5pbWF0aW9uc0VuYWJsZWQ6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX3NldEFuaW1hdGlvbnNFbmFibGVkOiBTZXR0ZXI8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBfY2F2YVZpc2libGU6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX3NldENhdmFWaXNpYmxlOiBTZXR0ZXI8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBfd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmU6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX3NldFdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiBTZXR0ZXI8Ym9vbGVhbj47XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgY29uc3QgZmlsZVN0ciA9IHJlYWRGaWxlKHBhdGgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkID0gSlNPTi5wYXJzZShmaWxlU3RyKSBhcyBPcHRpb25zO1xuICAgICAgICAgICAgW3RoaXMuX2FuaW1hdGlvbnNFbmFibGVkLCB0aGlzLl9zZXRBbmltYXRpb25zRW5hYmxlZF0gPSBjcmVhdGVTdGF0ZShwYXJzZWQuYW5pbWF0aW9uc0VuYWJsZWQpO1xuICAgICAgICAgICAgW3RoaXMuX2NhdmFWaXNpYmxlLCB0aGlzLl9zZXRDYXZhVmlzaWJsZV0gPSBjcmVhdGVTdGF0ZShwYXJzZWQuY2F2YVZpc2libGUpO1xuICAgICAgICAgICAgW3RoaXMuX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlLCB0aGlzLl9zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZV0gPSBjcmVhdGVTdGF0ZShwYXJzZWQud2FsbHBhcGVyU2VsZWN0b3JBY3RpdmUpO1xuXG4gICAgICAgIH0gY2F0Y2goZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGxlciBvcHRpb25zLmpzb246ICcgKyBlcnIpO1xuICAgICAgICAgICAgW3RoaXMuX2FuaW1hdGlvbnNFbmFibGVkLCB0aGlzLl9zZXRBbmltYXRpb25zRW5hYmxlZF0gPSBjcmVhdGVTdGF0ZShvcHRpb25zRmFsbGJhY2suYW5pbWF0aW9uc0VuYWJsZWQpO1xuICAgICAgICAgICAgW3RoaXMuX2NhdmFWaXNpYmxlLCB0aGlzLl9zZXRDYXZhVmlzaWJsZV0gPSBjcmVhdGVTdGF0ZShvcHRpb25zRmFsbGJhY2suY2F2YVZpc2libGUpO1xuICAgICAgICAgICAgW3RoaXMuX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlLCB0aGlzLl9zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZV0gPSBjcmVhdGVTdGF0ZShvcHRpb25zRmFsbGJhY2sud2FsbHBhcGVyU2VsZWN0b3JBY3RpdmUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHNhdmVPcHRpb25zKCkge1xuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgYW5pbWF0aW9uc0VuYWJsZWQ6IHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkLmdldCgpLFxuICAgICAgICAgICAgY2F2YVZpc2libGU6IHRoaXMuX2NhdmFWaXNpYmxlLmdldCgpLFxuICAgICAgICAgICAgd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmU6IHRoaXMuX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlLmdldCgpXG4gICAgICAgIH1cbiAgICAgICAgd3JpdGVGaWxlKHBhdGgsIEpTT04uc3RyaW5naWZ5KG9wdGlvbnMsIG51bGwsIDIpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGFuaW1hdGlvbnNFbmFibGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYW5pbWF0aW9uc0VuYWJsZWQ7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBjYXZhVmlzaWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhdmFWaXNpYmxlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHNldFdhbGxwYXBlclNlbGVjdG9yQWN0aXZlKG5ld1N0YXRlOiBib29sZWFuKSB7XG4gICAgICAgIGlmKHRoaXMuX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlLmdldCgpICE9PSBuZXdTdGF0ZSkgdGhpcy5fc2V0V2FsbHBhcGVyU2VsZWN0b3JBY3RpdmUobmV3U3RhdGUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgc2V0QW5pbWF0aW9uc0VuYWJsZWQobmV3U3RhdGU6IGJvb2xlYW4pIHtcbiAgICAgICAgaWYgKHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkLmdldCgpICE9PSBuZXdTdGF0ZSkgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWQobmV3U3RhdGUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgc2V0Q2F2YVZpc2libGUobmV3U3RhdGU6IGJvb2xlYW4pIHtcbiAgICAgICAgaWYodGhpcy5fY2F2YVZpc2libGUuZ2V0KCkgIT09IG5ld1N0YXRlKSB0aGlzLl9zZXRDYXZhVmlzaWJsZShuZXdTdGF0ZSk7XG4gICAgfVxufVxuXG5jb25zdCBzZXR0aW5nc1NlcnZpY2UgPSBuZXcgU2V0dGluZ3NDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgc2V0dGluZ3NTZXJ2aWNlO1xuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKHBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIEFzdGFsLnJlYWRfZmlsZShwYXRoKSB8fCBcIlwiXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZUFzeW5jKHBhdGg6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgQXN0YWwucmVhZF9maWxlX2FzeW5jKHBhdGgsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbC5yZWFkX2ZpbGVfZmluaXNoKHJlcykgfHwgXCJcIilcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGUocGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBBc3RhbC53cml0ZV9maWxlKHBhdGgsIGNvbnRlbnQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVBc3luYyhwYXRoOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIEFzdGFsLndyaXRlX2ZpbGVfYXN5bmMocGF0aCwgY29udGVudCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsLndyaXRlX2ZpbGVfZmluaXNoKHJlcykpXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbW9uaXRvckZpbGUoXG4gICAgcGF0aDogc3RyaW5nLFxuICAgIGNhbGxiYWNrOiAoZmlsZTogc3RyaW5nLCBldmVudDogR2lvLkZpbGVNb25pdG9yRXZlbnQpID0+IHZvaWQsXG4pOiBHaW8uRmlsZU1vbml0b3Ige1xuICAgIHJldHVybiBBc3RhbC5tb25pdG9yX2ZpbGUocGF0aCwgKGZpbGU6IHN0cmluZywgZXZlbnQ6IEdpby5GaWxlTW9uaXRvckV2ZW50KSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGZpbGUsIGV2ZW50KVxuICAgIH0pIVxufVxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgU3d3dyB9IGZyb20gXCIuLi91dGlscy9Td3d3XCI7XG5pbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgc2V0dGluZ3NTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9TZXR0aW5nc1wiO1xuXG5jb25zdCBwYXRoID0gR0xpYi5nZXRfaG9tZV9kaXIoKSArICcvLmNvbmZpZy9hZ3Mvd2FsbHBhcGVycyc7XG5jb25zdCBwb2xsVGltZSA9IDI0MDAwMDtcbmNvbnN0IGltYWdlRXh0ZW5zaW9ucyA9IFsnLmpwZycsICcuanBlZycsICcucG5nJywgJy5naWYnLCAnLmJtcCcsICcud2VicCcsICcuc3ZnJ107XG5cbmNsYXNzIFdhbGxwYXBlclNlbGVjdG9yQ2xhc3Mge1xuICAgIHByaXZhdGUgaW1hZ2VzOiBBY2Nlc3NvcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBzZXRJbWFnZXM6IFNldHRlcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBfdGltZXJBY3RpdmU6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgcG9sbGluZzogQWNjZXNzb3I8Ym9vbGVhbj47XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgW3RoaXMuaW1hZ2VzLCB0aGlzLnNldEltYWdlc10gPSBjcmVhdGVTdGF0ZShbXSBhcyBzdHJpbmdbXSk7XG4gICAgICAgIHRoaXMuX3RpbWVyQWN0aXZlID0gc2V0dGluZ3NTZXJ2aWNlLndhbGxwYXBlclNlbGVjdG9yQWN0aXZlO1xuICAgICAgICB0aGlzLnBvbGxpbmcgPSBjcmVhdGVQb2xsKHRydWUsIHBvbGxUaW1lLCAocHJldjogYm9vbGVhbikgPT4gIXByZXYpO1xuICAgICAgICB0aGlzLnNldEltYWdlcyh0aGlzLnJlYWRJbWFnZUZpbGVzKHBhdGgpKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGlzSW1hZ2VGaWxlKGZpbGVuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgZXh0ZW5zaW9uID0gZmlsZW5hbWUudG9Mb3dlckNhc2UoKS5zdWJzdHJpbmcoZmlsZW5hbWUubGFzdEluZGV4T2YoJy4nKSk7XG4gICAgICAgIHJldHVybiBpbWFnZUV4dGVuc2lvbnMuaW5jbHVkZXMoZXh0ZW5zaW9uKSA/IGV4dGVuc2lvbjogbnVsbDtcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlYWRJbWFnZUZpbGVzKGRpcmVjdG9yeVBhdGg6IHN0cmluZykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZmlsZSA9IEdpby5GaWxlLm5ld19mb3JfcGF0aChkaXJlY3RvcnlQYXRoKTtcblxuICAgICAgICAgICAgaWYgKCFmaWxlLnF1ZXJ5X2V4aXN0cyhudWxsKSkgcmV0dXJuIFtdO1xuXG4gICAgICAgICAgICBjb25zdCBlbnVtZXJhdG9yID0gZmlsZS5lbnVtZXJhdGVfY2hpbGRyZW4oJ3N0YW5kYXJkOjpuYW1lLHN0YW5kYXJkOjp0eXBlJywgR2lvLkZpbGVRdWVyeUluZm9GbGFncy5OT05FLCBudWxsKTtcblxuICAgICAgICAgICAgY29uc3QgaW1hZ2VzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICAgICAgbGV0IGZpbGVJbmZvO1xuXG4gICAgICAgICAgICB3aGlsZSAoKGZpbGVJbmZvID0gZW51bWVyYXRvci5uZXh0X2ZpbGUobnVsbCkpICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaWYgKGZpbGVJbmZvLmdldF9maWxlX3R5cGUoKSA9PT0gR2lvLkZpbGVUeXBlLlJFR1VMQVIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlSW5mby5nZXRfbmFtZSgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBleHQgPSB0aGlzLmlzSW1hZ2VGaWxlKGZpbGVOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgaWYoZXh0KSBpbWFnZXMucHVzaChmaWxlTmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBlbnVtZXJhdG9yLmNsb3NlKG51bGwpO1xuICAgICAgICAgICAgcmV0dXJuIGltYWdlcztcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1x1Mjc0QyBFcnJvIEdpbyBhbyBsZXIgZGlyZXRcdTAwRjNyaW86JywgZGlyZWN0b3J5UGF0aCwgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldCB0aW1lckFjdGl2ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RpbWVyQWN0aXZlO1xuICAgIH1cblxuICAgIHB1YmxpYyBTZWxlY3RvckluZGljYXRvcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICBjb25zdCB1bnN1YiA9IHRoaXMucG9sbGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuX3RpbWVyQWN0aXZlLmdldCgpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29ubmVjdG9yID0gZ2RrbW9uaXRvci5nZXRfY29ubmVjdG9yKCk7XG4gICAgICAgICAgICAgICAgaWYoY29ubmVjdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGltZ0FycmF5ID0gdGhpcy5pbWFnZXMuZ2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGltZyA9IGltZ0FycmF5W01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGltZ0FycmF5Lmxlbmd0aCldO1xuICAgICAgICAgICAgICAgICAgICBTd3d3Lm1hbmFnZXIuc2V0V2FsbHBhcGVyKGAke3BhdGh9LyR7aW1nfWAsIHsgb3V0cHV0czogY29ubmVjdG9yLCB0cmFuc2l0aW9uVHlwZTogU3d3dy5UcmFuc2l0aW9uVHlwZS5HUk9XIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhgbm90aWZ5LXNlbmQgXCJNb25pdG9yICR7Z2RrbW9uaXRvci5nZXRfZGVzY3JpcHRpb24oKX0gblx1MDBFM28gdGVtIGNvbmVjdG9yXCIgXCIke2dka21vbml0b3IuZ2V0X2Rlc2NyaXB0aW9uKCl9IG5cdTAwRTNvIHRlbSBjb25lY3Rvci5cImApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB1bnN1YigpKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydTZWxlY3RvckluZGljYXRvciddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiU3VidGl0bGVcIl19XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPXsnV2FsbHBhcGVyIFNlbGVjdG9yJ31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiVG9nZ2xlQWN0aXZlXCIsIFwiT3B0aW9uXCJdfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtcIkFjdGl2ZSBcIn0gaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxHdGsuU3dpdGNoIGFjdGl2ZT17dGhpcy5fdGltZXJBY3RpdmV9IG9uU3RhdGVTZXQ9eyhzcmMsIHZhbCkgPT4gc2V0dGluZ3NTZXJ2aWNlLnNldFdhbGxwYXBlclNlbGVjdG9yQWN0aXZlID0gdmFsfSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCB3YWxscGFwZXJTZWxlY3RvciA9IG5ldyBXYWxscGFwZXJTZWxlY3RvckNsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCB3YWxscGFwZXJTZWxlY3RvcjtcbiIsICJpbXBvcnQgeyBleGVjLCBleGVjQXN5bmMgfSBmcm9tIFwiYWdzL3Byb2Nlc3NcIjtcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBTd3d3IHtcbiAgICBleHBvcnQgZW51bSBSZXNpemUge1xuICAgICAgICBOTyA9ICdubycsXG4gICAgICAgIENST1AgPSAnY3JvcCcsXG4gICAgICAgIEZJVCA9ICdmaXQnLFxuICAgICAgICBTVFJFVENIID0gJ3N0cmV0Y2gnXG4gICAgfVxuXG4gICAgZXhwb3J0IGVudW0gRmlsdGVyIHtcbiAgICAgICAgTkVBUkVTVCA9ICdOZWFyZXN0JyxcbiAgICAgICAgQklMSU5FQVIgPSAnQmlsaW5lYXInLFxuICAgICAgICBDQVRNVUxMUk9NID0gJ0NhdG11bGxSb20nLFxuICAgICAgICBNSVRDSEVMTCA9ICdNaXRjaGVsbCcsXG4gICAgICAgIExBTkNaT1MzID0gJ0xhbmN6b3MzJ1xuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIFRyYW5zaXRpb25UeXBlIHtcbiAgICAgICAgTk9ORSA9ICdub25lJyxcbiAgICAgICAgU0lNUExFID0gJ3NpbXBsZScsXG4gICAgICAgIEZBREUgPSAnZmFkZScsXG4gICAgICAgIExFRlQgPSAnbGVmdCcsXG4gICAgICAgIFJJR0hUID0gJ3JpZ2h0JyxcbiAgICAgICAgVE9QID0gJ3RvcCcsXG4gICAgICAgIEJPVFRPTSA9ICdib3R0b20nLFxuICAgICAgICBXSVBFID0gJ3dpcGUnLFxuICAgICAgICBXQVZFID0gJ3dhdmUnLFxuICAgICAgICBHUk9XID0gJ2dyb3cnLFxuICAgICAgICBDRU5URVIgPSAnY2VudGVyJyxcbiAgICAgICAgQU5ZID0gJ2FueScsXG4gICAgICAgIFJBTkRPTSA9ICdyYW5kb20nXG4gICAgfVxuXG4gICAgZXhwb3J0IGVudW0gVHJhbnNpdGlvblBvcyB7XG4gICAgICAgIENFTlRFUiA9ICdjZW50ZXInLFxuICAgICAgICBUT1AgPSAndG9wJyxcbiAgICAgICAgTEVGVCA9ICdsZWZ0JyxcbiAgICAgICAgUklHSFQgPSAncmlnaHQnLFxuICAgICAgICBCT1RUT00gPSAnYm90dG9tJyxcbiAgICAgICAgVE9QX0xFRlQgPSAndG9wLWxlZnQnLFxuICAgICAgICBUT1BfUklHSFQgPSAndG9wLXJpZ2h0JyxcbiAgICAgICAgQk9UVE9NX0xFRlQgPSAnYm90dG9tLWxlZnQnLFxuICAgICAgICBCT1RUT01fUklHSFQgPSAnYm90dG9tLXJpZ2h0J1xuICAgIH1cblxuXG4gICAgZXhwb3J0IGludGVyZmFjZSBQYXJzZXJPcHRpb25zIHtcbiAgICAgICAgcmVzaXplOiBSZXNpemU7XG4gICAgICAgIGZpbHRlcjogRmlsdGVyO1xuICAgICAgICB0cmFuc2l0aW9uVHlwZTogVHJhbnNpdGlvblR5cGU7XG4gICAgICAgIHRyYW5zaXRpb25Qb3M6IFRyYW5zaXRpb25Qb3M7XG4gICAgICAgIG91dHB1dHM6IHN0cmluZztcbiAgICAgICAgdHJhbnNpdGlvblN0ZXA6IG51bWJlcjtcbiAgICAgICAgdHJhbnNpdGlvbkR1cmFudGlvbjogbnVtYmVyO1xuICAgICAgICB0cmFuc2l0aW9uQW5nbGU6IG51bWJlcjtcbiAgICAgICAgaW52ZXJ0WTogYm9vbGVhbjtcbiAgICAgICAgdHJhbnNpdGlvbldhdmU6IHsgeDogbnVtYmVyLCB5OiBudW1iZXIgfTtcbiAgICB9XG5cblxuICAgIGNsYXNzIE1hbmFnZXIge1xuICAgICAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgICAgIEdMaWIuc3Bhd25fY29tbWFuZF9saW5lX2FzeW5jKCdzd3d3IGNsZWFyJyk7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgc2V0V2FsbHBhcGVyKHBhdGg6IHN0cmluZywgb3B0aW9ucz86IFBhcnRpYWw8UGFyc2VyT3B0aW9ucz4pOiBib29sZWFuIHtcbiAgICAgICAgICAgIGxldCBjb21tYW5kID0gYHN3d3cgaW1nICR7cGF0aH1gO1xuICAgICAgICAgICAgaWYob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMucmVzaXplKSBjb21tYW5kICs9IGAgLS1yZXNpemUgJHtvcHRpb25zLnJlc2l6ZX1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMuZmlsdGVyKSBjb21tYW5kICs9IGAgLWYgJHtvcHRpb25zLmZpbHRlcn1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMuaW52ZXJ0WSkgY29tbWFuZCArPSBgIC0taW52ZXJ0LXkgJHtvcHRpb25zLmludmVydFkudmFsdWVPZigpfWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy50cmFuc2l0aW9uQW5nbGUpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tYW5nbGUgJHtvcHRpb25zLnRyYW5zaXRpb25BbmdsZX1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvbkR1cmFudGlvbikgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi1kdXJhdGlvbiAke29wdGlvbnMudHJhbnNpdGlvbkR1cmFudGlvbn1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvblBvcykgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi1wb3MgJHtvcHRpb25zLnRyYW5zaXRpb25Qb3N9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25TdGVwKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLXN0ZXAgJHtvcHRpb25zLnRyYW5zaXRpb25TdGVwfWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy50cmFuc2l0aW9uVHlwZSkgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi10eXBlICR7b3B0aW9ucy50cmFuc2l0aW9uVHlwZX1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvbldhdmUpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24td2F2ZSAke29wdGlvbnMudHJhbnNpdGlvbldhdmUueH0sJHtvcHRpb25zLnRyYW5zaXRpb25XYXZlLnl9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLm91dHB1dHMpIGNvbW1hbmQgKz0gYCAtLW91dHB1dHMgJHtvcHRpb25zLm91dHB1dHN9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEdMaWIuc3Bhd25fY29tbWFuZF9saW5lX2FzeW5jKGNvbW1hbmQpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZXhwb3J0IGNvbnN0IG1hbmFnZXIgPSBuZXcgTWFuYWdlcjtcbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZyB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEdkayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgZXhlYyB9IGZyb20gXCJhZ3MvcHJvY2Vzc1wiO1xuaW1wb3J0IEFzdGFsSHlwcmxhbmQgZnJvbSBcImdpOi8vQXN0YWxIeXBybGFuZD92ZXJzaW9uPTAuMVwiO1xuaW1wb3J0IHNldHRpbmdzU2VydmljZSBmcm9tIFwiLi9TZXR0aW5nc1wiO1xuLy8gaW1wb3J0IEFzdGFsTmlyaSBmcm9tIFwiZ2k6Ly9Bc3RhbE5pcmk/dmVyc2lvbj0wLjFcIlxuXG5leHBvcnQgdHlwZSBDb21wb3NpdG9yTW9uaXRvciA9IEFzdGFsSHlwcmxhbmQuTW9uaXRvcjtcbmV4cG9ydCB0eXBlIENvbXBvc2l0b3JXb3Jrc3BhY2UgPSBBc3RhbEh5cHJsYW5kLldvcmtzcGFjZTtcblxuaW50ZXJmYWNlIElDb21wb3NpdG9yIHtcbiAgICBnZXRXb3Jrc3BhY2VzOiAoKSA9PiBBY2Nlc3NvcjxDb21wb3NpdG9yV29ya3NwYWNlW10+O1xuICAgIGdldEZvY3VzZWRXb3Jrc3BhY2U6ICgpID0+IEFjY2Vzc29yPENvbXBvc2l0b3JXb3Jrc3BhY2U+O1xuICAgIGFyZU1vbml0b3JzRXF1YWw6IChtb25pdG9yOiBHZGsuTW9uaXRvciwgY29tcE1vbml0b3I6IENvbXBvc2l0b3JNb25pdG9yKSA9PiBib29sZWFuO1xuICAgIGdldENvbXBvc2l0b3JNb25pdG9yOiAobW9uaXRvcjogR2RrLk1vbml0b3IpID0+IENvbXBvc2l0b3JNb25pdG9yO1xuICAgIGdldEFuaW1hdGlvblN0YXRlOiAoKSA9PiBib29sZWFuO1xuICAgIHRvZ2dsZUFuaW1hdGlvbnM6ICh2YWw/OiBib29sZWFuKSA9PiB2b2lkO1xufVxuXG5jbGFzcyBIeXBybGFuZCBpbXBsZW1lbnRzIElDb21wb3NpdG9yIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IEFzdGFsSHlwcmxhbmQuSHlwcmxhbmQ7XG4gICAgcHJpdmF0ZSBfd29ya3NwYWNlczogQWNjZXNzb3I8QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2VbXT47XG4gICAgcHJpdmF0ZSBfZm9jdXNlZFdvcmtzcGFjZTogQWNjZXNzb3I8QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2U+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHQgPSBBc3RhbEh5cHJsYW5kLmdldF9kZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuX3dvcmtzcGFjZXMgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJ3b3Jrc3BhY2VzXCIpLmFzKCh3b3Jrc3BhY2VzKSA9PiB3b3Jrc3BhY2VzLnNvcnQoKGEsIGIpID0+IGEuaWQgLSBiLmlkKSk7XG4gICAgICAgIHRoaXMuX2ZvY3VzZWRXb3Jrc3BhY2UgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJmb2N1c2VkV29ya3NwYWNlXCIpO1xuXG4gICAgICAgIC8vIEFwbGljYXIgY29uZmlndXJhXHUwMEU3XHUwMEY1ZXMgZGUgYW5pbWFcdTAwRTdcdTAwRTNvLlxuICAgICAgICB0aGlzLnRvZ2dsZUFuaW1hdGlvbnMoc2V0dGluZ3NTZXJ2aWNlLmFuaW1hdGlvbnNFbmFibGVkLmdldCgpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0V29ya3NwYWNlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtzcGFjZXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEZvY3VzZWRXb3Jrc3BhY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mb2N1c2VkV29ya3NwYWNlO1xuICAgIH1cblxuICAgIHB1YmxpYyBhcmVNb25pdG9yc0VxdWFsKG1vbml0b3I6IEdkay5Nb25pdG9yLCBjb21wTW9uaXRvcjogQ29tcG9zaXRvck1vbml0b3IpIHtcbiAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBtb25pdG9yLmdldF9nZW9tZXRyeSgpO1xuICAgICAgICBpZihjb21wTW9uaXRvci5nZXRfbW9kZWwoKSA9PT0gbW9uaXRvci5nZXRfbW9kZWwoKVxuICAgICAgICAmJiBjb21wTW9uaXRvci5nZXRfaGVpZ2h0KCkgPT09IGdlb21ldHJ5LmhlaWdodFxuICAgICAgICAmJiBjb21wTW9uaXRvci5nZXRfd2lkdGgoKSA9PT0gZ2VvbWV0cnkud2lkdGhcbiAgICAgICAgJiYgY29tcE1vbml0b3IuZ2V0X3goKSA9PT0gZ2VvbWV0cnkueFxuICAgICAgICAmJiBjb21wTW9uaXRvci5nZXRfeSgpID09PSBnZW9tZXRyeS55KSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcHVibGljIGdldENvbXBvc2l0b3JNb25pdG9yKG1vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gICAgICAgIGNvbnN0IGNvbXBNb25pdG9ycyA9IHRoaXMuZGVmYXVsdC5nZXRfbW9uaXRvcnMoKTtcbiAgICAgICAgcmV0dXJuIGNvbXBNb25pdG9ycy5maW5kKGNvbXBNb25pdG9yID0+IHRoaXMuYXJlTW9uaXRvcnNFcXVhbChtb25pdG9yLCBjb21wTW9uaXRvcikpITtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0QW5pbWF0aW9uU3RhdGUoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShleGVjKFwiaHlwcmN0bCBnZXRvcHRpb24gYW5pbWF0aW9uczplbmFibGVkIC1qXCIpKSA9PT0gMTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm8gYW8gdmVyaWZpY2FyIGVzdGFkbyBkYXMgYW5pbWFcdTAwRTdcdTAwRjVlczpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHRvZ2dsZUFuaW1hdGlvbnModmFsPzogYm9vbGVhbikge1xuICAgICAgICBjb25zdCBuZXdTdGF0ZSA9IHZhbCA/PyAhdGhpcy5nZXRBbmltYXRpb25TdGF0ZSgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZXhlYyhgaHlwcmN0bCBrZXl3b3JkIGFuaW1hdGlvbnM6ZW5hYmxlZCAke25ld1N0YXRlID8gMSA6IDB9YCk7XG4gICAgICAgICAgICBleGVjKGBoeXByY3RsIGtleXdvcmQgZGVjb3JhdGlvbjpzaGFkb3c6ZW5hYmxlZCAke25ld1N0YXRlID8gMSA6IDB9YCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBhbHRlcmFyIGFuaW1hXHUwMEU3XHUwMEY1ZXM6XCIsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY2xhc3MgTmlyaSBpbXBsZW1lbnRzIElDb21wb3NpdG9yIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IEFzdGFsSHlwcmxhbmQuSHlwcmxhbmQ7XG4gICAgcHJpdmF0ZSBfd29ya3NwYWNlczogQWNjZXNzb3I8QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2VbXT47XG4gICAgcHJpdmF0ZSBfZm9jdXNlZFdvcmtzcGFjZTogQWNjZXNzb3I8QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2U+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHQgPSBBc3RhbEh5cHJsYW5kLmdldF9kZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuX3dvcmtzcGFjZXMgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJ3b3Jrc3BhY2VzXCIpLmFzKCh3b3Jrc3BhY2VzKSA9PiB3b3Jrc3BhY2VzLnNvcnQoKGEsIGIpID0+IGEuaWQgLSBiLmlkKSk7XG4gICAgICAgIHRoaXMuX2ZvY3VzZWRXb3Jrc3BhY2UgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJmb2N1c2VkV29ya3NwYWNlXCIpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRXb3Jrc3BhY2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd29ya3NwYWNlcztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Rm9jdXNlZFdvcmtzcGFjZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZvY3VzZWRXb3Jrc3BhY2U7XG4gICAgfVxuXG4gICAgcHVibGljIGFyZU1vbml0b3JzRXF1YWwobW9uaXRvcjogR2RrLk1vbml0b3IsIGNvbXBNb25pdG9yOiBDb21wb3NpdG9yTW9uaXRvcikge1xuICAgICAgICBjb25zdCBnZW9tZXRyeSA9IG1vbml0b3IuZ2V0X2dlb21ldHJ5KCk7XG4gICAgICAgIGlmKGNvbXBNb25pdG9yLmdldF9tb2RlbCgpID09PSBtb25pdG9yLmdldF9tb2RlbCgpXG4gICAgICAgICYmIGNvbXBNb25pdG9yLmdldF9oZWlnaHQoKSA9PT0gZ2VvbWV0cnkuaGVpZ2h0XG4gICAgICAgICYmIGNvbXBNb25pdG9yLmdldF93aWR0aCgpID09PSBnZW9tZXRyeS53aWR0aFxuICAgICAgICAmJiBjb21wTW9uaXRvci5nZXRfeCgpID09PSBnZW9tZXRyeS54XG4gICAgICAgICYmIGNvbXBNb25pdG9yLmdldF95KCkgPT09IGdlb21ldHJ5LnkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Q29tcG9zaXRvck1vbml0b3IobW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgY29uc3QgY29tcE1vbml0b3JzID0gdGhpcy5kZWZhdWx0LmdldF9tb25pdG9ycygpO1xuICAgICAgICByZXR1cm4gY29tcE1vbml0b3JzLmZpbmQoY29tcE1vbml0b3IgPT4gdGhpcy5hcmVNb25pdG9yc0VxdWFsKG1vbml0b3IsIGNvbXBNb25pdG9yKSkhO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRBbmltYXRpb25TdGF0ZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGV4ZWMoXCJoeXByY3RsIGdldG9wdGlvbiBhbmltYXRpb25zOmVuYWJsZWQgLWpcIikpID09PSAxO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiRXJybyBhbyB2ZXJpZmljYXIgZXN0YWRvIGRhcyBhbmltYVx1MDBFN1x1MDBGNWVzOlwiLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgdG9nZ2xlQW5pbWF0aW9ucyh2YWw/OiBib29sZWFuKSB7XG4gICAgICAgIGNvbnN0IG5ld1N0YXRlID0gdmFsID8/ICF0aGlzLmdldEFuaW1hdGlvblN0YXRlKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBleGVjKGBoeXByY3RsIGtleXdvcmQgYW5pbWF0aW9uczplbmFibGVkICR7bmV3U3RhdGUgPyAxIDogMH1gKTtcbiAgICAgICAgICAgIGV4ZWMoYGh5cHJjdGwga2V5d29yZCBkZWNvcmF0aW9uOnNoYWRvdzplbmFibGVkICR7bmV3U3RhdGUgPyAxIDogMH1gKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvIGFvIGFsdGVyYXIgYW5pbWFcdTAwRTdcdTAwRjVlczpcIiwgZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5jbGFzcyBDb21wb3NpdG9yTWFuYWdlckNsYXNzIHtcbiAgICBwcml2YXRlIHNlcnZpY2U6IElDb21wb3NpdG9yO1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBjb25zdCBjb21wb3NpdG9yID0gZXhlYyhbXCJiYXNoXCIsIFwiLWNcIiwgXCJlY2hvICRYREdfQ1VSUkVOVF9ERVNLVE9QXCJdKTtcbiAgICAgICAgc3dpdGNoKGNvbXBvc2l0b3IpIHtcbiAgICAgICAgICAgIGNhc2UgXCJIeXBybGFuZFwiOlxuICAgICAgICAgICAgICAgIHRoaXMuc2VydmljZSA9IG5ldyBIeXBybGFuZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJOaXJpXCI6XG4gICAgICAgICAgICAgICAgdGhpcy5zZXJ2aWNlID0gbmV3IE5pcmk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDb21wb3NpdG9yIG5cdTAwRTNvIGlkZW50aWZpY2Fkby4gRmFsbGJhY2sgcGFyYSBIeXBybGFuZFwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlcnZpY2UgPSBuZXcgSHlwcmxhbmQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHdvcmtzcGFjZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuZ2V0V29ya3NwYWNlcygpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZm9jdXNlZFdvcmtzcGFjZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5nZXRGb2N1c2VkV29ya3NwYWNlKCk7XG4gICAgfVxuXG4gICAgcHVibGljIGFyZU1vbml0b3JzRXF1YWwobW9uaXRvcjogR2RrLk1vbml0b3IsIGNvbXBNb25pdG9yOiBDb21wb3NpdG9yTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmFyZU1vbml0b3JzRXF1YWwobW9uaXRvciwgY29tcE1vbml0b3IpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRDb21wb3NpdG9yTW9uaXRvcihtb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmdldENvbXBvc2l0b3JNb25pdG9yKG1vbml0b3IpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgYW5pbWF0aW9uU3RhdGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuZ2V0QW5pbWF0aW9uU3RhdGUoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdG9nZ2xlQW5pbWF0aW9ucyh2YWw/OiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMuc2VydmljZS50b2dnbGVBbmltYXRpb25zKHZhbCk7XG4gICAgfVxufVxuXG5jb25zdCBjb21wb3NpdG9yTWFuYWdlciA9IG5ldyBDb21wb3NpdG9yTWFuYWdlckNsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBjb21wb3NpdG9yTWFuYWdlcjtcbiIsICJpbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHNldHRpbmdzU2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvU2V0dGluZ3NcIjtcbmltcG9ydCB3YWxscGFwZXJTZWxlY3RvciBmcm9tIFwiLi9XYWxscGFwZXJTZWxlY3RvclwiO1xuaW1wb3J0IGNvbXBvc2l0b3JNYW5hZ2VyIGZyb20gXCIuLi9zZXJ2aWNlcy9Db21wb3NpdG9yTWFuYWdlclwiO1xuXG5jbGFzcyBDb250cm9sQ2VudGVyQ2xhc3Mge1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldCBUb2dnbGVWaXNpYmxlQ29tcG9uZW50cygpIHtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHNldHRpbmdzU2VydmljZS5zYXZlT3B0aW9ucygpKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHNcIl19IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX0gbGFiZWw9eydBbmltYXRpb25zICYgQ29tcG9uZW50cyd9IC8+XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJUb2dnbGVBbmltYXRpb25zXCIsIFwiT3B0aW9uXCJdfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtcIkFuaW1hdGlvbnMgXCJ9IGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfSAvPlxuICAgICAgICAgICAgICAgICAgICA8R3RrLlN3aXRjaFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlPXtzZXR0aW5nc1NlcnZpY2UuYW5pbWF0aW9uc0VuYWJsZWR9XG4gICAgICAgICAgICAgICAgICAgICAgICBvblN0YXRlU2V0PXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc3JjLCB2YWwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3NTZXJ2aWNlLnNldEFuaW1hdGlvbnNFbmFibGVkID0gdmFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb3NpdG9yTWFuYWdlci50b2dnbGVBbmltYXRpb25zKHZhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiVG9nZ2xlQ2F2YVwiLCBcIk9wdGlvblwiXX0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17XCJDYXZhIFwifSBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gLz5cbiAgICAgICAgICAgICAgICAgICAgPEd0ay5Td2l0Y2ggYWN0aXZlPXtzZXR0aW5nc1NlcnZpY2UuY2F2YVZpc2libGV9IG9uU3RhdGVTZXQ9eyhzcmMsIHZhbCkgPT4gc2V0dGluZ3NTZXJ2aWNlLnNldENhdmFWaXNpYmxlID0gdmFsfSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBDb250cm9sQ2VudGVyUG9wb3ZlcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHBvcG92ZXIgb25DbG9zZWQ9eygpID0+IHNldHRpbmdzU2VydmljZS5zYXZlT3B0aW9ucygpfT5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkNvbnRyb2xDZW50ZXJQb3BvdmVyXCJdfT5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLlRvZ2dsZVZpc2libGVDb21wb25lbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAge3dhbGxwYXBlclNlbGVjdG9yLlNlbGVjdG9ySW5kaWNhdG9yKGdka21vbml0b3IpfVxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgQ29udHJvbENlbnRlcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b24gY3NzQ2xhc3Nlcz17W1wiQ29udHJvbENlbnRlclwiXX0gcG9wb3Zlcj17dGhpcy5Db250cm9sQ2VudGVyUG9wb3ZlcihnZGttb25pdG9yKSBhcyBHdGsuUG9wb3Zlcn0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snTGFiZWwnXX0gbGFiZWw9eydcdURCODJcdURDQzcnfSAvPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgY29udHJvbENlbnRlciA9IG5ldyBDb250cm9sQ2VudGVyQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRyb2xDZW50ZXI7XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgY29tcG9zaXRvck1hbmFnZXIsIHsgQ29tcG9zaXRvck1vbml0b3IsIENvbXBvc2l0b3JXb3Jrc3BhY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvQ29tcG9zaXRvck1hbmFnZXJcIjtcbmltcG9ydCB7IEFjY2Vzc29yLCBGb3IgfSBmcm9tIFwiYWdzXCI7XG5cbmNsYXNzIFdvcmtzcGFjZXNDbGFzcyB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBtYXhXb3Jrc3BhY2VzOiBudW1iZXIgPSAxMDtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG5cbiAgICB9XG5cbiAgICBwcml2YXRlIFdvcmtzcGFjZSh7IHdvcmtzcGFjZSB9OiB7IHdvcmtzcGFjZTogQ29tcG9zaXRvcldvcmtzcGFjZSB9KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Y29tcG9zaXRvck1hbmFnZXIuZm9jdXNlZFdvcmtzcGFjZS5hcyhmb2N1c2VkID0+IFtcIldvcmtzcGFjZVwiLCB3b3Jrc3BhY2UuZ2V0X2lkKCkgPT09IGZvY3VzZWQuZ2V0X2lkKCkgPyBcIkFjdGl2ZVwiIDogXCJJbmFjdGl2ZVwiXSl9XG4gICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7IGlmKGNvbXBvc2l0b3JNYW5hZ2VyLmZvY3VzZWRXb3Jrc3BhY2UuZ2V0KCkuZ2V0X2lkKCkgIT09IHdvcmtzcGFjZS5nZXRfaWQoKSkgd29ya3NwYWNlLmZvY3VzKCkgfX1cbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgIGxhYmVsPXt3b3Jrc3BhY2UuZ2V0X2lkKCkudG9TdHJpbmcoKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBXb3Jrc3BhY2VQb3BvdmVyKHsgdGhlUmVzdCB9OiB7IHRoZVJlc3Q6IEFjY2Vzc29yPENvbXBvc2l0b3JXb3Jrc3BhY2VbXT4gfSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHBvcG92ZXIgY3NzQ2xhc3Nlcz17W1wiV29ya3NwYWNlUG9wb3ZlclwiXX0+XG4gICAgICAgICAgICAgICAgPEd0ay5GbG93Qm94IG1heENoaWxkcmVuUGVyTGluZT17NH0+XG4gICAgICAgICAgICAgICAgICAgIDxGb3IgZWFjaD17dGhlUmVzdH0gY2hpbGRyZW49e2l0ZW0gPT4gdGhpcy5Xb3Jrc3BhY2UoeyB3b3Jrc3BhY2U6IGl0ZW0gfSl9IC8+XG4gICAgICAgICAgICAgICAgPC9HdGsuRmxvd0JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIE1vcmVXb3Jrc3BhY2VzQnV0dG9uKHsgdGhlUmVzdCB9OiB7IHRoZVJlc3Q6IEFjY2Vzc29yPENvbXBvc2l0b3JXb3Jrc3BhY2VbXT4gfSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b25cbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJNb3JlV29ya3NwYWNlc0J1dHRvblwiXX1cbiAgICAgICAgICAgICAgICBzZW5zaXRpdmU9e3RoZVJlc3QuYXModHIgPT4gdHIubGVuZ3RoID4gMCl9XG4gICAgICAgICAgICAgICAgcG9wb3Zlcj17dGhpcy5Xb3Jrc3BhY2VQb3BvdmVyKHsgdGhlUmVzdDogdGhlUmVzdCB9KSBhcyBHdGsuUG9wb3Zlcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9eydcdURCODFcdURENEYnfSAvPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHB1YmxpYyBXb3Jrc3BhY2VzKHsgbW9uaXRvciB9OiB7IG1vbml0b3I6IENvbXBvc2l0b3JNb25pdG9yIH0pIHtcbiAgICAgICAgY29uc3QgbW9uaXRvcldvcmtzcGFjZXMgPSBjb21wb3NpdG9yTWFuYWdlci53b3Jrc3BhY2VzLmFzKHdzID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZpbHRlcmVkID0gd3MuZmlsdGVyKCh3b3Jrc3BhY2UpID0+IHdvcmtzcGFjZS5nZXRfbW9uaXRvcigpID09PSBtb25pdG9yKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbWFpbjogZmlsdGVyZWQuc2xpY2UoMCwgdGhpcy5tYXhXb3Jrc3BhY2VzKSxcbiAgICAgICAgICAgICAgICB0aGVSZXN0OiBmaWx0ZXJlZC5zbGljZSh0aGlzLm1heFdvcmtzcGFjZXMpXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJXb3Jrc3BhY2VzXCJdfT5cbiAgICAgICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgICAgICA8Rm9yIGVhY2g9e21vbml0b3JXb3Jrc3BhY2VzLmFzKG13ID0+IG13Lm1haW4pfSBjaGlsZHJlbj17KHc6IENvbXBvc2l0b3JXb3Jrc3BhY2UpID0+IHRoaXMuV29ya3NwYWNlKHsgd29ya3NwYWNlOiB3IH0pfSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIHt0aGlzLk1vcmVXb3Jrc3BhY2VzQnV0dG9uKHsgdGhlUmVzdDogbW9uaXRvcldvcmtzcGFjZXMuYXMoKHsgdGhlUmVzdCB9KSA9PiB0aGVSZXN0KSB9KX1cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgd29ya3NwYWNlcyA9IG5ldyBXb3Jrc3BhY2VzQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IHdvcmtzcGFjZXM7XG4iLCAiaW1wb3J0IHsgQXN0YWwsIEd0aywgR2RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgc3lzdGVtTW9uaXRvciBmcm9tIFwiLi4vbW9kdWxlcy9TeXN0ZW1Nb25pdG9yXCI7XG5pbXBvcnQgc3lzdGVtVHJheSBmcm9tIFwiLi4vbW9kdWxlcy9TeXN0ZW1UcmF5XCI7XG5pbXBvcnQgbWVkaWEgZnJvbSBcIi4uL21vZHVsZXMvTWVkaWFcIjtcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IGRhdGVUaW1lIGZyb20gXCIuLi9tb2R1bGVzL0RhdGVUaW1lXCI7XG5pbXBvcnQgYXVkaW9Db250cm9sIGZyb20gXCIuLi9tb2R1bGVzL0F1ZGlvQ29udHJvbFwiO1xuaW1wb3J0IGNvbnRyb2xDZW50ZXIgZnJvbSBcIi4uL21vZHVsZXMvQ29udHJvbENlbnRlclwiO1xuaW1wb3J0IHdvcmtzcGFjZXMgZnJvbSBcIi4uL21vZHVsZXMvV29ya3NwYWNlc1wiO1xuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IGNvbXBvc2l0b3JNYW5hZ2VyIGZyb20gXCIuLi9zZXJ2aWNlcy9Db21wb3NpdG9yTWFuYWdlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCYXIoeyBnZGttb25pdG9yIH06IHsgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IgfSkge1xuICAgIGNvbnN0IHsgVE9QLCBMRUZULCBSSUdIVCB9ID0gQXN0YWwuV2luZG93QW5jaG9yO1xuICAgIGNvbnN0IGNvbXBNb25pdG9yID0gY29tcG9zaXRvck1hbmFnZXIuZ2V0Q29tcG9zaXRvck1vbml0b3IoZ2RrbW9uaXRvcik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8d2luZG93XG4gICAgICAgICAgICBuYW1lPSdCYXInXG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJCYXJcIl19XG4gICAgICAgICAgICB2aXNpYmxlXG4gICAgICAgICAgICBleGNsdXNpdml0eT17QXN0YWwuRXhjbHVzaXZpdHkuRVhDTFVTSVZFfVxuICAgICAgICAgICAgbGF5ZXI9e0FzdGFsLkxheWVyLkJPVFRPTX1cbiAgICAgICAgICAgIGdka21vbml0b3I9e2dka21vbml0b3J9XG4gICAgICAgICAgICBhbmNob3I9e1RPUCB8IFJJR0hUIHwgTEVGVH1cbiAgICAgICAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICAgICAgICAkPXsoc2VsZikgPT4gb25DbGVhbnVwKCgpID0+IHNlbGYuZGVzdHJveSgpKX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJCYXJcIl19IGhhbGlnbj17R3RrLkFsaWduLkZJTEx9IGhvbW9nZW5lb3VzPlxuICAgICAgICAgICAgICAgIDxib3ggaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9PlxuICAgICAgICAgICAgICAgICAgICB7c3lzdGVtVHJheS5TeXN0ZW1UcmF5fVxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfT5cbiAgICAgICAgICAgICAgICAgICAge21lZGlhLk1lZGlhfVxuICAgICAgICAgICAgICAgICAgICB7d29ya3NwYWNlcy5Xb3Jrc3BhY2VzKHsgbW9uaXRvcjogY29tcE1vbml0b3IgfSl9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5FTkR9PlxuICAgICAgICAgICAgICAgICAgICB7ZGF0ZVRpbWUuRGF0ZVRpbWV9XG4gICAgICAgICAgICAgICAgICAgIHthdWRpb0NvbnRyb2wuQXVkaW9Db250cm9sfVxuICAgICAgICAgICAgICAgICAgICB7c3lzdGVtTW9uaXRvci5TeXN0ZW1Nb25pdG9yfVxuICAgICAgICAgICAgICAgICAgICB7Y29udHJvbENlbnRlci5Db250cm9sQ2VudGVyKGdka21vbml0b3IpfVxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvd2luZG93PlxuICAgICk7XG59XG4iLCAiaW1wb3J0IHNldHRpbmdzU2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvU2V0dGluZ3NcIjtcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IEdzayBmcm9tICdnaTovL0dzayc7XG5pbXBvcnQgQXN0YWxDYXZhIGZyb20gXCJnaTovL0FzdGFsQ2F2YT92ZXJzaW9uPTAuMVwiO1xuaW1wb3J0IEdPYmplY3QgZnJvbSAnZ2k6Ly9HT2JqZWN0JztcbmltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVCaW5kaW5nLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5cbmNvbnN0IENhdmFDb25maWcgPSB7XG4gICAgYXV0b3NlbnM6IHRydWUsXG4gICAgYmFyczogMjUsXG4gICAgZnJhbWVyYXRlOiA2MCxcbiAgICBpbnB1dDogQXN0YWxDYXZhLklucHV0LlBJUEVXSVJFLFxuICAgIG5vaXNlUmVkdWN0aW9uOiAwLjc3LFxuICAgIHNlbnNpdGl2aXR5OiAwLjc1LFxuICAgIHN0ZXJlbzogZmFsc2UsXG59O1xuXG5jbGFzcyBDYXZhV2lkZ2V0IGV4dGVuZHMgR3RrLkRyYXdpbmdBcmVhIHtcbiAgICBwcml2YXRlIHZhbHVlc0FjY2Vzc29yOiBBY2Nlc3NvcjxudW1iZXJbXT47XG4gICAgcHJpdmF0ZSB1bnN1YkFjY2Vzc29yOiAoKSA9PiB2b2lkO1xuXG4gICAgY29uc3RydWN0b3IodjogQWNjZXNzb3I8bnVtYmVyW10+KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc2V0X2hleHBhbmQodHJ1ZSk7XG4gICAgICAgIHRoaXMuc2V0X3ZleHBhbmQodHJ1ZSk7XG4gICAgICAgIHRoaXMudmFsdWVzQWNjZXNzb3IgPSB2LmFzKHYgPT4ge1xuICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5nZXRfYWxsb2NhdGVkX2hlaWdodCgpO1xuICAgICAgICAgICAgcmV0dXJuIHYubWFwKGkgPT4gaGVpZ2h0ICogKDEgLSBpKSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnVuc3ViQWNjZXNzb3IgPSB0aGlzLnZhbHVlc0FjY2Vzc29yLnN1YnNjcmliZSgoKSA9PiB0aGlzLnF1ZXVlX2RyYXcoKSk7XG5cbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHRoaXMudW5zdWJBY2Nlc3NvcigpKTtcbiAgICB9XG5cbiAgICBvdmVycmlkZSB2ZnVuY19zbmFwc2hvdChzbmFwc2hvdDogR3RrLlNuYXBzaG90KTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5nZXRfbWFwcGVkKCkpIHJldHVybjtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLnZpc2libGUpIHJldHVybjtcblxuICAgICAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmdldF9hbGxvY2F0ZWRfd2lkdGgoKTtcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuZ2V0X2FsbG9jYXRlZF9oZWlnaHQoKTtcblxuICAgICAgICAgICAgaWYgKHdpZHRoIDw9IDAgfHwgaGVpZ2h0IDw9IDApIHJldHVybjtcblxuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gdGhpcy52YWx1ZXNBY2Nlc3Nvci5nZXQoKTtcblxuICAgICAgICAgICAgaWYgKHZhbHVlcy5sZW5ndGggPT09IDApIHJldHVybjtcblxuICAgICAgICAgICAgY29uc3QgYmFyV2lkdGggPSB3aWR0aCAvICh2YWx1ZXMubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICBjb25zdCBjb2xvciA9IHRoaXMucGFyZW50LmdldF9jb2xvcigpO1xuICAgICAgICAgICAgY29uc3QgYnVpbGRlciA9IG5ldyBHc2suUGF0aEJ1aWxkZXIoKTtcbiAgICAgICAgICAgIGJ1aWxkZXIubW92ZV90bygwLCB2YWx1ZXNbMF0pO1xuICAgICAgICAgICAgY29uc3QgaW52U2l4ID0gMSAvIDY7XG5cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsdWVzLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHAweCA9IChpIC0gMSkgKiBiYXJXaWR0aDtcbiAgICAgICAgICAgICAgICBjb25zdCBwMHkgPSB2YWx1ZXNbTWF0aC5tYXgoMCwgaSAtIDEpXTtcbiAgICAgICAgICAgICAgICBjb25zdCBwMXggPSBpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDF5ID0gdmFsdWVzW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IHAyeCA9IChpICsgMSkgKiBiYXJXaWR0aDtcbiAgICAgICAgICAgICAgICBjb25zdCBwMnkgPSB2YWx1ZXNbaSArIDFdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHAzeCA9IChpICsgMikgKiBiYXJXaWR0aDtcbiAgICAgICAgICAgICAgICBjb25zdCBwM3kgPSB2YWx1ZXNbTWF0aC5taW4odmFsdWVzLmxlbmd0aCAtIDEsIGkgKyAyKV07XG5cbiAgICAgICAgICAgICAgICBjb25zdCBjMXggPSBwMXggKyAocDJ4IC0gcDB4KSAqIGludlNpeDtcbiAgICAgICAgICAgICAgICBjb25zdCBjMXkgPSBwMXkgKyAocDJ5IC0gcDB5KSAqIGludlNpeDtcbiAgICAgICAgICAgICAgICBjb25zdCBjMnggPSBwMnggLSAocDN4IC0gcDF4KSAqIGludlNpeDtcbiAgICAgICAgICAgICAgICBjb25zdCBjMnkgPSBwMnkgLSAocDN5IC0gcDF5KSAqIGludlNpeDtcblxuICAgICAgICAgICAgICAgIGJ1aWxkZXIuY3ViaWNfdG8oYzF4LCBjMXksIGMyeCwgYzJ5LCBwMngsIHAyeSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJ1aWxkZXIubGluZV90byh3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgICAgIGJ1aWxkZXIubGluZV90bygwLCBoZWlnaHQpO1xuICAgICAgICAgICAgYnVpbGRlci5jbG9zZSgpO1xuXG4gICAgICAgICAgICBzbmFwc2hvdC5hcHBlbmRfZmlsbChidWlsZGVyLnRvX3BhdGgoKSwgR3NrLkZpbGxSdWxlLldJTkRJTkcsIGNvbG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm8gbm8gc25hcHNob3QgZG8gQ2F2YTpcIiwgZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5jb25zdCBfY2F2YSA9IEdPYmplY3QucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogJ0NhdmEnIH0sIENhdmFXaWRnZXQpO1xuXG5jbGFzcyBDYXZhQ2xhc3Mge1xuICAgIHByaXZhdGUgZGVmYXVsdDogQXN0YWxDYXZhLkNhdmEgfCBudWxsO1xuICAgIHByaXZhdGUgX3ZhbHVlczogQWNjZXNzb3I8bnVtYmVyW10+O1xuICAgIHByaXZhdGUgc3RhdGljIHdpZGdldENvdW50OiBudW1iZXIgPSAwO1xuXG4gICAgcHJpdmF0ZSBfdmlzaWJpbGl0eVN0YXRlOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRWaXNpYmlsaXR5U3RhdGU6IFNldHRlcjxib29sZWFuPjtcbiAgICBwcml2YXRlIHVuc3ViOiAoKSA9PiB2b2lkO1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBbdGhpcy5fdmlzaWJpbGl0eVN0YXRlLCB0aGlzLl9zZXRWaXNpYmlsaXR5U3RhdGVdID0gY3JlYXRlU3RhdGUoc2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlLmdldCgpKTtcblxuICAgICAgICB0aGlzLnVuc3ViID0gc2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlLnN1YnNjcmliZSgoKSA9PiB0aGlzLl9zZXRWaXNpYmlsaXR5U3RhdGUoc2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlLmdldCgpKSk7XG5cbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gQXN0YWxDYXZhLmdldF9kZWZhdWx0KCk7XG4gICAgICAgIGlmICh0aGlzLmRlZmF1bHQpIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfYXV0b3NlbnMoQ2F2YUNvbmZpZy5hdXRvc2Vucyk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2JhcnMoQ2F2YUNvbmZpZy5iYXJzKTtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfZnJhbWVyYXRlKENhdmFDb25maWcuZnJhbWVyYXRlKTtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfaW5wdXQoQ2F2YUNvbmZpZy5pbnB1dCk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X25vaXNlX3JlZHVjdGlvbihDYXZhQ29uZmlnLm5vaXNlUmVkdWN0aW9uKTtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfc3RlcmVvKENhdmFDb25maWcuc3RlcmVvKTtcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlcyA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAndmFsdWVzJykuYXMoKHYpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZW5zID0gQ2F2YUNvbmZpZy5zZW5zaXRpdml0eTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHYubWFwKGkgPT4gaSAqIHNlbnMpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm8gbm8gaGFuZGxlciBnbG9iYWwgZG8gQ2F2YTpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiTlx1MDBFM28gZm9pIHBvc3NcdTAwRUR2ZWwgaW5pY2lhbGl6YXIgbyBDYXZhXCIpO1xuICAgICAgICAgICAgdGhpcy5fdmFsdWVzID0gY3JlYXRlU3RhdGU8bnVtYmVyW10+KFtdKVswXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgdmlzaWJpbGl0eVN0YXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmlzaWJpbGl0eVN0YXRlO1xuICAgIH1cblxuICAgIHB1YmxpYyBDYXZhKGNzc0NsYXNzZXM6IHN0cmluZ1tdKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Wy4uLmNzc0NsYXNzZXMsIFwiQ2F2YVwiXX1cbiAgICAgICAgICAgICAgICBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn1cbiAgICAgICAgICAgICAgICAkPXsoKSA9PiBDYXZhQ2xhc3Mud2lkZ2V0Q291bnQgKz0gMX1cbiAgICAgICAgICAgICAgICBvbkRlc3Ryb3k9e1xuICAgICAgICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBDYXZhQ2xhc3Mud2lkZ2V0Q291bnQgLT0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKENhdmFDbGFzcy53aWRnZXRDb3VudCA8PSAwKSB0aGlzLnVuc3ViKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge25ldyBfY2F2YSh0aGlzLl92YWx1ZXMpfVxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBjYXZhID0gbmV3IENhdmFDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgY2F2YTtcbiIsICJpbXBvcnQgeyBBc3RhbCwgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCI7XG5pbXBvcnQgY2F2YSBmcm9tIFwiLi4vbW9kdWxlcy9DYXZhXCI7XG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiYWdzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENhdmFPdmVybGF5KHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pIHtcbiAgICBjb25zdCB7IExFRlQsIFJJR0hULCBCT1RUT00gfSA9IEFzdGFsLldpbmRvd0FuY2hvcjtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDx3aW5kb3dcbiAgICAgICAgICAgIG5hbWU9J0NhdmFPdmVybGF5J1xuICAgICAgICAgICAgbGF5ZXI9e0FzdGFsLkxheWVyLkJPVFRPTX1cbiAgICAgICAgICAgIGdka21vbml0b3I9e2dka21vbml0b3J9XG4gICAgICAgICAgICBhbmNob3I9e1JJR0hUIHwgTEVGVCB8IEJPVFRPTX1cbiAgICAgICAgICAgIHZpc2libGU9e2NhdmEudmlzaWJpbGl0eVN0YXRlfVxuICAgICAgICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICAgICAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgICA+XG4gICAgICAgICAgICA8Ym94IGhhbGlnbj17R3RrLkFsaWduLkZJTEx9IHZhbGlnbj17R3RrLkFsaWduLkVORH0gaGVpZ2h0UmVxdWVzdD17TWF0aC5mbG9vcihnZGttb25pdG9yLmdldF9nZW9tZXRyeSgpLmhlaWdodCAqIC4yNSl9PlxuICAgICAgICAgICAgICAgIHtjYXZhLkNhdmEoW1wiQ2F2YU92ZXJsYXlcIl0pfVxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvd2luZG93PlxuICAgICk7XG59XG4iLCAiaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgQXN0YWwsIEdkaywgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuXG5mdW5jdGlvbiBFbnRyeSh7IGJpbmQsIGFjdGlvbiB9OiB7IGJpbmQ6IHN0cmluZywgYWN0aW9uOiBzdHJpbmcgfSkge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydFbnRyeSddfSBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn0gaG9tb2dlbmVvdXM+XG4gICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiQmluZFwiXX0gbGFiZWw9e2JpbmR9IC8+XG4gICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiQWN0aW9uXCJdfSBsYWJlbD17YWN0aW9ufSAvPlxuICAgICAgICA8L2JveD5cbiAgICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDaGVhdHNoZWV0KHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pIHtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDx3aW5kb3dcbiAgICAgICAgICAgIG5hbWU9J0NoZWF0c2hlZXQnXG4gICAgICAgICAgICBsYXllcj17QXN0YWwuTGF5ZXIuT1ZFUkxBWX1cbiAgICAgICAgICAgIGdka21vbml0b3I9e2dka21vbml0b3J9XG4gICAgICAgICAgICBrZXltb2RlPXtBc3RhbC5LZXltb2RlLk9OX0RFTUFORH1cbiAgICAgICAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICAgICAgICAkPXsoc2VsZikgPT4gb25DbGVhbnVwKCgpID0+IHNlbGYuZGVzdHJveSgpKX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPEd0ay5FdmVudENvbnRyb2xsZXJLZXkgb25LZXlQcmVzc2VkPXsoeyB3aWRnZXQgfSwga2V5dmFsOiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICBzd2l0Y2goa2V5dmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgR2RrLktFWV9Fc2NhcGU6XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWRnZXQuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG5cbiAgICAgICAgICAgICAgICB9fX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snQ2hlYXRzaGVldCddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17WydUaXRsZSddfSBsYWJlbD17J0NoZWF0c2hlZXQnfSAvPlxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydIYWxmJ119IGhvbW9nZW5lb3VzPlxuICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snU2VjdGlvbiddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX0gbGFiZWw9e1wiQ2xpZW50cyBXb3JrZmxvd1wifSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgUFwiIGFjdGlvbj1cIlBpbiBjbGllbnRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBRXCIgYWN0aW9uPVwiQ2xvc2UgY2xpZW50XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgVlwiIGFjdGlvbj1cIlRvZ2dsZSBmbG9hdGluZ1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIEZcIiBhY3Rpb249XCJUb2dnbGUgZnVsbHNjcmVlblwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIEpcIiBhY3Rpb249XCJUb2dnbGUgRHdpbmRsZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFx1RjA2MlwiIGFjdGlvbj1cIk1vdmUgZm9jdXMgdG8gdGhlIGNsaWVudCBhdCBhYm92ZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFx1RjA2M1wiIGFjdGlvbj1cIk1vdmUgZm9jdXMgdG8gdGhlIGNsaWVudCBhdCBiZWxvd1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFx1RjA2MFwiIGFjdGlvbj1cIk1vdmUgZm9jdXMgdG8gdGhlIGNsaWVuRml4YXIgY2xpZW50ZXQgYXQgbGVmdFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFx1RjA2MVwiIGFjdGlvbj1cIk1vdmUgZm9jdXMgdG8gdGhlIGNsaWVudCBhdCByaWdodFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydTZWN0aW9uJ119IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfSBsYWJlbD17XCJXb3Jrc3BhY2VzIFdvcmtmbG93XCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiQ1RSTCArIFNVUEVSICsgXHVGMDYwXCIgYWN0aW9uPVwiR28gdG8gd29ya3NwYWNlIGF0IHRoZSBsZWZ0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIkNUUkwgKyBTVVBFUiArIFx1RjA2MVwiIGFjdGlvbj1cIkdvIHRvIHdvcmtzcGFjZSBhdCB0aGUgcmlnaHRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiQ1RSTCArIFNISUZUICsgU1VQRVIgKyBcdUYwNjBcIiBhY3Rpb249XCJNb3ZlIHRvIHdvcmtzcGFjZSBhdCB0aGUgbGVmdCBzaWRlXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIkNUUkwgKyBTSElGVCArIFNVUEVSICsgXHVGMDYxXCIgYWN0aW9uPVwiTW92ZSB0byB3b3Jrc3BhY2UgYXQgdGhlIHJpZ2h0IHNpZGVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBTXCIgYWN0aW9uPVwiR28gdG8gc3BlY2lhbCB3b3Jrc3BhY2VcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBTSElGVCArIFNcIiBhY3Rpb249XCJNb3ZlIHRvIHNwZWNpYWwgd29ya3NwYWNlXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snSGFsZiddfSBob21vZ2VuZW91cz5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ1NlY3Rpb24nXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiU3VidGl0bGVcIl19IGxhYmVsPXtcIkRlZmF1bHQgUHJvZ3JhbXNcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIEVudGVyXCIgYWN0aW9uPVwiVGVybWluYWxcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBSXCIgYWN0aW9uPVwiTGF1bmNoZXJcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBFXCIgYWN0aW9uPVwiT3BlbiBGaWxlIE1hbmFnZXJcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBEXCIgYWN0aW9uPVwiVG9nZ2xlIERvY2tcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBDXCIgYWN0aW9uPVwiVG9nZ2xlIENoZWF0c2hlZXRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBFU0NcIiBhY3Rpb249XCJUb2dnbGUgV2xvZ291dFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydTZWN0aW9uJ119IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfSBsYWJlbD17XCJPdGhlcnNcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJQUklOVFwiIGFjdGlvbj1cIlNjcmVlbnNob3Qgb3V0cHV0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgUFJJTlRcIiBhY3Rpb249XCJTY3JlZW5zaG90IHJlZ2lvblwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIE1cIiBhY3Rpb249XCJMb2dvdXRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBMXCIgYWN0aW9uPVwiTG9jayBTY3JlZW5cIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvd2luZG93PlxuICAgICk7XG59XG4iLCAiaW1wb3J0IHN0eWxlIGZyb20gXCIuL3N0eWxlcy9pbmRleC5zY3NzXCI7XG5pbXBvcnQgQmFyIGZyb20gXCIuL3dpZGdldC9CYXJcIjtcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgRm9yLCBUaGlzIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IENhdmFPdmVybGF5IGZyb20gXCIuL3dpZGdldC9DYXZhT3ZlcmxheVwiO1xuaW1wb3J0IENoZWF0c2hlZXQgZnJvbSBcIi4vd2lkZ2V0L0NoZWF0c2hlZXRcIjtcblxuZnVuY3Rpb24gbWFpbigpIHtcbiAgICBjb25zdCBtb25pdG9ycyA9IGNyZWF0ZUJpbmRpbmcoYXBwLCBcIm1vbml0b3JzXCIpO1xuICAgIHJldHVybiAoXG4gICAgICAgIDxGb3IgZWFjaD17bW9uaXRvcnN9PlxuICAgICAgICAgICAge21vbml0b3IgPT4gKFxuICAgICAgICAgICAgICAgIDxUaGlzIHRoaXM9e2FwcH0+XG4gICAgICAgICAgICAgICAgICAgIDxCYXIgZ2RrbW9uaXRvcj17bW9uaXRvcn0gLz5cbiAgICAgICAgICAgICAgICAgICAgPENhdmFPdmVybGF5IGdka21vbml0b3I9e21vbml0b3J9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxDaGVhdHNoZWV0IGdka21vbml0b3I9e21vbml0b3J9IC8+XG4gICAgICAgICAgICAgICAgPC9UaGlzPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9Gb3I+XG4gICAgKTtcbn1cblxuYXBwLnN0YXJ0KHsgY3NzOiBzdHlsZSwgbWFpbjogbWFpbiB9KTtcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBQTs7O0FDQUEsT0FBTyxXQUFXO0FBQ2xCLE9BQU8sU0FBUztBQUNoQixPQUFPLFNBQVM7OztBQ0ZoQixPQUFPLGtCQUFrQjtBQUN6QixPQUFPLFVBQVU7OztBQ2FWLFNBQVMsa0JBQWtCLFNBQXlCO0FBQ3ZELE1BQUcsV0FBVyxNQUFNO0FBQ2hCLFdBQU8sR0FBRyxLQUFLLE1BQU0sVUFBVSxJQUFJLENBQUMsSUFBSSxLQUFLLE1BQU8sVUFBVSxPQUFRLEVBQUUsQ0FBQztBQUFBLEVBQzdFO0FBRUEsU0FBTyxHQUFHLEtBQUssTUFBTSxVQUFVLEVBQUUsQ0FBQztBQUN0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QVU7QUFBQSxjQUNsRCxxQkFBQyxTQUFJLGFBQWEsSUFBSSxZQUFZLFVBQzlCO0FBQUEsb0NBQUMsU0FBTSxNQUFLLFNBQVEsUUFBTyxxQkFBb0I7QUFBQSxnQkFDL0Msb0JBQUMsU0FBTSxNQUFLLGlCQUFnQixRQUFPLHFCQUFvQjtBQUFBLGdCQUN2RCxvQkFBQyxTQUFNLE1BQUssYUFBWSxRQUFPLFVBQVM7QUFBQSxnQkFDeEMsb0JBQUMsU0FBTSxNQUFLLGFBQVksUUFBTyxlQUFjO0FBQUEsaUJBQ2pEO0FBQUEsZUFDSjtBQUFBLGFBQ0o7QUFBQSxXQUNKO0FBQUE7QUFBQTtBQUFBLEVBQ0o7QUFFUjs7O0FDaEZBLFNBQVMsT0FBTztBQUNaLFFBQU0sV0FBVyxjQUFjLGFBQUssVUFBVTtBQUM5QyxTQUNJLG9CQUFDLE9BQUksTUFBTSxVQUNOLHVCQUNHLHFCQUFDLFFBQUssTUFBTSxhQUNSO0FBQUEsd0JBQUMsT0FBSSxZQUFZLFNBQVM7QUFBQSxJQUMxQixvQkFBQyxlQUFZLFlBQVksU0FBUztBQUFBLElBQ2xDLG9CQUFDLGNBQVcsWUFBWSxTQUFTO0FBQUEsS0FDckMsR0FFUjtBQUVSO0FBRUEsWUFBSSxNQUFNLEVBQUUsS0FBSyxnQkFBTyxLQUFXLENBQUM7IiwKICAibmFtZXMiOiBbIkdPYmplY3QiLCAic2V0IiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJHT2JqZWN0IiwgIm1vZCIsICJHT2JqZWN0IiwgInJlbW92ZSIsICJBc3RhbElPIiwgIkFzdGFsSU8iLCAiaW50ZXJ2YWwiLCAic2V0IiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiR2lvIiwgIkdPYmplY3QiLCAiR3RrIiwgIkdpbyIsICJjc3MiLCAiR09iamVjdCIsICJpbmRleCIsICJHdGsiLCAiQXN0YWwiLCAiR0xpYiIsICJHdGsiLCAiQXN0YWwiLCAic25ha2VpZnkiLCAibW9kIiwgInBhdGNoIiwgIkh5cHJsYW5kIiwgIldwIiwgIkdPYmplY3QiLCAibWFpbiIsICJHdGsiLCAiR0xpYiIsICJBc3RhbCIsICJHTGliIiwgInBvbGxUaW1lIiwgIkdMaWIiLCAiR0xpYiIsICJHTGliIiwgIkdMaWIiLCAiQXN0YWwiLCAicGF0aCIsICJwYXRoIiwgIkFzdGFsIiwgIkdMaWIiLCAiR2lvIiwgIkdMaWIiLCAiR0xpYiIsICJTd3d3IiwgIlJlc2l6ZSIsICJGaWx0ZXIiLCAiVHJhbnNpdGlvblR5cGUiLCAiVHJhbnNpdGlvblBvcyIsICJwYXRoIiwgInBhdGgiLCAiR0xpYiIsICJwb2xsVGltZSIsICJHaW8iLCAid29ya3NwYWNlcyIsICJHT2JqZWN0IiwgInYiLCAiR09iamVjdCJdCn0K

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@