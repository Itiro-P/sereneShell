#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gc2-ags.js"

cat <<EOF | base64 --decode > $file
// sass:/home/itiro/.config/ags/styles/index.scss
var styles_default = '/* Catppuccin mocha colors */\n.ControlCenter, .Media, .Workspaces, .AudioControl, .DateTimeCalendar {\n  background: none;\n  padding: 4px;\n  margin: 2px;\n  border: none;\n  border-radius: 18px;\n}\n.ControlCenter *, .Media *, .Workspaces *, .AudioControl *, .DateTimeCalendar * {\n  margin: 0px 2px;\n}\n\n.TrayItem, .Workspaces .Workspace, .Workspaces .MoreWorkspacesButton, .Mixer .MixerEntry .Icon, .MemoryUsage, .CpuUsage, .Battery {\n  border-radius: 100%;\n  min-width: 24px;\n  min-height: 24px;\n}\n\n.Mixer .MixerEntry .Slider {\n  border-radius: 20px;\n  min-width: 160px;\n  min-height: 20px;\n}\n\n.DateTimeCalendar {\n  font-weight: bold;\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar * {\n  all: unset;\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar label.day-number, .DateTimeCalendar .Calendar label.other-month, .DateTimeCalendar .Calendar label.today {\n  border-radius: 10%;\n}\n.DateTimeCalendar .Calendar header {\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.DateTimeCalendar .Calendar button {\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar .Calendar button * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar button:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar .Calendar button:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid {\n  background-color: rgba(69, 71, 90, 0.7);\n}\n.DateTimeCalendar .Calendar grid label.other-month {\n  opacity: 0.5;\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.other-month:hover {\n  background: #f5e0dc;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.day-number {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.day-number:hover {\n  background: #cba6f7;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.today {\n  color: #1e1e2e;\n  background-color: #b4befe;\n}\n\n.SystemMonitor * {\n  margin: 0px 2px;\n  font-weight: bold;\n}\n\n.MemoryUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.MemoryUsage * {\n  color: #fab387;\n}\n.MemoryUsage:hover {\n  background: #fab387;\n}\n.MemoryUsage:hover * {\n  color: #1e1e2e;\n}\n\n.CpuUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.CpuUsage * {\n  color: #a6e3a1;\n}\n.CpuUsage:hover {\n  background: #a6e3a1;\n}\n.CpuUsage:hover * {\n  color: #1e1e2e;\n}\n\n.BatteryNormal {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryNormal * {\n  color: #b4befe;\n}\n.BatteryNormal:hover {\n  background: #b4befe;\n}\n.BatteryNormal:hover * {\n  color: #11111b;\n}\n\n.BatteryCritical {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryCritical * {\n  color: #f38ba8;\n}\n.BatteryCritical:hover {\n  background: #f38ba8;\n}\n.BatteryCritical:hover * {\n  color: #11111b;\n}\n\n.BatteryPopover {\n  background-color: rgba(49, 50, 68, 0.8);\n  padding: 2px;\n  border-radius: 16px;\n}\n.BatteryPopover .Title, .BatteryPopover .BatteryLife, .BatteryPopover .ToggleButton {\n  margin: 2px;\n}\n.BatteryPopover .Title {\n  color: #cdd6f4;\n  font-weight: bold;\n}\n.BatteryPopover .BatteryLife {\n  color: #cdd6f4;\n}\n.BatteryPopover .ToggleButton {\n  margin: 2px 4px;\n  padding: 2px;\n  border-radius: 10px;\n  background: rgba(137, 180, 250, 0.75);\n  color: rgba(30, 30, 46, 0.75);\n  transition: all 0.3s ease;\n}\n.BatteryPopover .ToggleButton:hover {\n  background: rgba(30, 30, 46, 0.75);\n  color: rgba(137, 180, 250, 0.75);\n}\n\n.AudioControl {\n  transition: all 0.3s ease;\n  background: none;\n}\n.AudioControl * {\n  color: #cdd6f4;\n}\n.AudioControl:hover {\n  background: #89b4fa;\n}\n.AudioControl:hover * {\n  color: #1e1e2e;\n}\n\n.Mixer {\n  padding: 6px;\n  border-radius: 16px;\n  background-color: rgba(49, 50, 68, 0.8);\n  border: none;\n}\n.Mixer .Label {\n  font-weight: bold;\n  font-size: 24px;\n  margin: 6px;\n  color: #cdd6f4;\n}\n.Mixer .MixerEntry {\n  background-color: #45475a;\n  padding: 2px;\n  margin: 2px;\n  border: none;\n  border-radius: 16px;\n}\n.Mixer .MixerEntry .Icon {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.Mixer .MixerEntry .Icon:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n.Mixer .MixerEntry .Slider {\n  background-color: #585b70;\n}\n.Mixer .MixerEntry .Slider highlight {\n  background-color: #89b4fa;\n}\n\n.Workspaces {\n  background-color: rgba(49, 50, 68, 0.8);\n  border-radius: 18px;\n}\n.Workspaces .Workspace, .Workspaces .MoreWorkspacesButton {\n  font-weight: bold;\n  background-color: rgba(17, 17, 27, 0.8);\n  border: none;\n  margin: 2px;\n  transition: all 0.2s ease;\n}\n.Workspaces .MoreWorkspacesButton {\n  transition: all 0.3s ease;\n  background: none;\n}\n.Workspaces .MoreWorkspacesButton * {\n  color: #cdd6f4;\n}\n.Workspaces .MoreWorkspacesButton:hover {\n  background: #89b4fa;\n}\n.Workspaces .MoreWorkspacesButton:hover * {\n  color: #1e1e2e;\n}\n.Workspaces .Active {\n  background-color: rgba(137, 180, 250, 0.9);\n}\n.Workspaces .Active label {\n  color: #11111b;\n}\n.Workspaces .Inactive {\n  transition: all 0.2s ease;\n}\n.Workspaces .Inactive:hover {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.Workspaces .WorkspacePopover {\n  border-radius: 16px;\n  padding: 6px;\n  background-color: rgba(49, 50, 68, 0.9);\n  margin: 2px;\n}\n\n.TrayItem {\n  margin: 2px;\n  -gtk-icon-size: 24px;\n  transition: all 0.25s ease;\n}\n.TrayItem:hover {\n  background-color: rgba(137, 180, 250, 0.8);\n  color: #11111b;\n}\n.TrayItem:active {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.TrayItem popover.menu {\n  margin: 10px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n.TrayItem popover.menu modelbutton {\n  padding: 2px;\n  border-radius: 4px;\n  margin: 0 2px;\n}\n.TrayItem popover.menu modelbutton:hover {\n  background: rgba(69, 71, 90, 0.2);\n}\n.TrayItem popover.menu modelbutton:active {\n  background: rgba(69, 71, 90, 0.4);\n}\n\n.Media {\n  margin: 2px;\n  border-radius: 20px;\n  transition: all 0.3s ease;\n  background: none;\n}\n.Media * {\n  color: #cdd6f4;\n}\n.Media:hover {\n  background: #89b4fa;\n}\n.Media:hover * {\n  color: #11111b;\n}\n.Media .MprisPopover {\n  background-color: rgba(24, 24, 37, 0.8);\n}\n.Media .MprisPopover .MprisPlayer {\n  padding: 16px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata {\n  margin-left: 12px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Title {\n  font-size: 20px;\n  color: #cdd6f4;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Artist {\n  font-size: 16px;\n  color: rgba(205, 214, 244, 0.7);\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Album {\n  font-size: 14px;\n  color: rgba(205, 214, 244, 0.5);\n  font-style: italic;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart {\n  margin-top: 12px;\n  padding: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider {\n  padding: 4px;\n  background-color: rgba(30, 30, 46, 0.6);\n  border: none;\n  border-radius: 14px;\n  margin: 5px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider {\n  min-width: 160px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider highlight {\n  background: #74c7ec;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .TimeLabel {\n  color: #cdd6f4;\n  margin-left: 10px;\n  font-size: 14px;\n  opacity: 0.8;\n  min-width: 40px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next {\n  margin: 4px;\n  border: none;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  background: #1e1e2e;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next image {\n  margin: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next * {\n  color: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover {\n  background: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover * {\n  color: #1e1e2e;\n}\n.Media .MprisPopover .Cava, .Media .MprisPopover .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.Cava, .Cava > *, .CavaOverlay, .CavaOverlay > * {\n  margin: 0;\n  padding: 0;\n}\n\n.Cava, .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.CavaOverlay {\n  border: none;\n  border-radius: 40px 40px 0px 0px;\n  background: none;\n  color: rgba(137, 180, 250, 0.6);\n  transition: all 0.3s ease;\n}\n.CavaOverlay:hover {\n  background: rgba(137, 180, 250, 0.6);\n  color: #1e1e2e;\n}\n\ntooltip {\n  padding: 6px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n\n.ControlCenter {\n  transition: all 0.3s ease;\n}\n.ControlCenter .Label {\n  font-size: 20px;\n}\n.ControlCenter:hover {\n  background-color: #89b4fa;\n}\n.ControlCenter:hover .Label {\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover {\n  padding: 5px;\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.ControlCenter .ControlCenterPopover .Subtitle {\n  font-size: 20px;\n  margin: 4px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option {\n  padding: 2px;\n  margin: 2px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option switch {\n  padding: 2px;\n  margin: 2px;\n  background-color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option switch image, .ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option switch slider {\n  background-color: #89b4fa;\n  min-width: 20px;\n  min-height: 5px;\n}\n\n.SelectorIndicator {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.SelectorIndicator .Option {\n  padding: 2px;\n  margin: 2px;\n}\n.SelectorIndicator .Option switch {\n  padding: 2px;\n  margin: 2px;\n  background-color: #1e1e2e;\n}\n.SelectorIndicator .Option switch image, .SelectorIndicator .Option switch slider {\n  background-color: #89b4fa;\n  min-width: 20px;\n  min-height: 5px;\n}\n\n.Cheatsheet {\n  padding: 10px;\n  border: 2px solid #89b4fa;\n  border-radius: 20px;\n  background-color: rgba(30, 30, 46, 0.8);\n}\n.Cheatsheet .Title {\n  font-weight: bolder;\n  font-size: 80px;\n}\n.Cheatsheet .Subtitle {\n  font-weight: bold;\n  font-size: 40px;\n}\n.Cheatsheet .Section {\n  margin: 4px;\n  padding: 4px;\n}\n.Cheatsheet .Entry {\n  margin: 3px;\n  border-radius: 6px;\n}\n.Cheatsheet .Entry .Bind, .Cheatsheet .Entry .Action {\n  padding: 2px;\n}\n.Cheatsheet .Entry .Bind {\n  transition: all 0.2s ease;\n  font-weight: bold;\n  color: #89b4fa;\n  background-color: #313244;\n}\n.Cheatsheet .Entry .Action {\n  transition: all 0.2s ease;\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Bind {\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Action {\n  color: #89b4fa;\n  background-color: #313244;\n}\n\n/* Resetting every decoration applied earlier */\n* {\n  font-family: "Monospace";\n  font-size: 16px;\n  -gtk-icon-size: 24px;\n  color: #cdd6f4;\n  background: none;\n  border: none;\n  box-shadow: none;\n  outline: none;\n  margin: 0;\n  padding: 0;\n}\n\n.Bar {\n  background: #1e1e2e;\n  border-radius: 28px;\n  margin: 4px 6px;\n}';

// ../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// modules/SystemMonitor.tsx
import AstalBattery from "gi://AstalBattery";
import GTop from "gi://GTop?version=2.0";

// services/TimeFormatter.ts
function formatTimeVerbose(seconds) {
  if (seconds >= 3600) {
    return `${Math.floor(seconds / 3600)}h${Math.floor(seconds % 3600 / 60)}m`;
  }
  return `${Math.floor(seconds / 60)}m`;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject2 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject from "gi://GObject";
import Gio from "gi://Gio";
import GLib from "gi://GLib";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputed(deps, transform) {
  let dispose;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const value = dep.get();
          if (cache[i] !== value) {
            cache[i] = dep.get();
            Array.from(subscribers).forEach((cb) => cb());
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  return new Accessor(get, subscribe);
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject2.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject3.Object, _b = GObject3.signals, _a = GObject3.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function callback(v) {
    for (const child of fragment.children) {
      fragment.removeChild(child);
      if (typeof cleanup === "function") {
        cleanup(child);
      } else if (cleanup !== null) {
        env.defaultCleanup(child);
      }
      if (scope) scope.dispose();
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    scope.dispose();
    dispose();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
function This({
  this: self,
  children,
  $type,
  ...props
}) {
  const cleanup = new Array();
  if ($type) setType(self, $type);
  for (const [key, value] of Object.entries(props)) {
    if (key === "css") {
      if (value instanceof Accessor) {
        env.setCss(self, value.get());
        cleanup.push(value.subscribe(() => env.setCss(self, value.get())));
      } else if (typeof value === "string") {
        env.setCss(self, value);
      }
    } else if (key === "class") {
      if (value instanceof Accessor) {
        env.setClass(self, value.get());
        cleanup.push(value.subscribe(() => env.setClass(self, value.get())));
      } else if (typeof value === "string") {
        env.setClass(self, value);
      }
    } else if (key.startsWith("on")) {
      const id = key.startsWith("onNotify") ? self.connect(`notify::${kebabify(key.slice(8))}`, value) : self.connect(kebabify(key.slice(2)), value);
      cleanup.push(() => self.disconnect(id));
    } else if (value instanceof Accessor) {
      set(self, key, value.get());
      cleanup.push(value.subscribe(() => set(self, key, value.get())));
    } else {
      set(self, key, value);
    }
  }
  if (Array.isArray(children)) {
    for (const ch of children) {
      if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
        env.addChild(self, ch, -1);
      }
    }
  } else {
    const ch = children;
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      env.addChild(self, ch, -1);
    }
  }
  if (cleanup.length > 0) {
    onCleanup(() => cleanup.forEach((cb) => cb()));
  }
  return self;
}

// ../../../../usr/share/ags/js/lib/time.ts
import AstalIO2 from "gi://AstalIO";

// ../../../../usr/share/ags/js/lib/process.ts
import AstalIO from "gi://AstalIO";
var Process = AstalIO.Process;
function exec(cmd) {
  return Array.isArray(cmd) ? AstalIO.Process.execv(cmd) : AstalIO.Process.exec(cmd);
}
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// ../../../../usr/share/ags/js/lib/time.ts
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk2 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject4 from "gi://GObject";
var dummyBuilder = new Gtk2.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk2.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk2.Widget && parent instanceof Gtk2.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk2.Popover && parent instanceof Gtk2.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk2.MenuButton || parent instanceof Gtk2.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk2.Window && parent instanceof Gtk2.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk2.TextBuffer && parent instanceof Gtk2.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if (parent instanceof Gtk2.Widget && child instanceof Gtk2.EventController) {
    return parent.remove_controller(child);
  }
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk2.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk2.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject4.Object)) {
      child = Gtk2.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk2.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk3.Box,
  button: Gtk3.Button,
  centerbox: Gtk3.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk3.DrawingArea,
  entry: Gtk3.Entry,
  image: Gtk3.Image,
  label: Gtk3.Label,
  levelbar: Gtk3.LevelBar,
  menubutton: Gtk3.MenuButton,
  overlay: Gtk3.Overlay,
  popover: Gtk3.Popover,
  revealer: Gtk3.Revealer,
  scrolledwindow: Gtk3.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk3.Stack,
  switch: Gtk3.Switch,
  togglebutton: Gtk3.ToggleButton,
  window: Astal2.Window
});

// modules/SystemMonitor.tsx
var pollTime = 3e3;
var SystemMonitorClass = class {
  constructor() {
    this.battery = AstalBattery.get_default();
    this.batteryIcon = createBinding(this.battery, "batteryIconName");
    this.batteryPercentage = createBinding(this.battery, "percentage");
    this.batteryCharging = createBinding(this.battery, "charging");
    this.batteryCritical = createComputed([this.batteryPercentage, this.batteryCharging], (p, c) => ["Battery", p <= 0.3 && !c ? "BatteryCritical" : "BatteryNormal"]);
    this.batteryLifeLabel = this.batteryCharging.as((c) => c ? `Charging: ${formatTimeVerbose(this.battery.time_to_full)} left` : `Discharging: ${formatTimeVerbose(this.battery.time_to_empty)} left`);
    this.cpuSource = new GTop.glibtop_cpu();
    this.memSource = new GTop.glibtop_mem();
    this.cpuData = { prev: { user: 0, sys: 0, total: 0 }, diff: { user: 0, sys: 0, total: 0 } };
    this._metrics = createPoll({ cpu: 0, mem: 0 }, pollTime, () => {
      try {
        GTop.glibtop_get_cpu(this.cpuSource);
        GTop.glibtop_get_mem(this.memSource);
        const cpu = this.cpuSource;
        const prev = this.cpuData.prev;
        this.cpuData.diff = {
          user: cpu.user - prev.user,
          sys: cpu.sys - prev.sys,
          total: cpu.total - prev.total
        };
        this.cpuData.prev = {
          user: cpu.user,
          sys: cpu.sys,
          total: cpu.total
        };
        const cpuDiff = this.cpuData.diff;
        const cpuPercent = cpuDiff.total > 0 ? Math.round((cpuDiff.user + cpuDiff.sys) / cpuDiff.total * 100) : 0;
        const memPercent = this.memSource.total > 0 ? Math.round(this.memSource.user / this.memSource.total * 100) : 0;
        return { cpu: Math.min(100, cpuPercent), mem: Math.min(100, memPercent) };
      } catch (error) {
        console.warn("Error when obtaining system metrics:", error);
        return { cpu: 0, mem: 0 };
      }
    });
  }
  indicator(widgets, cssClasses) {
    const [hoveredChild, setHoveredChild] = createState(widgets.icon);
    const hover = new Gtk.EventControllerMotion();
    const onEnter = hover.connect("enter", () => setHoveredChild(widgets.label));
    const onLeave = hover.connect("leave", () => setHoveredChild(widgets.icon));
    onCleanup(() => {
      hover.disconnect(onEnter);
      hover.disconnect(onLeave);
    });
    return /* @__PURE__ */ jsx("box", { $: (self) => self.add_controller(hover), children: /* @__PURE__ */ jsxs(
      "stack",
      {
        cssClasses,
        visibleChild: hoveredChild,
        transitionType: Gtk.StackTransitionType.CROSSFADE,
        transitionDuration: 200,
        children: [
          widgets.icon,
          widgets.label
        ]
      }
    ) });
  }
  get SystemMonitor() {
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["SystemMonitor"], children: [
      this.indicator(
        {
          icon: /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\uEC19" }),
          label: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.cpu}%`), widthChars: 4 })
        },
        ["CpuUsage"]
      ),
      this.indicator(
        {
          icon: /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\u{F061A}" }),
          label: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.mem}%`), widthChars: 4 })
        },
        ["MemoryUsage"]
      ),
      this.indicator(
        {
          icon: /* @__PURE__ */ jsx("image", { cssClasses: ["BatteryIcon"], iconName: this.batteryIcon }),
          label: /* @__PURE__ */ jsx("label", { cssClasses: ["BatteryUsageLabel"], label: this.batteryPercentage.as((p) => `${Math.round(Math.min(1, p) * 100) ?? 0}%`), widthChars: 4 })
        },
        this.batteryCritical
      )
    ] });
  }
};
var systemMonitor = new SystemMonitorClass();
var SystemMonitor_default = systemMonitor;

// modules/SystemTray.tsx
import AstalTray from "gi://AstalTray?version=0.1";
var SystemTrayClass = class {
  constructor() {
    this.setupTrayItem = (btn, item) => {
      btn.menuModel = item.menuModel;
      btn.insert_action_group("dbusmenu", item.actionGroup);
      const agId = item.connect("notify::action-group", () => {
        btn.insert_action_group("dbusmenu", item.actionGroup);
      });
      const mmId = item.connect("notify::menu-model", () => {
        btn.set_menu_model(item.menuModel);
      });
      onCleanup(() => {
        item.disconnect(agId);
        item.disconnect(mmId);
      });
    };
    this.default = AstalTray.get_default();
    this.itemsBinding = createBinding(this.default, "items");
  }
  TrayItem({ item }) {
    return /* @__PURE__ */ jsx(
      "menubutton",
      {
        cssClasses: ["TrayItem"],
        tooltipMarkup: createBinding(item, "tooltipMarkup"),
        $: (self) => this.setupTrayItem(self, item),
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER,
        children: /* @__PURE__ */ jsx("image", { gicon: createBinding(item, "gicon") })
      }
    );
  }
  get SystemTray() {
    return /* @__PURE__ */ jsx("box", { cssClasses: ["SystemTray"], children: /* @__PURE__ */ jsx(For, { each: this.itemsBinding, children: (item) => this.TrayItem({ item }) }) });
  }
};
var systemTray = new SystemTrayClass();
var SystemTray_default = systemTray;

// modules/Media.tsx
import AstalMpris from "gi://AstalMpris?version=0.1";
var PlayerButtonIcons = {
  playing: "media-playback-start-symbolic",
  paused: "media-playback-pause-symbolic",
  stopped: "media-playback-stop-symbolic",
  next: "media-skip-forward-symbolic",
  previous: "media-skip-backward-symbolic"
};
var MediaClass = class {
  constructor() {
    this.mpris = AstalMpris.get_default();
    this._activePlayerData = createBinding(this.mpris, "players").as(
      (players) => {
        let playing = null;
        let paused = null;
        let final = null;
        for (const player of players) {
          const status = player.get_playback_status();
          if (status === AstalMpris.PlaybackStatus.PLAYING) {
            playing = player;
            break;
          } else if (status === AstalMpris.PlaybackStatus.PAUSED) {
            paused = player;
          }
        }
        final = playing || paused;
        if (final !== null) {
          const status = createBinding(final, "playbackStatus");
          const canGoNext = createBinding(final, "canGoNext");
          const canGoPrevious = createBinding(final, "canGoPrevious");
          const canPause = createBinding(final, "canPause");
          const canPlay = createBinding(final, "canPlay");
          return {
            active: true,
            title: createBinding(final, "title"),
            artist: createBinding(final, "artist"),
            album: createBinding(final, "album"),
            statusIcon: status.as((st) => this.getPlayerStatusIcon(st === AstalMpris.PlaybackStatus.PLAYING ? "paused" : "playing")),
            statusText: status.as((st) => this.getPlayerStatus(st)),
            next: () => {
              if (canGoNext.get()) final.next();
            },
            previous: () => {
              if (canGoPrevious.get()) final.previous();
            },
            playPause: () => {
              if (canPause.get() || canPlay.get()) final.play_pause();
            }
          };
        }
        return {
          active: false,
          title: "Nenhum player ativo",
          artist: "",
          album: "",
          statusIcon: PlayerButtonIcons.stopped,
          statusText: this.getPlayerStatus(AstalMpris.PlaybackStatus.STOPPED),
          next: () => {
          },
          previous: () => {
          },
          playPause: () => {
          }
        };
      }
    );
  }
  getPlayerStatus(status) {
    switch (status) {
      case AstalMpris.PlaybackStatus.PLAYING:
        return "Playing";
      case AstalMpris.PlaybackStatus.PAUSED:
        return "Paused";
      default:
        return "Nothing Playing";
    }
  }
  getPlayerStatusIcon(status) {
    switch (status) {
      case "previous":
        return PlayerButtonIcons.previous;
      case "playing":
        return PlayerButtonIcons.playing;
      case "paused":
        return PlayerButtonIcons.paused;
      case "stopped":
        return PlayerButtonIcons.stopped;
      case "next":
        return PlayerButtonIcons.next;
      default:
        return PlayerButtonIcons.stopped;
    }
  }
  get Media() {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: this._activePlayerData, children: (player) => {
      return /* @__PURE__ */ jsx(
        "menubutton",
        {
          alwaysShowArrow: false,
          cssClasses: ["Media"],
          sensitive: player.active,
          popover: /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { cssClasses: ["MprisPopover"], overflow: Gtk.Overflow.HIDDEN, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["MprisPlayer"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Metadata"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: player.title, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Artist"], label: player.artist, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Album"], label: player.album, ellipsize: 3, maxWidthChars: 15, widthChars: 30 })
            ] }),
            /* @__PURE__ */ jsx("box", { cssClasses: ["LowerPart"], orientation: Gtk.Orientation.VERTICAL, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Controllers"], halign: Gtk.Align.CENTER, children: [
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: ["Previous"],
                  iconName: PlayerButtonIcons.previous,
                  onClicked: player.previous
                }
              ),
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: ["PlayPause"],
                  iconName: player.statusIcon,
                  onClicked: player.playPause
                }
              ),
              /* @__PURE__ */ jsx(
                "button",
                {
                  cssClasses: ["Next"],
                  iconName: PlayerButtonIcons.next,
                  onClicked: player.next
                }
              )
            ] }) })
          ] }) }) }),
          children: /* @__PURE__ */ jsx("label", { label: player.statusText, widthChars: 12 })
        }
      );
    } }) });
  }
};
var media = new MediaClass();
var Media_default = media;

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib2 from "gi://GLib?version=2.0";
import Gtk4 from "gi://Gtk?version=4.0";
import Astal3 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/lib/overrides.ts
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify2(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland: Hyprland2, Monitor, Workspace }) => {
  patch(Hyprland2.prototype, "binds");
  patch(Hyprland2.prototype, "monitors");
  patch(Hyprland2.prototype, "workspaces");
  patch(Hyprland2.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp: Wp2, Audio, Video }) => {
  patch(Wp2.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../usr/share/ags/js/lib/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";
import IO from "gi://AstalIO";
import GObject5 from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject5.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main: main2, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main2?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk4.init();
GLib2.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal3.Application);

// modules/DateTime.tsx
import GLib3 from "gi://GLib?version=2.0";
var pollTime2 = 6e4;
var DateTimeClass = class {
  constructor() {
    this.formatterTime = "%H:%M";
    this.formatterDate = "Today is: %A, %d de %B de %Y";
    this._dateTime = createPoll({ date: "", time: "" }, pollTime2, () => {
      const now = GLib3.DateTime.new_now_local();
      return {
        date: now.format(this.formatterDate),
        time: now.format(this.formatterTime)
      };
    });
  }
  get DateTimePopover() {
    return /* @__PURE__ */ jsx(Gtk.Popover, { children: /* @__PURE__ */ jsx(Gtk.Calendar, { cssClasses: ["Calendar"] }) });
  }
  get DateTime() {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["DateTimeCalendar"], popover: this.DateTimePopover, children: /* @__PURE__ */ jsx("label", { cssClasses: ["Time"], label: this._dateTime.as((t) => `\uF017 ${t.time}`), tooltipMarkup: this._dateTime.as((d) => `\u{F00ED} ${d.date}`) }) });
  }
};
var dateTime = new DateTimeClass();
var DateTime_default = dateTime;

// modules/AudioControl.tsx
import Wp from "gi://AstalWp";
import GLib4 from "gi://GLib?version=2.0";
var AudioControlClass = class {
  constructor() {
    this.step = 0.02;
    this.default = Wp.get_default();
    this.defaultSpeaker = createBinding(this.default, "defaultSpeaker");
    this.defaultMicrophone = createBinding(this.default, "defaultMicrophone");
  }
  handleScroll(edp, dy) {
    let newVolume = edp.get_volume();
    if (dy < 0) newVolume += this.step;
    else newVolume -= this.step;
    edp.set_volume(Math.min(newVolume, 1));
  }
  Endpoint(endpoint) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume").as((a) => `${Math.round(a * 100)}%`);
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => scroll.disconnect(scrollHandler));
      return /* @__PURE__ */ jsx(
        "button",
        {
          cssClasses: ["Endpoint"],
          $: (self) => self.add_controller(scroll),
          onClicked: () => edp.set_mute(!edp.get_mute()),
          children: /* @__PURE__ */ jsxs("box", { children: [
            /* @__PURE__ */ jsx("image", { cssClasses: ["Icon"], iconName: icon }),
            /* @__PURE__ */ jsx("label", { cssClasses: ["Volume"], label: volume, widthChars: 4 })
          ] })
        }
      );
    } }) });
  }
  MixerEntry(endpoint) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume");
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => scroll.disconnect(scrollHandler));
      return /* @__PURE__ */ jsxs("box", { cssClasses: ["MixerEntry"], children: [
        /* @__PURE__ */ jsx("button", { cssClasses: ["Icon"], iconName: icon, onClicked: () => edp.set_mute(!edp.get_mute()) }),
        /* @__PURE__ */ jsx("slider", { cssClasses: ["Slider"], $: (self) => self.add_controller(scroll), value: volume, step: 0.1, min: 0, max: 1, onChangeValue: ({ value }) => edp.set_volume(value) })
      ] });
    } }) });
  }
  get Mixer() {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["Mixer"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "Mixer" }),
      this.MixerEntry(this.defaultSpeaker),
      this.MixerEntry(this.defaultMicrophone)
    ] }) });
  }
  get AudioControl() {
    const spawnPavucontrolClick = new Gtk.GestureClick({ button: Gdk.BUTTON_SECONDARY });
    const spawnPavucontrolHandler = spawnPavucontrolClick.connect("pressed", () => GLib4.spawn_command_line_async("pavucontrol"));
    onCleanup(() => spawnPavucontrolClick.disconnect(spawnPavucontrolHandler));
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["AudioControl"], $: (self) => self.add_controller(spawnPavucontrolClick), children: [
      this.Endpoint(this.defaultSpeaker),
      /* @__PURE__ */ jsx("menubutton", { popover: this.Mixer, child: /* @__PURE__ */ jsx("label", { label: "\uEAF8" }) })
    ] });
  }
};
var audioControl = new AudioControlClass();
var AudioControl_default = audioControl;

// services/Settings.ts
import GLib5 from "gi://GLib?version=2.0";

// ../../../../usr/share/ags/js/lib/file.ts
import Astal4 from "gi://AstalIO";
function readFile(path3) {
  return Astal4.read_file(path3) || "";
}
function writeFile(path3, content) {
  Astal4.write_file(path3, content);
}

// services/Settings.ts
var optionsFallback = {
  animationsEnabled: true,
  cavaVisible: true,
  wallpaperSelectorActive: true
};
var path = GLib5.get_home_dir() + "/.config/ags/options/options.json";
var SettingsClass = class {
  constructor() {
    const fileStr = readFile(path);
    try {
      const parsed = JSON.parse(fileStr);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(parsed.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(parsed.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(parsed.wallpaperSelectorActive);
    } catch (err) {
      console.error("Erro ao ler options.json: " + err);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(optionsFallback.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(optionsFallback.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(optionsFallback.wallpaperSelectorActive);
    }
  }
  saveOptions() {
    const options = {
      animationsEnabled: this._animationsEnabled.get(),
      cavaVisible: this._cavaVisible.get(),
      wallpaperSelectorActive: this._wallpaperSelectorActive.get()
    };
    writeFile(path, JSON.stringify(options, null, 2));
  }
  get animationsEnabled() {
    return this._animationsEnabled;
  }
  get cavaVisible() {
    return this._cavaVisible;
  }
  get wallpaperSelectorActive() {
    return this._wallpaperSelectorActive;
  }
  set setWallpaperSelectorActive(newState) {
    if (this._wallpaperSelectorActive.get() !== newState) this._setWallpaperSelectorActive(newState);
  }
  set setAnimationsEnabled(newState) {
    if (this._animationsEnabled.get() !== newState) this._setAnimationsEnabled(newState);
  }
  set setCavaVisible(newState) {
    if (this._cavaVisible.get() !== newState) this._setCavaVisible(newState);
  }
};
var settingsService = new SettingsClass();
var Settings_default = settingsService;

// modules/WallpaperSelector.tsx
import Gio3 from "gi://Gio?version=2.0";
import GLib7 from "gi://GLib?version=2.0";

// utils/Swww.ts
import GLib6 from "gi://GLib?version=2.0";
var Swww;
((Swww2) => {
  let Resize;
  ((Resize2) => {
    Resize2["NO"] = "no";
    Resize2["CROP"] = "crop";
    Resize2["FIT"] = "fit";
    Resize2["STRETCH"] = "stretch";
  })(Resize = Swww2.Resize || (Swww2.Resize = {}));
  let Filter;
  ((Filter2) => {
    Filter2["NEAREST"] = "Nearest";
    Filter2["BILINEAR"] = "Bilinear";
    Filter2["CATMULLROM"] = "CatmullRom";
    Filter2["MITCHELL"] = "Mitchell";
    Filter2["LANCZOS3"] = "Lanczos3";
  })(Filter = Swww2.Filter || (Swww2.Filter = {}));
  let TransitionType;
  ((TransitionType2) => {
    TransitionType2["NONE"] = "none";
    TransitionType2["SIMPLE"] = "simple";
    TransitionType2["FADE"] = "fade";
    TransitionType2["LEFT"] = "left";
    TransitionType2["RIGHT"] = "right";
    TransitionType2["TOP"] = "top";
    TransitionType2["BOTTOM"] = "bottom";
    TransitionType2["WIPE"] = "wipe";
    TransitionType2["WAVE"] = "wave";
    TransitionType2["GROW"] = "grow";
    TransitionType2["CENTER"] = "center";
    TransitionType2["ANY"] = "any";
    TransitionType2["RANDOM"] = "random";
  })(TransitionType = Swww2.TransitionType || (Swww2.TransitionType = {}));
  let TransitionPos;
  ((TransitionPos2) => {
    TransitionPos2["CENTER"] = "center";
    TransitionPos2["TOP"] = "top";
    TransitionPos2["LEFT"] = "left";
    TransitionPos2["RIGHT"] = "right";
    TransitionPos2["BOTTOM"] = "bottom";
    TransitionPos2["TOP_LEFT"] = "top-left";
    TransitionPos2["TOP_RIGHT"] = "top-right";
    TransitionPos2["BOTTOM_LEFT"] = "bottom-left";
    TransitionPos2["BOTTOM_RIGHT"] = "bottom-right";
  })(TransitionPos = Swww2.TransitionPos || (Swww2.TransitionPos = {}));
  class Manager {
    constructor() {
      GLib6.spawn_command_line_async("swww clear");
    }
    setWallpaper(path3, options) {
      let command = `swww img ${path3}`;
      if (options) {
        if (options.resize) command += ` --resize ${options.resize}`;
        if (options.filter) command += ` -f ${options.filter}`;
        if (options.invertY) command += ` --invert-y ${options.invertY.valueOf()}`;
        if (options.transitionAngle) command += ` --transition-angle ${options.transitionAngle}`;
        if (options.transitionDurantion) command += ` --transition-duration ${options.transitionDurantion}`;
        if (options.transitionPos) command += ` --transition-pos ${options.transitionPos}`;
        if (options.transitionStep) command += ` --transition-step ${options.transitionStep}`;
        if (options.transitionType) command += ` --transition-type ${options.transitionType}`;
        if (options.transitionWave) command += ` --transition-wave ${options.transitionWave.x},${options.transitionWave.y}`;
        if (options.outputs) command += ` --outputs ${options.outputs}`;
      }
      GLib6.spawn_command_line_async(command);
      return true;
    }
  }
  Swww2.manager = new Manager();
})(Swww || (Swww = {}));

// modules/WallpaperSelector.tsx
var path2 = GLib7.get_home_dir() + "/.config/ags/wallpapers";
var pollTime3 = 24e4;
var imageExtensions = [".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp", ".svg"];
var WallpaperSelectorClass = class {
  constructor() {
    [this.images, this.setImages] = createState([]);
    this._timerActive = Settings_default.wallpaperSelectorActive;
    this.polling = createPoll(true, pollTime3, (prev) => !prev);
    this.setImages(this.readImageFiles(path2));
  }
  isImageFile(filename) {
    const extension = filename.toLowerCase().substring(filename.lastIndexOf("."));
    return imageExtensions.includes(extension) ? extension : null;
  }
  readImageFiles(directoryPath) {
    try {
      const file = Gio3.File.new_for_path(directoryPath);
      if (!file.query_exists(null)) return [];
      const enumerator = file.enumerate_children("standard::name,standard::type", Gio3.FileQueryInfoFlags.NONE, null);
      const images = [];
      let fileInfo;
      while ((fileInfo = enumerator.next_file(null)) !== null) {
        if (fileInfo.get_file_type() === Gio3.FileType.REGULAR) {
          const fileName = fileInfo.get_name();
          const ext = this.isImageFile(fileName);
          if (ext) images.push(fileName);
        }
      }
      enumerator.close(null);
      return images;
    } catch (error) {
      console.error("\u274C Erro Gio ao ler diret\xF3rio:", directoryPath, error);
      return [];
    }
  }
  get timerActive() {
    return this._timerActive;
  }
  SelectorIndicator(gdkmonitor) {
    const unsub = this.polling.subscribe(() => {
      if (this._timerActive.get()) {
        const connector = gdkmonitor.get_connector();
        if (connector) {
          const imgArray = this.images.get();
          const img = imgArray[Math.floor(Math.random() * imgArray.length)];
          Swww.manager.setWallpaper(`${path2}/${img}`, { outputs: connector, transitionType: Swww.TransitionType.GROW });
        } else {
          execAsync(`notify-send "Monitor ${gdkmonitor.get_description()} n\xE3o tem conector" "${gdkmonitor.get_description()} n\xE3o tem conector."`);
        }
      }
    });
    onCleanup(() => unsub());
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["SelectorIndicator"], orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["Subtitle"],
          label: "Wallpaper Selector"
        }
      ),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleActive", "Option"], children: [
        /* @__PURE__ */ jsx("label", { label: "Active ", halign: Gtk.Align.START }),
        /* @__PURE__ */ jsx(Gtk.Switch, { active: this._timerActive, onStateSet: (src, val) => Settings_default.setWallpaperSelectorActive = val })
      ] })
    ] });
  }
};
var wallpaperSelector = new WallpaperSelectorClass();
var WallpaperSelector_default = wallpaperSelector;

// services/CompositorManager.ts
import AstalHyprland from "gi://AstalHyprland?version=0.1";
var Hyprland = class {
  constructor() {
    this.default = AstalHyprland.get_default();
    this._workspaces = createBinding(this.default, "workspaces").as((workspaces2) => workspaces2.sort((a, b) => a.id - b.id));
    this._focusedWorkspace = createBinding(this.default, "focusedWorkspace");
    this.toggleAnimations(Settings_default.animationsEnabled.get());
  }
  getWorkspaces() {
    return this._workspaces;
  }
  getFocusedWorkspace() {
    return this._focusedWorkspace;
  }
  areMonitorsEqual(monitor, compMonitor) {
    const geometry = monitor.get_geometry();
    if (compMonitor.get_model() === monitor.get_model() && compMonitor.get_height() === geometry.height && compMonitor.get_width() === geometry.width && compMonitor.get_x() === geometry.x && compMonitor.get_y() === geometry.y) {
      return true;
    }
    return false;
  }
  getCompositorMonitor(monitor) {
    const compMonitors = this.default.get_monitors();
    return compMonitors.find((compMonitor) => this.areMonitorsEqual(monitor, compMonitor));
  }
  getAnimationState() {
    try {
      return JSON.parse(exec("hyprctl getoption animations:enabled -j")) === 1;
    } catch (error) {
      console.warn("Erro ao verificar estado das anima\xE7\xF5es:", error);
      return false;
    }
  }
  toggleAnimations(val) {
    const newState = val ?? !this.getAnimationState();
    try {
      exec(`hyprctl keyword animations:enabled ${newState ? 1 : 0}`);
      exec(`hyprctl keyword decoration:shadow:enabled ${newState ? 1 : 0}`);
    } catch (error) {
      console.error("Erro ao alterar anima\xE7\xF5es:", error);
    }
  }
};
var Niri = class {
  constructor() {
    this.default = AstalHyprland.get_default();
    this._workspaces = createBinding(this.default, "workspaces").as((workspaces2) => workspaces2.sort((a, b) => a.id - b.id));
    this._focusedWorkspace = createBinding(this.default, "focusedWorkspace");
  }
  getWorkspaces() {
    return this._workspaces;
  }
  getFocusedWorkspace() {
    return this._focusedWorkspace;
  }
  areMonitorsEqual(monitor, compMonitor) {
    const geometry = monitor.get_geometry();
    if (compMonitor.get_model() === monitor.get_model() && compMonitor.get_height() === geometry.height && compMonitor.get_width() === geometry.width && compMonitor.get_x() === geometry.x && compMonitor.get_y() === geometry.y) {
      return true;
    }
    return false;
  }
  getCompositorMonitor(monitor) {
    const compMonitors = this.default.get_monitors();
    return compMonitors.find((compMonitor) => this.areMonitorsEqual(monitor, compMonitor));
  }
  getAnimationState() {
    try {
      return JSON.parse(exec("hyprctl getoption animations:enabled -j")) === 1;
    } catch (error) {
      console.warn("Erro ao verificar estado das anima\xE7\xF5es:", error);
      return false;
    }
  }
  toggleAnimations(val) {
    const newState = val ?? !this.getAnimationState();
    try {
      exec(`hyprctl keyword animations:enabled ${newState ? 1 : 0}`);
      exec(`hyprctl keyword decoration:shadow:enabled ${newState ? 1 : 0}`);
    } catch (error) {
      console.error("Erro ao alterar anima\xE7\xF5es:", error);
    }
  }
};
var CompositorManagerClass = class {
  constructor() {
    const compositor = exec(["bash", "-c", "echo $XDG_CURRENT_DESKTOP"]);
    switch (compositor) {
      case "Hyprland":
        this.service = new Hyprland();
        break;
      case "Niri":
        this.service = new Niri();
        break;
      default:
        console.error("Compositor n\xE3o identificado. Fallback para Hyprland");
        this.service = new Hyprland();
        break;
    }
  }
  get workspaces() {
    return this.service.getWorkspaces();
  }
  get focusedWorkspace() {
    return this.service.getFocusedWorkspace();
  }
  areMonitorsEqual(monitor, compMonitor) {
    return this.service.areMonitorsEqual(monitor, compMonitor);
  }
  getCompositorMonitor(monitor) {
    return this.service.getCompositorMonitor(monitor);
  }
  get animationState() {
    return this.service.getAnimationState();
  }
  toggleAnimations(val) {
    this.service.toggleAnimations(val);
  }
};
var compositorManager = new CompositorManagerClass();
var CompositorManager_default = compositorManager;

// modules/ControlCenter.tsx
var ControlCenterClass = class {
  constructor() {
  }
  get ToggleVisibleComponents() {
    onCleanup(() => Settings_default.saveOptions());
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleVisibleComponents"], orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Animations & Components" }),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleAnimations", "Option"], children: [
        /* @__PURE__ */ jsx("label", { label: "Animations ", halign: Gtk.Align.START }),
        /* @__PURE__ */ jsx(
          Gtk.Switch,
          {
            active: Settings_default.animationsEnabled,
            onStateSet: (src, val) => {
              Settings_default.setAnimationsEnabled = val;
              CompositorManager_default.toggleAnimations(val);
            }
          }
        )
      ] }),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleCava", "Option"], children: [
        /* @__PURE__ */ jsx("label", { label: "Cava ", halign: Gtk.Align.START }),
        /* @__PURE__ */ jsx(Gtk.Switch, { active: Settings_default.cavaVisible, onStateSet: (src, val) => Settings_default.setCavaVisible = val })
      ] })
    ] });
  }
  ControlCenterPopover(gdkmonitor) {
    return /* @__PURE__ */ jsx("popover", { onClosed: () => Settings_default.saveOptions(), children: /* @__PURE__ */ jsx("box", { cssClasses: ["ControlCenterPopover"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      this.ToggleVisibleComponents,
      WallpaperSelector_default.SelectorIndicator(gdkmonitor)
    ] }) }) });
  }
  ControlCenter(gdkmonitor) {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["ControlCenter"], popover: this.ControlCenterPopover(gdkmonitor), children: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "\u{F08C7}" }) });
  }
};
var controlCenter = new ControlCenterClass();
var ControlCenter_default = controlCenter;

// modules/Workspaces.tsx
var WorkspacesClass = class {
  constructor() {
    this.maxWorkspaces = 10;
  }
  Workspace({ workspace }) {
    return /* @__PURE__ */ jsx(
      "button",
      {
        cssClasses: CompositorManager_default.focusedWorkspace.as((focused) => ["Workspace", workspace.get_id() === focused.get_id() ? "Active" : "Inactive"]),
        onClicked: () => {
          if (CompositorManager_default.focusedWorkspace.get().get_id() !== workspace.get_id()) workspace.focus();
        },
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER,
        label: workspace.get_id().toString()
      }
    );
  }
  WorkspacePopover({ theRest }) {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["WorkspacePopover"], children: /* @__PURE__ */ jsx(Gtk.FlowBox, { maxChildrenPerLine: 4, children: /* @__PURE__ */ jsx(For, { each: theRest, children: (item) => this.Workspace({ workspace: item }) }) }) });
  }
  MoreWorkspacesButton({ theRest }) {
    return /* @__PURE__ */ jsx(
      "menubutton",
      {
        cssClasses: ["MoreWorkspacesButton"],
        sensitive: theRest.as((tr) => tr.length > 0),
        popover: this.WorkspacePopover({ theRest }),
        children: /* @__PURE__ */ jsx("label", { label: "\u{F054F}" })
      }
    );
  }
  Workspaces({ monitor }) {
    const monitorWorkspaces = CompositorManager_default.workspaces.as((ws) => {
      const filtered = ws.filter((workspace) => workspace.get_monitor() === monitor);
      return {
        main: filtered.slice(0, this.maxWorkspaces),
        theRest: filtered.slice(this.maxWorkspaces)
      };
    });
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["Workspaces"], children: [
      /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(For, { each: monitorWorkspaces.as((mw) => mw.main), children: (w) => this.Workspace({ workspace: w }) }) }),
      this.MoreWorkspacesButton({ theRest: monitorWorkspaces.as(({ theRest }) => theRest) })
    ] });
  }
};
var workspaces = new WorkspacesClass();
var Workspaces_default = workspaces;

// widget/Bar.tsx
function Bar({ gdkmonitor }) {
  const { TOP, LEFT, RIGHT } = Astal.WindowAnchor;
  const compMonitor = CompositorManager_default.getCompositorMonitor(gdkmonitor);
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "Bar",
      cssClasses: ["Bar"],
      visible: true,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: TOP | RIGHT | LEFT,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Bar"], halign: Gtk.Align.FILL, homogeneous: true, children: [
        /* @__PURE__ */ jsx("box", { halign: Gtk.Align.START, children: SystemTray_default.SystemTray }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.CENTER, children: [
          Media_default.Media,
          Workspaces_default.Workspaces({ monitor: compMonitor })
        ] }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.END, children: [
          DateTime_default.DateTime,
          AudioControl_default.AudioControl,
          SystemMonitor_default.SystemMonitor,
          ControlCenter_default.ControlCenter(gdkmonitor)
        ] })
      ] })
    }
  );
}

// modules/Cava.tsx
import Gsk from "gi://Gsk";
import AstalCava from "gi://AstalCava?version=0.1";
import GObject6 from "gi://GObject";
var CavaConfig = {
  autosens: true,
  bars: 25,
  framerate: 60,
  input: AstalCava.Input.PIPEWIRE,
  noiseReduction: 0.77,
  sensitivity: 0.75,
  stereo: false
};
var CavaWidget = class extends Gtk.DrawingArea {
  constructor(v) {
    super();
    this.set_hexpand(true);
    this.set_vexpand(true);
    this.valuesAccessor = v.as((v2) => {
      const height = this.get_allocated_height();
      return v2.map((i) => height * (1 - i));
    });
    this.unsubAccessor = this.valuesAccessor.subscribe(() => this.queue_draw());
    onCleanup(() => this.unsubAccessor());
  }
  vfunc_snapshot(snapshot) {
    if (!this.get_mapped()) return;
    try {
      if (!this.visible) return;
      const width = this.get_allocated_width();
      const height = this.get_allocated_height();
      if (width <= 0 || height <= 0) return;
      const values = this.valuesAccessor.get();
      if (values.length === 0) return;
      const barWidth = width / (values.length - 1);
      const color = this.parent.get_color();
      const builder = new Gsk.PathBuilder();
      builder.move_to(0, values[0]);
      const invSix = 1 / 6;
      for (let i = 0; i < values.length - 1; i++) {
        const p0x = (i - 1) * barWidth;
        const p0y = values[Math.max(0, i - 1)];
        const p1x = i * barWidth;
        const p1y = values[i];
        const p2x = (i + 1) * barWidth;
        const p2y = values[i + 1];
        const p3x = (i + 2) * barWidth;
        const p3y = values[Math.min(values.length - 1, i + 2)];
        const c1x = p1x + (p2x - p0x) * invSix;
        const c1y = p1y + (p2y - p0y) * invSix;
        const c2x = p2x - (p3x - p1x) * invSix;
        const c2y = p2y - (p3y - p1y) * invSix;
        builder.cubic_to(c1x, c1y, c2x, c2y, p2x, p2y);
      }
      builder.line_to(width, height);
      builder.line_to(0, height);
      builder.close();
      snapshot.append_fill(builder.to_path(), Gsk.FillRule.WINDING, color);
    } catch (error) {
      console.warn("Erro no snapshot do Cava:", error);
    }
  }
};
var _cava = GObject6.registerClass({ GTypeName: "Cava" }, CavaWidget);
var CavaClass = class _CavaClass {
  static {
    this.widgetCount = 0;
  }
  constructor() {
    [this._visibilityState, this._setVisibilityState] = createState(Settings_default.cavaVisible.get());
    this.unsub = Settings_default.cavaVisible.subscribe(() => this._setVisibilityState(Settings_default.cavaVisible.get()));
    this.default = AstalCava.get_default();
    if (this.default) {
      this.default.set_autosens(CavaConfig.autosens);
      this.default.set_bars(CavaConfig.bars);
      this.default.set_framerate(CavaConfig.framerate);
      this.default.set_input(CavaConfig.input);
      this.default.set_noise_reduction(CavaConfig.noiseReduction);
      this.default.set_stereo(CavaConfig.stereo);
      this._values = createBinding(this.default, "values").as((v) => {
        try {
          const sens = CavaConfig.sensitivity;
          return v.map((i) => i * sens);
        } catch (error) {
          console.warn("Erro no handler global do Cava:", error);
          return [];
        }
      });
    } else {
      console.error("N\xE3o foi poss\xEDvel inicializar o Cava");
      this._values = createState([])[0];
    }
  }
  get visibilityState() {
    return this._visibilityState;
  }
  Cava(cssClasses) {
    return /* @__PURE__ */ jsx(
      "box",
      {
        cssClasses: [...cssClasses, "Cava"],
        overflow: Gtk.Overflow.HIDDEN,
        $: () => _CavaClass.widgetCount += 1,
        onDestroy: () => {
          _CavaClass.widgetCount -= 1;
          if (_CavaClass.widgetCount <= 0) this.unsub();
        },
        children: new _cava(this._values)
      }
    );
  }
};
var cava = new CavaClass();
var Cava_default = cava;

// widget/CavaOverlay.tsx
function CavaOverlay({ gdkmonitor }) {
  const { LEFT, RIGHT, BOTTOM } = Astal.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "CavaOverlay",
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: RIGHT | LEFT | BOTTOM,
      visible: Cava_default.visibilityState,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsx("box", { halign: Gtk.Align.FILL, valign: Gtk.Align.END, heightRequest: Math.floor(gdkmonitor.get_geometry().height * 0.25), children: Cava_default.Cava(["CavaOverlay"]) })
    }
  );
}

// widget/Cheatsheet.tsx
function Entry({ bind, action }) {
  return /* @__PURE__ */ jsxs("box", { cssClasses: ["Entry"], overflow: Gtk.Overflow.HIDDEN, homogeneous: true, children: [
    /* @__PURE__ */ jsx("label", { cssClasses: ["Bind"], label: bind }),
    /* @__PURE__ */ jsx("label", { cssClasses: ["Action"], label: action })
  ] });
}
function Cheatsheet({ gdkmonitor }) {
  return /* @__PURE__ */ jsxs(
    "window",
    {
      name: "Cheatsheet",
      layer: Astal.Layer.OVERLAY,
      gdkmonitor,
      keymode: Astal.Keymode.ON_DEMAND,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: [
        /* @__PURE__ */ jsx(
          Gtk.EventControllerKey,
          {
            onKeyPressed: ({ widget }, keyval) => {
              switch (keyval) {
                case Gdk.KEY_Escape:
                  widget.hide();
                  break;
                default:
              }
            }
          }
        ),
        /* @__PURE__ */ jsxs("box", { cssClasses: ["Cheatsheet"], orientation: Gtk.Orientation.VERTICAL, children: [
          /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: "Cheatsheet" }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Clients Workflow" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + P", action: "Pin client" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Q", action: "Close client" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + V", action: "Toggle floating" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + F", action: "Toggle fullscreen" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + J", action: "Toggle Dwindle" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF062", action: "Move focus to the client at above" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF063", action: "Move focus to the client at below" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF060", action: "Move focus to the clienFixar clientet at left" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF061", action: "Move focus to the client at right" })
              ] })
            ] }),
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Workspaces Workflow" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF060", action: "Go to workspace at the left" }),
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF061", action: "Go to workspace at the right" }),
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF060", action: "Move to workspace at the left side" }),
                /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF061", action: "Move to workspace at the right side" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + S", action: "Go to special workspace" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + SHIFT + S", action: "Move to special workspace" })
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Default Programs" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Enter", action: "Terminal" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + R", action: "Launcher" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + E", action: "Open File Manager" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + D", action: "Toggle Dock" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + C", action: "Toggle Cheatsheet" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + ESC", action: "Toggle Wlogout" })
              ] })
            ] }),
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Others" }),
              /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
                /* @__PURE__ */ jsx(Entry, { bind: "PRINT", action: "Screenshot output" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + PRINT", action: "Screenshot region" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + M", action: "Logout" }),
                /* @__PURE__ */ jsx(Entry, { bind: "SUPER + L", action: "Lock Screen" })
              ] })
            ] })
          ] })
        ] })
      ]
    }
  );
}

// app.tsx
function main() {
  const monitors = createBinding(app_default, "monitors");
  return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsxs(This, { this: app_default, children: [
    /* @__PURE__ */ jsx(Bar, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(CavaOverlay, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(Cheatsheet, { gdkmonitor: monitor })
  ] }) });
}
app_default.start({ css: styles_default, main });
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic2FzczovaG9tZS9pdGlyby8uY29uZmlnL2Fncy9zdHlsZXMvaW5kZXguc2NzcyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzIiwgIm1vZHVsZXMvU3lzdGVtTW9uaXRvci50c3giLCAic2VydmljZXMvVGltZUZvcm1hdHRlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvZW52LnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ25vbWUvc2lnbmFsVHJhY2tlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L0Zvci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L1dpdGgudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9UaGlzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3RpbWUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIm1vZHVsZXMvU3lzdGVtVHJheS50c3giLCAibW9kdWxlcy9NZWRpYS50c3giLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMiLCAibW9kdWxlcy9EYXRlVGltZS50c3giLCAibW9kdWxlcy9BdWRpb0NvbnRyb2wudHN4IiwgInNlcnZpY2VzL1NldHRpbmdzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2ZpbGUudHMiLCAibW9kdWxlcy9XYWxscGFwZXJTZWxlY3Rvci50c3giLCAidXRpbHMvU3d3dy50cyIsICJzZXJ2aWNlcy9Db21wb3NpdG9yTWFuYWdlci50cyIsICJtb2R1bGVzL0NvbnRyb2xDZW50ZXIudHN4IiwgIm1vZHVsZXMvV29ya3NwYWNlcy50c3giLCAid2lkZ2V0L0Jhci50c3giLCAibW9kdWxlcy9DYXZhLnRzeCIsICJ3aWRnZXQvQ2F2YU92ZXJsYXkudHN4IiwgIndpZGdldC9DaGVhdHNoZWV0LnRzeCIsICJhcHAudHN4Il0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKiBDYXRwcHVjY2luIG1vY2hhIGNvbG9ycyAqL1xuLkNvbnRyb2xDZW50ZXIsIC5NZWRpYSwgLldvcmtzcGFjZXMsIC5BdWRpb0NvbnRyb2wsIC5EYXRlVGltZUNhbGVuZGFyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgcGFkZGluZzogNHB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxOHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgKiwgLk1lZGlhICosIC5Xb3Jrc3BhY2VzICosIC5BdWRpb0NvbnRyb2wgKiwgLkRhdGVUaW1lQ2FsZW5kYXIgKiB7XG4gIG1hcmdpbjogMHB4IDJweDtcbn1cblxuLlRyYXlJdGVtLCAuV29ya3NwYWNlcyAuV29ya3NwYWNlLCAuV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b24sIC5NaXhlciAuTWl4ZXJFbnRyeSAuSWNvbiwgLk1lbW9yeVVzYWdlLCAuQ3B1VXNhZ2UsIC5CYXR0ZXJ5IHtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgbWluLXdpZHRoOiAyNHB4O1xuICBtaW4taGVpZ2h0OiAyNHB4O1xufVxuXG4uTWl4ZXIgLk1peGVyRW50cnkgLlNsaWRlciB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG1pbi13aWR0aDogMTYwcHg7XG4gIG1pbi1oZWlnaHQ6IDIwcHg7XG59XG5cbi5EYXRlVGltZUNhbGVuZGFyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAqIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uRGF0ZVRpbWVDYWxlbmRhcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uRGF0ZVRpbWVDYWxlbmRhcjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgKiB7XG4gIGFsbDogdW5zZXQ7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGxhYmVsLmRheS1udW1iZXIsIC5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBsYWJlbC5vdGhlci1tb250aCwgLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGxhYmVsLnRvZGF5IHtcbiAgYm9yZGVyLXJhZGl1czogMTAlO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b24ge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgYnV0dG9uICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGJ1dHRvbjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDcxLCA5MCwgMC43KTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLm90aGVyLW1vbnRoIHtcbiAgb3BhY2l0eTogMC41O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLm90aGVyLW1vbnRoOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2Y1ZTBkYztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5kYXktbnVtYmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5kYXktbnVtYmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2NiYTZmNztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC50b2RheSB7XG4gIGNvbG9yOiAjMWUxZTJlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjRiZWZlO1xufVxuXG4uU3lzdGVtTW9uaXRvciAqIHtcbiAgbWFyZ2luOiAwcHggMnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLk1lbW9yeVVzYWdlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5NZW1vcnlVc2FnZSAqIHtcbiAgY29sb3I6ICNmYWIzODc7XG59XG4uTWVtb3J5VXNhZ2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZmFiMzg3O1xufVxuLk1lbW9yeVVzYWdlOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxuLkNwdVVzYWdlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5DcHVVc2FnZSAqIHtcbiAgY29sb3I6ICNhNmUzYTE7XG59XG4uQ3B1VXNhZ2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjYTZlM2ExO1xufVxuLkNwdVVzYWdlOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxuLkJhdHRlcnlOb3JtYWwge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLkJhdHRlcnlOb3JtYWwgKiB7XG4gIGNvbG9yOiAjYjRiZWZlO1xufVxuLkJhdHRlcnlOb3JtYWw6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjYjRiZWZlO1xufVxuLkJhdHRlcnlOb3JtYWw6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuXG4uQmF0dGVyeUNyaXRpY2FsIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5CYXR0ZXJ5Q3JpdGljYWwgKiB7XG4gIGNvbG9yOiAjZjM4YmE4O1xufVxuLkJhdHRlcnlDcml0aWNhbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmMzhiYTg7XG59XG4uQmF0dGVyeUNyaXRpY2FsOmhvdmVyICoge1xuICBjb2xvcjogIzExMTExYjtcbn1cblxuLkJhdHRlcnlQb3BvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBwYWRkaW5nOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG59XG4uQmF0dGVyeVBvcG92ZXIgLlRpdGxlLCAuQmF0dGVyeVBvcG92ZXIgLkJhdHRlcnlMaWZlLCAuQmF0dGVyeVBvcG92ZXIgLlRvZ2dsZUJ1dHRvbiB7XG4gIG1hcmdpbjogMnB4O1xufVxuLkJhdHRlcnlQb3BvdmVyIC5UaXRsZSB7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuQmF0dGVyeUxpZmUge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuVG9nZ2xlQnV0dG9uIHtcbiAgbWFyZ2luOiAycHggNHB4O1xuICBwYWRkaW5nOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC43NSk7XG4gIGNvbG9yOiByZ2JhKDMwLCAzMCwgNDYsIDAuNzUpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkJhdHRlcnlQb3BvdmVyIC5Ub2dnbGVCdXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMwLCAzMCwgNDYsIDAuNzUpO1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjc1KTtcbn1cblxuLkF1ZGlvQ29udHJvbCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uQXVkaW9Db250cm9sICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5BdWRpb0NvbnRyb2w6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLkF1ZGlvQ29udHJvbDpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG5cbi5NaXhlciB7XG4gIHBhZGRpbmc6IDZweDtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBib3JkZXI6IG5vbmU7XG59XG4uTWl4ZXIgLkxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbWFyZ2luOiA2cHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLk1peGVyIC5NaXhlckVudHJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDc1YTtcbiAgcGFkZGluZzogMnB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xufVxuLk1peGVyIC5NaXhlckVudHJ5IC5JY29uIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uTWl4ZXIgLk1peGVyRW50cnkgLkljb246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU4NWI3MDtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIGhpZ2hsaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG59XG5cbi5Xb3Jrc3BhY2VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiAxOHB4O1xufVxuLldvcmtzcGFjZXMgLldvcmtzcGFjZSwgLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTcsIDE3LCAyNywgMC44KTtcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW46IDJweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b24gKiB7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uV29ya3NwYWNlcyAuQWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjkpO1xufVxuLldvcmtzcGFjZXMgLkFjdGl2ZSBsYWJlbCB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLldvcmtzcGFjZXMgLkluYWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5Xb3Jrc3BhY2VzIC5JbmFjdGl2ZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uV29ya3NwYWNlcyAuV29ya3NwYWNlUG9wb3ZlciB7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIHBhZGRpbmc6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjkpO1xuICBtYXJnaW46IDJweDtcbn1cblxuLlRyYXlJdGVtIHtcbiAgbWFyZ2luOiAycHg7XG4gIC1ndGstaWNvbi1zaXplOiAyNHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZTtcbn1cbi5UcmF5SXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC44KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uVHJheUl0ZW06YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICBjb2xvcjogIzExMTExYjtcbn1cbi5UcmF5SXRlbSBwb3BvdmVyLm1lbnUge1xuICBtYXJnaW46IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IG1vZGVsYnV0dG9uIHtcbiAgcGFkZGluZzogMnB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIG1hcmdpbjogMCAycHg7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IG1vZGVsYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSg2OSwgNzEsIDkwLCAwLjIpO1xufVxuLlRyYXlJdGVtIHBvcG92ZXIubWVudSBtb2RlbGJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDY5LCA3MSwgOTAsIDAuNCk7XG59XG5cbi5NZWRpYSB7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLk1lZGlhICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5NZWRpYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uTWVkaWE6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0LCAyNCwgMzcsIDAuOCk7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSB7XG4gIG1hcmdpbi1sZWZ0OiAxMnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuVGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuQXJ0aXN0IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogcmdiYSgyMDUsIDIxNCwgMjQ0LCAwLjcpO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuQWxidW0ge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiByZ2JhKDIwNSwgMjE0LCAyNDQsIDAuNSk7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IHtcbiAgbWFyZ2luLXRvcDogMTJweDtcbiAgcGFkZGluZzogMTJweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIge1xuICBwYWRkaW5nOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzAsIDMwLCA0NiwgMC42KTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxNHB4O1xuICBtYXJnaW46IDVweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIgLlNsaWRlciB7XG4gIG1pbi13aWR0aDogMTYwcHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuUGxheWVyU2xpZGVyIC5TbGlkZXIgaGlnaGxpZ2h0IHtcbiAgYmFja2dyb3VuZDogIzc0YzdlYztcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIgLlRpbWVMYWJlbCB7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBvcGFjaXR5OiAwLjg7XG4gIG1pbi13aWR0aDogNDBweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXMsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQge1xuICBtYXJnaW46IDRweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6ICMxZTFlMmU7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzIGltYWdlLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZSBpbWFnZSwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0IGltYWdlIHtcbiAgbWFyZ2luOiAxMnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91cyAqLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZSAqLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQgKiB7XG4gIGNvbG9yOiAjODliNGZhO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91czpob3ZlciwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2U6aG92ZXIsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzOmhvdmVyICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlOmhvdmVyICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dDpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuQ2F2YSwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLkNhdmEgPiAqIHtcbiAgY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC41KTtcbn1cblxuLkNhdmEsIC5DYXZhID4gKiwgLkNhdmFPdmVybGF5LCAuQ2F2YU92ZXJsYXkgPiAqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uQ2F2YSwgLkNhdmEgPiAqIHtcbiAgY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC41KTtcbn1cblxuLkNhdmFPdmVybGF5IHtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA0MHB4IDQwcHggMHB4IDBweDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5DYXZhT3ZlcmxheTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG5cbnRvb2x0aXAge1xuICBwYWRkaW5nOiA2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5Db250cm9sQ2VudGVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5Db250cm9sQ2VudGVyIC5MYWJlbCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5Db250cm9sQ2VudGVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbn1cbi5Db250cm9sQ2VudGVyOmhvdmVyIC5MYWJlbCB7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIHtcbiAgcGFkZGluZzogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ5LCA1MCwgNjgsIDAuOCk7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlN1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBtYXJnaW46IDRweDtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMge1xuICBtYXJnaW46IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OSwgNzEsIDkwLCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5PcHRpb24ge1xuICBwYWRkaW5nOiAycHg7XG4gIG1hcmdpbjogMnB4O1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyAuT3B0aW9uIHN3aXRjaCB7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTFlMmU7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5PcHRpb24gc3dpdGNoIGltYWdlLCAuQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5PcHRpb24gc3dpdGNoIHNsaWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG4gIG1pbi13aWR0aDogMjBweDtcbiAgbWluLWhlaWdodDogNXB4O1xufVxuXG4uU2VsZWN0b3JJbmRpY2F0b3Ige1xuICBtYXJnaW46IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OSwgNzEsIDkwLCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uU2VsZWN0b3JJbmRpY2F0b3IgLk9wdGlvbiB7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAycHg7XG59XG4uU2VsZWN0b3JJbmRpY2F0b3IgLk9wdGlvbiBzd2l0Y2gge1xuICBwYWRkaW5nOiAycHg7XG4gIG1hcmdpbjogMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZTJlO1xufVxuLlNlbGVjdG9ySW5kaWNhdG9yIC5PcHRpb24gc3dpdGNoIGltYWdlLCAuU2VsZWN0b3JJbmRpY2F0b3IgLk9wdGlvbiBzd2l0Y2ggc2xpZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbiAgbWluLXdpZHRoOiAyMHB4O1xuICBtaW4taGVpZ2h0OiA1cHg7XG59XG5cbi5DaGVhdHNoZWV0IHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgIzg5YjRmYTtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMzAsIDQ2LCAwLjgpO1xufVxuLkNoZWF0c2hlZXQgLlRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgZm9udC1zaXplOiA4MHB4O1xufVxuLkNoZWF0c2hlZXQgLlN1YnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogNDBweDtcbn1cbi5DaGVhdHNoZWV0IC5TZWN0aW9uIHtcbiAgbWFyZ2luOiA0cHg7XG4gIHBhZGRpbmc6IDRweDtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeSB7XG4gIG1hcmdpbjogM3B4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG59XG4uQ2hlYXRzaGVldCAuRW50cnkgLkJpbmQsIC5DaGVhdHNoZWV0IC5FbnRyeSAuQWN0aW9uIHtcbiAgcGFkZGluZzogMnB4O1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5IC5CaW5kIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjODliNGZhO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMjQ0O1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5IC5BY3Rpb24ge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICBjb2xvcjogIzMxMzI0NDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeTpob3ZlciAuQmluZCB7XG4gIGNvbG9yOiAjMzEzMjQ0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5OmhvdmVyIC5BY3Rpb24ge1xuICBjb2xvcjogIzg5YjRmYTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzI0NDtcbn1cblxuLyogUmVzZXR0aW5nIGV2ZXJ5IGRlY29yYXRpb24gYXBwbGllZCBlYXJsaWVyICovXG4qIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgLWd0ay1pY29uLXNpemU6IDI0cHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLkJhciB7XG4gIGJhY2tncm91bmQ6ICMxZTFlMmU7XG4gIGJvcmRlci1yYWRpdXM6IDI4cHg7XG4gIG1hcmdpbjogNHB4IDZweDtcbn0iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmV4cG9ydCB7IEFzdGFsLCBHdGssIEdkayB9XG4iLCAiaW1wb3J0IEFzdGFsQmF0dGVyeSBmcm9tIFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIlxuaW1wb3J0IEdUb3AgZnJvbSBcImdpOi8vR1RvcD92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgZm9ybWF0VGltZVZlcmJvc2UgfSBmcm9tIFwiLi4vc2VydmljZXMvVGltZUZvcm1hdHRlclwiO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5cbnR5cGUgTWV0cmljcyA9IHtcbiAgICBjcHU6IG51bWJlcixcbiAgICBtZW06IG51bWJlclxufVxuXG50eXBlIEluZGljYXRvcldpZGdldHMgPSB7XG4gICAgaWNvbjogR3RrLldpZGdldCxcbiAgICBsYWJlbDogR3RrLldpZGdldFxufVxuXG5jb25zdCBwb2xsVGltZSA9IDMwMDA7XG5cbmNsYXNzIFN5c3RlbU1vbml0b3JDbGFzcyB7XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5OiBBc3RhbEJhdHRlcnkuRGV2aWNlO1xuICAgIHByaXZhdGUgYmF0dGVyeVBlcmNlbnRhZ2U6IEFjY2Vzc29yPG51bWJlcj47XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5Q2hhcmdpbmc6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgYmF0dGVyeUNyaXRpY2FsOiBBY2Nlc3NvcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5TGlmZUxhYmVsOiBBY2Nlc3NvcjxzdHJpbmc+O1xuICAgIHByaXZhdGUgYmF0dGVyeUljb246IEFjY2Vzc29yPHN0cmluZz47XG5cbiAgICBwcml2YXRlIGNwdVNvdXJjZTogR1RvcC5nbGlidG9wX2NwdTtcbiAgICBwcml2YXRlIGNwdURhdGE6IHsgcHJldjogeyB1c2VyOiBudW1iZXIsIHN5czogbnVtYmVyLCB0b3RhbDogbnVtYmVyIH0sIGRpZmY6IHsgdXNlcjogbnVtYmVyLCBzeXM6IG51bWJlciwgdG90YWw6IG51bWJlciB9IH07XG4gICAgcHJpdmF0ZSBtZW1Tb3VyY2U6IEdUb3AuZ2xpYnRvcF9tZW07XG4gICAgcHJpdmF0ZSBfbWV0cmljczogQWNjZXNzb3I8TWV0cmljcz47XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYmF0dGVyeSA9IEFzdGFsQmF0dGVyeS5nZXRfZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLmJhdHRlcnlJY29uID0gY3JlYXRlQmluZGluZyh0aGlzLmJhdHRlcnksIFwiYmF0dGVyeUljb25OYW1lXCIpO1xuICAgICAgICB0aGlzLmJhdHRlcnlQZXJjZW50YWdlID0gY3JlYXRlQmluZGluZyh0aGlzLmJhdHRlcnksIFwicGVyY2VudGFnZVwiKTtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5Q2hhcmdpbmcgPSBjcmVhdGVCaW5kaW5nKHRoaXMuYmF0dGVyeSwgXCJjaGFyZ2luZ1wiKTtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5Q3JpdGljYWwgPSBjcmVhdGVDb21wdXRlZChbdGhpcy5iYXR0ZXJ5UGVyY2VudGFnZSwgdGhpcy5iYXR0ZXJ5Q2hhcmdpbmddLCAocCwgYykgPT4gW1wiQmF0dGVyeVwiLCBwIDw9IDAuMyAmJiAhYyA/IFwiQmF0dGVyeUNyaXRpY2FsXCIgOiBcIkJhdHRlcnlOb3JtYWxcIl0pO1xuICAgICAgICB0aGlzLmJhdHRlcnlMaWZlTGFiZWwgPSB0aGlzLmJhdHRlcnlDaGFyZ2luZy5hcyhjID0+IGMgPyBgQ2hhcmdpbmc6ICR7Zm9ybWF0VGltZVZlcmJvc2UodGhpcy5iYXR0ZXJ5LnRpbWVfdG9fZnVsbCl9IGxlZnRgIDogYERpc2NoYXJnaW5nOiAke2Zvcm1hdFRpbWVWZXJib3NlKHRoaXMuYmF0dGVyeS50aW1lX3RvX2VtcHR5KX0gbGVmdGApO1xuXG4gICAgICAgIHRoaXMuY3B1U291cmNlID0gbmV3IEdUb3AuZ2xpYnRvcF9jcHUoKTtcbiAgICAgICAgdGhpcy5tZW1Tb3VyY2UgPSBuZXcgR1RvcC5nbGlidG9wX21lbSgpO1xuXG4gICAgICAgIHRoaXMuY3B1RGF0YSA9IHsgcHJldjogeyB1c2VyOiAwLCBzeXM6IDAsIHRvdGFsOiAwIH0sIGRpZmY6IHsgdXNlcjogMCwgc3lzOiAwLCB0b3RhbDogMCB9IH07XG5cbiAgICAgICAgdGhpcy5fbWV0cmljcyA9IGNyZWF0ZVBvbGwoeyBjcHU6IDAsIG1lbTogMCB9LCBwb2xsVGltZSwgKCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBHVG9wLmdsaWJ0b3BfZ2V0X2NwdSh0aGlzLmNwdVNvdXJjZSk7XG4gICAgICAgICAgICAgICAgR1RvcC5nbGlidG9wX2dldF9tZW0odGhpcy5tZW1Tb3VyY2UpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgY3B1ID0gdGhpcy5jcHVTb3VyY2U7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBwcmV2ID0gdGhpcy5jcHVEYXRhLnByZXY7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmNwdURhdGEuZGlmZiA9IHtcbiAgICAgICAgICAgICAgICAgICAgdXNlcjogY3B1LnVzZXIgLSBwcmV2LnVzZXIsXG4gICAgICAgICAgICAgICAgICAgIHN5czogY3B1LnN5cyAtIHByZXYuc3lzLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbDogY3B1LnRvdGFsIC0gcHJldi50b3RhbFxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuY3B1RGF0YS5wcmV2ID0ge1xuICAgICAgICAgICAgICAgICAgICB1c2VyOiBjcHUudXNlcixcbiAgICAgICAgICAgICAgICAgICAgc3lzOiBjcHUuc3lzLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbDogY3B1LnRvdGFsXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgY3B1RGlmZiA9IHRoaXMuY3B1RGF0YS5kaWZmO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgY3B1UGVyY2VudCA9IGNwdURpZmYudG90YWwgPiAwID8gTWF0aC5yb3VuZCgoKGNwdURpZmYudXNlciArIGNwdURpZmYuc3lzKSAvIGNwdURpZmYudG90YWwpICogMTAwKSA6IDA7XG4gICAgICAgICAgICAgICAgY29uc3QgbWVtUGVyY2VudCA9IHRoaXMubWVtU291cmNlLnRvdGFsID4gMCA/IE1hdGgucm91bmQoKHRoaXMubWVtU291cmNlLnVzZXIgLyB0aGlzLm1lbVNvdXJjZS50b3RhbCkgKiAxMDApIDogMDtcblxuICAgICAgICAgICAgICAgIHJldHVybiB7IGNwdTogTWF0aC5taW4oMTAwLCBjcHVQZXJjZW50KSwgbWVtOiBNYXRoLm1pbigxMDAsIG1lbVBlcmNlbnQpIH07XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm9yIHdoZW4gb2J0YWluaW5nIHN5c3RlbSBtZXRyaWNzOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY3B1OiAwLCBtZW06IDAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbmRpY2F0b3Iod2lkZ2V0czogSW5kaWNhdG9yV2lkZ2V0cywgY3NzQ2xhc3Nlcz86IHN0cmluZ1tdIHwgQWNjZXNzb3I8c3RyaW5nW10+KSB7XG4gICAgICAgIGNvbnN0IFtob3ZlcmVkQ2hpbGQsIHNldEhvdmVyZWRDaGlsZF09IGNyZWF0ZVN0YXRlKHdpZGdldHMuaWNvbik7XG4gICAgICAgIGNvbnN0IGhvdmVyID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJNb3Rpb247XG4gICAgICAgIGNvbnN0IG9uRW50ZXIgPSBob3Zlci5jb25uZWN0KCdlbnRlcicsICgpID0+IHNldEhvdmVyZWRDaGlsZCh3aWRnZXRzLmxhYmVsKSk7XG4gICAgICAgIGNvbnN0IG9uTGVhdmUgPSBob3Zlci5jb25uZWN0KCdsZWF2ZScsICgpID0+IHNldEhvdmVyZWRDaGlsZCh3aWRnZXRzLmljb24pKTtcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgaG92ZXIuZGlzY29ubmVjdChvbkVudGVyKTtcbiAgICAgICAgICAgIGhvdmVyLmRpc2Nvbm5lY3Qob25MZWF2ZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94ICQ9e3NlbGYgPT4gc2VsZi5hZGRfY29udHJvbGxlcihob3Zlcil9PlxuICAgICAgICAgICAgICAgIDxzdGFja1xuICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtjc3NDbGFzc2VzfVxuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlQ2hpbGQ9e2hvdmVyZWRDaGlsZH1cbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvblR5cGU9e0d0ay5TdGFja1RyYW5zaXRpb25UeXBlLkNST1NTRkFERX1cbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uPXsyMDB9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7d2lkZ2V0cy5pY29ufVxuICAgICAgICAgICAgICAgICAgICB7d2lkZ2V0cy5sYWJlbH1cbiAgICAgICAgICAgICAgICA8L3N0YWNrPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBTeXN0ZW1Nb25pdG9yKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJTeXN0ZW1Nb25pdG9yXCJdfT5cbiAgICAgICAgICAgICAgICB7dGhpcy5pbmRpY2F0b3IoXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246IDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0ljb24nXX0gbGFiZWw9eydcdUVDMTknfSAvPiBhcyBHdGsuV2lkZ2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0xhYmVsJ119IGxhYmVsPXt0aGlzLl9tZXRyaWNzLmFzKG0gPT4gYCR7bS5jcHV9JWApfSB3aWR0aENoYXJzPXs0fSAvPiAgYXMgR3RrLldpZGdldFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBbXCJDcHVVc2FnZVwiXVxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICB7dGhpcy5pbmRpY2F0b3IoXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246IDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0ljb24nXX0gbGFiZWw9eydcdURCODFcdURFMUEnfSAvPiAgYXMgR3RrLldpZGdldCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiA8bGFiZWwgY3NzQ2xhc3Nlcz17WydMYWJlbCddfSBsYWJlbD17dGhpcy5fbWV0cmljcy5hcyhtID0+IGAke20ubWVtfSVgKX0gd2lkdGhDaGFycz17NH0gLz4gIGFzIEd0ay5XaWRnZXRcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgW1wiTWVtb3J5VXNhZ2VcIl1cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAge3RoaXMuaW5kaWNhdG9yKFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uOiA8aW1hZ2UgY3NzQ2xhc3Nlcz17W1wiQmF0dGVyeUljb25cIl19IGljb25OYW1lPXt0aGlzLmJhdHRlcnlJY29ufSAvPiBhcyBHdGsuV2lkZ2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJCYXR0ZXJ5VXNhZ2VMYWJlbFwiXX0gbGFiZWw9e3RoaXMuYmF0dGVyeVBlcmNlbnRhZ2UuYXMocCA9PiBgJHtNYXRoLnJvdW5kKE1hdGgubWluKDEsIHApICogMTAwKSA/PyAwfSVgKX0gd2lkdGhDaGFycz17NH0gLz4gIGFzIEd0ay5XaWRnZXRcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5iYXR0ZXJ5Q3JpdGljYWxcbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBzeXN0ZW1Nb25pdG9yID0gbmV3IFN5c3RlbU1vbml0b3JDbGFzcztcbmV4cG9ydCBkZWZhdWx0IHN5c3RlbU1vbml0b3I7XG4iLCAiZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFRpbWUoc2Vjb25kczogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBpZiAoIXNlY29uZHMgfHwgc2Vjb25kcyA8IDApIHJldHVybiBcIjA6MDBcIjtcblxuICAgIGNvbnN0IGhvdXJzID0gTWF0aC5mbG9vcihzZWNvbmRzIC8gMzYwMCk7XG4gICAgY29uc3QgbWludXRlcyA9IE1hdGguZmxvb3IoKHNlY29uZHMgJSAzNjAwKSAvIDYwKTtcbiAgICBjb25zdCByZW1haW5pbmdTZWNvbmRzID0gTWF0aC5mbG9vcihzZWNvbmRzICUgNjApO1xuXG4gICAgaWYgKGhvdXJzID4gMCkge1xuICAgICAgICByZXR1cm4gYCR7aG91cnN9OiR7bWludXRlcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9OiR7cmVtYWluaW5nU2Vjb25kcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9YDtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gYCR7bWludXRlc306JHtyZW1haW5pbmdTZWNvbmRzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFRpbWVWZXJib3NlKHNlY29uZHM6IG51bWJlcik6IHN0cmluZyB7XG4gICAgaWYoc2Vjb25kcyA+PSAzNjAwKSB7XG4gICAgICAgIHJldHVybiBgJHtNYXRoLmZsb29yKHNlY29uZHMgLyAzNjAwKX1oJHtNYXRoLmZsb29yKChzZWNvbmRzICUgMzYwMCkgLyA2MCl9bWA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGAke01hdGguZmxvb3Ioc2Vjb25kcyAvIDYwKX1tYDtcbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyB0eXBlIENDLCB0eXBlIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIHR5cGUgUGFzY2FsaWZ5LCBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbGwgb2YgdGhlIHRoaW5ncyB0aGF0IGNhbiBiZSBwYXNzZWQgYXMgYSBjaGlsZCB0byBjbGFzcyBjb21wb25lbnRzLlxuICovXG5leHBvcnQgdHlwZSBOb2RlID1cbiAgICB8IEFycmF5PEdPYmplY3QuT2JqZWN0PlxuICAgIHwgR09iamVjdC5PYmplY3RcbiAgICB8IG51bWJlclxuICAgIHwgc3RyaW5nXG4gICAgfCBib29sZWFuXG4gICAgfCBudWxsXG4gICAgfCB1bmRlZmluZWRcblxuZXhwb3J0IGNvbnN0IGd0a1R5cGUgPSBTeW1ib2woXCJndGsgYnVpbGRlciB0eXBlXCIpXG5cbi8qKlxuICogR2V0IHRoZSB0eXBlIG9mIHRoZSBvYmplY3Qgc3BlY2lmaWVkIHRocm91Z2ggdGhlIGAkdHlwZWAgcHJvcGVydHlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFR5cGUob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIHJldHVybiBndGtUeXBlIGluIG9iamVjdCA/IChvYmplY3RbZ3RrVHlwZV0gYXMgc3RyaW5nKSA6IG51bGxcbn1cblxuLyoqXG4gKiBGdW5jdGlvbiBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBGQ1Byb3BzPFNlbGYsIFByb3BzPiA9IFByb3BzICYge1xuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbn1cblxuLyoqXG4gKiBDbGFzcyBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBDQ1Byb3BzPFNlbGYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUHJvcHM+ID0ge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbCBjaGlsZHJlbiBlbGVtZW50c1xuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICBjaGlsZHJlbj86IEFycmF5PE5vZGU+IHwgTm9kZVxuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBmdW5jdGlvbiB0byB1c2UgYXMgYSBjb25zdHJ1Y3RvcixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJGNvbnN0cnVjdG9yPyhwcm9wczogUGFydGlhbDxQcm9wcz4pOiBTZWxmXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb24sXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG4gICAgLyoqXG4gICAgICogQ1NTIGNsYXNzIG5hbWVzXG4gICAgICovXG4gICAgY2xhc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG4gICAgLyoqXG4gICAgICogaW5saW5lIENTU1xuICAgICAqL1xuICAgIGNzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgUHJvcHNdOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxQcm9wc1tLXT4+IHwgUHJvcHNbS11cbn0gJiB7XG4gICAgW1MgaW4ga2V5b2YgU2VsZltcIiRzaWduYWxzXCJdIGFzIFMgZXh0ZW5kcyBgbm90aWZ5Ojoke2luZmVyIFB9YFxuICAgICAgICA/IGBvbk5vdGlmeSR7UGFzY2FsaWZ5PFA+fWBcbiAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxTPn1gXG4gICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gcHJldHRpZXItaWdub3JlXG50eXBlIEpzeFByb3BzPEMsIFByb3BzPiA9XG4gICAgQyBleHRlbmRzIHR5cGVvZiBGcmFnbWVudCA/IChQcm9wcyAmIHt9KVxuICAgIC8vIGludHJpbnNpY0VsZW1lbnRzIGFsd2F5cyByZXNvbHZlIGFzIEZDXG4gICAgLy8gc28gd2UgY2FuJ3QgbmFycm93IGl0IGRvd24sIGFuZCBpbiBzb21lIGNhc2VzXG4gICAgLy8gdGhlIHNldHVwIGZ1bmN0aW9uIGlzIHR5cGVkIGFzIGEgdW5pb24gb2YgT2JqZWN0IGFuZCBhY3R1YWwgdHlwZVxuICAgIC8vIGFzIGEgZml4IHVzZXJzIGNhbiBhbmQgc2hvdWxkIHVzZSBGQ1Byb3BzXG4gICAgOiBDIGV4dGVuZHMgRkMgPyBQcm9wcyAmIE9taXQ8RkNQcm9wczxSZXR1cm5UeXBlPEM+LCBQcm9wcz4sIFwiJFwiPlxuICAgIDogQyBleHRlbmRzIENDID8gQ0NQcm9wczxJbnN0YW5jZVR5cGU8Qz4sIFByb3BzPlxuICAgIDogbmV2ZXJcblxuZnVuY3Rpb24gaXNHT2JqZWN0Q3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIENDIHtcbiAgICByZXR1cm4gY3Rvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdFxufVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uQ3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIEZDIHtcbiAgICByZXR1cm4gdHlwZW9mIGN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiAhaXNHT2JqZWN0Q3RvcihjdG9yKVxufVxuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gc2V0VHlwZShvYmplY3Q6IG9iamVjdCwgdHlwZTogc3RyaW5nKSB7XG4gICAgaWYgKGd0a1R5cGUgaW4gb2JqZWN0ICYmIG9iamVjdFtndGtUeXBlXSAhPT0gXCJcIikge1xuICAgICAgICBjb25zb2xlLndhcm4oYHR5cGUgb3ZlcnJpZGVuIGZyb20gJHtvYmplY3RbZ3RrVHlwZV19IHRvICR7dHlwZX0gb24gJHtvYmplY3R9YClcbiAgICB9XG5cbiAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBbZ3RrVHlwZV06IHR5cGUgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IFJldHVyblR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgbmV3IChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgQ29uc3RydWN0b3JQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IEluc3RhbmNlVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3Rvcjoga2V5b2YgKHR5cGVvZiBlbnYpW1wiaW50cmluc2ljRWxlbWVudHNcIl0gfCAobmV3IChwcm9wczogYW55KSA9PiBUKSB8ICgocHJvcHM6IGFueSkgPT4gVCksXG4gICAgaW5wcm9wczogYW55LFxuICAgIC8vIGtleSBpcyBhIHNwZWNpYWwgcHJvcCBpbiBqc3ggd2hpY2ggaXMgcGFzc2VkIGFzIGEgdGhpcmQgYXJndW1lbnQgYW5kIG5vdCBpbiBwcm9wc1xuICAgIGtleT86IHN0cmluZyxcbik6IFQge1xuICAgIGNvbnN0IHsgJCwgJHR5cGUsICRjb25zdHJ1Y3RvciwgY2hpbGRyZW4sIC4uLnJlc3QgfSA9IGlucHJvcHMgYXMgQ0NQcm9wczxULCBhbnk+XG4gICAgY29uc3QgcHJvcHMgPSByZXN0IGFzIFJlY29yZDxzdHJpbmcsIGFueT5cblxuICAgIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pXG4gICAgZW52LmluaXRQcm9wcyhwcm9wcylcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgZGVsZXRlIHByb3BzW2tleV1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LnNsaWNlKDIpLCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2gsIC0xKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaGlsZCwgLTEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkoc2lnKVxuICAgICAgICBjb25zdCBpZCA9IG5hbWUuc3RhcnRzV2l0aChcIm5vdGlmeS1cIilcbiAgICAgICAgICAgID8gb2JqZWN0LmNvbm5lY3QoYG5vdGlmeTo6JHtuYW1lLnNsaWNlKDcpfWAsIGhhbmRsZXIpXG4gICAgICAgICAgICA6IG9iamVjdC5jb25uZWN0KGtlYmFiaWZ5KHNpZyksIGhhbmRsZXIpXG5cbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBoYW5kbGUgYmluZGluZ3NcbiAgICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2VcbiAgICB9KVxuXG4gICAgLy8gY2xlYW51cFxuICAgIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQ/LihvYmplY3QpXG4gICAgcmV0dXJuIG9iamVjdFxufVxuXG5leHBvcnQgY29uc3QganN4cyA9IGpzeFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgdHlwZSBFbGVtZW50VHlwZSA9IGtleW9mIEludHJpbnNpY0VsZW1lbnRzIHwgRkMgfCBDQ1xuICAgICAgICB0eXBlIEVsZW1lbnQgPSBHT2JqZWN0Lk9iamVjdFxuICAgICAgICB0eXBlIEVsZW1lbnRDbGFzcyA9IEdPYmplY3QuT2JqZWN0XG5cbiAgICAgICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUHJvcHM+ID0gSnN4UHJvcHM8QywgUHJvcHM+ICYge1xuICAgICAgICAgICAgLy8gRklYTUU6IHdoeSBkb2VzIGFuIGludHJpbnNpYyBlbGVtZW50IGFsd2F5cyByZXNvbHZlIGFzIEZDP1xuICAgICAgICAgICAgLy8gX190eXBlPzogQyBleHRlbmRzIENDID8gXCJDQ1wiIDogQyBleHRlbmRzIEZDID8gXCJGQ1wiIDogbmV2ZXJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIC8vIGNjOiBDQ1Byb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcywgR3RrLkJveC5TaWduYWxTaWduYXR1cmVzPlxuICAgICAgICAgICAgLy8gZmM6IEZDUHJvcHM8R3RrLldpZGdldCwgRm5Qcm9wcz5cbiAgICAgICAgfVxuXG4gICAgICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICAgICAgY2hpbGRyZW46IHt9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciwgUmVjdXJzaXZlSW5mZXIgfSBmcm9tIFwiLi4vdmFyaWFudC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtZGVjbGFyYXRpb24tbWVyZ2luZ1xuZXhwb3J0IGNsYXNzIEFjY2Vzc29yPFQgPSB1bmtub3duPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBzdGF0aWMgJGd0eXBlID0gR09iamVjdC5UWVBFX0pTT0JKRUNUIGFzIHVua25vd24gYXMgR09iamVjdC5HVHlwZTxBY2Nlc3Nvcj5cblxuICAgICNnZXQ6ICgpID0+IFRcbiAgICAjc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvblxuXG4gICAgY29uc3RydWN0b3IoZ2V0OiAoKSA9PiBULCBzdWJzY3JpYmU/OiBTdWJzY3JpYmVGdW5jdGlvbikge1xuICAgICAgICBzdXBlcihcInJldHVybiBhcmd1bWVudHMuY2FsbGVlLl9jYWxsLmFwcGx5KGFyZ3VtZW50cy5jYWxsZWUsIGFyZ3VtZW50cylcIilcbiAgICAgICAgdGhpcy4jc3Vic2NyaWJlID0gc3Vic2NyaWJlID8/ICgoKSA9PiAoKSA9PiB2b2lkIDApXG4gICAgICAgIHRoaXMuI2dldCA9IGdldFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN1YnNjcmliZSBmb3IgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50IHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHJldHVybnMgVW5zdWJzY3JpYmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgc3Vic2NyaWJlKGNhbGxiYWNrOiBTdWJzY3JpYmVDYWxsYmFjayk6IERpc3Bvc2VGdW5jdGlvbiB7XG4gICAgICAgIC8vIFRPRE86IGF1dG8gdW5zdWIgd2hlbiBhIHNjb3BlIGlzIGF2YWlsYWJsZT9cbiAgICAgICAgcmV0dXJuIHRoaXMuI3N1YnNjcmliZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZS5cbiAgICAgKi9cbiAgICBnZXQoKTogVCB7XG4gICAgICAgIHJldHVybiB0aGlzLiNnZXQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBhczxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdHJhbnNmb3JtKHRoaXMuI2dldCgpKSwgdGhpcy4jc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBfY2FsbDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmFzKHRyYW5zZm9ybSlcbiAgICB9XG5cbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YFxuICAgIH1cblxuICAgIFtTeW1ib2wudG9QcmltaXRpdmVdKCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJBY2Nlc3NvciBpbXBsaWNpdGx5IGNvbnZlcnRlZCB0byBhIHByaW1pdGl2ZSB2YWx1ZS5cIilcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NvcjxUPiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPlxufVxuXG5leHBvcnQgdHlwZSBTZXR0ZXI8VD4gPSB7XG4gICAgKHZhbHVlOiBUKTogdm9pZFxuICAgICh2YWx1ZTogKHByZXY6IFQpID0+IFQpOiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFN0YXRlPFQ+ID0gW0FjY2Vzc29yPFQ+LCBTZXR0ZXI8VD5dXG5cbi8qKlxuICogQ3JlYXRlIGEgd3JpdGFibGUgc2lnbmFsLlxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbnRpYWwgdmFsdWUgb2YgdGhlIHNpZ25hbFxuICogQHJldHVybnMgQW4gYEFjY2Vzc29yYCBhbmQgYSBzZXR0ZXIgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXRlPFQ+KGluaXQ6IFQpOiBTdGF0ZTxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuICAgICAgICByZXR1cm4gKCkgPT4gc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNvbnN0IHNldCA9IChuZXdWYWx1ZTogdW5rbm93bikgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZTogVCA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gbmV3VmFsdWUoY3VycmVudFZhbHVlKSA6IG5ld1ZhbHVlXG4gICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgLy8gcnVubmluZyBjYWxsYmFja3MgbWlnaHQgbXV0YXRlIHN1YnNjcmliZXJzXG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKSwgc2V0IGFzIFNldHRlcjxUPl1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBpcyBjb21wdXRlZCBmcm9tIGEgbGlzdCBvZiBgQWNjZXNzb3Jgcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPHN0cmluZz5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPFtudW1iZXIsIHN0cmluZ10+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdKVxuICogY29uc3QgZDogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSwgKGE6IG51bWJlciwgYjogc3RyaW5nKSA9PiBgJHthfSAke2J9YClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBkZXBzIExpc3Qgb2YgYEFjY2Vzc29yc2AuXG4gKiBAcGFyYW0gdHJhbnNmb3JtIEFuIG9wdGlvbmFsIHRyYW5zZm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFYgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVik6IEFjY2Vzc29yPFY+IHtcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IEFycmF5PHVua25vd24+KGRlcHMubGVuZ3RoKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IGRlcHMubWFwKChkZXAsIGkpID0+XG4gICAgICAgICAgICAgICAgZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgICAgICBjYWNoZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogViA9PiB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlW2ldKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlW2ldXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybSA/IHRyYW5zZm9ybSguLi4oYXJncyBhcyBBcmdzKSkgOiAoYXJncyBhcyBWKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQGRlcHJlY2F0ZWQgcHJlZmVyIHVzaW5nIHtAbGluayBjcmVhdGVTZXR0aW5nc30uXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR2lvLlNldHRpbmdzYCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0ga2V5IFRoZSBzZXR0aW5ncyBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4oc2V0dGluZ3M6IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihvYmplY3Q6IEdPYmplY3QuT2JqZWN0IHwgR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBwcm9wID0ga2ViYWJpZnkoa2V5KSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpZyA9IG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncyA/IFwiY2hhbmdlZFwiIDogXCJub3RpZnlcIlxuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KGAke3NpZ306OiR7cHJvcH1gLCAoKSA9PiBjYWxsYmFjaygpKVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqZWN0LmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpIGFzIFRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtwcm9wLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgICAgICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iamVjdFtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKCkgYXMgVFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF0gYXMgVFxuICAgICAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBvYmplY3Rba2V5IGFzIGtleW9mIHR5cGVvZiBvYmplY3RdIGFzIFRcblxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBnZXQgcHJvcGVydHkgJHtrZXl9YClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgQ29ubmVjdGlvbkhhbmRsZXI8XG4gICAgTyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMgZXh0ZW5kcyBrZXlvZiBPW1wiJHNpZ25hbHNcIl0sXG4gICAgVCxcbj4gPSBPW1wiJHNpZ25hbHNcIl1bU10gZXh0ZW5kcyAoLi4uYXJnczogYW55W10pID0+IGluZmVyIFJcbiAgICA/IHZvaWQgZXh0ZW5kcyBSXG4gICAgICAgID8gKC4uLmFyZ3M6IFsuLi5QYXJhbWV0ZXJzPE9bXCIkc2lnbmFsc1wiXVtTXT4sIGN1cnJlbnRWYWx1ZTogVF0pID0+IFRcbiAgICAgICAgOiBuZXZlclxuICAgIDogbmV2ZXJcblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBzZXRzIHVwIGEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgIHNpZ25hbCBjb25uZWN0aW9ucy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBjb25zdCB2YWx1ZTogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbm5lY3Rpb24oXG4gKiAgIFwiaW5pdGlhbCB2YWx1ZVwiLFxuICogICBbb2JqMSwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl0sXG4gKiAgIFtvYmoyLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXVxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBzaWduYWxzIEEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgLCBzaWduYWwgbmFtZSBhbmQgY2FsbGJhY2sgcGFpcnMgdG8gY29ubmVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb248XG4gICAgVCxcbiAgICBPMSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMxIGV4dGVuZHMga2V5b2YgTzFbXCIkc2lnbmFsc1wiXSxcbiAgICBPMiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMyIGV4dGVuZHMga2V5b2YgTzJbXCIkc2lnbmFsc1wiXSxcbiAgICBPMyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMzIGV4dGVuZHMga2V5b2YgTzNbXCIkc2lnbmFsc1wiXSxcbiAgICBPNCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM0IGV4dGVuZHMga2V5b2YgTzRbXCIkc2lnbmFsc1wiXSxcbiAgICBPNSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM1IGV4dGVuZHMga2V5b2YgTzVbXCIkc2lnbmFsc1wiXSxcbiAgICBPNiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM2IGV4dGVuZHMga2V5b2YgTzZbXCIkc2lnbmFsc1wiXSxcbiAgICBPNyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM3IGV4dGVuZHMga2V5b2YgTzdbXCIkc2lnbmFsc1wiXSxcbiAgICBPOCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM4IGV4dGVuZHMga2V5b2YgTzhbXCIkc2lnbmFsc1wiXSxcbiAgICBPOSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM5IGV4dGVuZHMga2V5b2YgTzlbXCIkc2lnbmFsc1wiXSxcbj4oXG4gICAgaW5pdDogVCxcbiAgICBoMTogW08xLCBTMSwgQ29ubmVjdGlvbkhhbmRsZXI8TzEsIFMxLCBUPl0sXG4gICAgaDI/OiBbTzIsIFMyLCBDb25uZWN0aW9uSGFuZGxlcjxPMiwgUzIsIFQ+XSxcbiAgICBoMz86IFtPMywgUzMsIENvbm5lY3Rpb25IYW5kbGVyPE8zLCBTMywgVD5dLFxuICAgIGg0PzogW080LCBTNCwgQ29ubmVjdGlvbkhhbmRsZXI8TzQsIFM0LCBUPl0sXG4gICAgaDU/OiBbTzUsIFM1LCBDb25uZWN0aW9uSGFuZGxlcjxPNSwgUzUsIFQ+XSxcbiAgICBoNj86IFtPNiwgUzYsIENvbm5lY3Rpb25IYW5kbGVyPE82LCBTNiwgVD5dLFxuICAgIGg3PzogW083LCBTNywgQ29ubmVjdGlvbkhhbmRsZXI8TzcsIFM3LCBUPl0sXG4gICAgaDg/OiBbTzgsIFM4LCBDb25uZWN0aW9uSGFuZGxlcjxPOCwgUzgsIFQ+XSxcbiAgICBoOT86IFtPOSwgUzksIENvbm5lY3Rpb25IYW5kbGVyPE85LCBTOSwgVD5dLFxuKSB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3Qgc2lnbmFscyA9IFtoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoNywgaDgsIGg5XS5maWx0ZXIoKGgpID0+IGggIT09IHVuZGVmaW5lZClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBzaWduYWxzLm1hcCgoW29iamVjdCwgc2lnbmFsLCBjYWxsYmFja10pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5jb25uZWN0LmNhbGwoXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgKF8sIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY2FsbGJhY2soLi4uYXJncywgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcblxuICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuZGlzY29ubmVjdC5jYWxsKG9iamVjdCwgaWQpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBzaWduYWwgZnJvbSBhIHByb3ZpZXIgZnVuY3Rpb24uXG4gKiBUaGUgcHJvdmlkZXIgaXMgY2FsbGVkIHdoZW4gdGhlIGZpcnN0IHN1YnNjcmliZXIgYXBwZWFycyBhbmQgdGhlIHJldHVybmVkIGRpc3Bvc2VcbiAqIGZ1bmN0aW9uIGZyb20gdGhlIHByb3ZpZGVyIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIG51bWJlciBvZiBzdWJzY3JpYmVycyBkcm9wIHRvIHplcm8uXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgdmFsdWUgPSBjcmVhdGVFeHRlcm5hbCgwLCAoc2V0KSA9PiB7XG4gKiAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gc2V0KCh2KSA9PiB2ICsgMSkpXG4gKiAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKVxuICogfSlcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIHNob3VsZCByZXR1cm4gYSBjbGVhbnVwIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFeHRlcm5hbDxUPihcbiAgICBpbml0OiBULFxuICAgIHByb2R1Y2VyOiAoc2V0OiBTZXR0ZXI8VD4pID0+IERpc3Bvc2VGdW5jdGlvbixcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBEaXNwb3NlRnVuY3Rpb25cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBwcm9kdWNlcigodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlOiBUID0gdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoY3VycmVudFZhbHVlKSA6IHZcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqIEBleHBlcmltZW50YWwgKi9cbnR5cGUgU2V0dGluZ3M8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+ID0ge1xuICAgIFtLIGluIGtleW9mIFQgYXMgVW5jYXBpdGFsaXplPFBhc2NhbGlmeTxLPj5dOiBBY2Nlc3NvcjxSZWN1cnNpdmVJbmZlcjxUW0tdPj5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBgc2V0JHtQYXNjYWxpZnk8Sz59YF06IFNldHRlcjxEZWVwSW5mZXI8VFtLXT4+XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICpcbiAqIFdyYXAgYSB7QGxpbmsgR2lvLlNldHRpbmdzfSBpbnRvIGEgY29sbGVjdGlvbiBvZiBzZXR0ZXJzIGFuZCBhY2Nlc3NvcnMuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgcyA9IGNyZWF0ZVNldHRpbmdzKHNldHRpbmdzLCB7XG4gKiAgIFwiY29tcGxleC1rZXlcIjogXCJhe3Nhe3NzfX1cIixcbiAqICAgXCJzaW1wbGUta2V5XCI6IFwic1wiLFxuICogfSlcbiAqXG4gKiBzLmNvbXBsZXhLZXkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgcHJpbnQocy5jb21wbGV4S2V5LmdldCgpKVxuICogfSlcbiAqXG4gKiBzLnNldENvbXBsZXhLZXkoKHByZXYpID0+ICh7XG4gKiAgIC4uLnByZXYsXG4gKiAgIGtleTogeyBuZXN0ZWQ6IFwiXCIgfSxcbiAqIH0pKVxuICogYGBgXG4gKi9cbi8vIFRPRE86IGNvbWUgdXAgd2l0aCBhbiBBUElcbi8vIC0gdG8gbWFudWFsbHkgYW5ub3RhdGUgVmFyaWFudCB0eXBlZCBzZXR0ZXJzL2dldHRlcnNcbi8vIC0gdG8gc2V0IHJlY3Vyc2l2ZSB2cyBkZWVwIHVucGFjayBwZXIga2V5XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2V0dGluZ3M8Y29uc3QgVCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KFxuICAgIHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsXG4gICAga2V5czogVCxcbik6IFNldHRpbmdzPFQ+IHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICBPYmplY3QuZW50cmllcyhrZXlzKS5mbGF0TWFwKChba2V5LCB0eXBlXSkgPT4gW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGNhbWVsaWZ5KGtleSksXG4gICAgICAgICAgICAgICAgbmV3IEFjY2Vzc29yKFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiBzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSxcbiAgICAgICAgICAgICAgICAgICAgKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpZCA9IHNldHRpbmdzLmNvbm5lY3QoYGNoYW5nZWQ6OiR7a2V5fWAsIGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IHNldHRpbmdzLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgYHNldCR7a2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBjYW1lbGlmeShrZXkpLnNsaWNlKDEpfWAsXG4gICAgICAgICAgICAgICAgKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Muc2V0X3ZhbHVlKFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KHNldHRpbmdzLmdldF92YWx1ZShrZXkpLmRlZXBVbnBhY2soKSkgOiB2LFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICBdKSxcbiAgICApXG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuZXhwb3J0IGZ1bmN0aW9uIGtlYmFiaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIl9cIiwgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FtZWxpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1stX10oLikvZywgKF8sIGNoYXIpID0+IGNoYXIudG9VcHBlckNhc2UoKSlcbn1cblxuZXhwb3J0IHR5cGUgUGFzY2FsaWZ5PFM+ID0gUyBleHRlbmRzIGAke2luZmVyIEhlYWR9JHtcIi1cIiB8IFwiX1wifSR7aW5mZXIgVGFpbH1gXG4gICAgPyBgJHtDYXBpdGFsaXplPEhlYWQ+fSR7UGFzY2FsaWZ5PFRhaWw+fWBcbiAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgID8gQ2FwaXRhbGl6ZTxTPlxuICAgICAgOiBuZXZlclxuXG5leHBvcnQgdHlwZSBYbWxOb2RlID0ge1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIGF0dHJpYnV0ZXM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+XG4gICAgY2hpbGRyZW4/OiBBcnJheTxYbWxOb2RlPlxufVxuXG5leHBvcnQgZnVuY3Rpb24geG1sKHsgbmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4gfTogWG1sTm9kZSkge1xuICAgIGxldCBidWlsZGVyID0gYDwke25hbWV9YFxuXG4gICAgY29uc3QgYXR0cnMgPSBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzID8/IFtdKVxuXG4gICAgaWYgKGF0dHJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgYXR0cnMpIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0gYCAke2tleX09XCIke3ZhbHVlfVwiYFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYnVpbGRlciArPSBcIj5cIlxuICAgICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0geG1sKG5vZGUpXG4gICAgICAgIH1cbiAgICAgICAgYnVpbGRlciArPSBgPC8ke25hbWV9PmBcbiAgICB9IGVsc2Uge1xuICAgICAgICBidWlsZGVyICs9IFwiIC8+XCJcbiAgICB9XG5cbiAgICByZXR1cm4gYnVpbGRlclxufVxuXG4vLyBCaW5kaW5ncyB3b3JrIG92ZXIgcHJvcGVydGllcyBpbiBrZWJhYi1jYXNlIGJlY2F1c2UgdGhhdHMgdGhlIGNvbnZlbnRpb24gb2YgZ29iamVjdFxuLy8gaG93ZXZlciBpbiBqcyBpdHMgZWl0aGVyIHNuYWtlX2Nhc2Ugb3IgY2FtZWxDYXNlXG4vLyBhbHNvIG9uIERCdXMgaW50ZXJmYWNlcyBpdHMgUGFzY2FsQ2FzZSBieSBjb252ZW50aW9uXG4vLyBzbyBhcyBhIHdvcmthcm91bmQgd2UgdXNlIGdldF9wcm9wZXJ0eV9uYW1lIGFuZCBvbmx5IHVzZSB0aGUgcHJvcGVydHkgZmllbGQgYXMgYSBmYWxsYmFja1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5R2V0dGVyPFQgZXh0ZW5kcyBvYmplY3Q+KG9iamVjdDogVCwgcHJvcDogRXh0cmFjdDxrZXlvZiBULCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgYGdldF8ke2tlYmFiaWZ5KHByb3ApLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiAoKSA9PiBvYmplY3RbcHJvcF0sXG4gICAgfSlcbn1cblxuLy8gYXR0ZW1wdCBzZXR0aW5nIGEgcHJvcGVydHkgb2YgR09iamVjdC5PYmplY3RcbmV4cG9ydCBmdW5jdGlvbiBzZXQob2JqOiBHT2JqZWN0Lk9iamVjdCwgcHJvcDogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgY29uc3Qga2V5ID0gc25ha2VpZnkocHJvcClcbiAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuICAgIGNvbnN0IHNldHRlciA9IGBzZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG5cbiAgICBsZXQgY3VycmVudDogdW5rbm93blxuXG4gICAgaWYgKGdldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY3VycmVudCA9IChvYmpbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3VycmVudCA9IG9ialtwcm9wIGFzIGtleW9mIHR5cGVvZiBvYmpdXG4gICAgfVxuXG4gICAgaWYgKGN1cnJlbnQgIT09IHZhbHVlKSB7XG4gICAgICAgIGlmIChzZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbc2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICA7KG9ialtzZXR0ZXJdIGFzICh2OiBhbnkpID0+IHZvaWQpKHZhbHVlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvYmosIHsgW3Byb3BdOiB2YWx1ZSB9KVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyB0eXBlIEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IHR5cGUgQ0M8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IHsgbmV3IChwcm9wczogYW55KTogVCB9XG5leHBvcnQgdHlwZSBGQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0gKHByb3BzOiBhbnkpID0+IFRcblxudHlwZSBDc3NTZXR0ZXIgPSAob2JqZWN0OiBHT2JqLCBjc3M6IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz4pID0+IHZvaWRcbnR5cGUgQ2hpbGRGbiA9IChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqIHwgbnVtYmVyIHwgc3RyaW5nLCBpbmRleD86IG51bWJlcikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndWUoY29uZjogUGFydGlhbDxKc3hFbnY+KSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKVxufVxuXG50eXBlIEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czogUmVjb3JkPHN0cmluZywgQ0MgfCBGQz5cbiAgICBhZGRDaGlsZDogQ2hpbGRGblxuICAgIHNldENzczogQ3NzU2V0dGVyXG4gICAgc2V0Q2xhc3M6IENzc1NldHRlclxuICAgIGluaXRQcm9wczogKHByb3BzOiBhbnkpID0+IHZvaWRcbiAgICBkZWZhdWx0Q2xlYW51cDogKG9iamVjdDogR09iaikgPT4gdm9pZFxufVxuXG5mdW5jdGlvbiBtaXNzaW5nSW1wbCgpIHtcbiAgICB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW1wbFwiKVxufVxuXG5leHBvcnQgY29uc3QgZW52OiBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IHt9LFxuICAgIGFkZENoaWxkOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDc3M6IG1pc3NpbmdJbXBsLFxuICAgIHNldENsYXNzOiBtaXNzaW5nSW1wbCxcbiAgICBpbml0UHJvcHM6ICgpID0+IHZvaWQgMCxcbiAgICBkZWZhdWx0Q2xlYW51cDogKCkgPT4gdm9pZCAwLFxufVxuIiwgImV4cG9ydCBjbGFzcyBTY29wZSB7XG4gICAgc3RhdGljIGN1cnJlbnQ/OiBTY29wZSB8IG51bGxcblxuICAgIHBhcmVudD86IFNjb3BlIHwgbnVsbFxuICAgIGNvbnRleHRzID0gbmV3IE1hcDxDb250ZXh0LCB1bmtub3duPigpXG5cbiAgICBwcml2YXRlIGNsZWFudXBzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50ZWQgPSBmYWxzZVxuXG4gICAgY29uc3RydWN0b3IocGFyZW50PzogU2NvcGUgfCBudWxsKSB7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50XG4gICAgfVxuXG4gICAgb25DbGVhbnVwKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHM/LmFkZChjYWxsYmFjaylcbiAgICB9XG5cbiAgICBvbk1vdW50KGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudCAmJiAhdGhpcy5wYXJlbnQubW91bnRlZCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQub25Nb3VudChjYWxsYmFjaylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmFkZChjYWxsYmFjaylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJ1bjxUPihmbjogKCkgPT4gVCkge1xuICAgICAgICBjb25zdCBwcmV2ID0gU2NvcGUuY3VycmVudFxuICAgICAgICBTY29wZS5jdXJyZW50ID0gdGhpc1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZm4oKVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB0aGlzLm1vdW50cy5jbGVhcigpXG4gICAgICAgICAgICB0aGlzLm1vdW50ZWQgPSB0cnVlXG4gICAgICAgICAgICBTY29wZS5jdXJyZW50ID0gcHJldlxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5jbGVhcigpXG4gICAgICAgIHRoaXMuY29udGV4dHMuY2xlYXIoKVxuICAgICAgICBkZWxldGUgdGhpcy5wYXJlbnRcbiAgICB9XG59XG5cbmV4cG9ydCB0eXBlIENvbnRleHQ8VCA9IGFueT4gPSB7XG4gICAgdXNlKCk6IFRcbiAgICBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFJcbiAgICAocHJvcHM6IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KTogSlNYLkVsZW1lbnRcbn1cblxuLyoqXG4gKiBFeGFtcGxlIFVzYWdlOlxuICogYGBgdHN4XG4gKiBjb25zdCBNeUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KFwiZmFsbGJhY2stdmFsdWVcIilcbiAqXG4gKiBmdW5jdGlvbiBDb25zdW1lckNvbXBvbmVudCgpIHtcbiAqICAgY29uc3QgdmFsdWUgPSBNeUNvbnRleHQudXNlKClcbiAqXG4gKiAgIHJldHVybiA8R3RrLkxhYmVsIGxhYmVsPXt2YWx1ZX0gLz5cbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiBQcm92aWRlckNvbXBvbmVudCgpIHtcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLkJveD5cbiAqICAgICAgIDxNeUNvbnRleHQgdmFsdWU9XCJteS12YWx1ZVwiPlxuICogICAgICAgICB7KCkgPT4gPENvbnN1bWVyQ29tcG9uZW50IC8+fVxuICogICAgICAgPC9NeUNvbnRleHQ+XG4gKiAgICAgPC9HdGsuQm94PlxuICogICApXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQ8VD4oZGVmYXVsdFZhbHVlOiBUKTogQ29udGV4dDxUPiB7XG4gICAgbGV0IGN0eDogQ29udGV4dDxUPlxuXG4gICAgZnVuY3Rpb24gcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSIHtcbiAgICAgICAgY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gICAgICAgIHNjb3BlLmNvbnRleHRzLnNldChjdHgsIHZhbHVlKVxuICAgICAgICByZXR1cm4gc2NvcGUucnVuKGZuKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVzZSgpOiBUIHtcbiAgICAgICAgbGV0IHNjb3BlID0gU2NvcGUuY3VycmVudFxuICAgICAgICB3aGlsZSAoc2NvcGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gc2NvcGUuY29udGV4dHMuZ2V0KGN0eClcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSByZXR1cm4gdmFsdWUgYXMgVFxuICAgICAgICAgICAgc2NvcGUgPSBzY29wZS5wYXJlbnRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udGV4dCh7IHZhbHVlLCBjaGlsZHJlbiB9OiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSkge1xuICAgICAgICByZXR1cm4gcHJvdmlkZSh2YWx1ZSwgY2hpbGRyZW4pXG4gICAgfVxuXG4gICAgcmV0dXJuIChjdHggPSBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICAgICAgcHJvdmlkZSxcbiAgICAgICAgdXNlLFxuICAgIH0pKVxufVxuXG4vKipcbiAqIEdldHMgdGhlIHNjb3BlIHRoYXQgb3ducyB0aGUgY3VycmVudGx5IHJ1bm5pbmcgY29kZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNvbnN0IHNjb3BlID0gZ2V0U2NvcGUoKVxuICogc2V0VGltZW91dCgoKSA9PiB7XG4gKiAgIC8vIFRoaXMgY2FsbGJhY2sgZ2V0cyBydW4gd2l0aG91dCBhbiBvd25lciBzY29wZS5cbiAqICAgLy8gUmVzdG9yZSBvd25lciB2aWEgc2NvcGUucnVuOlxuICogICBzY29wZS5ydW4oKCkgPT4ge1xuICogICAgIGNvbnN0IGZvbyA9IEZvb0NvbnRleHQudXNlKClcbiAqICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICogICAgICAgcHJpbnQoXCJzb21lIGNsZWFudXBcIilcbiAqICAgICB9KVxuICogICB9KVxuICogfSwgMTAwMClcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2NvcGUoKTogU2NvcGUge1xuICAgIGNvbnN0IHNjb3BlID0gU2NvcGUuY3VycmVudFxuICAgIGlmICghc2NvcGUpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJjYW5ub3QgZ2V0IHNjb3BlOiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKVxuICAgIH1cblxuICAgIHJldHVybiBzY29wZVxufVxuXG4vKipcbiAqIEF0dGFjaCBhIGNsZWFudXAgY2FsbGJhY2sgdG8gdGhlIGN1cnJlbnQge0BsaW5rIFNjb3BlfS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uQ2xlYW51cChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJvdXQgb2YgdHJhY2tpbmcgY29udGV4dDogd2lsbCBub3QgYmUgYWJsZSB0byBjbGVhbnVwXCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uQ2xlYW51cChjbGVhbnVwKVxufVxuXG4vKipcbiAqIEF0dGFjaCBhIGNhbGxiYWNrIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50bHkgcnVubmluZyB7QGxpbmsgU2NvcGV9IHJldHVybnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbk1vdW50KGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcImNhbm5vdCBhdHRhY2ggb25Nb3VudDogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25Nb3VudChjbGVhbnVwKVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSByb290IHtAbGluayBTY29wZX0gdGhhdCB3aGVuIGRpc3Bvc2VkIHdpbGwgcmVtb3ZlXG4gKiBhbnkgY2hpbGQgc2lnbmFsIGhhbmRsZXIgb3Igc3RhdGUgc3Vic2NyaWJlci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHN4XG4gKiBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gKiAgIGxldCByb290OiBHdGsuV2luZG93XG4gKlxuICogICBjb25zdCBbc3RhdGVdID0gY3JlYXRlU3RhdGUoXCJ2YWx1ZVwiKVxuICpcbiAqICAgY29uc3QgcmVtb3ZlID0gKCkgPT4ge1xuICogICAgIHJvb3QuZGVzdHJveSgpXG4gKiAgICAgZGlzcG9zZSgpXG4gKiAgIH1cbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5XaW5kb3cgJD17KHNlbGYpID0+IChyb290ID0gc2VsZil9PlxuICogICAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICAgIDxHdGsuTGFiZWwgbGFiZWw9e3N0YXRlfSAvPlxuICogICAgICAgICA8R3RrLkJ1dHRvbiAkY2xpY2tlZD17cmVtb3ZlfSAvPlxuICogICAgICAgPC9HdGsuQm94PlxuICogICAgIDwvR3RrLldpbmRvdz5cbiAqICAgKVxuICogfSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUm9vdDxUPihmbjogKGRpc3Bvc2U6ICgpID0+IHZvaWQpID0+IFQpIHtcbiAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShudWxsKVxuICAgIHJldHVybiBzY29wZS5ydW4oKCkgPT4gZm4oKCkgPT4gc2NvcGUuZGlzcG9zZSgpKSlcbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlIH0gZnJvbSBcIi4uL2dub21lL3NpZ25hbFRyYWNrZXIuanNcIlxuXG4vLyBUT0RPOiBGcmFnbWVudCBzaG91bGQgaW1wbGVtZW50IEdpby5MaXN0TW9kZWxcblxuZXhwb3J0IGNsYXNzIEZyYWdtZW50PFQgPSBhbnk+IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIHN0YXRpYyBbR09iamVjdC5zaWduYWxzXSA9IHtcbiAgICAgICAgXCJkZXN0cm95XCI6IHt9LFxuXG4gICAgICAgIFwiY2hpbGQtYWRkZWRcIjoge1xuICAgICAgICAgICAgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNULCBHT2JqZWN0LlRZUEVfVUlOVF0sXG4gICAgICAgIH0sXG4gICAgICAgIFwiY2hpbGQtcmVtb3ZlZFwiOiB7XG4gICAgICAgICAgICBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1QsIEdPYmplY3QuVFlQRV9VSU5UXSxcbiAgICAgICAgfSxcbiAgICB9XG5cbiAgICBzdGF0aWMgW0dPYmplY3QucHJvcGVydGllc10gPSB7XG4gICAgICAgIGNoaWxkcmVuOiBHT2JqZWN0LlBhcmFtU3BlYy5qc29iamVjdChcImNoaWxkcmVuXCIsIFwiXCIsIFwiXCIsIEdPYmplY3QuUGFyYW1GbGFncy5SRUFEQUJMRSksXG4gICAgfVxuXG4gICAgc3RhdGljIHtcbiAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHRoaXMpXG4gICAgICAgIHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlKHRoaXMpXG4gICAgfVxuXG4gICAgc3RhdGljIG5ldzxUPihjaGlsZHJlbjogQXJyYXk8VD4gPSBbXSkge1xuICAgICAgICByZXR1cm4gbmV3IEZyYWdtZW50KHsgY2hpbGRyZW4gfSlcbiAgICB9XG5cbiAgICBwcml2YXRlIGNvbm5lY3Rpb25JZHMgPSBuZXcgU2V0PG51bWJlcj4oKVxuICAgIHByaXZhdGUgX2NoaWxkcmVuOiBBcnJheTxUPlxuXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMuX2NoaWxkcmVuXVxuICAgIH1cblxuICAgIGFkZENoaWxkKGNoaWxkOiBULCBpbmRleDogbnVtYmVyID0gLTEpOiB2b2lkIHtcbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBuZXN0aW5nIEZyYWdtZW50cyBhcmUgbm90IHlldCBzdXBwb3J0ZWRgKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluZGV4ID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fY2hpbGRyZW4gPSBbXG4gICAgICAgICAgICAgICAgLi4udGhpcy5fY2hpbGRyZW4uc2xpY2UoMCwgaW5kZXgpLFxuICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgIC4uLnRoaXMuX2NoaWxkcmVuLnNsaWNlKGluZGV4KSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpXG4gICAgICAgICAgICBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmxlbmd0aCAtIDFcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZW1pdChcImNoaWxkLWFkZGVkXCIsIGNoaWxkLCBpbmRleClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIGhhc0NoaWxkKGNoaWxkOiBUKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jaGlsZHJlbi5maW5kSW5kZXgoKGNoKSA9PiBjaCA9PT0gY2hpbGQpID4gLTFcbiAgICB9XG5cbiAgICByZW1vdmVDaGlsZChjaGlsZDogVCk6IHZvaWQge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoaSkgPT4gaSA9PT0gY2hpbGQpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwgMSlcblxuICAgICAgICB0aGlzLmVtaXQoXCJjaGlsZC1yZW1vdmVkXCIsIGNoaWxkLCBpbmRleClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHsgY2hpbGRyZW4gPSBbXSB9OiBQYXJ0aWFsPHsgY2hpbGRyZW46IEFycmF5PFQ+IHwgVCB9PiA9IHt9KSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4gPSBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXVxuICAgIH1cblxuICAgIGNvbm5lY3Qoc2lnbmFsOiBzdHJpbmcsIGNhbGxiYWNrOiAoXzogdGhpcywgLi4uYXJnczogYW55W10pID0+IHZvaWQpOiBudW1iZXIge1xuICAgICAgICBjb25zdCBpZCA9IHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uSWRzLmFkZChpZClcbiAgICAgICAgcmV0dXJuIGlkXG4gICAgfVxuXG4gICAgZGlzY29ubmVjdChpZDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgIHRoaXMuY29ubmVjdGlvbklkcy5kZWxldGUoaWQpXG4gICAgfVxuXG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5lbWl0KFwiZGVzdHJveVwiKVxuICAgICAgICBmb3IgKGNvbnN0IGlkIG9mIHRoaXMuY29ubmVjdGlvbklkcy52YWx1ZXMoKSkge1xuICAgICAgICAgICAgc3VwZXIuZGlzY29ubmVjdChpZClcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG50eXBlIFR5cGUgPSB7IG5ldyAoLi4uYXJnczogYW55W10pOiBHT2JqZWN0Lk9iamVjdCB9XG5cbi8vIEB0cy1leHBlY3QtZXJyb3IgbWlzc2luZyB0eXBlc1xuY29uc3QgbW9kID0gaW1wb3J0KFwicmVzb3VyY2U6Ly8vb3JnL2dub21lL3NoZWxsL21pc2Mvc2lnbmFsVHJhY2tlci5qc1wiKVxuXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGU6ICh0eXBlOiBUeXBlKSA9PiB2b2lkID0gYXdhaXQgbW9kXG4gICAgLnRoZW4oKG1vZCkgPT4gbW9kLnJlZ2lzdGVyRGVzdHJveWFibGVUeXBlKVxuICAgIC5jYXRjaCgoKSA9PiAoKSA9PiB2b2lkIDApXG4iLCAiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciwgdHlwZSBTdGF0ZSwgY3JlYXRlU3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0U2NvcGUsIG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbmludGVyZmFjZSBGb3JQcm9wczxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+IHtcbiAgICBlYWNoOiBBY2Nlc3NvcjxJdGVyYWJsZTxJdGVtPj5cbiAgICBjaGlsZHJlbjogKGl0ZW06IEl0ZW0sIGluZGV4OiBBY2Nlc3NvcjxudW1iZXI+KSA9PiBFbFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcnVuIGZvciBlYWNoIHJlbW92ZWQgZWxlbWVudC5cbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBlbnZpcm9ubWVudDpcbiAgICAgKlxuICAgICAqIC0gKipHdGs0Kio6IG51bGxcbiAgICAgKiAtICoqR3RrMyoqOiBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95XG4gICAgICogLSAqKkdub21lKio6IENsdXR0ZXIuQWN0b3IucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRWwsIGl0ZW06IEl0ZW0sIGluZGV4OiBudW1iZXIpID0+IHZvaWQpXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0aGF0IGdlbmVyYXRlcyB0aGUga2V5IGZvciBlYWNoIGl0ZW0uXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0IGl0ZW1zIGFyZSBtYXBwZWQgYnk6XG4gICAgICogLSB2YWx1ZSBpbiBjYXNlIG9mIHByaW1pdGl2ZSB2YWx1ZXNcbiAgICAgKiAtIHJlZmVyZW5jZSBvdGhlcndpc2VcbiAgICAgKi9cbiAgICBpZD86IChpdGVtOiBJdGVtKSA9PiBLZXkgfCBJdGVtXG59XG5cbi8vIFRPRE86IHN1cHBvcnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgZnVuY3Rpb24gRm9yPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4oe1xuICAgIGVhY2gsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbiAgICBpZCA9IChpdGVtOiBJdGVtKSA9PiBpdGVtLFxufTogRm9yUHJvcHM8SXRlbSwgRWwsIEtleT4pOiBGcmFnbWVudDxFbD4ge1xuICAgIHR5cGUgTWFwSXRlbSA9IHsgaXRlbTogSXRlbTsgY2hpbGQ6IEVsOyBpbmRleDogU3RhdGU8bnVtYmVyPjsgc2NvcGU6IFNjb3BlIH1cblxuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwPEl0ZW0gfCBLZXksIE1hcEl0ZW0+KClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFbD4oKVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlKHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXhdLCBzY29wZSB9OiBNYXBJdGVtKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjbGVhbnVwKGNoaWxkLCBpdGVtLCBpbmRleC5nZXQoKSlcbiAgICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7XG4gICAgICAgICAgICBlbnYuZGVmYXVsdENsZWFudXAoY2hpbGQpXG4gICAgICAgIH1cbiAgICAgICAgc2NvcGUuZGlzcG9zZSgpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2soaXRhcmVhYmxlOiBJdGVyYWJsZTxJdGVtPikge1xuICAgICAgICBjb25zdCBpdGVtcyA9IFsuLi5pdGFyZWFibGVdXG4gICAgICAgIGNvbnN0IGlkcyA9IGl0ZW1zLm1hcChpZClcbiAgICAgICAgY29uc3QgaWRTZXQgPSBuZXcgU2V0KGlkcylcblxuICAgICAgICAvLyBjbGVhbnVwIGNoaWxkcmVuIG1pc3NpbmcgZnJvbSBhcnJcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbWFwLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgLy8gdGhlcmUgaXMgbm8gZ2VuZXJpYyB3YXkgdG8gaW5zZXJ0IGNoaWxkIGF0IGluZGV4XG4gICAgICAgICAgICAvLyBzbyB3ZSBzb3J0IGJ5IHJlbW92aW5nIGV2ZXJ5IGNoaWxkIGFuZCByZWFwcGVuZGluZyBpbiBvcmRlclxuICAgICAgICAgICAgZnJhZ21lbnQucmVtb3ZlQ2hpbGQodmFsdWUuY2hpbGQpXG5cbiAgICAgICAgICAgIGlmICghaWRTZXQuaGFzKGtleSkpIHtcbiAgICAgICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgICAgICAgICAgbWFwLmRlbGV0ZShrZXkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyB1cGRhdGUgaW5kZXggYW5kIGFkZCBuZXcgaXRlbXNcbiAgICAgICAgaXRlbXMubWFwKChpdGVtLCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBpZHNbaV1cbiAgICAgICAgICAgIGlmIChtYXAuaGFzKGtleSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiBbLCBzZXRJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgIH0gPSBtYXAuZ2V0KGtleSkhXG4gICAgICAgICAgICAgICAgc2V0SW5kZXgoaSlcbiAgICAgICAgICAgICAgICBpZiAoZnJhZ21lbnQuaGFzQ2hpbGQoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgZHVwbGljYXRlIGtleXMgZm91bmQ6ICR7a2V5fWApXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2hpbGQpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbaW5kZXgsIHNldEluZGV4XSA9IGNyZWF0ZVN0YXRlKGkpXG4gICAgICAgICAgICAgICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQoaXRlbSwgaW5kZXgpKVxuICAgICAgICAgICAgICAgIG1hcC5zZXQoa2V5LCB7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4LCBzZXRJbmRleF0sIHNjb3BlIH0pXG4gICAgICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2hpbGQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IGVhY2guc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcbiAgICB9KVxuICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBkaXNwb3NlKClcblxuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIG1hcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICB9XG5cbiAgICAgICAgbWFwLmNsZWFyKClcbiAgICB9KVxuXG4gICAgcmV0dXJuIGZyYWdtZW50XG59XG4iLCAiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuaW50ZXJmYWNlIFdpdGhQcm9wczxULCBFIGV4dGVuZHMgSlNYLkVsZW1lbnQ+IHtcbiAgICB2YWx1ZTogQWNjZXNzb3I8VD5cbiAgICBjaGlsZHJlbjogKHZhbHVlOiBUKSA9PiBFIHwgXCJcIiB8IGZhbHNlIHwgbnVsbCB8IHVuZGVmaW5lZFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcnVuIGZvciBlYWNoIHJlbW92ZWQgZWxlbWVudC5cbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBlbnZpcm9ubWVudDpcbiAgICAgKlxuICAgICAqIC0gKipHdGs0Kio6IG51bGxcbiAgICAgKiAtICoqR3RrMyoqOiBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95XG4gICAgICogLSAqKkdub21lKio6IENsdXR0ZXIuQWN0b3IucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRSkgPT4gdm9pZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFdpdGg8VCwgRSBleHRlbmRzIEpTWC5FbGVtZW50Pih7XG4gICAgdmFsdWUsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbn06IFdpdGhQcm9wczxULCBFPik6IEZyYWdtZW50PEU+IHtcbiAgICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpXG4gICAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQ8RT4oKVxuXG4gICAgbGV0IHNjb3BlOiBTY29wZVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2sodjogVCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZyYWdtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZChjaGlsZClcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBjbGVhbnVwKGNoaWxkKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoc2NvcGUpIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICB9XG5cbiAgICAgICAgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICBjb25zdCBjaCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKHYpKVxuICAgICAgICBpZiAoY2ggIT09IFwiXCIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFkZENoaWxkKGNoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKHZhbHVlLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICAgICAgZGlzcG9zZSgpXG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIHR5cGUgUGFzY2FsaWZ5LCBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5pbXBvcnQgeyBzZXRUeXBlIH0gZnJvbSBcIi4vanN4LmpzXCJcblxudHlwZSBFbGVtZW50ID0gSlNYLkVsZW1lbnQgfCBcIlwiIHwgZmFsc2UgfCBudWxsIHwgdW5kZWZpbmVkXG5cbnR5cGUgVGhpc1Byb3BzPFNlbGYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4gPSB7XG4gICAgdGhpczogU2VsZlxuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcblxuICAgIGNoaWxkcmVuPzogRWxlbWVudCB8IEFycmF5PEVsZW1lbnQ+XG4gICAgLyoqXG4gICAgICogQ1NTIGNsYXNzIG5hbWVzXG4gICAgICovXG4gICAgY2xhc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG4gICAgLyoqXG4gICAgICogaW5saW5lIENTU1xuICAgICAqL1xuICAgIGNzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgU2VsZl0/OiBTZWxmW0tdIHwgQWNjZXNzb3I8Tm9uTnVsbGFibGU8U2VsZltLXT4+XG59ICYge1xuICAgIFtTIGluIGtleW9mIFNlbGZbXCIkc2lnbmFsc1wiXSBhcyBTIGV4dGVuZHMgYG5vdGlmeTo6JHtpbmZlciBQfWBcbiAgICAgICAgPyBgb25Ob3RpZnkke1Bhc2NhbGlmeTxQPn1gXG4gICAgICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8Uz59YFxuICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIFRPRE86XG4vLyBjb25zaWRlciBtYWtpbmcgdGhpcyBjb21wb25lbnQgYSBwb3RlbnRpYWwgc3Vic3RpdHV0ZSBmb3IgYGNyZWF0ZVJvb3QoKWBcbi8vIGRpc3Bvc2luZyB0aGUgc2NvcGUgdXNpbmcgYSBkZXN0cm95IHNpZ25hbFxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIFRoaXM8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0Pih7XG4gICAgdGhpczogc2VsZixcbiAgICBjaGlsZHJlbixcbiAgICAkdHlwZSxcbiAgICAuLi5wcm9wc1xufTogVGhpc1Byb3BzPFQ+KSB7XG4gICAgY29uc3QgY2xlYW51cCA9IG5ldyBBcnJheTwoKSA9PiB2b2lkPigpXG5cbiAgICBpZiAoJHR5cGUpIHNldFR5cGUoc2VsZiwgJHR5cGUpXG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleSA9PT0gXCJjc3NcIikge1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENzcyhzZWxmLCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gXCJjbGFzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgICAgICBjbGVhbnVwLnB1c2godmFsdWUuc3Vic2NyaWJlKCgpID0+IGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgY29uc3QgaWQgPSBrZXkuc3RhcnRzV2l0aChcIm9uTm90aWZ5XCIpXG4gICAgICAgICAgICAgICAgPyBzZWxmLmNvbm5lY3QoYG5vdGlmeTo6JHtrZWJhYmlmeShrZXkuc2xpY2UoOCkpfWAsIHZhbHVlKVxuICAgICAgICAgICAgICAgIDogc2VsZi5jb25uZWN0KGtlYmFiaWZ5KGtleS5zbGljZSgyKSksIHZhbHVlKVxuXG4gICAgICAgICAgICBjbGVhbnVwLnB1c2goKCkgPT4gc2VsZi5kaXNjb25uZWN0KGlkKSlcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gc2V0KHNlbGYsIGtleSwgdmFsdWUuZ2V0KCkpKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGlmIChjaCAhPT0gXCJcIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGVudi5hZGRDaGlsZChzZWxmLCBjaCwgLTEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBjaCA9IGNoaWxkcmVuXG4gICAgICAgIGlmIChjaCAhPT0gXCJcIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZW52LmFkZENoaWxkKHNlbGYsIGNoLCAtMSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjbGVhbnVwLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IGNsZWFudXAuZm9yRWFjaCgoY2IpID0+IGNiKCkpKVxuICAgIH1cblxuICAgIHJldHVybiBzZWxmXG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgQXN0YWxJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCIuL3Byb2Nlc3MuanNcIlxuXG5leHBvcnQgdHlwZSBUaW1lID0gQXN0YWxJTy5UaW1lXG5leHBvcnQgY29uc3QgVGltZSA9IEFzdGFsSU8uVGltZVxuXG5leHBvcnQgZnVuY3Rpb24gaW50ZXJ2YWwoaW50ZXJ2YWw6IG51bWJlciwgY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIEFzdGFsSU8uVGltZS5pbnRlcnZhbChpbnRlcnZhbCwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lb3V0KHRpbWVvdXQ6IG51bWJlciwgY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIEFzdGFsSU8uVGltZS50aW1lb3V0KHRpbWVvdXQsICgpID0+IHZvaWQgY2FsbGJhY2s/LigpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaWRsZShjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLmlkbGUoKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsKFxuICAgIGluaXQ6IHN0cmluZyxcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuKTogQWNjZXNzb3I8c3RyaW5nPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZm46IChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPixcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaXZhbDogbnVtYmVyLFxuICAgIGV4ZWNPckZuOiBzdHJpbmcgfCBzdHJpbmdbXSB8ICgocHJldjogVCkgPT4gVCB8IFByb21pc2U8VD4pLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCB0aW1lcjogQXN0YWxJTy5UaW1lIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGZ1bmN0aW9uIHNldCh2YWx1ZTogVCkge1xuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgICAgIHN1YnNjcmliZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHRpbWVyID0gaW50ZXJ2YWwoaXZhbCwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZXhlY09yRm4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGV4ZWNPckZuKGN1cnJlbnRWYWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUudGhlbihzZXQpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQodmFsdWUpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBleGVjQXN5bmMoZXhlY09yRm4pLnRoZW4oKHN0ZG91dCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0KHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpKVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGltZXI/LmNhbmNlbCgpXG4gICAgICAgICAgICAgICAgdGltZXIgPSBudWxsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuIiwgImltcG9ydCBBc3RhbElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiZ25pbVwiXG5cbnR5cGUgQXJncyA9IHtcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdXG4gICAgb3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkXG4gICAgZXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFByb2Nlc3MgPSBBc3RhbElPLlByb2Nlc3NcbmV4cG9ydCBjb25zdCBQcm9jZXNzID0gQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKGFyZ3M6IEFyZ3MpOiBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoXG4gICAgY21kOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dD86IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZCxcbiAgICBvbkVycj86IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCxcbik6IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBhcmdzT3JDbWQ6IEFyZ3MgfCBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dDogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnQsXG4gICAgb25FcnI6IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCA9IHByaW50ZXJyLFxuKSB7XG4gICAgY29uc3QgYXJncyA9IEFycmF5LmlzQXJyYXkoYXJnc09yQ21kKSB8fCB0eXBlb2YgYXJnc09yQ21kID09PSBcInN0cmluZ1wiXG4gICAgY29uc3QgeyBjbWQsIGVyciwgb3V0IH0gPSB7XG4gICAgICAgIGNtZDogYXJncyA/IGFyZ3NPckNtZCA6IGFyZ3NPckNtZC5jbWQsXG4gICAgICAgIGVycjogYXJncyA/IG9uRXJyIDogYXJnc09yQ21kLmVyciB8fCBvbkVycixcbiAgICAgICAgb3V0OiBhcmdzID8gb25PdXQgOiBhcmdzT3JDbWQub3V0IHx8IG9uT3V0LFxuICAgIH1cblxuICAgIGNvbnN0IHByb2MgPSBBcnJheS5pc0FycmF5KGNtZClcbiAgICAgICAgPyBBc3RhbElPLlByb2Nlc3Muc3VicHJvY2Vzc3YoY21kKVxuICAgICAgICA6IEFzdGFsSU8uUHJvY2Vzcy5zdWJwcm9jZXNzKGNtZClcblxuICAgIHByb2MuY29ubmVjdChcInN0ZG91dFwiLCAoXywgc3Rkb3V0OiBzdHJpbmcpID0+IG91dChzdGRvdXQpKVxuICAgIHByb2MuY29ubmVjdChcInN0ZGVyclwiLCAoXywgc3RkZXJyOiBzdHJpbmcpID0+IGVycihzdGRlcnIpKVxuICAgIHJldHVybiBwcm9jXG59XG5cbi8qKiBAdGhyb3dzIHtHTGliLkVycm9yfSBUaHJvd3Mgc3RkZXJyICovXG5leHBvcnQgZnVuY3Rpb24gZXhlYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY21kKSA/IEFzdGFsSU8uUHJvY2Vzcy5leGVjdihjbWQpIDogQXN0YWxJTy5Qcm9jZXNzLmV4ZWMoY21kKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhlY0FzeW5jKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNtZCkpIHtcbiAgICAgICAgICAgIEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jdihjbWQsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jdl9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jKGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2Vzcyhpbml0OiBzdHJpbmcsIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdKTogQWNjZXNzb3I8c3RyaW5nPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybTogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3M8VD4oXG4gICAgaW5pdDogVCxcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm0/OiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgcHJvYzogQXN0YWxJTy5Qcm9jZXNzIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBwcm9jID0gc3VicHJvY2VzcyhleGVjLCAoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogKHN0ZG91dCBhcyBUKVxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvYz8ua2lsbCgpXG4gICAgICAgICAgICAgICAgcHJvYyA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZSAqL1xuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGdldFR5cGUsIG9uQ2xlYW51cCwgQWNjZXNzb3IsIEZyYWdtZW50IH0gZnJvbSBcIi4uL2luZGV4LmpzXCJcbmltcG9ydCB7IGNvbmZpZ3VlIH0gZnJvbSBcIi4uL2pzeC9lbnYuanNcIlxuXG5jb25zdCBkdW1teUJ1aWxkZXIgPSBuZXcgR3RrLkJ1aWxkZXIoKVxuXG5mdW5jdGlvbiBhZGQocGFyZW50OiBHdGsuQnVpbGRhYmxlLCBjaGlsZDogR09iamVjdC5PYmplY3QsIF86IG51bWJlcikge1xuICAgIGlmICghc3BlY2lhbEFkZChwYXJlbnQsIGNoaWxkLCBfKSkge1xuICAgICAgICBwYXJlbnQudmZ1bmNfYWRkX2NoaWxkKGR1bW15QnVpbGRlciwgY2hpbGQsIGdldFR5cGUoY2hpbGQpKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc3BlY2lhbFJlbW92ZShfcGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgX2NoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIC8vIFRPRE86IGFkZCBhbnkgc3BlY2lhbCBjYXNlXG4gICAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHNwZWNpYWxBZGQocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCBfOiBudW1iZXIpIHtcbiAgICAvLyBUT0RPOiBhZGQgYW55IG90aGVyIHNwZWNpYWwgY2FzZVxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuQWRqdXN0bWVudCAmJlxuICAgICAgICBcInNldF9hZGp1c3RtZW50XCIgaW4gcGFyZW50ICYmXG4gICAgICAgIHR5cGVvZiBwYXJlbnQuc2V0X2FkanVzdG1lbnQgPT09IFwiZnVuY3Rpb25cIlxuICAgICkge1xuICAgICAgICBwYXJlbnQuc2V0X2FkanVzdG1lbnQoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiZcbiAgICAgICAgcGFyZW50IGluc3RhbmNlb2YgR3RrLlN0YWNrICYmXG4gICAgICAgIGNoaWxkLm5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgY2hpbGQubmFtZSAhPT0gbnVsbCAmJlxuICAgICAgICBnZXRUeXBlKGNoaWxkKSA9PT0gXCJuYW1lZFwiXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlBvcG92ZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24pIHtcbiAgICAgICAgcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudU1vZGVsICYmXG4gICAgICAgIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbiB8fCBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuUG9wb3Zlck1lbnUpXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5zZXRfbWVudV9tb2RlbChjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvLk1lbnUpIHtcbiAgICAgICAgLy8gVE9ETzpcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5BcHBsaWNhdGlvbikge1xuICAgICAgICBwYXJlbnQuYWRkX3dpbmRvdyhjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuVGV4dEJ1ZmZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuVGV4dFZpZXcpIHtcbiAgICAgICAgcGFyZW50LnNldF9idWZmZXIoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHJlbW92ZShwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAoc3BlY2lhbFJlbW92ZShwYXJlbnQsIGNoaWxkKSkgcmV0dXJuXG5cbiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLldpZGdldCAmJiBjaGlsZCBpbnN0YW5jZW9mIEd0ay5FdmVudENvbnRyb2xsZXIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5yZW1vdmVfY29udHJvbGxlcihjaGlsZClcbiAgICB9XG5cbiAgICBpZiAoXCJzZXRfY2hpbGRcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfY2hpbGQgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2NoaWxkKG51bGwpXG4gICAgfVxuXG4gICAgaWYgKFwicmVtb3ZlXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQucmVtb3ZlID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihgY2Fubm90IHJlbW92ZSAke2NoaWxkfSBmcm9tICR7cGFyZW50fWApXG59XG5cbmNvbnN0IHsgYWRkQ2hpbGQsIGludHJpbnNpY0VsZW1lbnRzIH0gPSBjb25maWd1ZSh7XG4gICAgc2V0Q3NzKG9iamVjdCwgY3NzKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGN0eCA9IG9iamVjdC5nZXRfc3R5bGVfY29udGV4dCgpXG4gICAgICAgIGxldCBwcm92aWRlcjogR3RrLkNzc1Byb3ZpZGVyXG5cbiAgICAgICAgY29uc3Qgc2V0dGVyID0gKGNzczogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNzcy5pbmNsdWRlcyhcIntcIikgfHwgIWNzcy5pbmNsdWRlcyhcIn1cIikpIHtcbiAgICAgICAgICAgICAgICBjc3MgPSBgKiB7ICR7Y3NzfSB9YFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpXG5cbiAgICAgICAgICAgIHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpXG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKGNzcylcbiAgICAgICAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzLmdldCgpKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNzcy5zdWJzY3JpYmUoKCkgPT4gc2V0dGVyKGNzcy5nZXQoKSkpXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNsYXNzTmFtZS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKCkgPT4gKG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLykpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBhZGRDaGlsZChwYXJlbnQsIGNoaWxkLCBpbmRleCA9IC0xKSB7XG4gICAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICBjaGlsZCA9IEd0ay5MYWJlbC5uZXcoU3RyaW5nKGNoaWxkKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIGluZGV4KSkgcmV0dXJuXG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICBwYXJlbnQuYWRkQ2hpbGQoY2hpbGQpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQnVpbGRhYmxlKSB7XG4gICAgICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgYWRkKHBhcmVudCwgY2gsIGluZGV4KVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNoaWxkLmNvbm5lY3QoXCJjaGlsZC1hZGRlZFwiLCAoXywgY2g6IHVua25vd24sIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgYWRkICR7Y2h9IHRvICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYWRkQ2hpbGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIGNoaWxkLmNvbm5lY3QoXCJjaGlsZC1yZW1vdmVkXCIsIChfLCBjaDogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZShwYXJlbnQsIGNoKVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2hpbGQuZGVzdHJveSgpKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgYWRkICR7Y2hpbGR9IHRvICR7cGFyZW50fWApXG4gICAgfSxcbn0pXG5cbmV4cG9ydCB7IEZyYWdtZW50LCBpbnRyaW5zaWNFbGVtZW50cyB9XG5leHBvcnQgeyBqc3gsIGpzeHMgfSBmcm9tIFwiLi4vanN4L2pzeC5qc1wiXG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIEZvciwgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgQXN0YWxUcmF5IGZyb20gXCJnaTovL0FzdGFsVHJheT92ZXJzaW9uPTAuMVwiO1xuXG5jbGFzcyBTeXN0ZW1UcmF5Q2xhc3Mge1xuICAgIHByaXZhdGUgZGVmYXVsdDogQXN0YWxUcmF5LlRyYXk7XG4gICAgcHJpdmF0ZSBpdGVtc0JpbmRpbmc6IEFjY2Vzc29yPEFzdGFsVHJheS5UcmF5SXRlbVtdPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gQXN0YWxUcmF5LmdldF9kZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuaXRlbXNCaW5kaW5nID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwiaXRlbXNcIik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZXR1cFRyYXlJdGVtID0gKGJ0bjogR3RrLk1lbnVCdXR0b24sIGl0ZW06IEFzdGFsVHJheS5UcmF5SXRlbSkgPT4ge1xuICAgICAgICBidG4ubWVudU1vZGVsID0gaXRlbS5tZW51TW9kZWw7XG4gICAgICAgIGJ0bi5pbnNlcnRfYWN0aW9uX2dyb3VwKFwiZGJ1c21lbnVcIiwgaXRlbS5hY3Rpb25Hcm91cCk7XG5cbiAgICAgICAgY29uc3QgYWdJZCA9IGl0ZW0uY29ubmVjdChcIm5vdGlmeTo6YWN0aW9uLWdyb3VwXCIsICgpID0+IHtcbiAgICAgICAgICAgIGJ0bi5pbnNlcnRfYWN0aW9uX2dyb3VwKFwiZGJ1c21lbnVcIiwgaXRlbS5hY3Rpb25Hcm91cCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IG1tSWQgPSBpdGVtLmNvbm5lY3QoXCJub3RpZnk6Om1lbnUtbW9kZWxcIiwgKCkgPT4ge1xuICAgICAgICAgICAgYnRuLnNldF9tZW51X21vZGVsKGl0ZW0ubWVudU1vZGVsKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgICAgIGl0ZW0uZGlzY29ubmVjdChhZ0lkKTtcbiAgICAgICAgICAgIGl0ZW0uZGlzY29ubmVjdChtbUlkKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHByaXZhdGUgVHJheUl0ZW0oeyBpdGVtIH06IHsgaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtIH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxtZW51YnV0dG9uXG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiVHJheUl0ZW1cIl19XG4gICAgICAgICAgICAgICAgdG9vbHRpcE1hcmt1cD17Y3JlYXRlQmluZGluZyhpdGVtLCBcInRvb2x0aXBNYXJrdXBcIil9XG4gICAgICAgICAgICAgICAgJD17KHNlbGYpID0+IHRoaXMuc2V0dXBUcmF5SXRlbShzZWxmLCBpdGVtKX1cbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxpbWFnZSBnaWNvbj17Y3JlYXRlQmluZGluZyhpdGVtLCBcImdpY29uXCIpfSAvPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgU3lzdGVtVHJheSgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiU3lzdGVtVHJheVwiXX0+XG4gICAgICAgICAgICAgICAgPEZvciBlYWNoPXt0aGlzLml0ZW1zQmluZGluZ30gY2hpbGRyZW49eyhpdGVtKSA9PiB0aGlzLlRyYXlJdGVtKHsgaXRlbSB9KX0gLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgc3lzdGVtVHJheSA9IG5ldyBTeXN0ZW1UcmF5Q2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IHN5c3RlbVRyYXk7XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIG9uQ2xlYW51cCwgV2l0aCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEdkaywgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgQXN0YWxNcHJpcyBmcm9tIFwiZ2k6Ly9Bc3RhbE1wcmlzP3ZlcnNpb249MC4xXCI7XG5cbnR5cGUgUGxheWVyQnV0dG9uID0gJ3ByZXZpb3VzJyB8ICduZXh0JyB8ICdwbGF5aW5nJyB8ICdwYXVzZWQnIHwgJ3N0b3BwZWQnO1xuXG5jb25zdCBQbGF5ZXJCdXR0b25JY29ucyA9IHtcbiAgICBwbGF5aW5nOiBcIm1lZGlhLXBsYXliYWNrLXN0YXJ0LXN5bWJvbGljXCIsXG4gICAgcGF1c2VkOiBcIm1lZGlhLXBsYXliYWNrLXBhdXNlLXN5bWJvbGljXCIsXG4gICAgc3RvcHBlZDogXCJtZWRpYS1wbGF5YmFjay1zdG9wLXN5bWJvbGljXCIsXG4gICAgbmV4dDogXCJtZWRpYS1za2lwLWZvcndhcmQtc3ltYm9saWNcIixcbiAgICBwcmV2aW91czogXCJtZWRpYS1za2lwLWJhY2t3YXJkLXN5bWJvbGljXCJcbn1cblxudHlwZSBQbGF5ZXJEYXRhID0ge1xuICAgIGFjdGl2ZTogYm9vbGVhbixcbiAgICB0aXRsZTogQWNjZXNzb3I8c3RyaW5nPiB8IHN0cmluZyxcbiAgICBhcnRpc3Q6IEFjY2Vzc29yPHN0cmluZz4gfCBzdHJpbmcsXG4gICAgYWxidW06IEFjY2Vzc29yPHN0cmluZz4gfCBzdHJpbmcsXG4gICAgc3RhdHVzSWNvbjogQWNjZXNzb3I8c3RyaW5nPiB8IHN0cmluZyxcbiAgICBzdGF0dXNUZXh0OiBBY2Nlc3NvcjxzdHJpbmc+IHwgc3RyaW5nLFxuICAgIG5leHQ6ICgpID0+IHZvaWQsXG4gICAgcHJldmlvdXM6ICgpID0+IHZvaWQsXG4gICAgcGxheVBhdXNlOiAoKSA9PiB2b2lkXG59XG5cbmNsYXNzIE1lZGlhQ2xhc3Mge1xuICAgIHByaXZhdGUgbXByaXM6IEFzdGFsTXByaXMuTXByaXM7XG4gICAgcHJpdmF0ZSBfYWN0aXZlUGxheWVyRGF0YTogQWNjZXNzb3I8UGxheWVyRGF0YT47XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMubXByaXMgPSBBc3RhbE1wcmlzLmdldF9kZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuX2FjdGl2ZVBsYXllckRhdGEgPSBjcmVhdGVCaW5kaW5nKHRoaXMubXByaXMsIFwicGxheWVyc1wiKS5hcyhcbiAgICAgICAgICAgIChwbGF5ZXJzKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHBsYXlpbmc6IEFzdGFsTXByaXMuUGxheWVyIHwgbnVsbCA9IG51bGw7XG4gICAgICAgICAgICAgICAgbGV0IHBhdXNlZDogQXN0YWxNcHJpcy5QbGF5ZXIgfCBudWxsID0gbnVsbDtcbiAgICAgICAgICAgICAgICBsZXQgZmluYWw6IEFzdGFsTXByaXMuUGxheWVyIHwgbnVsbCA9IG51bGw7XG5cbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHBsYXllciBvZiBwbGF5ZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IHBsYXllci5nZXRfcGxheWJhY2tfc3RhdHVzKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT09IEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMuUExBWUlORykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWluZyA9IHBsYXllcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHN0YXR1cyA9PT0gQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QQVVTRUQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlZCA9IHBsYXllcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZpbmFsID0gcGxheWluZyB8fCBwYXVzZWQ7XG5cbiAgICAgICAgICAgICAgICBpZiAoZmluYWwgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gY3JlYXRlQmluZGluZyhmaW5hbCwgJ3BsYXliYWNrU3RhdHVzJyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhbkdvTmV4dCA9IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdjYW5Hb05leHQnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FuR29QcmV2aW91cyA9IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdjYW5Hb1ByZXZpb3VzJyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhblBhdXNlID0gY3JlYXRlQmluZGluZyhmaW5hbCwgJ2NhblBhdXNlJyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhblBsYXkgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAnY2FuUGxheScpO1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogY3JlYXRlQmluZGluZyhmaW5hbCwgJ3RpdGxlJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBhcnRpc3Q6IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdhcnRpc3QnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsYnVtOiBjcmVhdGVCaW5kaW5nKGZpbmFsLCAnYWxidW0nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0ljb246IHN0YXR1cy5hcyhzdCA9PiB0aGlzLmdldFBsYXllclN0YXR1c0ljb24oc3QgPT09IEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMuUExBWUlORyA/ICdwYXVzZWQnIDogJ3BsYXlpbmcnKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiBzdGF0dXMuYXMoc3QgPT4gdGhpcy5nZXRQbGF5ZXJTdGF0dXMoc3QpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FuR29OZXh0LmdldCgpKSBmaW5hbCEubmV4dCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhbkdvUHJldmlvdXMuZ2V0KCkpIGZpbmFsIS5wcmV2aW91cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXlQYXVzZTogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYW5QYXVzZS5nZXQoKSB8fCBjYW5QbGF5LmdldCgpKSBmaW5hbCEucGxheV9wYXVzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnTmVuaHVtIHBsYXllciBhdGl2bycsXG4gICAgICAgICAgICAgICAgICAgIGFydGlzdDogJycsXG4gICAgICAgICAgICAgICAgICAgIGFsYnVtOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzSWNvbjogUGxheWVyQnV0dG9uSWNvbnMuc3RvcHBlZCxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dDogdGhpcy5nZXRQbGF5ZXJTdGF0dXMoQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5TVE9QUEVEKSxcbiAgICAgICAgICAgICAgICAgICAgbmV4dDogKCkgPT4geyB9LFxuICAgICAgICAgICAgICAgICAgICBwcmV2aW91czogKCkgPT4geyB9LFxuICAgICAgICAgICAgICAgICAgICBwbGF5UGF1c2U6ICgpID0+IHsgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRQbGF5ZXJTdGF0dXMoc3RhdHVzOiBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzKSB7XG4gICAgICAgIHN3aXRjaChzdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HOlxuICAgICAgICAgICAgICAgIHJldHVybiAnUGxheWluZyc7XG4gICAgICAgICAgICBjYXNlIEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMuUEFVU0VEOlxuICAgICAgICAgICAgICAgIHJldHVybiAnUGF1c2VkJztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdOb3RoaW5nIFBsYXlpbmcnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRQbGF5ZXJTdGF0dXNJY29uKHN0YXR1czogUGxheWVyQnV0dG9uKSB7XG4gICAgICAgIHN3aXRjaChzdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgJ3ByZXZpb3VzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMucHJldmlvdXM7XG4gICAgICAgICAgICBjYXNlICdwbGF5aW5nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMucGxheWluZztcbiAgICAgICAgICAgIGNhc2UgJ3BhdXNlZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLnBhdXNlZDtcbiAgICAgICAgICAgIGNhc2UgJ3N0b3BwZWQnOlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5zdG9wcGVkO1xuICAgICAgICAgICAgY2FzZSAnbmV4dCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLm5leHQ7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5zdG9wcGVkO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBNZWRpYSgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICA8V2l0aCB2YWx1ZT17dGhpcy5fYWN0aXZlUGxheWVyRGF0YX0+XG4gICAgICAgICAgICAgICAge3BsYXllciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8bWVudWJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsd2F5c1Nob3dBcnJvdz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiTWVkaWFcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vuc2l0aXZlPXtwbGF5ZXIuYWN0aXZlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvcG92ZXI9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9wb3Zlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTXByaXNQb3BvdmVyXCJdfSBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNcHJpc1BsYXllclwiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTWV0YWRhdGFcIl19IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlRpdGxlXCJdfSBsYWJlbD17cGxheWVyLnRpdGxlfSBlbGxpcHNpemU9ezN9IG1heFdpZHRoQ2hhcnM9ezE1fSB3aWR0aENoYXJzPXszMH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJBcnRpc3RcIl19IGxhYmVsPXtwbGF5ZXIuYXJ0aXN0fSBlbGxpcHNpemU9ezN9IG1heFdpZHRoQ2hhcnM9ezE1fSB3aWR0aENoYXJzPXszMH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJBbGJ1bVwiXX0gbGFiZWw9e3BsYXllci5hbGJ1bX0gZWxsaXBzaXplPXszfSBtYXhXaWR0aENoYXJzPXsxNX0gd2lkdGhDaGFycz17MzB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkxvd2VyUGFydFwiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkNvbnRyb2xsZXJzXCJdfSBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiUHJldmlvdXNcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25OYW1lPXtQbGF5ZXJCdXR0b25JY29ucy5wcmV2aW91c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXtwbGF5ZXIucHJldmlvdXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlBsYXlQYXVzZVwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbk5hbWU9e3BsYXllci5zdGF0dXNJY29ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9e3BsYXllci5wbGF5UGF1c2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIk5leHRcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25OYW1lPXtQbGF5ZXJCdXR0b25JY29ucy5uZXh0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9e3BsYXllci5uZXh0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wb3BvdmVyPiBhcyBHdGsuUG9wb3Zlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3BsYXllci5zdGF0dXNUZXh0fSB3aWR0aENoYXJzPXsxMn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IG1lZGlhID0gbmV3IE1lZGlhQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IG1lZGlhO1xuIiwgImltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IG1rQXBwIH0gZnJvbSBcIi4uL19hcHAuanNcIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbmV4cG9ydCBkZWZhdWx0IG1rQXBwKEFzdGFsLkFwcGxpY2F0aW9uKVxuIiwgIi8qKlxuICogV29ya2Fyb3VuZCBmb3IgXCJDYW4ndCBjb252ZXJ0IG5vbi1udWxsIHBvaW50ZXIgdG8gSlMgdmFsdWUgXCJcbiAqL1xuXG5leHBvcnQge31cblxuZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXyQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKChtKSA9PiBwYXRjaChtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG59XG5cbmZ1bmN0aW9uIHBhdGNoPFAgZXh0ZW5kcyBvYmplY3Q+KHByb3RvOiBQLCBwcm9wOiBFeHRyYWN0PGtleW9mIFAsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKClcbiAgICAgICAgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJtaWNyb3Bob25lc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzcGVha2Vyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNpbmtzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNvdXJjZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFRyYXlcIiksICh7IFRyYXkgfSkgPT4ge1xuICAgIHBhdGNoKFRyYXkucHJvdG90eXBlLCBcIml0ZW1zXCIpXG59KVxuIiwgImltcG9ydCBcIi4vb3ZlcnJpZGVzLmpzXCJcbmltcG9ydCB7IHNldENvbnNvbGVMb2dEb21haW4gfSBmcm9tIFwiY29uc29sZVwiXG5pbXBvcnQgeyBleGl0LCBwcm9ncmFtQXJncyB9IGZyb20gXCJzeXN0ZW1cIlxuaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gXCJnbmltXCJcbmltcG9ydCBJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWwzIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249My4wXCJcbmltcG9ydCB0eXBlIEFzdGFsNCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5cbnR5cGUgQ29uZmlnID0gUGFydGlhbDx7XG4gICAgaW5zdGFuY2VOYW1lOiBzdHJpbmdcbiAgICBjc3M6IHN0cmluZ1xuICAgIGljb25zOiBzdHJpbmdcbiAgICBndGtUaGVtZTogc3RyaW5nXG4gICAgaWNvblRoZW1lOiBzdHJpbmdcbiAgICBjdXJzb3JUaGVtZTogc3RyaW5nXG4gICAgaG9sZDogYm9vbGVhblxuICAgIHJlcXVlc3RIYW5kbGVyKHJlcXVlc3Q6IHN0cmluZywgcmVzOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZCk6IHZvaWRcbiAgICBtYWluKC4uLmFyZ3M6IHN0cmluZ1tdKTogdm9pZFxuICAgIGNsaWVudChtZXNzYWdlOiAobXNnOiBzdHJpbmcpID0+IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXN0YWwzSlMgZXh0ZW5kcyBBc3RhbDMuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI6IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG5pbnRlcmZhY2UgQXN0YWw0SlMgZXh0ZW5kcyBBc3RhbDQuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldD86IGJvb2xlYW4pOiB2b2lkXG4gICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZFxuICAgIHN0YXJ0KGNvbmZpZz86IENvbmZpZyk6IHZvaWRcbn1cblxudHlwZSBBcHAzID0gdHlwZW9mIEFzdGFsMy5BcHBsaWNhdGlvblxudHlwZSBBcHA0ID0gdHlwZW9mIEFzdGFsNC5BcHBsaWNhdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwMz4oQXBwOiBBcHApOiBBc3RhbDNKU1xuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwPEFwcCBleHRlbmRzIEFwcDQ+KEFwcDogQXBwKTogQXN0YWw0SlNcblxuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwKEFwcDogQXBwMyB8IEFwcDQpIHtcbiAgICByZXR1cm4gbmV3IChjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHtcbiAgICAgICAgcHJpdmF0ZSBkaXNwb3NlUm9vdD86ICgpID0+IHZvaWRcblxuICAgICAgICBzdGF0aWMge1xuICAgICAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiBcIkFzdGFsSlNcIiB9LCB0aGlzIGFzIGFueSlcbiAgICAgICAgfVxuXG4gICAgICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmbiA9IEZ1bmN0aW9uKGByZXR1cm4gKGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHtib2R5LmluY2x1ZGVzKFwiO1wiKSA/IGJvZHkgOiBgcmV0dXJuICR7Ym9keX07YH1cbiAgICAgICAgICAgICAgICAgICAgfSlgKVxuICAgICAgICAgICAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlailcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWooZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3RIYW5kbGVyPzogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cblxuICAgICAgICB2ZnVuY19zaHV0ZG93bigpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnZmdW5jX3NodXRkb3duKClcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3Q/LigpXG4gICAgICAgIH1cblxuICAgICAgICB2ZnVuY19yZXF1ZXN0KG1zZzogc3RyaW5nLCBjb25uOiBHaW8uU29ja2V0Q29ubmVjdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyKG1zZywgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIElPLndyaXRlX3NvY2soY29ubiwgU3RyaW5nKHJlc3BvbnNlKSwgKF8sIHJlcykgPT4gSU8ud3JpdGVfc29ja19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdXBlci52ZnVuY19yZXF1ZXN0KG1zZywgY29ubilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgICAgICBzdXBlci5hcHBseV9jc3Moc3R5bGUsIHJlc2V0KVxuICAgICAgICB9XG5cbiAgICAgICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgICAgIGV4aXQoY29kZSA/PyAwKVxuICAgICAgICB9XG5cbiAgICAgICAgc3RhcnQoeyByZXF1ZXN0SGFuZGxlciwgY3NzLCBob2xkLCBtYWluLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfTogQ29uZmlnID0ge30pIHtcbiAgICAgICAgICAgIGNvbnN0IGFwcCA9IHRoaXMgYXMgdW5rbm93biBhcyBJbnN0YW5jZVR5cGU8QXBwMyB8IEFwcDQ+XG5cbiAgICAgICAgICAgIGNsaWVudCA/Pz0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSBcIiR7YXBwLmluc3RhbmNlTmFtZX1cIiBhbHJlYWR5IHJ1bm5pbmdgKVxuICAgICAgICAgICAgICAgIGV4aXQoMSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG4gICAgICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpXG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSByZXF1ZXN0SGFuZGxlclxuICAgICAgICAgICAgYXBwLmNvbm5lY3QoXCJhY3RpdmF0ZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2VSb290ID0gZGlzcG9zZVxuICAgICAgICAgICAgICAgICAgICBtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXBwLmFjcXVpcmVfc29ja2V0KClcbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQoKG1zZykgPT4gSU8uc2VuZF9yZXF1ZXN0KGFwcC5pbnN0YW5jZU5hbWUsIG1zZykhLCAuLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSlcblxuICAgICAgICAgICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgICAgICBob2xkID8/PSB0cnVlXG4gICAgICAgICAgICBpZiAoaG9sZCkgYXBwLmhvbGQoKVxuXG4gICAgICAgICAgICBhcHAucnVuQXN5bmMoW10pXG4gICAgICAgIH1cbiAgICB9KSgpXG59XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIjtcbmltcG9ydCB7IGNyZWF0ZVBvbGwgfSBmcm9tIFwiYWdzL3RpbWVcIjtcblxuY29uc3QgcG9sbFRpbWUgPSA2MDAwMDtcblxuY2xhc3MgRGF0ZVRpbWVDbGFzcyB7XG4gICAgcHJpdmF0ZSBmb3JtYXR0ZXJUaW1lID0gXCIlSDolTVwiO1xuICAgIHByaXZhdGUgZm9ybWF0dGVyRGF0ZSA9IFwiVG9kYXkgaXM6ICVBLCAlZCBkZSAlQiBkZSAlWVwiO1xuICAgIHByaXZhdGUgX2RhdGVUaW1lOiBBY2Nlc3Nvcjx7IGRhdGU6IHN0cmluZywgdGltZTogc3RyaW5nIH0+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9kYXRlVGltZSA9IGNyZWF0ZVBvbGwoeyBkYXRlOiBcIlwiLCB0aW1lOiBcIlwiIH0sIHBvbGxUaW1lLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub3cgPSBHTGliLkRhdGVUaW1lLm5ld19ub3dfbG9jYWwoKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZGF0ZTogbm93LmZvcm1hdCh0aGlzLmZvcm1hdHRlckRhdGUpISxcbiAgICAgICAgICAgICAgICB0aW1lOiBub3cuZm9ybWF0KHRoaXMuZm9ybWF0dGVyVGltZSkhXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldCBEYXRlVGltZVBvcG92ZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8R3RrLlBvcG92ZXI+XG4gICAgICAgICAgICAgICAgPEd0ay5DYWxlbmRhciBjc3NDbGFzc2VzPXtbXCJDYWxlbmRhclwiXX0gLz5cbiAgICAgICAgICAgIDwvR3RrLlBvcG92ZXI+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBEYXRlVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxtZW51YnV0dG9uIGNzc0NsYXNzZXM9e1tcIkRhdGVUaW1lQ2FsZW5kYXJcIl19IHBvcG92ZXI9e3RoaXMuRGF0ZVRpbWVQb3BvdmVyIGFzIEd0ay5Qb3BvdmVyfT5cbiAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiVGltZVwiXX0gbGFiZWw9e3RoaXMuX2RhdGVUaW1lLmFzKHQgPT4gYFx1RjAxNyAke3QudGltZX1gKX0gdG9vbHRpcE1hcmt1cD17dGhpcy5fZGF0ZVRpbWUuYXMoZCA9PiBgXHVEQjgwXHVEQ0VEICR7ZC5kYXRlfWApfSAvPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgZGF0ZVRpbWUgPSBuZXcgRGF0ZVRpbWVDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgZGF0ZVRpbWU7XG4iLCAiaW1wb3J0IFdwIGZyb20gXCJnaTovL0FzdGFsV3BcIjtcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIjtcbmltcG9ydCB7IEd0aywgR2RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgb25DbGVhbnVwLCBXaXRoIH0gZnJvbSBcImFnc1wiO1xuXG5jbGFzcyBBdWRpb0NvbnRyb2xDbGFzcyB7XG4gICAgcHJpdmF0ZSBkZWZhdWx0OiBXcC5XcDtcbiAgICBwcml2YXRlIGRlZmF1bHRTcGVha2VyOiBBY2Nlc3NvcjxXcC5FbmRwb2ludD47XG4gICAgcHJpdmF0ZSBkZWZhdWx0TWljcm9waG9uZTogQWNjZXNzb3I8V3AuRW5kcG9pbnQ+O1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc3RlcDogbnVtYmVyID0gMC4wMjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gV3AuZ2V0X2RlZmF1bHQoKSE7XG4gICAgICAgIHRoaXMuZGVmYXVsdFNwZWFrZXIgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgJ2RlZmF1bHRTcGVha2VyJyk7XG4gICAgICAgIHRoaXMuZGVmYXVsdE1pY3JvcGhvbmUgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgJ2RlZmF1bHRNaWNyb3Bob25lJyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBoYW5kbGVTY3JvbGwoZWRwOiBXcC5FbmRwb2ludCwgZHk6IG51bWJlcikge1xuICAgICAgICBsZXQgbmV3Vm9sdW1lID0gZWRwLmdldF92b2x1bWUoKTtcbiAgICAgICAgaWYoZHkgPCAwKSBuZXdWb2x1bWUgKz0gdGhpcy5zdGVwO1xuICAgICAgICBlbHNlIG5ld1ZvbHVtZSAtPSB0aGlzLnN0ZXA7XG4gICAgICAgIGVkcC5zZXRfdm9sdW1lKE1hdGgubWluKG5ld1ZvbHVtZSwgMSkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgRW5kcG9pbnQoZW5kcG9pbnQ6IEFjY2Vzc29yPFdwLkVuZHBvaW50Pikge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgIDxXaXRoIHZhbHVlPXtlbmRwb2ludH0+XG4gICAgICAgICAgICAgICAge2VkcCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGljb24gPSBjcmVhdGVCaW5kaW5nKGVkcCwgJ3ZvbHVtZUljb24nKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgdm9sdW1lID0gY3JlYXRlQmluZGluZyhlZHAsICd2b2x1bWUnKS5hcyhhID0+IGAke01hdGgucm91bmQoYSAqIDEwMCl9JWApO1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbCA9IG5ldyBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsKHsgZmxhZ3M6IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGxGbGFncy5WRVJUSUNBTCB9KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsSGFuZGxlciA9IHNjcm9sbC5jb25uZWN0KCdzY3JvbGwnLCAoY29udHJvbGVyOiBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsLCBkeDogbnVtYmVyLCBkeTogbnVtYmVyKSA9PiB0aGlzLmhhbmRsZVNjcm9sbChlZHAsIGR5KSk7XG5cbiAgICAgICAgICAgICAgICAgICAgb25DbGVhbnVwKCgpID0+IHNjcm9sbC5kaXNjb25uZWN0KHNjcm9sbEhhbmRsZXIpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY3NzQ2xhc3Nlcz17W1wiRW5kcG9pbnRcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJD17KHNlbGYpID0+IHNlbGYuYWRkX2NvbnRyb2xsZXIoc2Nyb2xsKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IGVkcC5zZXRfbXV0ZSghZWRwLmdldF9tdXRlKCkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSBjc3NDbGFzc2VzPXtbXCJJY29uXCJdfSBpY29uTmFtZT17aWNvbn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlZvbHVtZVwiXX0gbGFiZWw9e3ZvbHVtZX0gd2lkdGhDaGFycz17NH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIE1peGVyRW50cnkoZW5kcG9pbnQ6IEFjY2Vzc29yPFdwLkVuZHBvaW50Pikge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICA8V2l0aCB2YWx1ZT17ZW5kcG9pbnR9PlxuICAgICAgICAgICAgICAgICAgICB7ZWRwID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGljb24gPSBjcmVhdGVCaW5kaW5nKGVkcCwgJ3ZvbHVtZUljb24nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHZvbHVtZSA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAndm9sdW1lJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbCA9IG5ldyBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsKHsgZmxhZ3M6IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGxGbGFncy5WRVJUSUNBTCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbEhhbmRsZXIgPSBzY3JvbGwuY29ubmVjdCgnc2Nyb2xsJywgKGNvbnRyb2xlcjogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbCwgZHg6IG51bWJlciwgZHk6IG51bWJlcikgPT4gdGhpcy5oYW5kbGVTY3JvbGwoZWRwLCBkeSkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT4gc2Nyb2xsLmRpc2Nvbm5lY3Qoc2Nyb2xsSGFuZGxlcikpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTWl4ZXJFbnRyeVwiXX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY3NzQ2xhc3Nlcz17W1wiSWNvblwiXX0gaWNvbk5hbWU9e2ljb259IG9uQ2xpY2tlZD17KCkgPT4gZWRwLnNldF9tdXRlKCFlZHAuZ2V0X211dGUoKSl9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbGlkZXIgY3NzQ2xhc3Nlcz17W1wiU2xpZGVyXCJdfSAkPXtzZWxmID0+IHNlbGYuYWRkX2NvbnRyb2xsZXIoc2Nyb2xsKX0gdmFsdWU9e3ZvbHVtZX0gc3RlcD17MC4xfSBtaW49ezB9IG1heD17MX0gb25DaGFuZ2VWYWx1ZT17KHsgdmFsdWUgfSkgPT4gZWRwLnNldF92b2x1bWUodmFsdWUpfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldCBNaXhlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxwb3BvdmVyIGNzc0NsYXNzZXM9e1tcIk1peGVyXCJdfT5cbiAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiTGFiZWxcIl19IGxhYmVsPXtcIk1peGVyXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLk1peGVyRW50cnkodGhpcy5kZWZhdWx0U3BlYWtlcil9XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLk1peGVyRW50cnkodGhpcy5kZWZhdWx0TWljcm9waG9uZSl9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICA8L3BvcG92ZXI+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBBdWRpb0NvbnRyb2woKSB7XG4gICAgICAgIGNvbnN0IHNwYXduUGF2dWNvbnRyb2xDbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1NFQ09OREFSWSB9KTtcbiAgICAgICAgY29uc3Qgc3Bhd25QYXZ1Y29udHJvbEhhbmRsZXIgPSBzcGF3blBhdnVjb250cm9sQ2xpY2suY29ubmVjdCgncHJlc3NlZCcsICgpID0+IEdMaWIuc3Bhd25fY29tbWFuZF9saW5lX2FzeW5jKCdwYXZ1Y29udHJvbCcpKTtcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4gc3Bhd25QYXZ1Y29udHJvbENsaWNrLmRpc2Nvbm5lY3Qoc3Bhd25QYXZ1Y29udHJvbEhhbmRsZXIpKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJBdWRpb0NvbnRyb2xcIl19ICQ9e3NlbGYgPT4gc2VsZi5hZGRfY29udHJvbGxlcihzcGF3blBhdnVjb250cm9sQ2xpY2spfT5cbiAgICAgICAgICAgICAgICB7dGhpcy5FbmRwb2ludCh0aGlzLmRlZmF1bHRTcGVha2VyKX1cbiAgICAgICAgICAgICAgICA8bWVudWJ1dHRvbiBwb3BvdmVyPXt0aGlzLk1peGVyIGFzIEd0ay5Qb3BvdmVyfSBjaGlsZD17PGxhYmVsIGxhYmVsPXsnXHVFQUY4J30+PC9sYWJlbD4gYXMgR3RrLldpZGdldH0gLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgYXVkaW9Db250cm9sID0gbmV3IEF1ZGlvQ29udHJvbENsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBhdWRpb0NvbnRyb2w7XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgcmVhZEZpbGUsIHdyaXRlRmlsZSB9IGZyb20gXCJhZ3MvZmlsZVwiO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZVN0YXRlLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5cbmludGVyZmFjZSBPcHRpb25zIHtcbiAgICBhbmltYXRpb25zRW5hYmxlZDogYm9vbGVhbjtcbiAgICBjYXZhVmlzaWJsZTogYm9vbGVhbjtcbiAgICB3YWxscGFwZXJTZWxlY3RvckFjdGl2ZTogYm9vbGVhbjtcbn1cblxuY29uc3Qgb3B0aW9uc0ZhbGxiYWNrOiBPcHRpb25zID0ge1xuICAgIGFuaW1hdGlvbnNFbmFibGVkOiB0cnVlLFxuICAgIGNhdmFWaXNpYmxlOiB0cnVlLFxuICAgIHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiB0cnVlXG59XG5cbmNvbnN0IHBhdGggPSBHTGliLmdldF9ob21lX2RpcigpICsgJy8uY29uZmlnL2Fncy9vcHRpb25zL29wdGlvbnMuanNvbic7XG5cbmNsYXNzIFNldHRpbmdzQ2xhc3Mge1xuICAgIHByaXZhdGUgX2FuaW1hdGlvbnNFbmFibGVkOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRBbmltYXRpb25zRW5hYmxlZDogU2V0dGVyPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX2NhdmFWaXNpYmxlOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRDYXZhVmlzaWJsZTogU2V0dGVyPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZTogU2V0dGVyPGJvb2xlYW4+O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IGZpbGVTdHIgPSByZWFkRmlsZShwYXRoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2UoZmlsZVN0cikgYXMgT3B0aW9ucztcbiAgICAgICAgICAgIFt0aGlzLl9hbmltYXRpb25zRW5hYmxlZCwgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWRdID0gY3JlYXRlU3RhdGUocGFyc2VkLmFuaW1hdGlvbnNFbmFibGVkKTtcbiAgICAgICAgICAgIFt0aGlzLl9jYXZhVmlzaWJsZSwgdGhpcy5fc2V0Q2F2YVZpc2libGVdID0gY3JlYXRlU3RhdGUocGFyc2VkLmNhdmFWaXNpYmxlKTtcbiAgICAgICAgICAgIFt0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZSwgdGhpcy5fc2V0V2FsbHBhcGVyU2VsZWN0b3JBY3RpdmVdID0gY3JlYXRlU3RhdGUocGFyc2VkLndhbGxwYXBlclNlbGVjdG9yQWN0aXZlKTtcblxuICAgICAgICB9IGNhdGNoKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJybyBhbyBsZXIgb3B0aW9ucy5qc29uOiAnICsgZXJyKTtcbiAgICAgICAgICAgIFt0aGlzLl9hbmltYXRpb25zRW5hYmxlZCwgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWRdID0gY3JlYXRlU3RhdGUob3B0aW9uc0ZhbGxiYWNrLmFuaW1hdGlvbnNFbmFibGVkKTtcbiAgICAgICAgICAgIFt0aGlzLl9jYXZhVmlzaWJsZSwgdGhpcy5fc2V0Q2F2YVZpc2libGVdID0gY3JlYXRlU3RhdGUob3B0aW9uc0ZhbGxiYWNrLmNhdmFWaXNpYmxlKTtcbiAgICAgICAgICAgIFt0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZSwgdGhpcy5fc2V0V2FsbHBhcGVyU2VsZWN0b3JBY3RpdmVdID0gY3JlYXRlU3RhdGUob3B0aW9uc0ZhbGxiYWNrLndhbGxwYXBlclNlbGVjdG9yQWN0aXZlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzYXZlT3B0aW9ucygpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGFuaW1hdGlvbnNFbmFibGVkOiB0aGlzLl9hbmltYXRpb25zRW5hYmxlZC5nZXQoKSxcbiAgICAgICAgICAgIGNhdmFWaXNpYmxlOiB0aGlzLl9jYXZhVmlzaWJsZS5nZXQoKSxcbiAgICAgICAgICAgIHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiB0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5nZXQoKVxuICAgICAgICB9XG4gICAgICAgIHdyaXRlRmlsZShwYXRoLCBKU09OLnN0cmluZ2lmeShvcHRpb25zLCBudWxsLCAyKSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBhbmltYXRpb25zRW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY2F2YVZpc2libGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jYXZhVmlzaWJsZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBzZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZShuZXdTdGF0ZTogYm9vbGVhbikge1xuICAgICAgICBpZih0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5nZXQoKSAhPT0gbmV3U3RhdGUpIHRoaXMuX3NldFdhbGxwYXBlclNlbGVjdG9yQWN0aXZlKG5ld1N0YXRlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHNldEFuaW1hdGlvbnNFbmFibGVkKG5ld1N0YXRlOiBib29sZWFuKSB7XG4gICAgICAgIGlmICh0aGlzLl9hbmltYXRpb25zRW5hYmxlZC5nZXQoKSAhPT0gbmV3U3RhdGUpIHRoaXMuX3NldEFuaW1hdGlvbnNFbmFibGVkKG5ld1N0YXRlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHNldENhdmFWaXNpYmxlKG5ld1N0YXRlOiBib29sZWFuKSB7XG4gICAgICAgIGlmKHRoaXMuX2NhdmFWaXNpYmxlLmdldCgpICE9PSBuZXdTdGF0ZSkgdGhpcy5fc2V0Q2F2YVZpc2libGUobmV3U3RhdGUpO1xuICAgIH1cbn1cblxuY29uc3Qgc2V0dGluZ3NTZXJ2aWNlID0gbmV3IFNldHRpbmdzQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IHNldHRpbmdzU2VydmljZTtcbiIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZShwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBBc3RhbC5yZWFkX2ZpbGUocGF0aCkgfHwgXCJcIlxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZEZpbGVBc3luYyhwYXRoOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIEFzdGFsLnJlYWRfZmlsZV9hc3luYyhwYXRoLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWwucmVhZF9maWxlX2ZpbmlzaChyZXMpIHx8IFwiXCIpXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVGaWxlKHBhdGg6IHN0cmluZywgY29udGVudDogc3RyaW5nKTogdm9pZCB7XG4gICAgQXN0YWwud3JpdGVfZmlsZShwYXRoLCBjb250ZW50KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVGaWxlQXN5bmMocGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBBc3RhbC53cml0ZV9maWxlX2FzeW5jKHBhdGgsIGNvbnRlbnQsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbC53cml0ZV9maWxlX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vbml0b3JGaWxlKFxuICAgIHBhdGg6IHN0cmluZyxcbiAgICBjYWxsYmFjazogKGZpbGU6IHN0cmluZywgZXZlbnQ6IEdpby5GaWxlTW9uaXRvckV2ZW50KSA9PiB2b2lkLFxuKTogR2lvLkZpbGVNb25pdG9yIHtcbiAgICByZXR1cm4gQXN0YWwubW9uaXRvcl9maWxlKHBhdGgsIChmaWxlOiBzdHJpbmcsIGV2ZW50OiBHaW8uRmlsZU1vbml0b3JFdmVudCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhmaWxlLCBldmVudClcbiAgICB9KSFcbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlU3RhdGUsIG9uQ2xlYW51cCwgU2V0dGVyIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIjtcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIjtcbmltcG9ydCB7IFN3d3cgfSBmcm9tIFwiLi4vdXRpbHMvU3d3d1wiO1xuaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCJhZ3MvcHJvY2Vzc1wiO1xuaW1wb3J0IHNldHRpbmdzU2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvU2V0dGluZ3NcIjtcblxuY29uc3QgcGF0aCA9IEdMaWIuZ2V0X2hvbWVfZGlyKCkgKyAnLy5jb25maWcvYWdzL3dhbGxwYXBlcnMnO1xuY29uc3QgcG9sbFRpbWUgPSAyNDAwMDA7XG5jb25zdCBpbWFnZUV4dGVuc2lvbnMgPSBbJy5qcGcnLCAnLmpwZWcnLCAnLnBuZycsICcuZ2lmJywgJy5ibXAnLCAnLndlYnAnLCAnLnN2ZyddO1xuXG5jbGFzcyBXYWxscGFwZXJTZWxlY3RvckNsYXNzIHtcbiAgICBwcml2YXRlIGltYWdlczogQWNjZXNzb3I8c3RyaW5nW10+O1xuICAgIHByaXZhdGUgc2V0SW1hZ2VzOiBTZXR0ZXI8c3RyaW5nW10+O1xuICAgIHByaXZhdGUgX3RpbWVyQWN0aXZlOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIHBvbGxpbmc6IEFjY2Vzc29yPGJvb2xlYW4+O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIFt0aGlzLmltYWdlcywgdGhpcy5zZXRJbWFnZXNdID0gY3JlYXRlU3RhdGUoW10gYXMgc3RyaW5nW10pO1xuICAgICAgICB0aGlzLl90aW1lckFjdGl2ZSA9IHNldHRpbmdzU2VydmljZS53YWxscGFwZXJTZWxlY3RvckFjdGl2ZTtcbiAgICAgICAgdGhpcy5wb2xsaW5nID0gY3JlYXRlUG9sbCh0cnVlLCBwb2xsVGltZSwgKHByZXY6IGJvb2xlYW4pID0+ICFwcmV2KTtcbiAgICAgICAgdGhpcy5zZXRJbWFnZXModGhpcy5yZWFkSW1hZ2VGaWxlcyhwYXRoKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpc0ltYWdlRmlsZShmaWxlbmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IGZpbGVuYW1lLnRvTG93ZXJDYXNlKCkuc3Vic3RyaW5nKGZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJykpO1xuICAgICAgICByZXR1cm4gaW1hZ2VFeHRlbnNpb25zLmluY2x1ZGVzKGV4dGVuc2lvbikgPyBleHRlbnNpb246IG51bGw7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZWFkSW1hZ2VGaWxlcyhkaXJlY3RvcnlQYXRoOiBzdHJpbmcpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBHaW8uRmlsZS5uZXdfZm9yX3BhdGgoZGlyZWN0b3J5UGF0aCk7XG5cbiAgICAgICAgICAgIGlmICghZmlsZS5xdWVyeV9leGlzdHMobnVsbCkpIHJldHVybiBbXTtcblxuICAgICAgICAgICAgY29uc3QgZW51bWVyYXRvciA9IGZpbGUuZW51bWVyYXRlX2NoaWxkcmVuKCdzdGFuZGFyZDo6bmFtZSxzdGFuZGFyZDo6dHlwZScsIEdpby5GaWxlUXVlcnlJbmZvRmxhZ3MuTk9ORSwgbnVsbCk7XG5cbiAgICAgICAgICAgIGNvbnN0IGltYWdlczogc3RyaW5nW10gPSBbXTtcbiAgICAgICAgICAgIGxldCBmaWxlSW5mbztcblxuICAgICAgICAgICAgd2hpbGUgKChmaWxlSW5mbyA9IGVudW1lcmF0b3IubmV4dF9maWxlKG51bGwpKSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGlmIChmaWxlSW5mby5nZXRfZmlsZV90eXBlKCkgPT09IEdpby5GaWxlVHlwZS5SRUdVTEFSKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVOYW1lID0gZmlsZUluZm8uZ2V0X25hbWUoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXh0ID0gdGhpcy5pc0ltYWdlRmlsZShmaWxlTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmKGV4dCkgaW1hZ2VzLnB1c2goZmlsZU5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZW51bWVyYXRvci5jbG9zZShudWxsKTtcbiAgICAgICAgICAgIHJldHVybiBpbWFnZXM7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdcdTI3NEMgRXJybyBHaW8gYW8gbGVyIGRpcmV0XHUwMEYzcmlvOicsIGRpcmVjdG9yeVBhdGgsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgdGltZXJBY3RpdmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90aW1lckFjdGl2ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgU2VsZWN0b3JJbmRpY2F0b3IoZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgY29uc3QgdW5zdWIgPSB0aGlzLnBvbGxpbmcuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLl90aW1lckFjdGl2ZS5nZXQoKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbm5lY3RvciA9IGdka21vbml0b3IuZ2V0X2Nvbm5lY3RvcigpO1xuICAgICAgICAgICAgICAgIGlmKGNvbm5lY3Rvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWdBcnJheSA9IHRoaXMuaW1hZ2VzLmdldCgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWcgPSBpbWdBcnJheVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbWdBcnJheS5sZW5ndGgpXTtcbiAgICAgICAgICAgICAgICAgICAgU3d3dy5tYW5hZ2VyLnNldFdhbGxwYXBlcihgJHtwYXRofS8ke2ltZ31gLCB7IG91dHB1dHM6IGNvbm5lY3RvciwgdHJhbnNpdGlvblR5cGU6IFN3d3cuVHJhbnNpdGlvblR5cGUuR1JPVyB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBleGVjQXN5bmMoYG5vdGlmeS1zZW5kIFwiTW9uaXRvciAke2dka21vbml0b3IuZ2V0X2Rlc2NyaXB0aW9uKCl9IG5cdTAwRTNvIHRlbSBjb25lY3RvclwiIFwiJHtnZGttb25pdG9yLmdldF9kZXNjcmlwdGlvbigpfSBuXHUwMEUzbyB0ZW0gY29uZWN0b3IuXCJgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gdW5zdWIoKSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snU2VsZWN0b3JJbmRpY2F0b3InXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17J1dhbGxwYXBlciBTZWxlY3Rvcid9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIlRvZ2dsZUFjdGl2ZVwiLCBcIk9wdGlvblwiXX0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17XCJBY3RpdmUgXCJ9IGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfSAvPlxuICAgICAgICAgICAgICAgICAgICA8R3RrLlN3aXRjaCBhY3RpdmU9e3RoaXMuX3RpbWVyQWN0aXZlfSBvblN0YXRlU2V0PXsoc3JjLCB2YWwpID0+IHNldHRpbmdzU2VydmljZS5zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZSA9IHZhbH0gLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgd2FsbHBhcGVyU2VsZWN0b3IgPSBuZXcgV2FsbHBhcGVyU2VsZWN0b3JDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgd2FsbHBhcGVyU2VsZWN0b3I7XG4iLCAiaW1wb3J0IHsgZXhlYywgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgU3d3dyB7XG4gICAgZXhwb3J0IGVudW0gUmVzaXplIHtcbiAgICAgICAgTk8gPSAnbm8nLFxuICAgICAgICBDUk9QID0gJ2Nyb3AnLFxuICAgICAgICBGSVQgPSAnZml0JyxcbiAgICAgICAgU1RSRVRDSCA9ICdzdHJldGNoJ1xuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIEZpbHRlciB7XG4gICAgICAgIE5FQVJFU1QgPSAnTmVhcmVzdCcsXG4gICAgICAgIEJJTElORUFSID0gJ0JpbGluZWFyJyxcbiAgICAgICAgQ0FUTVVMTFJPTSA9ICdDYXRtdWxsUm9tJyxcbiAgICAgICAgTUlUQ0hFTEwgPSAnTWl0Y2hlbGwnLFxuICAgICAgICBMQU5DWk9TMyA9ICdMYW5jem9zMydcbiAgICB9XG5cbiAgICBleHBvcnQgZW51bSBUcmFuc2l0aW9uVHlwZSB7XG4gICAgICAgIE5PTkUgPSAnbm9uZScsXG4gICAgICAgIFNJTVBMRSA9ICdzaW1wbGUnLFxuICAgICAgICBGQURFID0gJ2ZhZGUnLFxuICAgICAgICBMRUZUID0gJ2xlZnQnLFxuICAgICAgICBSSUdIVCA9ICdyaWdodCcsXG4gICAgICAgIFRPUCA9ICd0b3AnLFxuICAgICAgICBCT1RUT00gPSAnYm90dG9tJyxcbiAgICAgICAgV0lQRSA9ICd3aXBlJyxcbiAgICAgICAgV0FWRSA9ICd3YXZlJyxcbiAgICAgICAgR1JPVyA9ICdncm93JyxcbiAgICAgICAgQ0VOVEVSID0gJ2NlbnRlcicsXG4gICAgICAgIEFOWSA9ICdhbnknLFxuICAgICAgICBSQU5ET00gPSAncmFuZG9tJ1xuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIFRyYW5zaXRpb25Qb3Mge1xuICAgICAgICBDRU5URVIgPSAnY2VudGVyJyxcbiAgICAgICAgVE9QID0gJ3RvcCcsXG4gICAgICAgIExFRlQgPSAnbGVmdCcsXG4gICAgICAgIFJJR0hUID0gJ3JpZ2h0JyxcbiAgICAgICAgQk9UVE9NID0gJ2JvdHRvbScsXG4gICAgICAgIFRPUF9MRUZUID0gJ3RvcC1sZWZ0JyxcbiAgICAgICAgVE9QX1JJR0hUID0gJ3RvcC1yaWdodCcsXG4gICAgICAgIEJPVFRPTV9MRUZUID0gJ2JvdHRvbS1sZWZ0JyxcbiAgICAgICAgQk9UVE9NX1JJR0hUID0gJ2JvdHRvbS1yaWdodCdcbiAgICB9XG5cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgUGFyc2VyT3B0aW9ucyB7XG4gICAgICAgIHJlc2l6ZTogUmVzaXplO1xuICAgICAgICBmaWx0ZXI6IEZpbHRlcjtcbiAgICAgICAgdHJhbnNpdGlvblR5cGU6IFRyYW5zaXRpb25UeXBlO1xuICAgICAgICB0cmFuc2l0aW9uUG9zOiBUcmFuc2l0aW9uUG9zO1xuICAgICAgICBvdXRwdXRzOiBzdHJpbmc7XG4gICAgICAgIHRyYW5zaXRpb25TdGVwOiBudW1iZXI7XG4gICAgICAgIHRyYW5zaXRpb25EdXJhbnRpb246IG51bWJlcjtcbiAgICAgICAgdHJhbnNpdGlvbkFuZ2xlOiBudW1iZXI7XG4gICAgICAgIGludmVydFk6IGJvb2xlYW47XG4gICAgICAgIHRyYW5zaXRpb25XYXZlOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH07XG4gICAgfVxuXG5cbiAgICBjbGFzcyBNYW5hZ2VyIHtcbiAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9hc3luYygnc3d3dyBjbGVhcicpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIHNldFdhbGxwYXBlcihwYXRoOiBzdHJpbmcsIG9wdGlvbnM/OiBQYXJ0aWFsPFBhcnNlck9wdGlvbnM+KTogYm9vbGVhbiB7XG4gICAgICAgICAgICBsZXQgY29tbWFuZCA9IGBzd3d3IGltZyAke3BhdGh9YDtcbiAgICAgICAgICAgIGlmKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnJlc2l6ZSkgY29tbWFuZCArPSBgIC0tcmVzaXplICR7b3B0aW9ucy5yZXNpemV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLmZpbHRlcikgY29tbWFuZCArPSBgIC1mICR7b3B0aW9ucy5maWx0ZXJ9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLmludmVydFkpIGNvbW1hbmQgKz0gYCAtLWludmVydC15ICR7b3B0aW9ucy5pbnZlcnRZLnZhbHVlT2YoKX1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvbkFuZ2xlKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLWFuZ2xlICR7b3B0aW9ucy50cmFuc2l0aW9uQW5nbGV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25EdXJhbnRpb24pIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tZHVyYXRpb24gJHtvcHRpb25zLnRyYW5zaXRpb25EdXJhbnRpb259YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25Qb3MpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tcG9zICR7b3B0aW9ucy50cmFuc2l0aW9uUG9zfWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy50cmFuc2l0aW9uU3RlcCkgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi1zdGVwICR7b3B0aW9ucy50cmFuc2l0aW9uU3RlcH1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvblR5cGUpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tdHlwZSAke29wdGlvbnMudHJhbnNpdGlvblR5cGV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25XYXZlKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLXdhdmUgJHtvcHRpb25zLnRyYW5zaXRpb25XYXZlLnh9LCR7b3B0aW9ucy50cmFuc2l0aW9uV2F2ZS55fWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy5vdXRwdXRzKSBjb21tYW5kICs9IGAgLS1vdXRwdXRzICR7b3B0aW9ucy5vdXRwdXRzfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9hc3luYyhjb21tYW5kKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGV4cG9ydCBjb25zdCBtYW5hZ2VyID0gbmV3IE1hbmFnZXI7XG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IGV4ZWMgfSBmcm9tIFwiYWdzL3Byb2Nlc3NcIjtcbmltcG9ydCBBc3RhbEh5cHJsYW5kIGZyb20gXCJnaTovL0FzdGFsSHlwcmxhbmQ/dmVyc2lvbj0wLjFcIjtcbmltcG9ydCBzZXR0aW5nc1NlcnZpY2UgZnJvbSBcIi4vU2V0dGluZ3NcIjtcbi8vIGltcG9ydCBBc3RhbE5pcmkgZnJvbSBcImdpOi8vQXN0YWxOaXJpP3ZlcnNpb249MC4xXCJcblxuZXhwb3J0IHR5cGUgQ29tcG9zaXRvck1vbml0b3IgPSBBc3RhbEh5cHJsYW5kLk1vbml0b3I7XG5leHBvcnQgdHlwZSBDb21wb3NpdG9yV29ya3NwYWNlID0gQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2U7XG5cbmludGVyZmFjZSBJQ29tcG9zaXRvciB7XG4gICAgZ2V0V29ya3NwYWNlczogKCkgPT4gQWNjZXNzb3I8Q29tcG9zaXRvcldvcmtzcGFjZVtdPjtcbiAgICBnZXRGb2N1c2VkV29ya3NwYWNlOiAoKSA9PiBBY2Nlc3NvcjxDb21wb3NpdG9yV29ya3NwYWNlPjtcbiAgICBhcmVNb25pdG9yc0VxdWFsOiAobW9uaXRvcjogR2RrLk1vbml0b3IsIGNvbXBNb25pdG9yOiBDb21wb3NpdG9yTW9uaXRvcikgPT4gYm9vbGVhbjtcbiAgICBnZXRDb21wb3NpdG9yTW9uaXRvcjogKG1vbml0b3I6IEdkay5Nb25pdG9yKSA9PiBDb21wb3NpdG9yTW9uaXRvcjtcbiAgICBnZXRBbmltYXRpb25TdGF0ZTogKCkgPT4gYm9vbGVhbjtcbiAgICB0b2dnbGVBbmltYXRpb25zOiAodmFsPzogYm9vbGVhbikgPT4gdm9pZDtcbn1cblxuY2xhc3MgSHlwcmxhbmQgaW1wbGVtZW50cyBJQ29tcG9zaXRvciB7XG4gICAgcHJpdmF0ZSBkZWZhdWx0OiBBc3RhbEh5cHJsYW5kLkh5cHJsYW5kO1xuICAgIHByaXZhdGUgX3dvcmtzcGFjZXM6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlW10+O1xuICAgIHByaXZhdGUgX2ZvY3VzZWRXb3Jrc3BhY2U6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gQXN0YWxIeXBybGFuZC5nZXRfZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLl93b3Jrc3BhY2VzID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwid29ya3NwYWNlc1wiKS5hcygod29ya3NwYWNlcykgPT4gd29ya3NwYWNlcy5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZCkpO1xuICAgICAgICB0aGlzLl9mb2N1c2VkV29ya3NwYWNlID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwiZm9jdXNlZFdvcmtzcGFjZVwiKTtcblxuICAgICAgICAvLyBBcGxpY2FyIGNvbmZpZ3VyYVx1MDBFN1x1MDBGNWVzIGRlIGFuaW1hXHUwMEU3XHUwMEUzby5cbiAgICAgICAgdGhpcy50b2dnbGVBbmltYXRpb25zKHNldHRpbmdzU2VydmljZS5hbmltYXRpb25zRW5hYmxlZC5nZXQoKSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFdvcmtzcGFjZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl93b3Jrc3BhY2VzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRGb2N1c2VkV29ya3NwYWNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZm9jdXNlZFdvcmtzcGFjZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXJlTW9uaXRvcnNFcXVhbChtb25pdG9yOiBHZGsuTW9uaXRvciwgY29tcE1vbml0b3I6IENvbXBvc2l0b3JNb25pdG9yKSB7XG4gICAgICAgIGNvbnN0IGdlb21ldHJ5ID0gbW9uaXRvci5nZXRfZ2VvbWV0cnkoKTtcbiAgICAgICAgaWYoY29tcE1vbml0b3IuZ2V0X21vZGVsKCkgPT09IG1vbml0b3IuZ2V0X21vZGVsKClcbiAgICAgICAgJiYgY29tcE1vbml0b3IuZ2V0X2hlaWdodCgpID09PSBnZW9tZXRyeS5oZWlnaHRcbiAgICAgICAgJiYgY29tcE1vbml0b3IuZ2V0X3dpZHRoKCkgPT09IGdlb21ldHJ5LndpZHRoXG4gICAgICAgICYmIGNvbXBNb25pdG9yLmdldF94KCkgPT09IGdlb21ldHJ5LnhcbiAgICAgICAgJiYgY29tcE1vbml0b3IuZ2V0X3koKSA9PT0gZ2VvbWV0cnkueSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRDb21wb3NpdG9yTW9uaXRvcihtb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICBjb25zdCBjb21wTW9uaXRvcnMgPSB0aGlzLmRlZmF1bHQuZ2V0X21vbml0b3JzKCk7XG4gICAgICAgIHJldHVybiBjb21wTW9uaXRvcnMuZmluZChjb21wTW9uaXRvciA9PiB0aGlzLmFyZU1vbml0b3JzRXF1YWwobW9uaXRvciwgY29tcE1vbml0b3IpKSE7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFuaW1hdGlvblN0YXRlKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZXhlYyhcImh5cHJjdGwgZ2V0b3B0aW9uIGFuaW1hdGlvbnM6ZW5hYmxlZCAtalwiKSkgPT09IDE7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvIGFvIHZlcmlmaWNhciBlc3RhZG8gZGFzIGFuaW1hXHUwMEU3XHUwMEY1ZXM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyB0b2dnbGVBbmltYXRpb25zKHZhbD86IGJvb2xlYW4pIHtcbiAgICAgICAgY29uc3QgbmV3U3RhdGUgPSB2YWwgPz8gIXRoaXMuZ2V0QW5pbWF0aW9uU3RhdGUoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGV4ZWMoYGh5cHJjdGwga2V5d29yZCBhbmltYXRpb25zOmVuYWJsZWQgJHtuZXdTdGF0ZSA/IDEgOiAwfWApO1xuICAgICAgICAgICAgZXhlYyhgaHlwcmN0bCBrZXl3b3JkIGRlY29yYXRpb246c2hhZG93OmVuYWJsZWQgJHtuZXdTdGF0ZSA/IDEgOiAwfWApO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gYWx0ZXJhciBhbmltYVx1MDBFN1x1MDBGNWVzOlwiLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIE5pcmkgaW1wbGVtZW50cyBJQ29tcG9zaXRvciB7XG4gICAgcHJpdmF0ZSBkZWZhdWx0OiBBc3RhbEh5cHJsYW5kLkh5cHJsYW5kO1xuICAgIHByaXZhdGUgX3dvcmtzcGFjZXM6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlW10+O1xuICAgIHByaXZhdGUgX2ZvY3VzZWRXb3Jrc3BhY2U6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gQXN0YWxIeXBybGFuZC5nZXRfZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLl93b3Jrc3BhY2VzID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwid29ya3NwYWNlc1wiKS5hcygod29ya3NwYWNlcykgPT4gd29ya3NwYWNlcy5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZCkpO1xuICAgICAgICB0aGlzLl9mb2N1c2VkV29ya3NwYWNlID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwiZm9jdXNlZFdvcmtzcGFjZVwiKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0V29ya3NwYWNlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtzcGFjZXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEZvY3VzZWRXb3Jrc3BhY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mb2N1c2VkV29ya3NwYWNlO1xuICAgIH1cblxuICAgIHB1YmxpYyBhcmVNb25pdG9yc0VxdWFsKG1vbml0b3I6IEdkay5Nb25pdG9yLCBjb21wTW9uaXRvcjogQ29tcG9zaXRvck1vbml0b3IpIHtcbiAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBtb25pdG9yLmdldF9nZW9tZXRyeSgpO1xuICAgICAgICBpZihjb21wTW9uaXRvci5nZXRfbW9kZWwoKSA9PT0gbW9uaXRvci5nZXRfbW9kZWwoKVxuICAgICAgICAmJiBjb21wTW9uaXRvci5nZXRfaGVpZ2h0KCkgPT09IGdlb21ldHJ5LmhlaWdodFxuICAgICAgICAmJiBjb21wTW9uaXRvci5nZXRfd2lkdGgoKSA9PT0gZ2VvbWV0cnkud2lkdGhcbiAgICAgICAgJiYgY29tcE1vbml0b3IuZ2V0X3goKSA9PT0gZ2VvbWV0cnkueFxuICAgICAgICAmJiBjb21wTW9uaXRvci5nZXRfeSgpID09PSBnZW9tZXRyeS55KSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcHVibGljIGdldENvbXBvc2l0b3JNb25pdG9yKG1vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gICAgICAgIGNvbnN0IGNvbXBNb25pdG9ycyA9IHRoaXMuZGVmYXVsdC5nZXRfbW9uaXRvcnMoKTtcbiAgICAgICAgcmV0dXJuIGNvbXBNb25pdG9ycy5maW5kKGNvbXBNb25pdG9yID0+IHRoaXMuYXJlTW9uaXRvcnNFcXVhbChtb25pdG9yLCBjb21wTW9uaXRvcikpITtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0QW5pbWF0aW9uU3RhdGUoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShleGVjKFwiaHlwcmN0bCBnZXRvcHRpb24gYW5pbWF0aW9uczplbmFibGVkIC1qXCIpKSA9PT0gMTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm8gYW8gdmVyaWZpY2FyIGVzdGFkbyBkYXMgYW5pbWFcdTAwRTdcdTAwRjVlczpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHRvZ2dsZUFuaW1hdGlvbnModmFsPzogYm9vbGVhbikge1xuICAgICAgICBjb25zdCBuZXdTdGF0ZSA9IHZhbCA/PyAhdGhpcy5nZXRBbmltYXRpb25TdGF0ZSgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZXhlYyhgaHlwcmN0bCBrZXl3b3JkIGFuaW1hdGlvbnM6ZW5hYmxlZCAke25ld1N0YXRlID8gMSA6IDB9YCk7XG4gICAgICAgICAgICBleGVjKGBoeXByY3RsIGtleXdvcmQgZGVjb3JhdGlvbjpzaGFkb3c6ZW5hYmxlZCAke25ld1N0YXRlID8gMSA6IDB9YCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBhbHRlcmFyIGFuaW1hXHUwMEU3XHUwMEY1ZXM6XCIsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY2xhc3MgQ29tcG9zaXRvck1hbmFnZXJDbGFzcyB7XG4gICAgcHJpdmF0ZSBzZXJ2aWNlOiBJQ29tcG9zaXRvcjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgY29uc3QgY29tcG9zaXRvciA9IGV4ZWMoW1wiYmFzaFwiLCBcIi1jXCIsIFwiZWNobyAkWERHX0NVUlJFTlRfREVTS1RPUFwiXSk7XG4gICAgICAgIHN3aXRjaChjb21wb3NpdG9yKSB7XG4gICAgICAgICAgICBjYXNlIFwiSHlwcmxhbmRcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnNlcnZpY2UgPSBuZXcgSHlwcmxhbmQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiTmlyaVwiOlxuICAgICAgICAgICAgICAgIHRoaXMuc2VydmljZSA9IG5ldyBOaXJpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQ29tcG9zaXRvciBuXHUwMEUzbyBpZGVudGlmaWNhZG8uIEZhbGxiYWNrIHBhcmEgSHlwcmxhbmRcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXJ2aWNlID0gbmV3IEh5cHJsYW5kO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldCB3b3Jrc3BhY2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmdldFdvcmtzcGFjZXMoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGZvY3VzZWRXb3Jrc3BhY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuZ2V0Rm9jdXNlZFdvcmtzcGFjZSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhcmVNb25pdG9yc0VxdWFsKG1vbml0b3I6IEdkay5Nb25pdG9yLCBjb21wTW9uaXRvcjogQ29tcG9zaXRvck1vbml0b3IpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5hcmVNb25pdG9yc0VxdWFsKG1vbml0b3IsIGNvbXBNb25pdG9yKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Q29tcG9zaXRvck1vbml0b3IobW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5nZXRDb21wb3NpdG9yTW9uaXRvcihtb25pdG9yKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGFuaW1hdGlvblN0YXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmdldEFuaW1hdGlvblN0YXRlKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHRvZ2dsZUFuaW1hdGlvbnModmFsPzogYm9vbGVhbikge1xuICAgICAgICB0aGlzLnNlcnZpY2UudG9nZ2xlQW5pbWF0aW9ucyh2YWwpO1xuICAgIH1cbn1cblxuY29uc3QgY29tcG9zaXRvck1hbmFnZXIgPSBuZXcgQ29tcG9zaXRvck1hbmFnZXJDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9zaXRvck1hbmFnZXI7XG4iLCAiaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBzZXR0aW5nc1NlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL1NldHRpbmdzXCI7XG5pbXBvcnQgd2FsbHBhcGVyU2VsZWN0b3IgZnJvbSBcIi4vV2FsbHBhcGVyU2VsZWN0b3JcIjtcbmltcG9ydCBjb21wb3NpdG9yTWFuYWdlciBmcm9tIFwiLi4vc2VydmljZXMvQ29tcG9zaXRvck1hbmFnZXJcIjtcblxuY2xhc3MgQ29udHJvbENlbnRlckNsYXNzIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXQgVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMoKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiBzZXR0aW5nc1NlcnZpY2Uuc2F2ZU9wdGlvbnMoKSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIlRvZ2dsZVZpc2libGVDb21wb25lbnRzXCJdfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiU3VidGl0bGVcIl19IGxhYmVsPXsnQW5pbWF0aW9ucyAmIENvbXBvbmVudHMnfSAvPlxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiVG9nZ2xlQW5pbWF0aW9uc1wiLCBcIk9wdGlvblwiXX0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17XCJBbmltYXRpb25zIFwifSBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gLz5cbiAgICAgICAgICAgICAgICAgICAgPEd0ay5Td2l0Y2hcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZT17c2V0dGluZ3NTZXJ2aWNlLmFuaW1hdGlvbnNFbmFibGVkfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25TdGF0ZVNldD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNyYywgdmFsKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmdzU2VydmljZS5zZXRBbmltYXRpb25zRW5hYmxlZCA9IHZhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9zaXRvck1hbmFnZXIudG9nZ2xlQW5pbWF0aW9ucyh2YWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIlRvZ2dsZUNhdmFcIiwgXCJPcHRpb25cIl19PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e1wiQ2F2YSBcIn0gaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxHdGsuU3dpdGNoIGFjdGl2ZT17c2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlfSBvblN0YXRlU2V0PXsoc3JjLCB2YWwpID0+IHNldHRpbmdzU2VydmljZS5zZXRDYXZhVmlzaWJsZSA9IHZhbH0gLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgQ29udHJvbENlbnRlclBvcG92ZXIoZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxwb3BvdmVyIG9uQ2xvc2VkPXsoKSA9PiBzZXR0aW5nc1NlcnZpY2Uuc2F2ZU9wdGlvbnMoKX0+XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJDb250cm9sQ2VudGVyUG9wb3ZlclwiXX0+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50c31cbiAgICAgICAgICAgICAgICAgICAgICAgIHt3YWxscGFwZXJTZWxlY3Rvci5TZWxlY3RvckluZGljYXRvcihnZGttb25pdG9yKX1cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICA8L3BvcG92ZXI+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIENvbnRyb2xDZW50ZXIoZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxtZW51YnV0dG9uIGNzc0NsYXNzZXM9e1tcIkNvbnRyb2xDZW50ZXJcIl19IHBvcG92ZXI9e3RoaXMuQ29udHJvbENlbnRlclBvcG92ZXIoZ2RrbW9uaXRvcikgYXMgR3RrLlBvcG92ZXJ9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0xhYmVsJ119IGxhYmVsPXsnXHVEQjgyXHVEQ0M3J30gLz5cbiAgICAgICAgICAgIDwvbWVudWJ1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IGNvbnRyb2xDZW50ZXIgPSBuZXcgQ29udHJvbENlbnRlckNsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBjb250cm9sQ2VudGVyO1xuIiwgImltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IGNvbXBvc2l0b3JNYW5hZ2VyLCB7IENvbXBvc2l0b3JNb25pdG9yLCBDb21wb3NpdG9yV29ya3NwYWNlIH0gZnJvbSBcIi4uL3NlcnZpY2VzL0NvbXBvc2l0b3JNYW5hZ2VyXCI7XG5pbXBvcnQgeyBBY2Nlc3NvciwgRm9yIH0gZnJvbSBcImFnc1wiO1xuXG5jbGFzcyBXb3Jrc3BhY2VzQ2xhc3Mge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgbWF4V29ya3NwYWNlczogbnVtYmVyID0gMTA7XG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBXb3Jrc3BhY2UoeyB3b3Jrc3BhY2UgfTogeyB3b3Jrc3BhY2U6IENvbXBvc2l0b3JXb3Jrc3BhY2UgfSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e2NvbXBvc2l0b3JNYW5hZ2VyLmZvY3VzZWRXb3Jrc3BhY2UuYXMoZm9jdXNlZCA9PiBbXCJXb3Jrc3BhY2VcIiwgd29ya3NwYWNlLmdldF9pZCgpID09PSBmb2N1c2VkLmdldF9pZCgpID8gXCJBY3RpdmVcIiA6IFwiSW5hY3RpdmVcIl0pfVxuICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4geyBpZihjb21wb3NpdG9yTWFuYWdlci5mb2N1c2VkV29ya3NwYWNlLmdldCgpLmdldF9pZCgpICE9PSB3b3Jrc3BhY2UuZ2V0X2lkKCkpIHdvcmtzcGFjZS5mb2N1cygpIH19XG4gICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICBsYWJlbD17d29ya3NwYWNlLmdldF9pZCgpLnRvU3RyaW5nKCl9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgV29ya3NwYWNlUG9wb3Zlcih7IHRoZVJlc3QgfTogeyB0aGVSZXN0OiBBY2Nlc3NvcjxDb21wb3NpdG9yV29ya3NwYWNlW10+IH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxwb3BvdmVyIGNzc0NsYXNzZXM9e1tcIldvcmtzcGFjZVBvcG92ZXJcIl19PlxuICAgICAgICAgICAgICAgIDxHdGsuRmxvd0JveCBtYXhDaGlsZHJlblBlckxpbmU9ezR9PlxuICAgICAgICAgICAgICAgICAgICA8Rm9yIGVhY2g9e3RoZVJlc3R9IGNoaWxkcmVuPXtpdGVtID0+IHRoaXMuV29ya3NwYWNlKHsgd29ya3NwYWNlOiBpdGVtIH0pfSAvPlxuICAgICAgICAgICAgICAgIDwvR3RrLkZsb3dCb3g+XG4gICAgICAgICAgICA8L3BvcG92ZXI+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBNb3JlV29ya3NwYWNlc0J1dHRvbih7IHRoZVJlc3QgfTogeyB0aGVSZXN0OiBBY2Nlc3NvcjxDb21wb3NpdG9yV29ya3NwYWNlW10+IH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxtZW51YnV0dG9uXG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiTW9yZVdvcmtzcGFjZXNCdXR0b25cIl19XG4gICAgICAgICAgICAgICAgc2Vuc2l0aXZlPXt0aGVSZXN0LmFzKHRyID0+IHRyLmxlbmd0aCA+IDApfVxuICAgICAgICAgICAgICAgIHBvcG92ZXI9e3RoaXMuV29ya3NwYWNlUG9wb3Zlcih7IHRoZVJlc3Q6IHRoZVJlc3QgfSkgYXMgR3RrLlBvcG92ZXJ9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXsnXHVEQjgxXHVERDRGJ30gLz5cbiAgICAgICAgICAgIDwvbWVudWJ1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgV29ya3NwYWNlcyh7IG1vbml0b3IgfTogeyBtb25pdG9yOiBDb21wb3NpdG9yTW9uaXRvciB9KSB7XG4gICAgICAgIGNvbnN0IG1vbml0b3JXb3Jrc3BhY2VzID0gY29tcG9zaXRvck1hbmFnZXIud29ya3NwYWNlcy5hcyh3cyA9PiB7XG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IHdzLmZpbHRlcigod29ya3NwYWNlKSA9PiB3b3Jrc3BhY2UuZ2V0X21vbml0b3IoKSA9PT0gbW9uaXRvcik7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1haW46IGZpbHRlcmVkLnNsaWNlKDAsIHRoaXMubWF4V29ya3NwYWNlcyksXG4gICAgICAgICAgICAgICAgdGhlUmVzdDogZmlsdGVyZWQuc2xpY2UodGhpcy5tYXhXb3Jrc3BhY2VzKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiV29ya3NwYWNlc1wiXX0+XG4gICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgICAgPEZvciBlYWNoPXttb25pdG9yV29ya3NwYWNlcy5hcyhtdyA9PiBtdy5tYWluKX0gY2hpbGRyZW49eyh3OiBDb21wb3NpdG9yV29ya3NwYWNlKSA9PiB0aGlzLldvcmtzcGFjZSh7IHdvcmtzcGFjZTogdyB9KX0gLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICB7dGhpcy5Nb3JlV29ya3NwYWNlc0J1dHRvbih7IHRoZVJlc3Q6IG1vbml0b3JXb3Jrc3BhY2VzLmFzKCh7IHRoZVJlc3QgfSkgPT4gdGhlUmVzdCkgfSl9XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IHdvcmtzcGFjZXMgPSBuZXcgV29ya3NwYWNlc0NsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCB3b3Jrc3BhY2VzO1xuIiwgImltcG9ydCB7IEFzdGFsLCBHdGssIEdkayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHN5c3RlbU1vbml0b3IgZnJvbSBcIi4uL21vZHVsZXMvU3lzdGVtTW9uaXRvclwiO1xuaW1wb3J0IHN5c3RlbVRyYXkgZnJvbSBcIi4uL21vZHVsZXMvU3lzdGVtVHJheVwiO1xuaW1wb3J0IG1lZGlhIGZyb20gXCIuLi9tb2R1bGVzL01lZGlhXCI7XG5pbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIjtcbmltcG9ydCBkYXRlVGltZSBmcm9tIFwiLi4vbW9kdWxlcy9EYXRlVGltZVwiO1xuaW1wb3J0IGF1ZGlvQ29udHJvbCBmcm9tIFwiLi4vbW9kdWxlcy9BdWRpb0NvbnRyb2xcIjtcbmltcG9ydCBjb250cm9sQ2VudGVyIGZyb20gXCIuLi9tb2R1bGVzL0NvbnRyb2xDZW50ZXJcIjtcbmltcG9ydCB3b3Jrc3BhY2VzIGZyb20gXCIuLi9tb2R1bGVzL1dvcmtzcGFjZXNcIjtcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBjb21wb3NpdG9yTWFuYWdlciBmcm9tIFwiLi4vc2VydmljZXMvQ29tcG9zaXRvck1hbmFnZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFyKHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pIHtcbiAgICBjb25zdCB7IFRPUCwgTEVGVCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvcjtcbiAgICBjb25zdCBjb21wTW9uaXRvciA9IGNvbXBvc2l0b3JNYW5hZ2VyLmdldENvbXBvc2l0b3JNb25pdG9yKGdka21vbml0b3IpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICAgbmFtZT0nQmFyJ1xuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiQmFyXCJdfVxuICAgICAgICAgICAgdmlzaWJsZVxuICAgICAgICAgICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRX1cbiAgICAgICAgICAgIGxheWVyPXtBc3RhbC5MYXllci5CT1RUT019XG4gICAgICAgICAgICBnZGttb25pdG9yPXtnZGttb25pdG9yfVxuICAgICAgICAgICAgYW5jaG9yPXtUT1AgfCBSSUdIVCB8IExFRlR9XG4gICAgICAgICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgICAgICAgICAgJD17KHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSl9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiQmFyXCJdfSBoYWxpZ249e0d0ay5BbGlnbi5GSUxMfSBob21vZ2VuZW91cz5cbiAgICAgICAgICAgICAgICA8Ym94IGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfT5cbiAgICAgICAgICAgICAgICAgICAge3N5c3RlbVRyYXkuU3lzdGVtVHJheX1cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8Ym94IGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAgICAgICAgICAgIHttZWRpYS5NZWRpYX1cbiAgICAgICAgICAgICAgICAgICAge3dvcmtzcGFjZXMuV29ya3NwYWNlcyh7IG1vbml0b3I6IGNvbXBNb25pdG9yIH0pfVxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggaGFsaWduPXtHdGsuQWxpZ24uRU5EfT5cbiAgICAgICAgICAgICAgICAgICAge2RhdGVUaW1lLkRhdGVUaW1lfVxuICAgICAgICAgICAgICAgICAgICB7YXVkaW9Db250cm9sLkF1ZGlvQ29udHJvbH1cbiAgICAgICAgICAgICAgICAgICAge3N5c3RlbU1vbml0b3IuU3lzdGVtTW9uaXRvcn1cbiAgICAgICAgICAgICAgICAgICAge2NvbnRyb2xDZW50ZXIuQ29udHJvbENlbnRlcihnZGttb25pdG9yKX1cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3dpbmRvdz5cbiAgICApO1xufVxuIiwgImltcG9ydCBzZXR0aW5nc1NlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL1NldHRpbmdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCBHc2sgZnJvbSAnZ2k6Ly9Hc2snO1xuaW1wb3J0IEFzdGFsQ2F2YSBmcm9tIFwiZ2k6Ly9Bc3RhbENhdmE/dmVyc2lvbj0wLjFcIjtcbmltcG9ydCBHT2JqZWN0IGZyb20gJ2dpOi8vR09iamVjdCc7XG5pbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgY3JlYXRlU3RhdGUsIG9uQ2xlYW51cCwgU2V0dGVyIH0gZnJvbSBcImFnc1wiO1xuXG5jb25zdCBDYXZhQ29uZmlnID0ge1xuICAgIGF1dG9zZW5zOiB0cnVlLFxuICAgIGJhcnM6IDI1LFxuICAgIGZyYW1lcmF0ZTogNjAsXG4gICAgaW5wdXQ6IEFzdGFsQ2F2YS5JbnB1dC5QSVBFV0lSRSxcbiAgICBub2lzZVJlZHVjdGlvbjogMC43NyxcbiAgICBzZW5zaXRpdml0eTogMC43NSxcbiAgICBzdGVyZW86IGZhbHNlLFxufTtcblxuY2xhc3MgQ2F2YVdpZGdldCBleHRlbmRzIEd0ay5EcmF3aW5nQXJlYSB7XG4gICAgcHJpdmF0ZSB2YWx1ZXNBY2Nlc3NvcjogQWNjZXNzb3I8bnVtYmVyW10+O1xuICAgIHByaXZhdGUgdW5zdWJBY2Nlc3NvcjogKCkgPT4gdm9pZDtcblxuICAgIGNvbnN0cnVjdG9yKHY6IEFjY2Vzc29yPG51bWJlcltdPikge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnNldF9oZXhwYW5kKHRydWUpO1xuICAgICAgICB0aGlzLnNldF92ZXhwYW5kKHRydWUpO1xuICAgICAgICB0aGlzLnZhbHVlc0FjY2Vzc29yID0gdi5hcyh2ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuZ2V0X2FsbG9jYXRlZF9oZWlnaHQoKTtcbiAgICAgICAgICAgIHJldHVybiB2Lm1hcChpID0+IGhlaWdodCAqICgxIC0gaSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy51bnN1YkFjY2Vzc29yID0gdGhpcy52YWx1ZXNBY2Nlc3Nvci5zdWJzY3JpYmUoKCkgPT4gdGhpcy5xdWV1ZV9kcmF3KCkpO1xuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB0aGlzLnVuc3ViQWNjZXNzb3IoKSk7XG4gICAgfVxuXG4gICAgb3ZlcnJpZGUgdmZ1bmNfc25hcHNob3Qoc25hcHNob3Q6IEd0ay5TbmFwc2hvdCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuZ2V0X21hcHBlZCgpKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghdGhpcy52aXNpYmxlKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRfYWxsb2NhdGVkX3dpZHRoKCk7XG4gICAgICAgICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmdldF9hbGxvY2F0ZWRfaGVpZ2h0KCk7XG5cbiAgICAgICAgICAgIGlmICh3aWR0aCA8PSAwIHx8IGhlaWdodCA8PSAwKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMudmFsdWVzQWNjZXNzb3IuZ2V0KCk7XG5cbiAgICAgICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IGJhcldpZHRoID0gd2lkdGggLyAodmFsdWVzLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgY29uc3QgY29sb3IgPSB0aGlzLnBhcmVudC5nZXRfY29sb3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgR3NrLlBhdGhCdWlsZGVyKCk7XG4gICAgICAgICAgICBidWlsZGVyLm1vdmVfdG8oMCwgdmFsdWVzWzBdKTtcbiAgICAgICAgICAgIGNvbnN0IGludlNpeCA9IDEgLyA2O1xuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwMHggPSAoaSAtIDEpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDB5ID0gdmFsdWVzW01hdGgubWF4KDAsIGkgLSAxKV07XG4gICAgICAgICAgICAgICAgY29uc3QgcDF4ID0gaSAqIGJhcldpZHRoO1xuICAgICAgICAgICAgICAgIGNvbnN0IHAxeSA9IHZhbHVlc1tpXTtcbiAgICAgICAgICAgICAgICBjb25zdCBwMnggPSAoaSArIDEpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDJ5ID0gdmFsdWVzW2kgKyAxXTtcbiAgICAgICAgICAgICAgICBjb25zdCBwM3ggPSAoaSArIDIpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDN5ID0gdmFsdWVzW01hdGgubWluKHZhbHVlcy5sZW5ndGggLSAxLCBpICsgMildO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgYzF4ID0gcDF4ICsgKHAyeCAtIHAweCkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzF5ID0gcDF5ICsgKHAyeSAtIHAweSkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzJ4ID0gcDJ4IC0gKHAzeCAtIHAxeCkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzJ5ID0gcDJ5IC0gKHAzeSAtIHAxeSkgKiBpbnZTaXg7XG5cbiAgICAgICAgICAgICAgICBidWlsZGVyLmN1YmljX3RvKGMxeCwgYzF5LCBjMngsIGMyeSwgcDJ4LCBwMnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBidWlsZGVyLmxpbmVfdG8od2lkdGgsIGhlaWdodCk7XG4gICAgICAgICAgICBidWlsZGVyLmxpbmVfdG8oMCwgaGVpZ2h0KTtcbiAgICAgICAgICAgIGJ1aWxkZXIuY2xvc2UoKTtcblxuICAgICAgICAgICAgc25hcHNob3QuYXBwZW5kX2ZpbGwoYnVpbGRlci50b19wYXRoKCksIEdzay5GaWxsUnVsZS5XSU5ESU5HLCBjb2xvcik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvIG5vIHNuYXBzaG90IGRvIENhdmE6XCIsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgX2NhdmEgPSBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6ICdDYXZhJyB9LCBDYXZhV2lkZ2V0KTtcblxuY2xhc3MgQ2F2YUNsYXNzIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IEFzdGFsQ2F2YS5DYXZhIHwgbnVsbDtcbiAgICBwcml2YXRlIF92YWx1ZXM6IEFjY2Vzc29yPG51bWJlcltdPjtcbiAgICBwcml2YXRlIHN0YXRpYyB3aWRnZXRDb3VudDogbnVtYmVyID0gMDtcblxuICAgIHByaXZhdGUgX3Zpc2liaWxpdHlTdGF0ZTogQWNjZXNzb3I8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBfc2V0VmlzaWJpbGl0eVN0YXRlOiBTZXR0ZXI8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSB1bnN1YjogKCkgPT4gdm9pZDtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgW3RoaXMuX3Zpc2liaWxpdHlTdGF0ZSwgdGhpcy5fc2V0VmlzaWJpbGl0eVN0YXRlXSA9IGNyZWF0ZVN0YXRlKHNldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5nZXQoKSk7XG5cbiAgICAgICAgdGhpcy51bnN1YiA9IHNldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5fc2V0VmlzaWJpbGl0eVN0YXRlKHNldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5nZXQoKSkpO1xuXG4gICAgICAgIHRoaXMuZGVmYXVsdCA9IEFzdGFsQ2F2YS5nZXRfZGVmYXVsdCgpO1xuICAgICAgICBpZiAodGhpcy5kZWZhdWx0KSB7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2F1dG9zZW5zKENhdmFDb25maWcuYXV0b3NlbnMpO1xuICAgICAgICAgICAgdGhpcy5kZWZhdWx0LnNldF9iYXJzKENhdmFDb25maWcuYmFycyk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2ZyYW1lcmF0ZShDYXZhQ29uZmlnLmZyYW1lcmF0ZSk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2lucHV0KENhdmFDb25maWcuaW5wdXQpO1xuICAgICAgICAgICAgdGhpcy5kZWZhdWx0LnNldF9ub2lzZV9yZWR1Y3Rpb24oQ2F2YUNvbmZpZy5ub2lzZVJlZHVjdGlvbik7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X3N0ZXJlbyhDYXZhQ29uZmlnLnN0ZXJlbyk7XG4gICAgICAgICAgICB0aGlzLl92YWx1ZXMgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgJ3ZhbHVlcycpLmFzKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VucyA9IENhdmFDb25maWcuc2Vuc2l0aXZpdHk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB2Lm1hcChpID0+IGkgKiBzZW5zKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvIG5vIGhhbmRsZXIgZ2xvYmFsIGRvIENhdmE6XCIsIGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk5cdTAwRTNvIGZvaSBwb3NzXHUwMEVEdmVsIGluaWNpYWxpemFyIG8gQ2F2YVwiKTtcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlcyA9IGNyZWF0ZVN0YXRlPG51bWJlcltdPihbXSlbMF07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHZpc2liaWxpdHlTdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Zpc2liaWxpdHlTdGF0ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgQ2F2YShjc3NDbGFzc2VzOiBzdHJpbmdbXSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1suLi5jc3NDbGFzc2VzLCBcIkNhdmFcIl19XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59XG4gICAgICAgICAgICAgICAgJD17KCkgPT4gQ2F2YUNsYXNzLndpZGdldENvdW50ICs9IDF9XG4gICAgICAgICAgICAgICAgb25EZXN0cm95PXtcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgQ2F2YUNsYXNzLndpZGdldENvdW50IC09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChDYXZhQ2xhc3Mud2lkZ2V0Q291bnQgPD0gMCkgdGhpcy51bnN1YigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtuZXcgX2NhdmEodGhpcy5fdmFsdWVzKX1cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgY2F2YSA9IG5ldyBDYXZhQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IGNhdmE7XG4iLCAiaW1wb3J0IHsgQXN0YWwsIEdkaywgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IGNhdmEgZnJvbSBcIi4uL21vZHVsZXMvQ2F2YVwiO1xuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDYXZhT3ZlcmxheSh7IGdka21vbml0b3IgfTogeyBnZGttb25pdG9yOiBHZGsuTW9uaXRvciB9KSB7XG4gICAgY29uc3QgeyBMRUZULCBSSUdIVCwgQk9UVE9NIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8d2luZG93XG4gICAgICAgICAgICBuYW1lPSdDYXZhT3ZlcmxheSdcbiAgICAgICAgICAgIGxheWVyPXtBc3RhbC5MYXllci5CT1RUT019XG4gICAgICAgICAgICBnZGttb25pdG9yPXtnZGttb25pdG9yfVxuICAgICAgICAgICAgYW5jaG9yPXtSSUdIVCB8IExFRlQgfCBCT1RUT019XG4gICAgICAgICAgICB2aXNpYmxlPXtjYXZhLnZpc2liaWxpdHlTdGF0ZX1cbiAgICAgICAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICAgICAgICAkPXsoc2VsZikgPT4gb25DbGVhbnVwKCgpID0+IHNlbGYuZGVzdHJveSgpKX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5GSUxMfSB2YWxpZ249e0d0ay5BbGlnbi5FTkR9IGhlaWdodFJlcXVlc3Q9e01hdGguZmxvb3IoZ2RrbW9uaXRvci5nZXRfZ2VvbWV0cnkoKS5oZWlnaHQgKiAuMjUpfT5cbiAgICAgICAgICAgICAgICB7Y2F2YS5DYXZhKFtcIkNhdmFPdmVybGF5XCJdKX1cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3dpbmRvdz5cbiAgICApO1xufVxuIiwgImltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEFzdGFsLCBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIjtcblxuZnVuY3Rpb24gRW50cnkoeyBiaW5kLCBhY3Rpb24gfTogeyBiaW5kOiBzdHJpbmcsIGFjdGlvbjogc3RyaW5nIH0pIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snRW50cnknXX0gb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59IGhvbW9nZW5lb3VzPlxuICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkJpbmRcIl19IGxhYmVsPXtiaW5kfSAvPlxuICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkFjdGlvblwiXX0gbGFiZWw9e2FjdGlvbn0gLz5cbiAgICAgICAgPC9ib3g+XG4gICAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ2hlYXRzaGVldCh7IGdka21vbml0b3IgfTogeyBnZGttb25pdG9yOiBHZGsuTW9uaXRvciB9KSB7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8d2luZG93XG4gICAgICAgICAgICBuYW1lPSdDaGVhdHNoZWV0J1xuICAgICAgICAgICAgbGF5ZXI9e0FzdGFsLkxheWVyLk9WRVJMQVl9XG4gICAgICAgICAgICBnZGttb25pdG9yPXtnZGttb25pdG9yfVxuICAgICAgICAgICAga2V5bW9kZT17QXN0YWwuS2V5bW9kZS5PTl9ERU1BTkR9XG4gICAgICAgICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgICAgICAgICAgJD17KHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSl9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxHdGsuRXZlbnRDb250cm9sbGVyS2V5IG9uS2V5UHJlc3NlZD17KHsgd2lkZ2V0IH0sIGtleXZhbDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgc3dpdGNoKGtleXZhbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEdkay5LRVlfRXNjYXBlOlxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkZ2V0LmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuXG4gICAgICAgICAgICAgICAgfX19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ0NoZWF0c2hlZXQnXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snVGl0bGUnXX0gbGFiZWw9eydDaGVhdHNoZWV0J30gLz5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snSGFsZiddfSBob21vZ2VuZW91cz5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ1NlY3Rpb24nXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiU3VidGl0bGVcIl19IGxhYmVsPXtcIkNsaWVudHMgV29ya2Zsb3dcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFBcIiBhY3Rpb249XCJQaW4gY2xpZW50XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgUVwiIGFjdGlvbj1cIkNsb3NlIGNsaWVudFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFZcIiBhY3Rpb249XCJUb2dnbGUgZmxvYXRpbmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBGXCIgYWN0aW9uPVwiVG9nZ2xlIGZ1bGxzY3JlZW5cIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBKXCIgYWN0aW9uPVwiVG9nZ2xlIER3aW5kbGVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBcdUYwNjJcIiBhY3Rpb249XCJNb3ZlIGZvY3VzIHRvIHRoZSBjbGllbnQgYXQgYWJvdmVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBcdUYwNjNcIiBhY3Rpb249XCJNb3ZlIGZvY3VzIHRvIHRoZSBjbGllbnQgYXQgYmVsb3dcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBcdUYwNjBcIiBhY3Rpb249XCJNb3ZlIGZvY3VzIHRvIHRoZSBjbGllbkZpeGFyIGNsaWVudGV0IGF0IGxlZnRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBcdUYwNjFcIiBhY3Rpb249XCJNb3ZlIGZvY3VzIHRvIHRoZSBjbGllbnQgYXQgcmlnaHRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snU2VjdGlvbiddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX0gbGFiZWw9e1wiV29ya3NwYWNlcyBXb3JrZmxvd1wifSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIkNUUkwgKyBTVVBFUiArIFx1RjA2MFwiIGFjdGlvbj1cIkdvIHRvIHdvcmtzcGFjZSBhdCB0aGUgbGVmdFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJDVFJMICsgU1VQRVIgKyBcdUYwNjFcIiBhY3Rpb249XCJHbyB0byB3b3Jrc3BhY2UgYXQgdGhlIHJpZ2h0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIkNUUkwgKyBTSElGVCArIFNVUEVSICsgXHVGMDYwXCIgYWN0aW9uPVwiTW92ZSB0byB3b3Jrc3BhY2UgYXQgdGhlIGxlZnQgc2lkZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJDVFJMICsgU0hJRlQgKyBTVVBFUiArIFx1RjA2MVwiIGFjdGlvbj1cIk1vdmUgdG8gd29ya3NwYWNlIGF0IHRoZSByaWdodCBzaWRlXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgU1wiIGFjdGlvbj1cIkdvIHRvIHNwZWNpYWwgd29ya3NwYWNlXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgU0hJRlQgKyBTXCIgYWN0aW9uPVwiTW92ZSB0byBzcGVjaWFsIHdvcmtzcGFjZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ0hhbGYnXX0gaG9tb2dlbmVvdXM+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydTZWN0aW9uJ119IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfSBsYWJlbD17XCJEZWZhdWx0IFByb2dyYW1zXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBFbnRlclwiIGFjdGlvbj1cIlRlcm1pbmFsXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgUlwiIGFjdGlvbj1cIkxhdW5jaGVyXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRVwiIGFjdGlvbj1cIk9wZW4gRmlsZSBNYW5hZ2VyXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRFwiIGFjdGlvbj1cIlRvZ2dsZSBEb2NrXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgQ1wiIGFjdGlvbj1cIlRvZ2dsZSBDaGVhdHNoZWV0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRVNDXCIgYWN0aW9uPVwiVG9nZ2xlIFdsb2dvdXRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snU2VjdGlvbiddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX0gbGFiZWw9e1wiT3RoZXJzXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiUFJJTlRcIiBhY3Rpb249XCJTY3JlZW5zaG90IG91dHB1dFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFBSSU5UXCIgYWN0aW9uPVwiU2NyZWVuc2hvdCByZWdpb25cIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBNXCIgYWN0aW9uPVwiTG9nb3V0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgTFwiIGFjdGlvbj1cIkxvY2sgU2NyZWVuXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3dpbmRvdz5cbiAgICApO1xufVxuIiwgImltcG9ydCBzdHlsZSBmcm9tIFwiLi9zdHlsZXMvaW5kZXguc2Nzc1wiO1xuaW1wb3J0IEJhciBmcm9tIFwiLi93aWRnZXQvQmFyXCI7XG5pbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIjtcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIEZvciwgVGhpcyB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBDYXZhT3ZlcmxheSBmcm9tIFwiLi93aWRnZXQvQ2F2YU92ZXJsYXlcIjtcbmltcG9ydCBDaGVhdHNoZWV0IGZyb20gXCIuL3dpZGdldC9DaGVhdHNoZWV0XCI7XG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gICAgY29uc3QgbW9uaXRvcnMgPSBjcmVhdGVCaW5kaW5nKGFwcCwgXCJtb25pdG9yc1wiKTtcbiAgICByZXR1cm4gKFxuICAgICAgICA8Rm9yIGVhY2g9e21vbml0b3JzfT5cbiAgICAgICAgICAgIHttb25pdG9yID0+IChcbiAgICAgICAgICAgICAgICA8VGhpcyB0aGlzPXthcHB9PlxuICAgICAgICAgICAgICAgICAgICA8QmFyIGdka21vbml0b3I9e21vbml0b3J9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxDYXZhT3ZlcmxheSBnZGttb25pdG9yPXttb25pdG9yfSAvPlxuICAgICAgICAgICAgICAgICAgICA8Q2hlYXRzaGVldCBnZGttb25pdG9yPXttb25pdG9yfSAvPlxuICAgICAgICAgICAgICAgIDwvVGhpcz5cbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvRm9yPlxuICAgICk7XG59XG5cbmFwcC5zdGFydCh7IGNzczogc3R5bGUsIG1haW46IG1haW4gfSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUE7OztBQ0FBLE9BQU8sV0FBVztBQUNsQixPQUFPLFNBQVM7QUFDaEIsT0FBTyxTQUFTOzs7QUNGaEIsT0FBTyxrQkFBa0I7QUFDekIsT0FBTyxVQUFVOzs7QUNhVixTQUFTLGtCQUFrQixTQUF5QjtBQUN2RCxNQUFHLFdBQVcsTUFBTTtBQUNoQixXQUFPLEdBQUcsS0FBSyxNQUFNLFVBQVUsSUFBSSxDQUFDLElBQUksS0FBSyxNQUFPLFVBQVUsT0FBUSxFQUFFLENBQUM7QUFBQSxFQUM3RTtBQUVBLFNBQU8sR0FBRyxLQUFLLE1BQU0sVUFBVSxFQUFFLENBQUM7QUFDdEM7OztBQ3BCQSxPQUFPQSxjQUFhOzs7QUNBcEIsT0FBTyxhQUFhO0FBQ3BCLE9BQU8sU0FBUztBQUNoQixPQUFPLFVBQVU7OztBQ0FWLFNBQVMsU0FBUyxLQUFhO0FBQ2xDLFNBQU8sSUFDRixRQUFRLG1CQUFtQixPQUFPLEVBQ2xDLFdBQVcsS0FBSyxHQUFHLEVBQ25CLFlBQVk7QUFDckI7QUFFTyxTQUFTLFNBQVMsS0FBYTtBQUNsQyxTQUFPLElBQ0YsUUFBUSxtQkFB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QU8sZUFBYztBQUFBLGlCQUNqRDtBQUFBLGVBQ0o7QUFBQSxhQUNKO0FBQUEsV0FDSjtBQUFBO0FBQUE7QUFBQSxFQUNKO0FBRVI7OztBQ2hGQSxTQUFTLE9BQU87QUFDWixRQUFNLFdBQVcsY0FBYyxhQUFLLFVBQVU7QUFDOUMsU0FDSSxvQkFBQyxPQUFJLE1BQU0sVUFDTix1QkFDRyxxQkFBQyxRQUFLLE1BQU0sYUFDUjtBQUFBLHdCQUFDLE9BQUksWUFBWSxTQUFTO0FBQUEsSUFDMUIsb0JBQUMsZUFBWSxZQUFZLFNBQVM7QUFBQSxJQUNsQyxvQkFBQyxjQUFXLFlBQVksU0FBUztBQUFBLEtBQ3JDLEdBRVI7QUFFUjtBQUVBLFlBQUksTUFBTSxFQUFFLEtBQUssZ0JBQU8sS0FBVyxDQUFDOyIsCiAgIm5hbWVzIjogWyJHT2JqZWN0IiwgInNldCIsICJHT2JqZWN0IiwgImtleSIsICJvYmplY3QiLCAiR09iamVjdCIsICJtb2QiLCAiR09iamVjdCIsICJyZW1vdmUiLCAiQXN0YWxJTyIsICJBc3RhbElPIiwgImludGVydmFsIiwgInNldCIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkdpbyIsICJHT2JqZWN0IiwgIkd0ayIsICJHaW8iLCAiY3NzIiwgIkdPYmplY3QiLCAiaW5kZXgiLCAiR3RrIiwgIkFzdGFsIiwgIkdMaWIiLCAiR3RrIiwgIkFzdGFsIiwgInNuYWtlaWZ5IiwgIm1vZCIsICJwYXRjaCIsICJIeXBybGFuZCIsICJXcCIsICJHT2JqZWN0IiwgIm1haW4iLCAiR3RrIiwgIkdMaWIiLCAiQXN0YWwiLCAiR0xpYiIsICJwb2xsVGltZSIsICJHTGliIiwgIkdMaWIiLCAiR0xpYiIsICJHTGliIiwgIkFzdGFsIiwgInBhdGgiLCAicGF0aCIsICJBc3RhbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIkdMaWIiLCAiU3d3dyIsICJSZXNpemUiLCAiRmlsdGVyIiwgIlRyYW5zaXRpb25UeXBlIiwgIlRyYW5zaXRpb25Qb3MiLCAicGF0aCIsICJwYXRoIiwgIkdMaWIiLCAicG9sbFRpbWUiLCAiR2lvIiwgIndvcmtzcGFjZXMiLCAiR09iamVjdCIsICJ2IiwgIkdPYmplY3QiXQp9Cg==

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@