#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gc2-ags.js"

cat <<EOF | base64 --decode > $file
Ly8gc2FzczovaG9tZS9pdGlyby8uY29uZmlnL2Fncy9zdHlsZXMvaW5kZXguc2Nzcwp2YXIgc3R5bGVzX2RlZmF1bHQgPSAnLyogQ2F0cHB1Y2NpbiBtb2NoYSBjb2xvcnMgKi9cbi5Db250cm9sQ2VudGVyLCAuTWVkaWEsIC5Xb3Jrc3BhY2VzLCAuQXVkaW9Db250cm9sLCAuQ3B1VXNhZ2UsIC5CYXR0ZXJ5LCAuTWVtb3J5VXNhZ2UsIC5UaW1lIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgcGFkZGluZzogNHB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxOHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgKiwgLk1lZGlhICosIC5Xb3Jrc3BhY2VzICosIC5BdWRpb0NvbnRyb2wgKiwgLkNwdVVzYWdlICosIC5CYXR0ZXJ5ICosIC5NZW1vcnlVc2FnZSAqLCAuVGltZSAqIHtcbiAgbWFyZ2luOiAwcHggMnB4O1xufVxuXG4uVHJheUl0ZW0sIC5Xb3Jrc3BhY2VzIC5Xb3Jrc3BhY2UsIC5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbiwgLk1peGVyIC5NaXhlckVudHJ5IC5JY29uIHtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgbWluLXdpZHRoOiAyNHB4O1xuICBtaW4taGVpZ2h0OiAyNHB4O1xufVxuXG4uTWl4ZXIgLk1peGVyRW50cnkgLlNsaWRlciB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG1pbi13aWR0aDogMTYwcHg7XG4gIG1pbi1oZWlnaHQ6IDIwcHg7XG59XG5cbi5EYXRlVGltZUNhbGVuZGFyIHtcbiAgbWFyZ2luOiAxMHB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNywgMTcsIDI3LCAwLjYpO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGhlYWRlciB7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ5LCA1MCwgNjgsIDAuOCk7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgYnV0dG9uIHtcbiAgbWFyZ2luOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgYnV0dG9uICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGJ1dHRvbjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCB7XG4gIHBhZGRpbmc6IDZweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBtYXJnaW46IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OSwgNzEsIDkwLCAwLjcpO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGdyaWQgbGFiZWwub3RoZXItbW9udGgge1xuICBvcGFjaXR5OiAwLjU7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGdyaWQgbGFiZWwub3RoZXItbW9udGg6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZjVlMGRjO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLmRheS1udW1iZXIge1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBtYXJnaW46IDFweDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5kYXktbnVtYmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2NiYTZmNztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC50b2RheSB7XG4gIGNvbG9yOiAjMWUxZTJlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjRiZWZlO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkRhdGVUaW1lIHtcbiAgbWFyZ2luOiA1cHg7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuRGF0ZVRpbWUgLlRpbWUge1xuICBmb250LXNpemU6IDE2MHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5EYXRlVGltZSAuRGF0ZSB7XG4gIGZvbnQtc2l6ZTogMzJweDtcbn1cblxuLlRpbWUge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLk1lbW9yeVVzYWdlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5NZW1vcnlVc2FnZSAqIHtcbiAgY29sb3I6ICNmYWIzODc7XG59XG4uTWVtb3J5VXNhZ2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZmFiMzg3O1xufVxuLk1lbW9yeVVzYWdlOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5NZW1vcnlVc2FnZSAuSWNvbiB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLkJhdHRlcnkge1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5CYXR0ZXJ5Tm9ybWFsIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5CYXR0ZXJ5Tm9ybWFsICoge1xuICBjb2xvcjogI2I0YmVmZTtcbn1cbi5CYXR0ZXJ5Tm9ybWFsOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2I0YmVmZTtcbn1cbi5CYXR0ZXJ5Tm9ybWFsOmhvdmVyICoge1xuICBjb2xvcjogIzExMTExYjtcbn1cblxuLkJhdHRlcnlDcml0aWNhbCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uQmF0dGVyeUNyaXRpY2FsICoge1xuICBjb2xvcjogI2YzOGJhODtcbn1cbi5CYXR0ZXJ5Q3JpdGljYWw6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZjM4YmE4O1xufVxuLkJhdHRlcnlDcml0aWNhbDpob3ZlciAqIHtcbiAgY29sb3I6ICMxMTExMWI7XG59XG5cbi5CYXR0ZXJ5UG9wb3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbiAgcGFkZGluZzogMnB4O1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xufVxuLkJhdHRlcnlQb3BvdmVyIC5UaXRsZSwgLkJhdHRlcnlQb3BvdmVyIC5CYXR0ZXJ5TGlmZSwgLkJhdHRlcnlQb3BvdmVyIC5Ub2dnbGVCdXR0b24ge1xuICBtYXJnaW46IDJweDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuVGl0bGUge1xuICBjb2xvcjogI2NkZDZmNDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uQmF0dGVyeVBvcG92ZXIgLkJhdHRlcnlMaWZlIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uQmF0dGVyeVBvcG92ZXIgLlRvZ2dsZUJ1dHRvbiB7XG4gIG1hcmdpbjogMnB4IDRweDtcbiAgcGFkZGluZzogMnB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNzUpO1xuICBjb2xvcjogcmdiYSgzMCwgMzAsIDQ2LCAwLjc1KTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuVG9nZ2xlQnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgzMCwgMzAsIDQ2LCAwLjc1KTtcbiAgY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC43NSk7XG59XG5cbi5DcHVVc2FnZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uQ3B1VXNhZ2UgKiB7XG4gIGNvbG9yOiAjYTZlM2ExO1xufVxuLkNwdVVzYWdlOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2E2ZTNhMTtcbn1cbi5DcHVVc2FnZTpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uQ3B1VXNhZ2UgLkljb24ge1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5BdWRpb0NvbnRyb2wge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLkF1ZGlvQ29udHJvbCAqIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uQXVkaW9Db250cm9sOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5BdWRpb0NvbnRyb2w6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuXG4uTWl4ZXIge1xuICBwYWRkaW5nOiA2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbiAgYm9yZGVyOiBub25lO1xufVxuLk1peGVyIC5MYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDI0cHg7XG4gIG1hcmdpbjogNnB4O1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NTQ3NWE7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAycHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuSWNvbiB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLk1peGVyIC5NaXhlckVudHJ5IC5JY29uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uTWl4ZXIgLk1peGVyRW50cnkgLlNsaWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1ODViNzA7XG59XG4uTWl4ZXIgLk1peGVyRW50cnkgLlNsaWRlciBoaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xufVxuXG4uV29ya3NwYWNlcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbiAgYm9yZGVyLXJhZGl1czogMThweDtcbn1cbi5Xb3Jrc3BhY2VzIC5Xb3Jrc3BhY2UsIC5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE3LCAxNywgMjcsIDAuOCk7XG4gIGJvcmRlcjogbm9uZTtcbiAgbWFyZ2luOiAycHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG59XG4uV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b24ge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b246aG92ZXIgKiB7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLldvcmtzcGFjZXMgLkFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC45KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uV29ya3NwYWNlcyAuSW5hY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuLldvcmtzcGFjZXMgLkluYWN0aXZlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICBjb2xvcjogIzExMTExYjtcbn1cbi5Xb3Jrc3BhY2VzIC5Xb3Jrc3BhY2VQb3BvdmVyIHtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgcGFkZGluZzogNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ5LCA1MCwgNjgsIDAuOSk7XG4gIG1hcmdpbjogMnB4O1xufVxuXG4uVHJheUl0ZW0ge1xuICBtYXJnaW46IDJweDtcbiAgLWd0ay1pY29uLXNpemU6IDI0cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlO1xufVxuLlRyYXlJdGVtOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjgpO1xuICBjb2xvcjogIzExMTExYjtcbn1cbi5UcmF5SXRlbTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNik7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLlRyYXlJdGVtIHBvcG92ZXIubWVudSB7XG4gIG1hcmdpbjogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzI0NDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbi5UcmF5SXRlbSBwb3BvdmVyLm1lbnUgbW9kZWxidXR0b24ge1xuICBwYWRkaW5nOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgbWFyZ2luOiAwIDJweDtcbn1cbi5UcmF5SXRlbSBwb3BvdmVyLm1lbnUgbW9kZWxidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDY5LCA3MSwgOTAsIDAuMik7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IG1vZGVsYnV0dG9uOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IHJnYmEoNjksIDcxLCA5MCwgMC40KTtcbn1cblxuLk1lZGlhIHtcbiAgbWFyZ2luOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uTWVkaWEgKiB7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLk1lZGlhOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5NZWRpYTpob3ZlciAqIHtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQsIDI0LCAzNywgMC44KTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciB7XG4gIHBhZGRpbmc6IDE2cHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLk1ldGFkYXRhIHtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLk1ldGFkYXRhIC5UaXRsZSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLk1ldGFkYXRhIC5BcnRpc3Qge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiByZ2JhKDIwNSwgMjE0LCAyNDQsIDAuNyk7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLk1ldGFkYXRhIC5BbGJ1bSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6IHJnYmEoMjA1LCAyMTQsIDI0NCwgMC41KTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQge1xuICBtYXJnaW4tdG9wOiAxMnB4O1xuICBwYWRkaW5nOiAxMnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLlBsYXllclNsaWRlciB7XG4gIHBhZGRpbmc6IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMzAsIDQ2LCAwLjYpO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDE0cHg7XG4gIG1hcmdpbjogNXB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLlBsYXllclNsaWRlciAuU2xpZGVyIHtcbiAgbWluLXdpZHRoOiAxNjBweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIgLlNsaWRlciBoaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kOiAjNzRjN2VjO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLlBsYXllclNsaWRlciAuVGltZUxhYmVsIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIG9wYWNpdHk6IDAuODtcbiAgbWluLXdpZHRoOiA0MHB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91cywgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2UsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dCB7XG4gIG1hcmdpbjogNHB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogIzFlMWUyZTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXMgaW1hZ2UsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlIGltYWdlLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQgaW1hZ2Uge1xuICBtYXJnaW46IDEycHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dCAqIHtcbiAgY29sb3I6ICM4OWI0ZmE7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzOmhvdmVyLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZTpob3ZlciwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXM6aG92ZXIgKiwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2U6aG92ZXIgKiwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0OmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5DYXZhLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuQ2F2YSA+ICoge1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjUpO1xufVxuXG4uQ2F2YSwgLkNhdmEgPiAqLCAuQ2F2YU92ZXJsYXksIC5DYXZhT3ZlcmxheSA+ICoge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5DYXZhLCAuQ2F2YSA+ICoge1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjUpO1xufVxuXG4uQ2F2YU92ZXJsYXkge1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDQwcHggNDBweCAwcHggMHB4O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkNhdmFPdmVybGF5OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxudG9vbHRpcCB7XG4gIHBhZGRpbmc6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzI0NDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuLkNvbnRyb2xDZW50ZXIge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkxhYmVsIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuLkNvbnRyb2xDZW50ZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xufVxuLkNvbnRyb2xDZW50ZXI6aG92ZXIgLkxhYmVsIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIge1xuICBwYWRkaW5nOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuU3VidGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIG1hcmdpbjogNHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyB7XG4gIG1hcmdpbjogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDY5LCA3MSwgOTAsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLk9wdGlvbiB7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5Ub2dnbGVBbmltYXRpb25zIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5Ub2dnbGVBbmltYXRpb25zOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5Ub2dnbGVEYXRlVGltZUNhbGVuZGFyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5Ub2dnbGVEYXRlVGltZUNhbGVuZGFyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2ZhYjM4NztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5Ub2dnbGVDYXZhIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5Ub2dnbGVDYXZhOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2I0YmVmZTtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLldhbGxwYXBlclN5c3RlbSB7XG4gIG1hcmdpbjogMHB4IDRweDtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuV2FsbHBhcGVyU3lzdGVtIC5XYWxscGFwZXJzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OSwgNzEsIDkwLCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBwYWRkaW5nOiAxMHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5XYWxscGFwZXJTeXN0ZW0gLldhbGxwYXBlcnMgLldhbGxwYXBlciB7XG4gIG9wYWNpdHk6IDAuODtcbiAgYm9yZGVyOiAycHggc29saWQgI2I0YmVmZTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuV2FsbHBhcGVyU3lzdGVtIC5XYWxscGFwZXJzIC5XYWxscGFwZXI6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xuICBib3JkZXItY29sb3I6ICM4OWI0ZmE7XG59XG5cbi5TZWxlY3RvckluZGljYXRvciB7XG4gIG1hcmdpbjogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDY5LCA3MSwgOTAsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5TZWxlY3RvckluZGljYXRvciAuT3B0aW9uIHtcbiAgcGFkZGluZzogMnB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbi5TZWxlY3RvckluZGljYXRvciAuVG9nZ2xlQWN0aXZlIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uU2VsZWN0b3JJbmRpY2F0b3IgLlRvZ2dsZUFjdGl2ZTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuXG4uQ2hlYXRzaGVldCB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkICM4OWI0ZmE7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzAsIDMwLCA0NiwgMC44KTtcbn1cbi5DaGVhdHNoZWV0IC5UaXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIGZvbnQtc2l6ZTogODBweDtcbn1cbi5DaGVhdHNoZWV0IC5TdWJ0aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDQwcHg7XG59XG4uQ2hlYXRzaGVldCAuU2VjdGlvbiB7XG4gIG1hcmdpbjogNHB4O1xuICBwYWRkaW5nOiA0cHg7XG59XG4uQ2hlYXRzaGVldCAuRW50cnkge1xuICBtYXJnaW46IDNweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5IC5CaW5kLCAuQ2hlYXRzaGVldCAuRW50cnkgLkFjdGlvbiB7XG4gIHBhZGRpbmc6IDJweDtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeSAuQmluZCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzg5YjRmYTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzI0NDtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeSAuQWN0aW9uIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgY29sb3I6ICMzMTMyNDQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG59XG4uQ2hlYXRzaGVldCAuRW50cnk6aG92ZXIgLkJpbmQge1xuICBjb2xvcjogIzMxMzI0NDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeTpob3ZlciAuQWN0aW9uIHtcbiAgY29sb3I6ICM4OWI0ZmE7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG59XG5cbi8qIFJlc2V0dGluZyBldmVyeSBkZWNvcmF0aW9uIGFwcGxpZWQgZWFybGllciAqL1xuKiB7XG4gIGZvbnQtZmFtaWx5OiAiTW9ub3NwYWNlIjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICAtZ3RrLWljb24tc2l6ZTogMjRweDtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uQmFyIHtcbiAgYmFja2dyb3VuZDogIzFlMWUyZTtcbiAgYm9yZGVyLXJhZGl1czogMjhweDtcbiAgbWFyZ2luOiA0cHggNnB4O1xufSc7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzCmltcG9ydCBBc3RhbCBmcm9tICJnaTovL0FzdGFsP3ZlcnNpb249NC4wIjsKaW1wb3J0IEd0ayBmcm9tICJnaTovL0d0az92ZXJzaW9uPTQuMCI7CmltcG9ydCBHZGsgZnJvbSAiZ2k6Ly9HZGs/dmVyc2lvbj00LjAiOwoKLy8gbW9kdWxlcy9TeXN0ZW1Nb25pdG9yLnRzeAppbXBvcnQgQXN0YWxCYXR0ZXJ5IGZyb20gImdpOi8vQXN0YWxCYXR0ZXJ5IjsKaW1wb3J0IEdUb3AgZnJvbSAiZ2k6Ly9HVG9wP3ZlcnNpb249Mi4wIjsKCi8vIHNlcnZpY2VzL1RpbWVGb3JtYXR0ZXIudHMKZnVuY3Rpb24gZm9ybWF0VGltZVZlcmJvc2Uoc2Vjb25kcykgewogIGlmIChzZWNvbmRzID49IDM2MDApIHsKICAgIHJldHVybiBgJHtNYXRoLmZsb29yKHNlY29uZHMgLyAzNjAwKX1oJHtNYXRoLmZsb29yKHNlY29uZHMgJSAzNjAwIC8gNjApfW1gOwogIH0KICByZXR1cm4gYCR7TWF0aC5mbG9vcihzZWNvbmRzIC8gNjApfW1gOwp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cwppbXBvcnQgR09iamVjdDIgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc3RhdGUudHMKaW1wb3J0IEdPYmplY3QgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKaW1wb3J0IEdpbyBmcm9tICJnaTovL0dpbyI7CmltcG9ydCBHTGliIGZyb20gImdpOi8vR0xpYiI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvdXRpbC50cwpmdW5jdGlvbiBrZWJhYmlmeShzdHIpIHsKICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICIkMS0kMiIpLnJlcGxhY2VBbGwoIl8iLCAiLSIpLnRvTG93ZXJDYXNlKCk7Cn0KZnVuY3Rpb24gc25ha2VpZnkoc3RyKSB7CiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCAiJDEtJDIiKS5yZXBsYWNlQWxsKCItIiwgIl8iKS50b0xvd2VyQ2FzZSgpOwp9CmZ1bmN0aW9uIHNldChvYmosIHByb3AsIHZhbHVlKSB7CiAgY29uc3Qga2V5ID0gc25ha2VpZnkocHJvcCk7CiAgY29uc3QgZ2V0dGVyID0gYGdldF8ke2tleX1gOwogIGNvbnN0IHNldHRlciA9IGBzZXRfJHtrZXl9YDsKICBsZXQgY3VycmVudDsKICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09ICJmdW5jdGlvbiIpIHsKICAgIGN1cnJlbnQgPSBvYmpbZ2V0dGVyXSgpOwogIH0gZWxzZSB7CiAgICBjdXJyZW50ID0gb2JqW3Byb3BdOwogIH0KICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHsKICAgIGlmIChzZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbc2V0dGVyXSA9PT0gImZ1bmN0aW9uIikgewogICAgICA7CiAgICAgIG9ialtzZXR0ZXJdKHZhbHVlKTsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm9wXTogdmFsdWUgfSk7CiAgICB9CiAgfQp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzCnZhciBBY2Nlc3NvciA9IGNsYXNzIF9BY2Nlc3NvciBleHRlbmRzIEZ1bmN0aW9uIHsKICBzdGF0aWMgewogICAgdGhpcy4kZ3R5cGUgPSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1Q7CiAgfQogICNnZXQ7CiAgI3N1YnNjcmliZTsKICBjb25zdHJ1Y3RvcihnZXQsIHN1YnNjcmliZSkgewogICAgc3VwZXIoInJldHVybiBhcmd1bWVudHMuY2FsbGVlLl9jYWxsLmFwcGx5KGFyZ3VtZW50cy5jYWxsZWUsIGFyZ3VtZW50cykiKTsKICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKTsKICAgIHRoaXMuI2dldCA9IGdldDsKICB9CiAgLyoqCiAgICogU3Vic2NyaWJlIGZvciB2YWx1ZSBjaGFuZ2VzLgogICAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnQgdmFsdWUgY2hhbmdlcy4KICAgKiBAcmV0dXJucyBVbnN1YnNjcmliZSBmdW5jdGlvbi4KICAgKi8KICBzdWJzY3JpYmUoY2FsbGJhY2spIHsKICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spOwogIH0KICAvKioKICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZS4KICAgKi8KICBnZXQoKSB7CiAgICByZXR1cm4gdGhpcy4jZ2V0KCk7CiAgfQogIC8qKgogICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS4KICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi4KICAgKi8KICBhcyh0cmFuc2Zvcm0pIHsKICAgIHJldHVybiBuZXcgX0FjY2Vzc29yKCgpID0+IHRyYW5zZm9ybSh0aGlzLiNnZXQoKSksIHRoaXMuI3N1YnNjcmliZSk7CiAgfQogIF9jYWxsKHRyYW5zZm9ybSkgewogICAgcmV0dXJuIHRoaXMuYXModHJhbnNmb3JtKTsKICB9CiAgdG9TdHJpbmcoKSB7CiAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YDsKICB9CiAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7CiAgICBjb25zb2xlLndhcm4oIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLiIpOwogICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTsKICB9Cn07CmZ1bmN0aW9uIGNyZWF0ZVN0YXRlKGluaXQpIHsKICBsZXQgY3VycmVudFZhbHVlID0gaW5pdDsKICBjb25zdCBzdWJzY3JpYmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgY29uc3Qgc3Vic2NyaWJlID0gKGNhbGxiYWNrKSA9PiB7CiAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spOwogICAgcmV0dXJuICgpID0+IHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjayk7CiAgfTsKICBjb25zdCBzZXQyID0gKG5ld1ZhbHVlKSA9PiB7CiAgICBjb25zdCB2YWx1ZSA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gImZ1bmN0aW9uIiA/IG5ld1ZhbHVlKGN1cnJlbnRWYWx1ZSkgOiBuZXdWYWx1ZTsKICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7CiAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlOwogICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICB9CiAgfTsKICByZXR1cm4gW25ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSksIHNldDJdOwp9CmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkKGRlcHMsIHRyYW5zZm9ybSkgewogIGxldCBkaXNwb3NlOwogIGNvbnN0IHN1YnNjcmliZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICBjb25zdCBjYWNoZSA9IG5ldyBBcnJheShkZXBzLmxlbmd0aCk7CiAgY29uc3Qgc3Vic2NyaWJlID0gKGNhbGxiYWNrKSA9PiB7CiAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkgewogICAgICBkaXNwb3NlID0gZGVwcy5tYXAoCiAgICAgICAgKGRlcCwgaSkgPT4gZGVwLnN1YnNjcmliZSgoKSA9PiB7CiAgICAgICAgICBjb25zdCB2YWx1ZSA9IGRlcC5nZXQoKTsKICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gdmFsdWUpIHsKICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KCk7CiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICApOwogICAgfQogICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKTsKICAgIHJldHVybiAoKSA9PiB7CiAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjayk7CiAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7CiAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKTsKICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDA7CiAgICAgICAgY2FjaGUubGVuZ3RoID0gMDsKICAgICAgfQogICAgfTsKICB9OwogIGNvbnN0IGdldCA9ICgpID0+IHsKICAgIGNvbnN0IGFyZ3MgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PiB7CiAgICAgIGlmICghY2FjaGVbaV0pIHsKICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKTsKICAgICAgfQogICAgICByZXR1cm4gY2FjaGVbaV07CiAgICB9KTsKICAgIHJldHVybiB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oLi4uYXJncykgOiBhcmdzOwogIH07CiAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSk7Cn0KZnVuY3Rpb24gY3JlYXRlQmluZGluZyhvYmplY3QsIGtleSkgewogIGNvbnN0IHByb3AgPSBrZWJhYmlmeShrZXkpOwogIGNvbnN0IHN1YnNjcmliZSA9IChjYWxsYmFjaykgPT4gewogICAgY29uc3Qgc2lnID0gb2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzID8gImNoYW5nZWQiIDogIm5vdGlmeSI7CiAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KGAke3NpZ306OiR7cHJvcH1gLCAoKSA9PiBjYWxsYmFjaygpKTsKICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZCk7CiAgfTsKICBjb25zdCBnZXQgPSAoKSA9PiB7CiAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzKSB7CiAgICAgIHJldHVybiBvYmplY3QuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKCk7CiAgICB9IGVsc2UgewogICAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7cHJvcC5yZXBsYWNlQWxsKCItIiwgIl8iKX1gOwogICAgICBpZiAoZ2V0dGVyIGluIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0W2dldHRlcl0gPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICByZXR1cm4gb2JqZWN0W2dldHRlcl0oKTsKICAgICAgfQogICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF07CiAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W2tleV07CiAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ2V0IHByb3BlcnR5ICR7a2V5fWApOwogICAgfQogIH07CiAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSk7Cn0KCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvZW52LnRzCmZ1bmN0aW9uIGNvbmZpZ3VlKGNvbmYpIHsKICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpOwp9CmZ1bmN0aW9uIG1pc3NpbmdJbXBsKCkgewogIHRocm93IEVycm9yKCJtaXNzaW5nIGltcGwiKTsKfQp2YXIgZW52ID0gewogIGludHJpbnNpY0VsZW1lbnRzOiB7fSwKICBhZGRDaGlsZDogbWlzc2luZ0ltcGwsCiAgc2V0Q3NzOiBtaXNzaW5nSW1wbCwKICBzZXRDbGFzczogbWlzc2luZ0ltcGwsCiAgaW5pdFByb3BzOiAoKSA9PiB2b2lkIDAsCiAgZGVmYXVsdENsZWFudXA6ICgpID0+IHZvaWQgMAp9OwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zY29wZS50cwp2YXIgU2NvcGUgPSBjbGFzcyBfU2NvcGUgewogIGNvbnN0cnVjdG9yKHBhcmVudCkgewogICAgdGhpcy5jb250ZXh0cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7CiAgICB0aGlzLmNsZWFudXBzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICAgIHRoaXMubW91bnRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICAgIHRoaXMubW91bnRlZCA9IGZhbHNlOwogICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7CiAgfQogIG9uQ2xlYW51cChjYWxsYmFjaykgewogICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKTsKICB9CiAgb25Nb3VudChjYWxsYmFjaykgewogICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7CiAgICAgIHRoaXMucGFyZW50Lm9uTW91bnQoY2FsbGJhY2spOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKTsKICAgIH0KICB9CiAgcnVuKGZuKSB7CiAgICBjb25zdCBwcmV2ID0gX1Njb3BlLmN1cnJlbnQ7CiAgICBfU2NvcGUuY3VycmVudCA9IHRoaXM7CiAgICB0cnkgewogICAgICByZXR1cm4gZm4oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIHRoaXMubW91bnRzLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgICAgdGhpcy5tb3VudHMuY2xlYXIoKTsKICAgICAgdGhpcy5tb3VudGVkID0gdHJ1ZTsKICAgICAgX1Njb3BlLmN1cnJlbnQgPSBwcmV2OwogICAgfQogIH0KICBkaXNwb3NlKCkgewogICAgdGhpcy5jbGVhbnVwcy5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICB0aGlzLmNsZWFudXBzLmNsZWFyKCk7CiAgICB0aGlzLmNvbnRleHRzLmNsZWFyKCk7CiAgICBkZWxldGUgdGhpcy5wYXJlbnQ7CiAgfQp9OwpmdW5jdGlvbiBnZXRTY29wZSgpIHsKICBjb25zdCBzY29wZSA9IFNjb3BlLmN1cnJlbnQ7CiAgaWYgKCFzY29wZSkgewogICAgdGhyb3cgRXJyb3IoImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0Iik7CiAgfQogIHJldHVybiBzY29wZTsKfQpmdW5jdGlvbiBvbkNsZWFudXAoY2xlYW51cCkgewogIGlmICghU2NvcGUuY3VycmVudCkgewogICAgY29uc29sZS5lcnJvcihFcnJvcigib3V0IG9mIHRyYWNraW5nIGNvbnRleHQ6IHdpbGwgbm90IGJlIGFibGUgdG8gY2xlYW51cCIpKTsKICB9CiAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApOwp9CmZ1bmN0aW9uIGNyZWF0ZVJvb3QoZm4pIHsKICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShudWxsKTsKICByZXR1cm4gc2NvcGUucnVuKCgpID0+IGZuKCgpID0+IHNjb3BlLmRpc3Bvc2UoKSkpOwp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cwp2YXIgZ3RrVHlwZSA9IFN5bWJvbCgiZ3RrIGJ1aWxkZXIgdHlwZSIpOwpmdW5jdGlvbiBnZXRUeXBlKG9iamVjdCkgewogIHJldHVybiBndGtUeXBlIGluIG9iamVjdCA/IG9iamVjdFtndGtUeXBlXSA6IG51bGw7Cn0KZnVuY3Rpb24gaXNHT2JqZWN0Q3RvcihjdG9yKSB7CiAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdDIuT2JqZWN0Owp9CmZ1bmN0aW9uIGlzRnVuY3Rpb25DdG9yKGN0b3IpIHsKICByZXR1cm4gdHlwZW9mIGN0b3IgPT09ICJmdW5jdGlvbiIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcik7Cn0KZnVuY3Rpb24gc2V0VHlwZShvYmplY3QsIHR5cGUpIHsKICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSAiIikgewogICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApOwogIH0KICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBbZ3RrVHlwZV06IHR5cGUgfSk7Cn0KZnVuY3Rpb24ganN4KGN0b3IsIGlucHJvcHMsIGtleSkgewogIGNvbnN0IHsgJCwgJHR5cGUsICRjb25zdHJ1Y3RvciwgY2hpbGRyZW4sIC4uLnJlc3QgfSA9IGlucHJvcHM7CiAgY29uc3QgcHJvcHMgPSByZXN0OwogIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pOwogIGVudi5pbml0UHJvcHMocHJvcHMpOwogIGZvciAoY29uc3QgW2tleTIsIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHsKICAgIGlmICh2YWx1ZSA9PT0gdm9pZCAwKSBkZWxldGUgcHJvcHNba2V5Ml07CiAgfQogIGlmICh0eXBlb2YgY3RvciA9PT0gInN0cmluZyIpIHsKICAgIGlmIChjdG9yIGluIGVudi5pbnRyaW5zaWNFbGVtZW50cykgewogICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdOwogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgRXJyb3IoYHVua25vd24gaW50cmluc2ljIGVsZW1lbnQgIiR7Y3Rvcn0iYCk7CiAgICB9CiAgfQogIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkgewogICAgY29uc3Qgb2JqZWN0MiA9IGN0b3IoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSk7CiAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0MiwgJHR5cGUpOwogICAgJD8uKG9iamVjdDIpOwogICAgcmV0dXJuIG9iamVjdDI7CiAgfQogIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wczsKICBkZWxldGUgcHJvcHMuY3NzOwogIGRlbGV0ZSBwcm9wcy5jbGFzczsKICBjb25zdCBzaWduYWxzID0gW107CiAgY29uc3QgYmluZGluZ3MgPSBbXTsKICBmb3IgKGNvbnN0IFtrZXkyLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7CiAgICBpZiAoa2V5Mi5zdGFydHNXaXRoKCJvbiIpKSB7CiAgICAgIHNpZ25hbHMucHVzaChba2V5Mi5zbGljZSgyKSwgdmFsdWVdKTsKICAgICAgZGVsZXRlIHByb3BzW2tleTJdOwogICAgfQogICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHsKICAgICAgYmluZGluZ3MucHVzaChba2V5MiwgdmFsdWVdKTsKICAgICAgcHJvcHNba2V5Ml0gPSB2YWx1ZS5nZXQoKTsKICAgIH0KICB9CiAgY29uc3Qgb2JqZWN0ID0gJGNvbnN0cnVjdG9yID8gJGNvbnN0cnVjdG9yKHByb3BzKSA6IG5ldyBjdG9yKHByb3BzKTsKICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpOwogIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKTsKICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKTsKICBpZiAoY2xhc3NOYW1lKSBlbnYuc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpOwogIGZvciAoY29uc3QgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHsKICAgIGlmIChjaGlsZCA9PT0gdHJ1ZSkgewogICAgICBjb25zb2xlLndhcm4oIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC4iKTsKICAgICAgY29udGludWU7CiAgICB9CiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHsKICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkgewogICAgICAgIGVudi5hZGRDaGlsZChvYmplY3QsIGNoLCAtMSk7CiAgICAgIH0KICAgIH0gZWxzZSBpZiAoY2hpbGQpIHsKICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2hpbGQsIC0xKTsKICAgIH0KICB9CiAgY29uc3QgZGlzcG9zZUhhbmRsZXJzID0gc2lnbmFscy5tYXAoKFtzaWcsIGhhbmRsZXJdKSA9PiB7CiAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkoc2lnKTsKICAgIGNvbnN0IGlkID0gbmFtZS5zdGFydHNXaXRoKCJub3RpZnktIikgPyBvYmplY3QuY29ubmVjdChgbm90aWZ5Ojoke25hbWUuc2xpY2UoNyl9YCwgaGFuZGxlcikgOiBvYmplY3QuY29ubmVjdChrZWJhYmlmeShzaWcpLCBoYW5kbGVyKTsKICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZCk7CiAgfSk7CiAgY29uc3QgZGlzcG9zZUJpbmRpbmdzID0gYmluZGluZ3MubWFwKChbcHJvcCwgYmluZGluZ10pID0+IHsKICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7CiAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpOwogICAgfSk7CiAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKTsKICAgIHJldHVybiBkaXNwb3NlOwogIH0pOwogIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkgewogICAgb25DbGVhbnVwKCgpID0+IHsKICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgIH0pOwogIH0KICAkPy4ob2JqZWN0KTsKICByZXR1cm4gb2JqZWN0Owp9CnZhciBqc3hzID0ganN4OwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cwppbXBvcnQgR09iamVjdDMgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9nbm9tZS9zaWduYWxUcmFja2VyLnRzCnZhciBtb2QgPSBpbXBvcnQoInJlc291cmNlOi8vL29yZy9nbm9tZS9zaGVsbC9taXNjL3NpZ25hbFRyYWNrZXIuanMiKTsKdmFyIHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlID0gYXdhaXQgbW9kLnRoZW4oKG1vZDIpID0+IG1vZDIucmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUpLmNhdGNoKCgpID0+ICgpID0+IHZvaWQgMCk7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L0ZyYWdtZW50LnRzCnZhciBfYSwgX2IsIF9jOwp2YXIgRnJhZ21lbnQgPSBjbGFzcyBfRnJhZ21lbnQgZXh0ZW5kcyAoX2MgPSBHT2JqZWN0My5PYmplY3QsIF9iID0gR09iamVjdDMuc2lnbmFscywgX2EgPSBHT2JqZWN0My5wcm9wZXJ0aWVzLCBfYykgewogIGNvbnN0cnVjdG9yKHsgY2hpbGRyZW4gPSBbXSB9ID0ge30pIHsKICAgIHN1cGVyKCk7CiAgICB0aGlzLmNvbm5lY3Rpb25JZHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpOwogICAgdGhpcy5fY2hpbGRyZW4gPSBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXTsKICB9CiAgc3RhdGljIHsKICAgIHRoaXNbX2JdID0gewogICAgICAiZGVzdHJveSI6IHt9LAogICAgICAiY2hpbGQtYWRkZWQiOiB7CiAgICAgICAgcGFyYW1fdHlwZXM6IFtHT2JqZWN0My5UWVBFX09CSkVDVCwgR09iamVjdDMuVFlQRV9VSU5UXQogICAgICB9LAogICAgICAiY2hpbGQtcmVtb3ZlZCI6IHsKICAgICAgICBwYXJhbV90eXBlczogW0dPYmplY3QzLlRZUEVfT0JKRUNULCBHT2JqZWN0My5UWVBFX1VJTlRdCiAgICAgIH0KICAgIH07CiAgfQogIHN0YXRpYyB7CiAgICB0aGlzW19hXSA9IHsKICAgICAgY2hpbGRyZW46IEdPYmplY3QzLlBhcmFtU3BlYy5qc29iamVjdCgiY2hpbGRyZW4iLCAiIiwgIiIsIEdPYmplY3QzLlBhcmFtRmxhZ3MuUkVBREFCTEUpCiAgICB9OwogIH0KICBzdGF0aWMgewogICAgR09iamVjdDMucmVnaXN0ZXJDbGFzcyh0aGlzKTsKICAgIHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlKHRoaXMpOwogIH0KICBzdGF0aWMgbmV3KGNoaWxkcmVuID0gW10pIHsKICAgIHJldHVybiBuZXcgX0ZyYWdtZW50KHsgY2hpbGRyZW4gfSk7CiAgfQogIGdldCBjaGlsZHJlbigpIHsKICAgIHJldHVybiBbLi4udGhpcy5fY2hpbGRyZW5dOwogIH0KICBhZGRDaGlsZChjaGlsZCwgaW5kZXggPSAtMSkgewogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgX0ZyYWdtZW50KSB7CiAgICAgIHRocm93IEVycm9yKGBuZXN0aW5nIEZyYWdtZW50cyBhcmUgbm90IHlldCBzdXBwb3J0ZWRgKTsKICAgIH0KICAgIGlmIChpbmRleCA+IDApIHsKICAgICAgdGhpcy5fY2hpbGRyZW4gPSBbCiAgICAgICAgLi4udGhpcy5fY2hpbGRyZW4uc2xpY2UoMCwgaW5kZXgpLAogICAgICAgIGNoaWxkLAogICAgICAgIC4uLnRoaXMuX2NoaWxkcmVuLnNsaWNlKGluZGV4KQogICAgICBdOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZCk7CiAgICAgIGluZGV4ID0gdGhpcy5fY2hpbGRyZW4ubGVuZ3RoIC0gMTsKICAgIH0KICAgIHRoaXMuZW1pdCgiY2hpbGQtYWRkZWQiLCBjaGlsZCwgaW5kZXgpOwogICAgdGhpcy5ub3RpZnkoImNoaWxkcmVuIik7CiAgfQogIGhhc0NoaWxkKGNoaWxkKSB7CiAgICByZXR1cm4gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChjaCkgPT4gY2ggPT09IGNoaWxkKSA+IC0xOwogIH0KICByZW1vdmVDaGlsZChjaGlsZCkgewogICAgY29uc3QgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5maW5kSW5kZXgoKGkpID0+IGkgPT09IGNoaWxkKTsKICAgIHRoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwgMSk7CiAgICB0aGlzLmVtaXQoImNoaWxkLXJlbW92ZWQiLCBjaGlsZCwgaW5kZXgpOwogICAgdGhpcy5ub3RpZnkoImNoaWxkcmVuIik7CiAgfQogIGNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaykgewogICAgY29uc3QgaWQgPSBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spOwogICAgdGhpcy5jb25uZWN0aW9uSWRzLmFkZChpZCk7CiAgICByZXR1cm4gaWQ7CiAgfQogIGRpc2Nvbm5lY3QoaWQpIHsKICAgIHN1cGVyLmRpc2Nvbm5lY3QoaWQpOwogICAgdGhpcy5jb25uZWN0aW9uSWRzLmRlbGV0ZShpZCk7CiAgfQogIGRlc3Ryb3koKSB7CiAgICB0aGlzLmVtaXQoImRlc3Ryb3kiKTsKICAgIGZvciAoY29uc3QgaWQgb2YgdGhpcy5jb25uZWN0aW9uSWRzLnZhbHVlcygpKSB7CiAgICAgIHN1cGVyLmRpc2Nvbm5lY3QoaWQpOwogICAgfQogIH0KfTsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRm9yLnRzCmZ1bmN0aW9uIEZvcih7CiAgZWFjaCwKICBjaGlsZHJlbjogbWtDaGlsZCwKICBjbGVhbnVwLAogIGlkID0gKGl0ZW0pID0+IGl0ZW0KfSkgewogIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKCk7CiAgY29uc3QgbWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTsKICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudCgpOwogIGZ1bmN0aW9uIHJlbW92ZTIoeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleF0sIHNjb3BlIH0pIHsKICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gImZ1bmN0aW9uIikgewogICAgICBjbGVhbnVwKGNoaWxkLCBpdGVtLCBpbmRleC5nZXQoKSk7CiAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHsKICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKTsKICAgIH0KICAgIHNjb3BlLmRpc3Bvc2UoKTsKICB9CiAgZnVuY3Rpb24gY2FsbGJhY2soaXRhcmVhYmxlKSB7CiAgICBjb25zdCBpdGVtcyA9IFsuLi5pdGFyZWFibGVdOwogICAgY29uc3QgaWRzID0gaXRlbXMubWFwKGlkKTsKICAgIGNvbnN0IGlkU2V0ID0gbmV3IFNldChpZHMpOwogICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbWFwLmVudHJpZXMoKSkgewogICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZCh2YWx1ZS5jaGlsZCk7CiAgICAgIGlmICghaWRTZXQuaGFzKGtleSkpIHsKICAgICAgICByZW1vdmUyKHZhbHVlKTsKICAgICAgICBtYXAuZGVsZXRlKGtleSk7CiAgICAgIH0KICAgIH0KICAgIGl0ZW1zLm1hcCgoaXRlbSwgaSkgPT4gewogICAgICBjb25zdCBrZXkgPSBpZHNbaV07CiAgICAgIGlmIChtYXAuaGFzKGtleSkpIHsKICAgICAgICBjb25zdCB7CiAgICAgICAgICBpbmRleDogWywgc2V0SW5kZXhdLAogICAgICAgICAgY2hpbGQKICAgICAgICB9ID0gbWFwLmdldChrZXkpOwogICAgICAgIHNldEluZGV4KGkpOwogICAgICAgIGlmIChmcmFnbWVudC5oYXNDaGlsZChjaGlsZCkpIHsKICAgICAgICAgIGNvbnNvbGUud2FybihgZHVwbGljYXRlIGtleXMgZm91bmQ6ICR7a2V5fWApOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gY3JlYXRlU3RhdGUoaSk7CiAgICAgICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKTsKICAgICAgICBjb25zdCBjaGlsZCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKGl0ZW0sIGluZGV4KSk7CiAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSk7CiAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2hpbGQpOwogICAgICB9CiAgICB9KTsKICB9CiAgY29uc3QgZGlzcG9zZSA9IGVhY2guc3Vic2NyaWJlKCgpID0+IHsKICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpOwogIH0pOwogIGNhbGxiYWNrKGVhY2guZ2V0KCkpOwogIG9uQ2xlYW51cCgoKSA9PiB7CiAgICBkaXNwb3NlKCk7CiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIG1hcC52YWx1ZXMoKSkgewogICAgICByZW1vdmUyKHZhbHVlKTsKICAgIH0KICAgIG1hcC5jbGVhcigpOwogIH0pOwogIHJldHVybiBmcmFnbWVudDsKfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9XaXRoLnRzCmZ1bmN0aW9uIFdpdGgoewogIHZhbHVlLAogIGNoaWxkcmVuOiBta0NoaWxkLAogIGNsZWFudXAKfSkgewogIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKCk7CiAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQoKTsKICBsZXQgc2NvcGU7CiAgZnVuY3Rpb24gY2FsbGJhY2sodikgewogICAgZm9yIChjb25zdCBjaGlsZCBvZiBmcmFnbWVudC5jaGlsZHJlbikgewogICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZChjaGlsZCk7CiAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gImZ1bmN0aW9uIikgewogICAgICAgIGNsZWFudXAoY2hpbGQpOwogICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHsKICAgICAgICBlbnYuZGVmYXVsdENsZWFudXAoY2hpbGQpOwogICAgICB9CiAgICAgIGlmIChzY29wZSkgc2NvcGUuZGlzcG9zZSgpOwogICAgfQogICAgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKTsKICAgIGNvbnN0IGNoID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQodikpOwogICAgaWYgKGNoICE9PSAiIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHZvaWQgMCkgewogICAgICBmcmFnbWVudC5hZGRDaGlsZChjaCk7CiAgICB9CiAgfQogIGNvbnN0IGRpc3Bvc2UgPSB2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gewogICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpOwogIH0pOwogIGNhbGxiYWNrKHZhbHVlLmdldCgpKTsKICBvbkNsZWFudXAoKCkgPT4gewogICAgc2NvcGUuZGlzcG9zZSgpOwogICAgZGlzcG9zZSgpOwogIH0pOwogIHJldHVybiBmcmFnbWVudDsKfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9UaGlzLnRzCmZ1bmN0aW9uIFRoaXMoewogIHRoaXM6IHNlbGYsCiAgY2hpbGRyZW4sCiAgJHR5cGUsCiAgLi4ucHJvcHMKfSkgewogIGNvbnN0IGNsZWFudXAgPSBuZXcgQXJyYXkoKTsKICBpZiAoJHR5cGUpIHNldFR5cGUoc2VsZiwgJHR5cGUpOwogIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkgewogICAgaWYgKGtleSA9PT0gImNzcyIpIHsKICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHsKICAgICAgICBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKTsKICAgICAgICBjbGVhbnVwLnB1c2godmFsdWUuc3Vic2NyaWJlKCgpID0+IGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpKSk7CiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAic3RyaW5nIikgewogICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpOwogICAgICB9CiAgICB9IGVsc2UgaWYgKGtleSA9PT0gImNsYXNzIikgewogICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3NvcikgewogICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZS5nZXQoKSk7CiAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUuZ2V0KCkpKSk7CiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAic3RyaW5nIikgewogICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSk7CiAgICAgIH0KICAgIH0gZWxzZSBpZiAoa2V5LnN0YXJ0c1dpdGgoIm9uIikpIHsKICAgICAgY29uc3QgaWQgPSBrZXkuc3RhcnRzV2l0aCgib25Ob3RpZnkiKSA/IHNlbGYuY29ubmVjdChgbm90aWZ5Ojoke2tlYmFiaWZ5KGtleS5zbGljZSg4KSl9YCwgdmFsdWUpIDogc2VsZi5jb25uZWN0KGtlYmFiaWZ5KGtleS5zbGljZSgyKSksIHZhbHVlKTsKICAgICAgY2xlYW51cC5wdXNoKCgpID0+IHNlbGYuZGlzY29ubmVjdChpZCkpOwogICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7CiAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlLmdldCgpKTsKICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpKTsKICAgIH0gZWxzZSB7CiAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlKTsKICAgIH0KICB9CiAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7CiAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkcmVuKSB7CiAgICAgIGlmIChjaCAhPT0gIiIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB2b2lkIDApIHsKICAgICAgICBlbnYuYWRkQ2hpbGQoc2VsZiwgY2gsIC0xKTsKICAgICAgfQogICAgfQogIH0gZWxzZSB7CiAgICBjb25zdCBjaCA9IGNoaWxkcmVuOwogICAgaWYgKGNoICE9PSAiIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHZvaWQgMCkgewogICAgICBlbnYuYWRkQ2hpbGQoc2VsZiwgY2gsIC0xKTsKICAgIH0KICB9CiAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkgewogICAgb25DbGVhbnVwKCgpID0+IGNsZWFudXAuZm9yRWFjaCgoY2IpID0+IGNiKCkpKTsKICB9CiAgcmV0dXJuIHNlbGY7Cn0KCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3RpbWUudHMKaW1wb3J0IEFzdGFsSU8yIGZyb20gImdpOi8vQXN0YWxJTyI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9wcm9jZXNzLnRzCmltcG9ydCBBc3RhbElPIGZyb20gImdpOi8vQXN0YWxJTyI7CnZhciBQcm9jZXNzID0gQXN0YWxJTy5Qcm9jZXNzOwpmdW5jdGlvbiBleGVjKGNtZCkgewogIHJldHVybiBBcnJheS5pc0FycmF5KGNtZCkgPyBBc3RhbElPLlByb2Nlc3MuZXhlY3YoY21kKSA6IEFzdGFsSU8uUHJvY2Vzcy5leGVjKGNtZCk7Cn0KZnVuY3Rpb24gZXhlY0FzeW5jKGNtZCkgewogIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICBpZiAoQXJyYXkuaXNBcnJheShjbWQpKSB7CiAgICAgIEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jdihjbWQsIChfLCByZXMpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShBc3RhbElPLlByb2Nlc3MuZXhlY19hc3luY3ZfZmluaXNoKHJlcykpOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBBc3RhbElPLlByb2Nlc3MuZXhlY19hc3luYyhjbWQsIChfLCByZXMpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShBc3RhbElPLlByb2Nlc3MuZXhlY19maW5pc2gocmVzKSk7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9KTsKfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvdGltZS50cwp2YXIgVGltZSA9IEFzdGFsSU8yLlRpbWU7CmZ1bmN0aW9uIGludGVydmFsKGludGVydmFsMiwgY2FsbGJhY2spIHsKICByZXR1cm4gQXN0YWxJTzIuVGltZS5pbnRlcnZhbChpbnRlcnZhbDIsICgpID0+IHZvaWQgY2FsbGJhY2s/LigpKTsKfQpmdW5jdGlvbiBjcmVhdGVQb2xsKGluaXQsIGl2YWwsIGV4ZWNPckZuLCB0cmFuc2Zvcm0pIHsKICBsZXQgY3VycmVudFZhbHVlID0gaW5pdDsKICBsZXQgdGltZXIgPSBudWxsOwogIGNvbnN0IHN1YnNjcmliZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2spIHsKICAgIGZ1bmN0aW9uIHNldDIodmFsdWUpIHsKICAgICAgaWYgKHZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHsKICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZTsKICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICAgIH0KICAgIH0KICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7CiAgICAgIHRpbWVyID0gaW50ZXJ2YWwoaXZhbCwgKCkgPT4gewogICAgICAgIGlmICh0eXBlb2YgZXhlY09yRm4gPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKTsKICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHsKICAgICAgICAgICAgdmFsdWUudGhlbihzZXQyKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHNldDIodmFsdWUpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBleGVjQXN5bmMoZXhlY09yRm4pLnRoZW4oKHN0ZG91dCkgPT4gewogICAgICAgICAgICBzZXQyKHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiBzdGRvdXQpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjayk7CiAgICByZXR1cm4gKCkgPT4gewogICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spOwogICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkgewogICAgICAgIHRpbWVyPy5jYW5jZWwoKTsKICAgICAgICB0aW1lciA9IG51bGw7CiAgICAgIH0KICAgIH07CiAgfQogIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpOwp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2pzeC1ydW50aW1lLnRzCmltcG9ydCBHdGszIGZyb20gImdpOi8vR3RrP3ZlcnNpb249NC4wIjsKaW1wb3J0IEFzdGFsMiBmcm9tICJnaTovL0FzdGFsP3ZlcnNpb249NC4wIjsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9ndGs0L2pzeC1ydW50aW1lLnRzCmltcG9ydCBHdGsyIGZyb20gImdpOi8vR3RrP3ZlcnNpb249NC4wIjsKaW1wb3J0IEdpbzIgZnJvbSAiZ2k6Ly9HaW8/dmVyc2lvbj0yLjAiOwppbXBvcnQgR09iamVjdDQgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKdmFyIGR1bW15QnVpbGRlciA9IG5ldyBHdGsyLkJ1aWxkZXIoKTsKZnVuY3Rpb24gYWRkKHBhcmVudCwgY2hpbGQsIF8pIHsKICBpZiAoIXNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgXykpIHsKICAgIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpOwogIH0KfQpmdW5jdGlvbiBzcGVjaWFsUmVtb3ZlKF9wYXJlbnQsIF9jaGlsZCkgewogIHJldHVybiBmYWxzZTsKfQpmdW5jdGlvbiBzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIF8pIHsKICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsyLkFkanVzdG1lbnQgJiYgInNldF9hZGp1c3RtZW50IiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfYWRqdXN0bWVudCA9PT0gImZ1bmN0aW9uIikgewogICAgcGFyZW50LnNldF9hZGp1c3RtZW50KGNoaWxkKTsKICAgIHJldHVybiB0cnVlOwogIH0KICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsyLldpZGdldCAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsyLlN0YWNrICYmIGNoaWxkLm5hbWUgIT09ICIiICYmIGNoaWxkLm5hbWUgIT09IG51bGwgJiYgZ2V0VHlwZShjaGlsZCkgPT09ICJuYW1lZCIpIHsKICAgIHBhcmVudC5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpOwogICAgcmV0dXJuIHRydWU7CiAgfQogIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0azIuUG9wb3ZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsyLk1lbnVCdXR0b24pIHsKICAgIHBhcmVudC5zZXRfcG9wb3ZlcihjaGlsZCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR2lvMi5NZW51TW9kZWwgJiYgKHBhcmVudCBpbnN0YW5jZW9mIEd0azIuTWVudUJ1dHRvbiB8fCBwYXJlbnQgaW5zdGFuY2VvZiBHdGsyLlBvcG92ZXJNZW51KSkgewogICAgcGFyZW50LnNldF9tZW51X21vZGVsKGNoaWxkKTsKICAgIHJldHVybiB0cnVlOwogIH0KICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8yLk1lbnVJdGVtICYmIHBhcmVudCBpbnN0YW5jZW9mIEdpbzIuTWVudSkgewogIH0KICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsyLldpbmRvdyAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsyLkFwcGxpY2F0aW9uKSB7CiAgICBwYXJlbnQuYWRkX3dpbmRvdyhjaGlsZCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMi5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azIuVGV4dFZpZXcpIHsKICAgIHBhcmVudC5zZXRfYnVmZmVyKGNoaWxkKTsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KZnVuY3Rpb24gcmVtb3ZlKHBhcmVudCwgY2hpbGQpIHsKICBpZiAoc3BlY2lhbFJlbW92ZShwYXJlbnQsIGNoaWxkKSkgcmV0dXJuOwogIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsyLldpZGdldCAmJiBjaGlsZCBpbnN0YW5jZW9mIEd0azIuRXZlbnRDb250cm9sbGVyKSB7CiAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKTsKICB9CiAgaWYgKCJzZXRfY2hpbGQiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9jaGlsZCA9PSAiZnVuY3Rpb24iKSB7CiAgICByZXR1cm4gcGFyZW50LnNldF9jaGlsZChudWxsKTsKICB9CiAgaWYgKCJyZW1vdmUiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnJlbW92ZSA9PSAiZnVuY3Rpb24iKSB7CiAgICByZXR1cm4gcGFyZW50LnJlbW92ZShjaGlsZCk7CiAgfQogIHRocm93IEVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2hpbGR9IGZyb20gJHtwYXJlbnR9YCk7Cn0KdmFyIHsgYWRkQ2hpbGQsIGludHJpbnNpY0VsZW1lbnRzIH0gPSBjb25maWd1ZSh7CiAgc2V0Q3NzKG9iamVjdCwgY3NzKSB7CiAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsyLldpZGdldCkpIHsKICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjc3Mgb24gJHtvYmplY3R9YCkpOwogICAgfQogICAgY29uc3QgY3R4ID0gb2JqZWN0LmdldF9zdHlsZV9jb250ZXh0KCk7CiAgICBsZXQgcHJvdmlkZXI7CiAgICBjb25zdCBzZXR0ZXIgPSAoY3NzMikgPT4gewogICAgICBpZiAoIWNzczIuaW5jbHVkZXMoInsiKSB8fCAhY3NzMi5pbmNsdWRlcygifSIpKSB7CiAgICAgICAgY3NzMiA9IGAqIHsgJHtjc3MyfSB9YDsKICAgICAgfQogICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpOwogICAgICBwcm92aWRlciA9IG5ldyBHdGsyLkNzc1Byb3ZpZGVyKCk7CiAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzMik7CiAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0azIuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUik7CiAgICB9OwogICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7CiAgICAgIHNldHRlcihjc3MuZ2V0KCkpOwogICAgICBjb25zdCBkaXNwb3NlID0gY3NzLnN1YnNjcmliZSgoKSA9PiBzZXR0ZXIoY3NzLmdldCgpKSk7CiAgICAgIG9uQ2xlYW51cChkaXNwb3NlKTsKICAgIH0gZWxzZSB7CiAgICAgIHNldHRlcihjc3MpOwogICAgfQogIH0sCiAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHsKICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0azIuV2lkZ2V0KSkgewogICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSk7CiAgICB9CiAgICBpZiAoY2xhc3NOYW1lIGluc3RhbmNlb2YgQWNjZXNzb3IpIHsKICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xzKy8pOwogICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZSgKICAgICAgICAoKSA9PiBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXHMrLykKICAgICAgKTsKICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpOwogICAgfSBlbHNlIHsKICAgICAgb2JqZWN0LnNldF9jc3NfY2xhc3NlcyhjbGFzc05hbWUuc3BsaXQoL1xzKy8pKTsKICAgIH0KICB9LAogIGFkZENoaWxkKHBhcmVudCwgY2hpbGQsIGluZGV4ID0gLTEpIHsKICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdDQuT2JqZWN0KSkgewogICAgICBjaGlsZCA9IEd0azIuTGFiZWwubmV3KFN0cmluZyhjaGlsZCkpOwogICAgfQogICAgaWYgKHNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpKSByZXR1cm47CiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHsKICAgICAgcGFyZW50LmFkZENoaWxkKGNoaWxkKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0azIuQnVpbGRhYmxlKSB7CiAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7CiAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZC5jaGlsZHJlbikgewogICAgICAgICAgYWRkKHBhcmVudCwgY2gsIGluZGV4KTsKICAgICAgICB9CiAgICAgICAgY2hpbGQuY29ubmVjdCgiY2hpbGQtYWRkZWQiLCAoXywgY2gsIGluZGV4MikgPT4gewogICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0NC5PYmplY3QpKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgYWRkICR7Y2h9IHRvICR7cGFyZW50fWApKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQogICAgICAgICAgYWRkQ2hpbGQocGFyZW50LCBjaCwgaW5kZXgyKTsKICAgICAgICB9KTsKICAgICAgICBjaGlsZC5jb25uZWN0KCJjaGlsZC1yZW1vdmVkIiwgKF8sIGNoKSA9PiB7CiAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3Q0Lk9iamVjdCkpIHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIHJlbW92ZShwYXJlbnQsIGNoKTsKICAgICAgICB9KTsKICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2hpbGQuZGVzdHJveSgpKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgYWRkKHBhcmVudCwgY2hpbGQsIGluZGV4KTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBhZGQgJHtjaGlsZH0gdG8gJHtwYXJlbnR9YCk7CiAgfQp9KTsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvanN4LXJ1bnRpbWUudHMKT2JqZWN0LmFzc2lnbihpbnRyaW5zaWNFbGVtZW50cywgewogIGJveDogR3RrMy5Cb3gsCiAgYnV0dG9uOiBHdGszLkJ1dHRvbiwKICBjZW50ZXJib3g6IEd0azMuQ2VudGVyQm94LAogIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsCiAgZHJhd2luZ2FyZWE6IEd0azMuRHJhd2luZ0FyZWEsCiAgZW50cnk6IEd0azMuRW50cnksCiAgaW1hZ2U6IEd0azMuSW1hZ2UsCiAgbGFiZWw6IEd0azMuTGFiZWwsCiAgbGV2ZWxiYXI6IEd0azMuTGV2ZWxCYXIsCiAgbWVudWJ1dHRvbjogR3RrMy5NZW51QnV0dG9uLAogIG92ZXJsYXk6IEd0azMuT3ZlcmxheSwKICBwb3BvdmVyOiBHdGszLlBvcG92ZXIsCiAgcmV2ZWFsZXI6IEd0azMuUmV2ZWFsZXIsCiAgc2Nyb2xsZWR3aW5kb3c6IEd0azMuU2Nyb2xsZWRXaW5kb3csCiAgc2xpZGVyOiBBc3RhbDIuU2xpZGVyLAogIHN0YWNrOiBHdGszLlN0YWNrLAogIHN3aXRjaDogR3RrMy5Td2l0Y2gsCiAgdG9nZ2xlYnV0dG9uOiBHdGszLlRvZ2dsZUJ1dHRvbiwKICB3aW5kb3c6IEFzdGFsMi5XaW5kb3cKfSk7CgovLyBtb2R1bGVzL1N5c3RlbU1vbml0b3IudHN4CnZhciBwb2xsVGltZSA9IDNlMzsKdmFyIFN5c3RlbU1vbml0b3JDbGFzcyA9IGNsYXNzIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHRoaXMuYmF0dGVyeSA9IEFzdGFsQmF0dGVyeS5nZXRfZGVmYXVsdCgpOwogICAgdGhpcy5iYXR0ZXJ5SWNvbiA9IGNyZWF0ZUJpbmRpbmcodGhpcy5iYXR0ZXJ5LCAiYmF0dGVyeUljb25OYW1lIik7CiAgICB0aGlzLmJhdHRlcnlQZXJjZW50YWdlID0gY3JlYXRlQmluZGluZyh0aGlzLmJhdHRlcnksICJwZXJjZW50YWdlIik7CiAgICB0aGlzLmJhdHRlcnlDaGFyZ2luZyA9IGNyZWF0ZUJpbmRpbmcodGhpcy5iYXR0ZXJ5LCAiY2hhcmdpbmciKTsKICAgIHRoaXMuYmF0dGVyeUNyaXRpY2FsID0gY3JlYXRlQ29tcHV0ZWQoW3RoaXMuYmF0dGVyeVBlcmNlbnRhZ2UsIHRoaXMuYmF0dGVyeUNoYXJnaW5nXSwgKHAsIGMpID0+IFsiQmF0dGVyeSIsIHAgPD0gMC4zICYmICFjID8gIkJhdHRlcnlDcml0aWNhbCIgOiAiQmF0dGVyeU5vcm1hbCJdKTsKICAgIHRoaXMuYmF0dGVyeUxpZmVMYWJlbCA9IHRoaXMuYmF0dGVyeUNoYXJnaW5nLmFzKChjKSA9PiBjID8gYENhcnJlZ2FuZG86ICR7Zm9ybWF0VGltZVZlcmJvc2UodGhpcy5iYXR0ZXJ5LnRpbWVfdG9fZnVsbCl9IHJlc3RhbnRlKHMpYCA6IGBEZXNjYXJyZWdhbmRvOiAke2Zvcm1hdFRpbWVWZXJib3NlKHRoaXMuYmF0dGVyeS50aW1lX3RvX2VtcHR5KX0gcmVzdGFudGUocylgKTsKICAgIHRoaXMuY3B1U291cmNlID0gbmV3IEdUb3AuZ2xpYnRvcF9jcHUoKTsKICAgIHRoaXMubWVtU291cmNlID0gbmV3IEdUb3AuZ2xpYnRvcF9tZW0oKTsKICAgIHRoaXMuY3B1RGF0YSA9IHsgcHJldjogeyB1c2VyOiAwLCBzeXM6IDAsIHRvdGFsOiAwIH0sIGRpZmY6IHsgdXNlcjogMCwgc3lzOiAwLCB0b3RhbDogMCB9IH07CiAgICB0aGlzLl9tZXRyaWNzID0gY3JlYXRlUG9sbCh7IGNwdTogMCwgbWVtOiAwIH0sIHBvbGxUaW1lLCAoKSA9PiB7CiAgICAgIHRyeSB7CiAgICAgICAgR1RvcC5nbGlidG9wX2dldF9jcHUodGhpcy5jcHVTb3VyY2UpOwogICAgICAgIEdUb3AuZ2xpYnRvcF9nZXRfbWVtKHRoaXMubWVtU291cmNlKTsKICAgICAgICBjb25zdCBjcHUgPSB0aGlzLmNwdVNvdXJjZTsKICAgICAgICBjb25zdCBwcmV2ID0gdGhpcy5jcHVEYXRhLnByZXY7CiAgICAgICAgdGhpcy5jcHVEYXRhLmRpZmYgPSB7CiAgICAgICAgICB1c2VyOiBjcHUudXNlciAtIHByZXYudXNlciwKICAgICAgICAgIHN5czogY3B1LnN5cyAtIHByZXYuc3lzLAogICAgICAgICAgdG90YWw6IGNwdS50b3RhbCAtIHByZXYudG90YWwKICAgICAgICB9OwogICAgICAgIHRoaXMuY3B1RGF0YS5wcmV2ID0gewogICAgICAgICAgdXNlcjogY3B1LnVzZXIsCiAgICAgICAgICBzeXM6IGNwdS5zeXMsCiAgICAgICAgICB0b3RhbDogY3B1LnRvdGFsCiAgICAgICAgfTsKICAgICAgICBjb25zdCBjcHVEaWZmID0gdGhpcy5jcHVEYXRhLmRpZmY7CiAgICAgICAgY29uc3QgY3B1UGVyY2VudCA9IGNwdURpZmYudG90YWwgPiAwID8gTWF0aC5yb3VuZCgoY3B1RGlmZi51c2VyICsgY3B1RGlmZi5zeXMpIC8gY3B1RGlmZi50b3RhbCAqIDEwMCkgOiAwOwogICAgICAgIGNvbnN0IG1lbVBlcmNlbnQgPSB0aGlzLm1lbVNvdXJjZS50b3RhbCA+IDAgPyBNYXRoLnJvdW5kKHRoaXMubWVtU291cmNlLnVzZXIgLyB0aGlzLm1lbVNvdXJjZS50b3RhbCAqIDEwMCkgOiAwOwogICAgICAgIHJldHVybiB7IGNwdTogTWF0aC5taW4oMTAwLCBjcHVQZXJjZW50KSwgbWVtOiBNYXRoLm1pbigxMDAsIG1lbVBlcmNlbnQpIH07CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS53YXJuKCJFcnJvIGFvIG9idGVyIG1ceEU5dHJpY2FzIGRvIHNpc3RlbWE6IiwgZXJyb3IpOwogICAgICAgIHJldHVybiB7IGNwdTogMCwgbWVtOiAwIH07CiAgICAgIH0KICAgIH0pOwogIH0KICBnZXQgU3lzdGVtTW9uaXRvcigpIHsKICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjc3NDbGFzc2VzOiBbIlN5c3RlbU1vbml0b3IiXSwgY2hpbGRyZW46IFsKICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY3NzQ2xhc3NlczogWyJDcHVVc2FnZSJdLCBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIkljb24iXSwgbGFiZWw6ICJcdUVDMTkiIH0pLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIkxhYmVsIl0sIGxhYmVsOiB0aGlzLl9tZXRyaWNzLmFzKChtKSA9PiBgJHttLmNwdX0lYCksIHdpZHRoQ2hhcnM6IDQgfSkKICAgICAgXSB9KSwKICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY3NzQ2xhc3NlczogWyJNZW1vcnlVc2FnZSJdLCBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIkljb24iXSwgbGFiZWw6ICJcdXtGMDYxQX0iIH0pLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIkxhYmVsIl0sIGxhYmVsOiB0aGlzLl9tZXRyaWNzLmFzKChtKSA9PiBgJHttLm1lbX0lYCksIHdpZHRoQ2hhcnM6IDQgfSkKICAgICAgXSB9KSwKICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY3NzQ2xhc3NlczogdGhpcy5iYXR0ZXJ5Q3JpdGljYWwsIHRvb2x0aXBUZXh0OiB0aGlzLmJhdHRlcnlMaWZlTGFiZWwsIGNoaWxkcmVuOiBbCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgiaW1hZ2UiLCB7IGNzc0NsYXNzZXM6IFsiQmF0dGVyeUljb24iXSwgaWNvbk5hbWU6IHRoaXMuYmF0dGVyeUljb24gfSksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGNzc0NsYXNzZXM6IFsiQmF0dGVyeVVzYWdlTGFiZWwiXSwgbGFiZWw6IHRoaXMuYmF0dGVyeVBlcmNlbnRhZ2UuYXMoKHApID0+IGAke01hdGgucm91bmQoTWF0aC5taW4oMSwgcCkgKiAxMDApID8/IDB9JWApIH0pCiAgICAgIF0gfSkKICAgIF0gfSk7CiAgfQp9Owp2YXIgc3lzdGVtTW9uaXRvciA9IG5ldyBTeXN0ZW1Nb25pdG9yQ2xhc3MoKTsKdmFyIFN5c3RlbU1vbml0b3JfZGVmYXVsdCA9IHN5c3RlbU1vbml0b3I7CgovLyBtb2R1bGVzL1N5c3RlbVRyYXkudHN4CmltcG9ydCBBc3RhbFRyYXkgZnJvbSAiZ2k6Ly9Bc3RhbFRyYXk/dmVyc2lvbj0wLjEiOwp2YXIgU3lzdGVtVHJheUNsYXNzID0gY2xhc3MgewogIGNvbnN0cnVjdG9yKCkgewogICAgdGhpcy5zZXR1cFRyYXlJdGVtID0gKGJ0biwgaXRlbSkgPT4gewogICAgICBidG4ubWVudU1vZGVsID0gaXRlbS5tZW51TW9kZWw7CiAgICAgIGJ0bi5pbnNlcnRfYWN0aW9uX2dyb3VwKCJkYnVzbWVudSIsIGl0ZW0uYWN0aW9uR3JvdXApOwogICAgICBjb25zdCBhZ0lkID0gaXRlbS5jb25uZWN0KCJub3RpZnk6OmFjdGlvbi1ncm91cCIsICgpID0+IHsKICAgICAgICBidG4uaW5zZXJ0X2FjdGlvbl9ncm91cCgiZGJ1c21lbnUiLCBpdGVtLmFjdGlvbkdyb3VwKTsKICAgICAgfSk7CiAgICAgIGNvbnN0IG1tSWQgPSBpdGVtLmNvbm5lY3QoIm5vdGlmeTo6bWVudS1tb2RlbCIsICgpID0+IHsKICAgICAgICBidG4uc2V0X21lbnVfbW9kZWwoaXRlbS5tZW51TW9kZWwpOwogICAgICB9KTsKICAgICAgb25DbGVhbnVwKCgpID0+IHsKICAgICAgICBpdGVtLmRpc2Nvbm5lY3QoYWdJZCk7CiAgICAgICAgaXRlbS5kaXNjb25uZWN0KG1tSWQpOwogICAgICB9KTsKICAgIH07CiAgICB0aGlzLmRlZmF1bHQgPSBBc3RhbFRyYXkuZ2V0X2RlZmF1bHQoKTsKICAgIHRoaXMuaXRlbXNCaW5kaW5nID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsICJpdGVtcyIpOwogIH0KICBUcmF5SXRlbSh7IGl0ZW0gfSkgewogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICJtZW51YnV0dG9uIiwKICAgICAgewogICAgICAgIGNzc0NsYXNzZXM6IFsiVHJheUl0ZW0iXSwKICAgICAgICB0b29sdGlwTWFya3VwOiBjcmVhdGVCaW5kaW5nKGl0ZW0sICJ0b29sdGlwTWFya3VwIiksCiAgICAgICAgJDogKHNlbGYpID0+IHRoaXMuc2V0dXBUcmF5SXRlbShzZWxmLCBpdGVtKSwKICAgICAgICBoYWxpZ246IEd0ay5BbGlnbi5DRU5URVIsCiAgICAgICAgdmFsaWduOiBHdGsuQWxpZ24uQ0VOVEVSLAogICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJpbWFnZSIsIHsgZ2ljb246IGNyZWF0ZUJpbmRpbmcoaXRlbSwgImdpY29uIikgfSkKICAgICAgfQogICAgKTsKICB9CiAgZ2V0IFN5c3RlbVRyYXkoKSB7CiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjc3NDbGFzc2VzOiBbIlN5c3RlbVRyYXkiXSwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goRm9yLCB7IGVhY2g6IHRoaXMuaXRlbXNCaW5kaW5nLCBjaGlsZHJlbjogKGl0ZW0pID0+IHRoaXMuVHJheUl0ZW0oeyBpdGVtIH0pIH0pIH0pOwogIH0KfTsKdmFyIHN5c3RlbVRyYXkgPSBuZXcgU3lzdGVtVHJheUNsYXNzKCk7CnZhciBTeXN0ZW1UcmF5X2RlZmF1bHQgPSBzeXN0ZW1UcmF5OwoKLy8gbW9kdWxlcy9NZWRpYS50c3gKaW1wb3J0IEFzdGFsTXByaXMgZnJvbSAiZ2k6Ly9Bc3RhbE1wcmlzP3ZlcnNpb249MC4xIjsKdmFyIFBsYXllckJ1dHRvbkljb25zID0gewogIHBsYXlpbmc6ICJtZWRpYS1wbGF5YmFjay1zdGFydC1zeW1ib2xpYyIsCiAgcGF1c2VkOiAibWVkaWEtcGxheWJhY2stcGF1c2Utc3ltYm9saWMiLAogIHN0b3BwZWQ6ICJtZWRpYS1wbGF5YmFjay1zdG9wLXN5bWJvbGljIiwKICBuZXh0OiAibWVkaWEtc2tpcC1mb3J3YXJkLXN5bWJvbGljIiwKICBwcmV2aW91czogIm1lZGlhLXNraXAtYmFja3dhcmQtc3ltYm9saWMiCn07CnZhciBNZWRpYUNsYXNzID0gY2xhc3MgewogIGNvbnN0cnVjdG9yKCkgewogICAgdGhpcy5tcHJpcyA9IEFzdGFsTXByaXMuZ2V0X2RlZmF1bHQoKTsKICAgIHRoaXMuX2FjdGl2ZVBsYXllckRhdGEgPSBjcmVhdGVCaW5kaW5nKHRoaXMubXByaXMsICJwbGF5ZXJzIikuYXMoCiAgICAgIChwbGF5ZXJzKSA9PiB7CiAgICAgICAgbGV0IHBsYXlpbmcgPSBudWxsOwogICAgICAgIGxldCBwYXVzZWQgPSBudWxsOwogICAgICAgIGxldCBmaW5hbCA9IG51bGw7CiAgICAgICAgZm9yIChjb25zdCBwbGF5ZXIgb2YgcGxheWVycykgewogICAgICAgICAgY29uc3Qgc3RhdHVzID0gcGxheWVyLmdldF9wbGF5YmFja19zdGF0dXMoKTsKICAgICAgICAgIGlmIChzdGF0dXMgPT09IEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMuUExBWUlORykgewogICAgICAgICAgICBwbGF5aW5nID0gcGxheWVyOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0gZWxzZSBpZiAoc3RhdHVzID09PSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBBVVNFRCkgewogICAgICAgICAgICBwYXVzZWQgPSBwbGF5ZXI7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGZpbmFsID0gcGxheWluZyB8fCBwYXVzZWQ7CiAgICAgICAgaWYgKGZpbmFsICE9PSBudWxsKSB7CiAgICAgICAgICBjb25zdCBzdGF0dXMgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAicGxheWJhY2tTdGF0dXMiKTsKICAgICAgICAgIGNvbnN0IGNhbkdvTmV4dCA9IGNyZWF0ZUJpbmRpbmcoZmluYWwsICJjYW5Hb05leHQiKTsKICAgICAgICAgIGNvbnN0IGNhbkdvUHJldmlvdXMgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAiY2FuR29QcmV2aW91cyIpOwogICAgICAgICAgY29uc3QgY2FuUGF1c2UgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAiY2FuUGF1c2UiKTsKICAgICAgICAgIGNvbnN0IGNhblBsYXkgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAiY2FuUGxheSIpOwogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWN0aXZlOiB0cnVlLAogICAgICAgICAgICB0aXRsZTogY3JlYXRlQmluZGluZyhmaW5hbCwgInRpdGxlIiksCiAgICAgICAgICAgIGFydGlzdDogY3JlYXRlQmluZGluZyhmaW5hbCwgImFydGlzdCIpLAogICAgICAgICAgICBhbGJ1bTogY3JlYXRlQmluZGluZyhmaW5hbCwgImFsYnVtIiksCiAgICAgICAgICAgIHN0YXR1c0ljb246IHN0YXR1cy5hcygoc3QpID0+IHRoaXMuZ2V0UGxheWVyU3RhdHVzSWNvbihzdCA9PT0gQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HID8gInBhdXNlZCIgOiAicGxheWluZyIpKSwKICAgICAgICAgICAgc3RhdHVzVGV4dDogc3RhdHVzLmFzKChzdCkgPT4gdGhpcy5nZXRQbGF5ZXJTdGF0dXMoc3QpKSwKICAgICAgICAgICAgbmV4dDogKCkgPT4gewogICAgICAgICAgICAgIGlmIChjYW5Hb05leHQuZ2V0KCkpIGZpbmFsLm5leHQoKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcHJldmlvdXM6ICgpID0+IHsKICAgICAgICAgICAgICBpZiAoY2FuR29QcmV2aW91cy5nZXQoKSkgZmluYWwucHJldmlvdXMoKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGxheVBhdXNlOiAoKSA9PiB7CiAgICAgICAgICAgICAgaWYgKGNhblBhdXNlLmdldCgpIHx8IGNhblBsYXkuZ2V0KCkpIGZpbmFsLnBsYXlfcGF1c2UoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGFjdGl2ZTogZmFsc2UsCiAgICAgICAgICB0aXRsZTogIk5lbmh1bSBwbGF5ZXIgYXRpdm8iLAogICAgICAgICAgYXJ0aXN0OiAiIiwKICAgICAgICAgIGFsYnVtOiAiIiwKICAgICAgICAgIHN0YXR1c0ljb246IFBsYXllckJ1dHRvbkljb25zLnN0b3BwZWQsCiAgICAgICAgICBzdGF0dXNUZXh0OiB0aGlzLmdldFBsYXllclN0YXR1cyhBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlNUT1BQRUQpLAogICAgICAgICAgbmV4dDogKCkgPT4gewogICAgICAgICAgfSwKICAgICAgICAgIHByZXZpb3VzOiAoKSA9PiB7CiAgICAgICAgICB9LAogICAgICAgICAgcGxheVBhdXNlOiAoKSA9PiB7CiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgfQogICAgKTsKICB9CiAgZ2V0UGxheWVyU3RhdHVzKHN0YXR1cykgewogICAgc3dpdGNoIChzdGF0dXMpIHsKICAgICAgY2FzZSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBMQVlJTkc6CiAgICAgICAgcmV0dXJuICJUb2NhbmRvIjsKICAgICAgY2FzZSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBBVVNFRDoKICAgICAgICByZXR1cm4gIlBhdXNhZG8iOwogICAgICBkZWZhdWx0OgogICAgICAgIHJldHVybiAiTmFkYSB0b2NhbmRvIjsKICAgIH0KICB9CiAgZ2V0UGxheWVyU3RhdHVzSWNvbihzdGF0dXMpIHsKICAgIHN3aXRjaCAoc3RhdHVzKSB7CiAgICAgIGNhc2UgInByZXZpb3VzIjoKICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMucHJldmlvdXM7CiAgICAgIGNhc2UgInBsYXlpbmciOgogICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5wbGF5aW5nOwogICAgICBjYXNlICJwYXVzZWQiOgogICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5wYXVzZWQ7CiAgICAgIGNhc2UgInN0b3BwZWQiOgogICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5zdG9wcGVkOwogICAgICBjYXNlICJuZXh0IjoKICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMubmV4dDsKICAgICAgZGVmYXVsdDoKICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMuc3RvcHBlZDsKICAgIH0KICB9CiAgZ2V0IE1lZGlhKCkgewogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goImJveCIsIHsgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goV2l0aCwgeyB2YWx1ZTogdGhpcy5fYWN0aXZlUGxheWVyRGF0YSwgY2hpbGRyZW46IChwbGF5ZXIpID0+IHsKICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgIm1lbnVidXR0b24iLAogICAgICAgIHsKICAgICAgICAgIGFsd2F5c1Nob3dBcnJvdzogZmFsc2UsCiAgICAgICAgICBjc3NDbGFzc2VzOiBbIk1lZGlhIl0sCiAgICAgICAgICBzZW5zaXRpdmU6IHBsYXllci5hY3RpdmUsCiAgICAgICAgICBwb3BvdmVyOiAvKiBAX19QVVJFX18gKi8ganN4KCJwb3BvdmVyIiwgeyBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjc3NDbGFzc2VzOiBbIk1wcmlzUG9wb3ZlciJdLCBvdmVyZmxvdzogR3RrLk92ZXJmbG93LkhJRERFTiwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiTXByaXNQbGF5ZXIiXSwgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY3NzQ2xhc3NlczogWyJNZXRhZGF0YSJdLCBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMLCBjaGlsZHJlbjogWwogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIlRpdGxlIl0sIGxhYmVsOiBwbGF5ZXIudGl0bGUsIGVsbGlwc2l6ZTogMywgbWF4V2lkdGhDaGFyczogMTUsIHdpZHRoQ2hhcnM6IDMwIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIkFydGlzdCJdLCBsYWJlbDogcGxheWVyLmFydGlzdCwgZWxsaXBzaXplOiAzLCBtYXhXaWR0aENoYXJzOiAxNSwgd2lkdGhDaGFyczogMzAgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGNzc0NsYXNzZXM6IFsiQWxidW0iXSwgbGFiZWw6IHBsYXllci5hbGJ1bSwgZWxsaXBzaXplOiAzLCBtYXhXaWR0aENoYXJzOiAxNSwgd2lkdGhDaGFyczogMzAgfSkKICAgICAgICAgICAgXSB9KSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjc3NDbGFzc2VzOiBbIkxvd2VyUGFydCJdLCBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY3NzQ2xhc3NlczogWyJDb250cm9sbGVycyJdLCBoYWxpZ246IEd0ay5BbGlnbi5DRU5URVIsIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgICAgICJib3giLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzOiBbIlByZXZpb3VzIl0sCiAgICAgICAgICAgICAgICAgIHNlbnNpdGl2ZTogcGxheWVyLmFjdGl2ZSwKICAgICAgICAgICAgICAgICAgJDogKHNlbGYpID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1BSSU1BUlkgfSk7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoInByZXNzZWQiLCBwbGF5ZXIucHJldmlvdXMpOwogICAgICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoY2xpY2spOwogICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICBjbGljay5kaXNjb25uZWN0KGhhbmRsZXIpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgiaW1hZ2UiLCB7IGljb25TaXplOiBHdGsuSWNvblNpemUuTEFSR0UsIGljb25OYW1lOiBQbGF5ZXJCdXR0b25JY29ucy5wcmV2aW91cyB9KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgICAgICJib3giLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzOiBbIlBsYXlQYXVzZSJdLAogICAgICAgICAgICAgICAgICBzZW5zaXRpdmU6IHBsYXllci5hY3RpdmUsCiAgICAgICAgICAgICAgICAgICQ6IChzZWxmKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9QUklNQVJZIH0pOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRsZXIgPSBjbGljay5jb25uZWN0KCJwcmVzc2VkIiwgcGxheWVyLnBsYXlQYXVzZSk7CiAgICAgICAgICAgICAgICAgICAgc2VsZi5hZGRfY29udHJvbGxlcihjbGljayk7CiAgICAgICAgICAgICAgICAgICAgb25DbGVhbnVwKCgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcik7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJpbWFnZSIsIHsgaWNvblNpemU6IEd0ay5JY29uU2l6ZS5MQVJHRSwgaWNvbk5hbWU6IHBsYXllci5zdGF0dXNJY29uIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICAgICAgICAgImJveCIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM6IFsiTmV4dCJdLAogICAgICAgICAgICAgICAgICBzZW5zaXRpdmU6IHBsYXllci5hY3RpdmUsCiAgICAgICAgICAgICAgICAgICQ6IChzZWxmKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9QUklNQVJZIH0pOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRsZXIgPSBjbGljay5jb25uZWN0KCJwcmVzc2VkIiwgcGxheWVyLm5leHQpOwogICAgICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoY2xpY2spOwogICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICBjbGljay5kaXNjb25uZWN0KGhhbmRsZXIpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgiaW1hZ2UiLCB7IGljb25TaXplOiBHdGsuSWNvblNpemUuTEFSR0UsIGljb25OYW1lOiBQbGF5ZXJCdXR0b25JY29ucy5uZXh0IH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdIH0pIH0pCiAgICAgICAgICBdIH0pIH0pIH0pLAogICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBsYWJlbDogcGxheWVyLnN0YXR1c1RleHQsIHdpZHRoQ2hhcnM6IDEyIH0pCiAgICAgICAgfQogICAgICApOwogICAgfSB9KSB9KTsKICB9Cn07CnZhciBtZWRpYSA9IG5ldyBNZWRpYUNsYXNzKCk7CnZhciBNZWRpYV9kZWZhdWx0ID0gbWVkaWE7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2FwcC50cwppbXBvcnQgR0xpYjIgZnJvbSAiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wIjsKaW1wb3J0IEd0azQgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj00LjAiOwppbXBvcnQgQXN0YWwzIGZyb20gImdpOi8vQXN0YWw/dmVyc2lvbj00LjAiOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzCmZ1bmN0aW9uIHNuYWtlaWZ5MihzdHIpIHsKICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICIkMV8kMiIpLnJlcGxhY2VBbGwoIi0iLCAiXyIpLnRvTG93ZXJDYXNlKCk7Cn0KYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3MobW9kMiwgcGF0Y2gyKSB7CiAgcmV0dXJuIG1vZDIudGhlbigobSkgPT4gcGF0Y2gyKG0uZGVmYXVsdCkpLmNhdGNoKCgpID0+IHZvaWQgMCk7Cn0KZnVuY3Rpb24gcGF0Y2gocHJvdG8sIHByb3ApIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHsKICAgIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5Mihwcm9wKX1gXSgpOwogICAgfQogIH0pOwp9CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbEFwcHMiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4gewogIHBhdGNoKEFwcHMucHJvdG90eXBlLCAibGlzdCIpOwogIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgImtleXdvcmRzIik7CiAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCAiY2F0ZWdvcmllcyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsQmF0dGVyeSIpLCAoeyBVUG93ZXIgfSkgPT4gewogIHBhdGNoKFVQb3dlci5wcm90b3R5cGUsICJkZXZpY2VzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxCbHVldG9vdGgiKSwgKHsgQWRhcHRlciwgQmx1ZXRvb3RoLCBEZXZpY2UgfSkgPT4gewogIHBhdGNoKEFkYXB0ZXIucHJvdG90eXBlLCAidXVpZHMiKTsKICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCAiYWRhcHRlcnMiKTsKICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCAiZGV2aWNlcyIpOwogIHBhdGNoKERldmljZS5wcm90b3R5cGUsICJ1dWlkcyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsSHlwcmxhbmQiKSwgKHsgSHlwcmxhbmQ6IEh5cHJsYW5kMiwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHsKICBwYXRjaChIeXBybGFuZDIucHJvdG90eXBlLCAiYmluZHMiKTsKICBwYXRjaChIeXBybGFuZDIucHJvdG90eXBlLCAibW9uaXRvcnMiKTsKICBwYXRjaChIeXBybGFuZDIucHJvdG90eXBlLCAid29ya3NwYWNlcyIpOwogIHBhdGNoKEh5cHJsYW5kMi5wcm90b3R5cGUsICJjbGllbnRzIik7CiAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsICJhdmFpbGFibGVNb2RlcyIpOwogIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCAiYXZhaWxhYmxlX21vZGVzIik7CiAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgImNsaWVudHMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbE1wcmlzIiksICh7IE1wcmlzLCBQbGF5ZXIgfSkgPT4gewogIHBhdGNoKE1wcmlzLnByb3RvdHlwZSwgInBsYXllcnMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkX3VyaV9zY2hlbWVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgInN1cHBvcnRlZFVyaVNjaGVtZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkX21pbWVfdHlwZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkTWltZVR5cGVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgImNvbW1lbnRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxOZXR3b3JrIiksICh7IFdpZmkgfSkgPT4gewogIHBhdGNoKFdpZmkucHJvdG90eXBlLCAiYWNjZXNzX3BvaW50cyIpOwogIHBhdGNoKFdpZmkucHJvdG90eXBlLCAiYWNjZXNzUG9pbnRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxOb3RpZmQiKSwgKHsgTm90aWZkLCBOb3RpZmljYXRpb24gfSkgPT4gewogIHBhdGNoKE5vdGlmZC5wcm90b3R5cGUsICJub3RpZmljYXRpb25zIik7CiAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgImFjdGlvbnMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbFBvd2VyUHJvZmlsZXMiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7CiAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsICJhY3Rpb25zIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxXcCIpLCAoeyBXcDogV3AyLCBBdWRpbywgVmlkZW8gfSkgPT4gewogIHBhdGNoKFdwMi5wcm90b3R5cGUsICJkZXZpY2VzIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAic3RyZWFtcyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgInJlY29yZGVycyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgIm1pY3JvcGhvbmVzIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAic3BlYWtlcnMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJkZXZpY2VzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAic3RyZWFtcyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgInJlY29yZGVycyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgInNpbmtzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAic291cmNlcyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgImRldmljZXMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbFRyYXkiKSwgKHsgVHJheSB9KSA9PiB7CiAgcGF0Y2goVHJheS5wcm90b3R5cGUsICJpdGVtcyIpOwp9KTsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMKaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gImNvbnNvbGUiOwppbXBvcnQgeyBleGl0LCBwcm9ncmFtQXJncyB9IGZyb20gInN5c3RlbSI7CmltcG9ydCBJTyBmcm9tICJnaTovL0FzdGFsSU8iOwppbXBvcnQgR09iamVjdDUgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKZnVuY3Rpb24gbWtBcHAoQXBwKSB7CiAgcmV0dXJuIG5ldyBjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHsKICAgIHN0YXRpYyB7CiAgICAgIEdPYmplY3Q1LnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6ICJBc3RhbEpTIiB9LCB0aGlzKTsKICAgIH0KICAgIGV2YWwoYm9keSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IGZuID0gRnVuY3Rpb24oYHJldHVybiAoYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR7Ym9keS5pbmNsdWRlcygiOyIpID8gYm9keSA6IGByZXR1cm4gJHtib2R5fTtgfQogICAgICAgICAgICAgICAgICAgIH0pYCk7CiAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlaik7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHJlaihlcnJvcik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICAgIHZmdW5jX3NodXRkb3duKCkgewogICAgICBzdXBlci52ZnVuY19zaHV0ZG93bigpOwogICAgICB0aGlzLmRpc3Bvc2VSb290Py4oKTsKICAgIH0KICAgIHZmdW5jX3JlcXVlc3QobXNnLCBjb25uKSB7CiAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXF1ZXN0SGFuZGxlciA9PT0gImZ1bmN0aW9uIikgewogICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIobXNnLCAocmVzcG9uc2UpID0+IHsKICAgICAgICAgIElPLndyaXRlX3NvY2soY29ubiwgU3RyaW5nKHJlc3BvbnNlKSwgKF8sIHJlcykgPT4gSU8ud3JpdGVfc29ja19maW5pc2gocmVzKSk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3VwZXIudmZ1bmNfcmVxdWVzdChtc2csIGNvbm4pOwogICAgICB9CiAgICB9CiAgICBhcHBseV9jc3Moc3R5bGUsIHJlc2V0ID0gZmFsc2UpIHsKICAgICAgc3VwZXIuYXBwbHlfY3NzKHN0eWxlLCByZXNldCk7CiAgICB9CiAgICBxdWl0KGNvZGUpIHsKICAgICAgc3VwZXIucXVpdCgpOwogICAgICBleGl0KGNvZGUgPz8gMCk7CiAgICB9CiAgICBzdGFydCh7IHJlcXVlc3RIYW5kbGVyLCBjc3MsIGhvbGQsIG1haW46IG1haW4yLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfSA9IHt9KSB7CiAgICAgIGNvbnN0IGFwcCA9IHRoaXM7CiAgICAgIGNsaWVudCA/Pz0gKCkgPT4gewogICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSAiJHthcHAuaW5zdGFuY2VOYW1lfSIgYWxyZWFkeSBydW5uaW5nYCk7CiAgICAgICAgZXhpdCgxKTsKICAgICAgfTsKICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpOwogICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpOwogICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyID0gcmVxdWVzdEhhbmRsZXI7CiAgICAgIGFwcC5jb25uZWN0KCJhY3RpdmF0ZSIsICgpID0+IHsKICAgICAgICBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7CiAgICAgICAgICB0aGlzLmRpc3Bvc2VSb290ID0gZGlzcG9zZTsKICAgICAgICAgIG1haW4yPy4oLi4ucHJvZ3JhbUFyZ3MpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdHJ5IHsKICAgICAgICBhcHAuYWNxdWlyZV9zb2NrZXQoKTsKICAgICAgfSBjYXRjaCB7CiAgICAgICAgcmV0dXJuIGNsaWVudCgobXNnKSA9PiBJTy5zZW5kX3JlcXVlc3QoYXBwLmluc3RhbmNlTmFtZSwgbXNnKSwgLi4ucHJvZ3JhbUFyZ3MpOwogICAgICB9CiAgICAgIGlmIChjc3MpIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpOwogICAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpOwogICAgICBob2xkID8/PSB0cnVlOwogICAgICBpZiAoaG9sZCkgYXBwLmhvbGQoKTsKICAgICAgYXBwLnJ1bkFzeW5jKFtdKTsKICAgIH0KICB9KCk7Cn0KCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzCkd0azQuaW5pdCgpOwpHTGliMi51bnNldGVudigiTERfUFJFTE9BRCIpOwphd2FpdCBpbXBvcnQoImdpOi8vQWR3P3ZlcnNpb249MSIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMCk7CnZhciBhcHBfZGVmYXVsdCA9IG1rQXBwKEFzdGFsMy5BcHBsaWNhdGlvbik7CgovLyBzZXJ2aWNlcy9IeXBybGFuZC50cwppbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tICJnaTovL0FzdGFsSHlwcmxhbmQ/dmVyc2lvbj0wLjEiOwp2YXIgSHlwcmxhbmQgPSBjbGFzcyB7CiAgY29uc3RydWN0b3IoKSB7CiAgICB0aGlzLmRlZmF1bHQgPSBBc3RhbEh5cHJsYW5kLmdldF9kZWZhdWx0KCk7CiAgICB0aGlzLl93b3Jrc3BhY2VzID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsICJ3b3Jrc3BhY2VzIikuYXMoKHdvcmtzcGFjZXMyKSA9PiB3b3Jrc3BhY2VzMi5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZCkpOwogICAgdGhpcy5fZm9jdXNlZFdvcmtzcGFjZSA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAiZm9jdXNlZFdvcmtzcGFjZSIpOwogICAgdGhpcy5fY2xpZW50cyA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAiY2xpZW50cyIpOwogIH0KICBnZXQgd29ya3NwYWNlcygpIHsKICAgIHJldHVybiB0aGlzLl93b3Jrc3BhY2VzOwogIH0KICBnZXQgZm9jdXNlZFdvcmtzcGFjZSgpIHsKICAgIHJldHVybiB0aGlzLl9mb2N1c2VkV29ya3NwYWNlOwogIH0KICBnZXQgY2xpZW50cygpIHsKICAgIHJldHVybiB0aGlzLl9jbGllbnRzOwogIH0KICBhcmVNb25pdG9yc0VxdWFsKG1vbml0b3IsIGh5cHJNb25pdG9yKSB7CiAgICBjb25zdCBnZW9tZXRyeSA9IG1vbml0b3IuZ2V0X2dlb21ldHJ5KCk7CiAgICBpZiAoaHlwck1vbml0b3IuZ2V0X21vZGVsKCkgPT09IG1vbml0b3IuZ2V0X21vZGVsKCkgJiYgaHlwck1vbml0b3IuZ2V0X2hlaWdodCgpID09PSBnZW9tZXRyeS5oZWlnaHQgJiYgaHlwck1vbml0b3IuZ2V0X3dpZHRoKCkgPT09IGdlb21ldHJ5LndpZHRoICYmIGh5cHJNb25pdG9yLmdldF94KCkgPT09IGdlb21ldHJ5LnggJiYgaHlwck1vbml0b3IuZ2V0X3koKSA9PT0gZ2VvbWV0cnkueSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiBmYWxzZTsKICB9CiAgZ2V0SHlwcmxhbmRNb25pdG9yKG1vbml0b3IpIHsKICAgIGNvbnN0IGh5cHJsYW5kTW9uaXRvcnMgPSB0aGlzLmRlZmF1bHQuZ2V0X21vbml0b3JzKCk7CiAgICByZXR1cm4gaHlwcmxhbmRNb25pdG9ycy5maW5kKChoeXByTW9uaXRvcikgPT4gdGhpcy5hcmVNb25pdG9yc0VxdWFsKG1vbml0b3IsIGh5cHJNb25pdG9yKSkgfHwgaHlwcmxhbmRNb25pdG9yc1swXTsKICB9CiAgdmlzaWJpbGl0eUFjY2Vzc29yKG1vbml0b3IpIHsKICAgIHJldHVybiBjcmVhdGVDb21wdXRlZCgKICAgICAgWwogICAgICAgIGNyZWF0ZUJpbmRpbmcobW9uaXRvciwgImFjdGl2ZVdvcmtzcGFjZSIpLAogICAgICAgIHRoaXMuX2NsaWVudHMKICAgICAgXSwKICAgICAgKGFjdGl2ZVdvcmtzcGFjZSwgYWxsQ2xpZW50cykgPT4gewogICAgICAgIGNvbnN0IGNsaWVudHNJbkFjdGl2ZVdvcmtzcGFjZSA9IGFsbENsaWVudHMuZmlsdGVyKAogICAgICAgICAgKGNsaWVudCkgPT4gY2xpZW50LndvcmtzcGFjZS5pZCA9PT0gYWN0aXZlV29ya3NwYWNlLmlkCiAgICAgICAgKTsKICAgICAgICByZXR1cm4gY2xpZW50c0luQWN0aXZlV29ya3NwYWNlLmxlbmd0aCA9PT0gMDsKICAgICAgfQogICAgKTsKICB9Cn07CnZhciBoeXBybGFuZFNlcnZpY2UgPSBuZXcgSHlwcmxhbmQoKTsKdmFyIEh5cHJsYW5kX2RlZmF1bHQgPSBoeXBybGFuZFNlcnZpY2U7CgovLyBtb2R1bGVzL0RhdGVUaW1lLnRzeAppbXBvcnQgR0xpYjMgZnJvbSAiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wIjsKdmFyIHBvbGxUaW1lMiA9IDZlNDsKdmFyIERhdGVUaW1lQ2xhc3MgPSBjbGFzcyB7CiAgY29uc3RydWN0b3IoKSB7CiAgICB0aGlzLmZvcm1hdHRlclRpbWUgPSAiJUg6JU0iOwogICAgdGhpcy5mb3JtYXR0ZXJEYXRlID0gIkhvamUgXHhFOTogJUEsICVkIGRlICVCIGRlICVZIjsKICAgIFt0aGlzLl9pc0RUQ3Zpc2libGUsIHRoaXMuX3NldElzRFRDdmlzaWJsZV0gPSBjcmVhdGVTdGF0ZSh0cnVlKTsKICAgIHRoaXMuX2RhdGVUaW1lID0gY3JlYXRlUG9sbCh7IGRhdGU6ICIiLCB0aW1lOiAiIiB9LCBwb2xsVGltZTIsICgpID0+IHsKICAgICAgY29uc3Qgbm93ID0gR0xpYjMuRGF0ZVRpbWUubmV3X25vd19sb2NhbCgpOwogICAgICByZXR1cm4gewogICAgICAgIGRhdGU6IG5vdy5mb3JtYXQodGhpcy5mb3JtYXR0ZXJEYXRlKSwKICAgICAgICB0aW1lOiBub3cuZm9ybWF0KHRoaXMuZm9ybWF0dGVyVGltZSkKICAgICAgfTsKICAgIH0pOwogIH0KICBnZXQgaXNEVEN2aXNpYmxlKCkgewogICAgcmV0dXJuIHRoaXMuX2lzRFRDdmlzaWJsZTsKICB9CiAgc2hvdWxkRFRDQXBwZWFyKG1vbml0b3IpIHsKICAgIHJldHVybiBjcmVhdGVDb21wdXRlZCgKICAgICAgW3RoaXMuX2lzRFRDdmlzaWJsZSwgSHlwcmxhbmRfZGVmYXVsdC52aXNpYmlsaXR5QWNjZXNzb3IobW9uaXRvcildLAogICAgICAoaXNEVEN2aXNpYmxlLCB2aXNpYmlsaXR5KSA9PiBpc0RUQ3Zpc2libGUgJiYgdmlzaWJpbGl0eQogICAgKTsKICB9CiAgdG9nZ2xlSXNEVEN2aXNpYmxlKCkgewogICAgdGhpcy5fc2V0SXNEVEN2aXNpYmxlKCF0aGlzLl9pc0RUQ3Zpc2libGUuZ2V0KCkpOwogIH0KICBnZXQgVGltZSgpIHsKICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJUaW1lIl0sIGxhYmVsOiB0aGlzLl9kYXRlVGltZS5hcygodCkgPT4gYFx1RjAxNyAke3QudGltZX1gKSwgdG9vbHRpcE1hcmt1cDogdGhpcy5fZGF0ZVRpbWUuYXMoKGQpID0+IGBcdXtGMDBFRH0gJHtkLmRhdGV9YCkgfSk7CiAgfQogIGdldCBEYXRlVGltZUNhbGVuZGFyKCkgewogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiRGF0ZVRpbWVDYWxlbmRhciJdLCBjaGlsZHJlbjogWwogICAgICAvKiBAX19QVVJFX18gKi8ganN4KEd0ay5DYWxlbmRhciwgeyBjc3NDbGFzc2VzOiBbIkNhbGVuZGFyIl0gfSksCiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiRGF0ZVRpbWUiXSwgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJUaW1lIl0sIGxhYmVsOiB0aGlzLl9kYXRlVGltZS5hcygodCkgPT4gdC50aW1lKSB9KSwKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJEYXRlIl0sIGxhYmVsOiB0aGlzLl9kYXRlVGltZS5hcygoZCkgPT4gZC5kYXRlKSB9KQogICAgICBdIH0pCiAgICBdIH0pOwogIH0KfTsKdmFyIGRhdGVUaW1lID0gbmV3IERhdGVUaW1lQ2xhc3MoKTsKdmFyIERhdGVUaW1lX2RlZmF1bHQgPSBkYXRlVGltZTsKCi8vIG1vZHVsZXMvQXVkaW9Db250cm9sLnRzeAppbXBvcnQgV3AgZnJvbSAiZ2k6Ly9Bc3RhbFdwIjsKaW1wb3J0IEdMaWI0IGZyb20gImdpOi8vR0xpYj92ZXJzaW9uPTIuMCI7CnZhciBBdWRpb0NvbnRyb2xDbGFzcyA9IGNsYXNzIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHRoaXMuc3RlcCA9IDAuMDI7CiAgICB0aGlzLmRlZmF1bHQgPSBXcC5nZXRfZGVmYXVsdCgpOwogICAgdGhpcy5kZWZhdWx0U3BlYWtlciA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAiZGVmYXVsdFNwZWFrZXIiKTsKICAgIHRoaXMuZGVmYXVsdE1pY3JvcGhvbmUgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgImRlZmF1bHRNaWNyb3Bob25lIik7CiAgfQogIGhhbmRsZVNjcm9sbChlZHAsIGR5KSB7CiAgICBsZXQgbmV3Vm9sdW1lID0gZWRwLmdldF92b2x1bWUoKTsKICAgIGlmIChkeSA8IDApIG5ld1ZvbHVtZSArPSB0aGlzLnN0ZXA7CiAgICBlbHNlIG5ld1ZvbHVtZSAtPSB0aGlzLnN0ZXA7CiAgICBlZHAuc2V0X3ZvbHVtZShNYXRoLm1pbihuZXdWb2x1bWUsIDEpKTsKICB9CiAgRW5kcG9pbnQoeyBlbmRwb2ludCB9KSB7CiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChXaXRoLCB7IHZhbHVlOiBlbmRwb2ludCwgY2hpbGRyZW46IChlZHApID0+IHsKICAgICAgY29uc3QgaWNvbiA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAidm9sdW1lSWNvbiIpOwogICAgICBjb25zdCB2b2x1bWUgPSBjcmVhdGVCaW5kaW5nKGVkcCwgInZvbHVtZSIpLmFzKChhKSA9PiBgJHtNYXRoLnJvdW5kKGEgKiAxMDApfSVgKTsKICAgICAgY29uc3QgbGVmdENsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fUFJJTUFSWSB9KTsKICAgICAgY29uc3QgbGVmdEhhbmRsZXIgPSBsZWZ0Q2xpY2suY29ubmVjdCgicHJlc3NlZCIsICgpID0+IGVkcC5zZXRfbXV0ZSghZWRwLmdldF9tdXRlKCkpKTsKICAgICAgY29uc3Qgc2Nyb2xsID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwoeyBmbGFnczogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMIH0pOwogICAgICBjb25zdCBzY3JvbGxIYW5kbGVyID0gc2Nyb2xsLmNvbm5lY3QoInNjcm9sbCIsIChjb250cm9sZXIsIGR4LCBkeSkgPT4gdGhpcy5oYW5kbGVTY3JvbGwoZWRwLCBkeSkpOwogICAgICBvbkNsZWFudXAoKCkgPT4gewogICAgICAgIGxlZnRDbGljay5kaXNjb25uZWN0KGxlZnRIYW5kbGVyKTsKICAgICAgICBzY3JvbGwuZGlzY29ubmVjdChzY3JvbGxIYW5kbGVyKTsKICAgICAgfSk7CiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cygKICAgICAgICAiYm94IiwKICAgICAgICB7CiAgICAgICAgICBjc3NDbGFzc2VzOiBbIkVuZHBvaW50Il0sCiAgICAgICAgICAkOiAoc2VsZikgPT4gewogICAgICAgICAgICBzZWxmLmFkZF9jb250cm9sbGVyKGxlZnRDbGljayk7CiAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoc2Nyb2xsKTsKICAgICAgICAgIH0sCiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJpbWFnZSIsIHsgY3NzQ2xhc3NlczogWyJJY29uIl0sIGljb25OYW1lOiBpY29uIH0pLAogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJWb2x1bWUiXSwgbGFiZWw6IHZvbHVtZSwgd2lkdGhDaGFyczogNCB9KQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgKTsKICAgIH0gfSkgfSk7CiAgfQogIE1peGVyRW50cnkoeyBlbmRwb2ludCB9KSB7CiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChXaXRoLCB7IHZhbHVlOiBlbmRwb2ludCwgY2hpbGRyZW46IChlZHApID0+IHsKICAgICAgY29uc3QgaWNvbiA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAidm9sdW1lSWNvbiIpOwogICAgICBjb25zdCB2b2x1bWUgPSBjcmVhdGVCaW5kaW5nKGVkcCwgInZvbHVtZSIpOwogICAgICBjb25zdCB0b2dnbGVNdXRlQ2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9QUklNQVJZIH0pOwogICAgICBjb25zdCB0b2dnbGVNdXRlSGFuZGxlciA9IHRvZ2dsZU11dGVDbGljay5jb25uZWN0KCJwcmVzc2VkIiwgKCkgPT4gZWRwLnNldF9tdXRlKCFlZHAuZ2V0X211dGUoKSkpOwogICAgICBjb25zdCBzY3JvbGwgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbCh7IGZsYWdzOiBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsRmxhZ3MuVkVSVElDQUwgfSk7CiAgICAgIGNvbnN0IHNjcm9sbEhhbmRsZXIgPSBzY3JvbGwuY29ubmVjdCgic2Nyb2xsIiwgKGNvbnRyb2xlciwgZHgsIGR5KSA9PiB0aGlzLmhhbmRsZVNjcm9sbChlZHAsIGR5KSk7CiAgICAgIG9uQ2xlYW51cCgoKSA9PiB7CiAgICAgICAgdG9nZ2xlTXV0ZUNsaWNrLmRpc2Nvbm5lY3QodG9nZ2xlTXV0ZUhhbmRsZXIpOwogICAgICAgIHNjcm9sbC5kaXNjb25uZWN0KHNjcm9sbEhhbmRsZXIpOwogICAgICB9KTsKICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiTWl4ZXJFbnRyeSJdLCBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImltYWdlIiwgeyBjc3NDbGFzc2VzOiBbIkljb24iXSwgaWNvbk5hbWU6IGljb24sICQ6IChzZWxmKSA9PiBzZWxmLmFkZF9jb250cm9sbGVyKHRvZ2dsZU11dGVDbGljaykgfSksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgic2xpZGVyIiwgeyBjc3NDbGFzc2VzOiBbIlNsaWRlciJdLCAkOiAoc2VsZikgPT4gc2VsZi5hZGRfY29udHJvbGxlcihzY3JvbGwpLCB2YWx1ZTogdm9sdW1lLCBzdGVwOiAwLjEsIG1pbjogMCwgbWF4OiAxLCBvbkNoYW5nZVZhbHVlOiAoeyB2YWx1ZSB9KSA9PiBlZHAuc2V0X3ZvbHVtZSh2YWx1ZSkgfSkKICAgICAgXSB9KTsKICAgIH0gfSkgfSk7CiAgfQogIE1peGVyKCkgewogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goInBvcG92ZXIiLCB7IGNzc0NsYXNzZXM6IFsiTWl4ZXIiXSwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIkxhYmVsIl0sIGxhYmVsOiAiTWl4ZXIiIH0pLAogICAgICB0aGlzLk1peGVyRW50cnkoeyBlbmRwb2ludDogdGhpcy5kZWZhdWx0U3BlYWtlciB9KSwKICAgICAgdGhpcy5NaXhlckVudHJ5KHsgZW5kcG9pbnQ6IHRoaXMuZGVmYXVsdE1pY3JvcGhvbmUgfSkKICAgIF0gfSkgfSk7CiAgfQogIGdldCBBdWRpb0NvbnRyb2woKSB7CiAgICBjb25zdCBzcGF3blBhdnVjb250cm9sQ2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9TRUNPTkRBUlkgfSk7CiAgICBjb25zdCBzcGF3blBhdnVjb250cm9sSGFuZGxlciA9IHNwYXduUGF2dWNvbnRyb2xDbGljay5jb25uZWN0KCJwcmVzc2VkIiwgKCkgPT4gR0xpYjQuc3Bhd25fY29tbWFuZF9saW5lX2FzeW5jKCJwYXZ1Y29udHJvbCIpKTsKICAgIG9uQ2xlYW51cCgoKSA9PiBzcGF3blBhdnVjb250cm9sQ2xpY2suZGlzY29ubmVjdChzcGF3blBhdnVjb250cm9sSGFuZGxlcikpOwogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiQXVkaW9Db250cm9sIl0sICQ6IChzZWxmKSA9PiBzZWxmLmFkZF9jb250cm9sbGVyKHNwYXduUGF2dWNvbnRyb2xDbGljayksIGNoaWxkcmVuOiBbCiAgICAgIHRoaXMuRW5kcG9pbnQoeyBlbmRwb2ludDogdGhpcy5kZWZhdWx0U3BlYWtlciB9KSwKICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibWVudWJ1dHRvbiIsIHsgcG9wb3ZlcjogdGhpcy5NaXhlcigpLCBjaGlsZDogLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiAiXHVFQUY4IiB9KSB9KQogICAgXSB9KTsKICB9Cn07CnZhciBhdWRpb0NvbnRyb2wgPSBuZXcgQXVkaW9Db250cm9sQ2xhc3MoKTsKdmFyIEF1ZGlvQ29udHJvbF9kZWZhdWx0ID0gYXVkaW9Db250cm9sOwoKLy8gc2VydmljZXMvQW5pbWF0aW9ucy50cwp2YXIgQW5pbWF0aW9ucyA9IGNsYXNzIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIFt0aGlzLl9hbmltYXRpb25zRW5hYmxlZCwgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWRdID0gY3JlYXRlU3RhdGUodGhpcy5hbmltYXRpb25TdGF0ZSk7CiAgfQogIGdldCBhbmltYXRpb25TdGF0ZSgpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IHJlc3VsdCA9IGV4ZWMoImh5cHJjdGwgZ2V0b3B0aW9uIGFuaW1hdGlvbnM6ZW5hYmxlZCAtaiIpOwogICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKHJlc3VsdCk7CiAgICAgIHJldHVybiBwYXJzZWQuaW50ID09PSAxOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS53YXJuKCJFcnJvIGFvIHZlcmlmaWNhciBlc3RhZG8gZGFzIGFuaW1hXHhFN1x4RjVlczoiLCBlcnJvcik7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9CiAgc3luY0FuaW1hdGlvblN0YXRlKCkgewogICAgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWQodGhpcy5hbmltYXRpb25TdGF0ZSk7CiAgfQogIHRvZ2dsZUFuaW1hdGlvbnMoKSB7CiAgICBjb25zdCBuZXdTdGF0ZSA9ICF0aGlzLmFuaW1hdGlvblN0YXRlOwogICAgdHJ5IHsKICAgICAgZXhlYyhgaHlwcmN0bCBrZXl3b3JkIGFuaW1hdGlvbnM6ZW5hYmxlZCAke25ld1N0YXRlID8gMSA6IDB9YCk7CiAgICAgIGV4ZWMoYGh5cHJjdGwga2V5d29yZCBkZWNvcmF0aW9uOnNoYWRvdzplbmFibGVkICR7bmV3U3RhdGUgPyAxIDogMH1gKTsKICAgICAgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWQobmV3U3RhdGUpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcigiRXJybyBhbyBhbHRlcmFyIGFuaW1hXHhFN1x4RjVlczoiLCBlcnJvcik7CiAgICAgIHRoaXMuc3luY0FuaW1hdGlvblN0YXRlKCk7CiAgICB9CiAgfQogIGdldCBhbmltYXRpb25zRW5hYmxlZCgpIHsKICAgIHJldHVybiB0aGlzLl9hbmltYXRpb25zRW5hYmxlZDsKICB9CiAgc2V0IHNldEFuaW1hdGlvbnNFbmFibGVkKG5ld1N0YXRlKSB7CiAgICB0aGlzLl9zZXRBbmltYXRpb25zRW5hYmxlZChuZXdTdGF0ZSk7CiAgfQp9Owp2YXIgYW5pbWF0aW9uU2VydmljZSA9IG5ldyBBbmltYXRpb25zKCk7CnZhciBBbmltYXRpb25zX2RlZmF1bHQgPSBhbmltYXRpb25TZXJ2aWNlOwoKLy8gbW9kdWxlcy9DYXZhLnRzeAppbXBvcnQgR3NrIGZyb20gImdpOi8vR3NrIjsKaW1wb3J0IEFzdGFsQ2F2YSBmcm9tICJnaTovL0FzdGFsQ2F2YT92ZXJzaW9uPTAuMSI7CmltcG9ydCBHT2JqZWN0NiBmcm9tICJnaTovL0dPYmplY3QiOwp2YXIgQ2F2YUNvbmZpZyA9IHsKICBhdXRvc2VuczogdHJ1ZSwKICBiYXJzOiAyNSwKICBmcmFtZXJhdGU6IDYwLAogIGlucHV0OiBBc3RhbENhdmEuSW5wdXQuUElQRVdJUkUsCiAgbm9pc2VSZWR1Y3Rpb246IDAuNzcsCiAgc2Vuc2l0aXZpdHk6IDAuNzUsCiAgc3RlcmVvOiBmYWxzZQp9Owp2YXIgQ2F2YVdpZGdldCA9IGNsYXNzIGV4dGVuZHMgR3RrLkRyYXdpbmdBcmVhIHsKICBjb25zdHJ1Y3Rvcih2KSB7CiAgICBzdXBlcigpOwogICAgdGhpcy5zZXRfaGV4cGFuZCh0cnVlKTsKICAgIHRoaXMuc2V0X3ZleHBhbmQodHJ1ZSk7CiAgICB0aGlzLnZhbHVlc0FjY2Vzc29yID0gdi5hcygodjIpID0+IHsKICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5nZXRfYWxsb2NhdGVkX2hlaWdodCgpOwogICAgICByZXR1cm4gdjIubWFwKChpKSA9PiBoZWlnaHQgKiAoMSAtIGkpKTsKICAgIH0pOwogICAgdGhpcy51bnN1YkFjY2Vzc29yID0gdGhpcy52YWx1ZXNBY2Nlc3Nvci5zdWJzY3JpYmUoKCkgPT4gdGhpcy5xdWV1ZV9kcmF3KCkpOwogICAgb25DbGVhbnVwKCgpID0+IHRoaXMudW5zdWJBY2Nlc3NvcigpKTsKICB9CiAgdmZ1bmNfc25hcHNob3Qoc25hcHNob3QpIHsKICAgIGlmICghdGhpcy5nZXRfbWFwcGVkKCkpIHJldHVybjsKICAgIHRyeSB7CiAgICAgIGlmICghdGhpcy52aXNpYmxlKSByZXR1cm47CiAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRfYWxsb2NhdGVkX3dpZHRoKCk7CiAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuZ2V0X2FsbG9jYXRlZF9oZWlnaHQoKTsKICAgICAgaWYgKHdpZHRoIDw9IDAgfHwgaGVpZ2h0IDw9IDApIHJldHVybjsKICAgICAgY29uc3QgdmFsdWVzID0gdGhpcy52YWx1ZXNBY2Nlc3Nvci5nZXQoKTsKICAgICAgaWYgKHZhbHVlcy5sZW5ndGggPT09IDApIHJldHVybjsKICAgICAgY29uc3QgYmFyV2lkdGggPSB3aWR0aCAvICh2YWx1ZXMubGVuZ3RoIC0gMSk7CiAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5wYXJlbnQuZ2V0X2NvbG9yKCk7CiAgICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgR3NrLlBhdGhCdWlsZGVyKCk7CiAgICAgIGJ1aWxkZXIubW92ZV90bygwLCB2YWx1ZXNbMF0pOwogICAgICBjb25zdCBpbnZTaXggPSAxIC8gNjsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZXMubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgICAgY29uc3QgcDB4ID0gKGkgLSAxKSAqIGJhcldpZHRoOwogICAgICAgIGNvbnN0IHAweSA9IHZhbHVlc1tNYXRoLm1heCgwLCBpIC0gMSldOwogICAgICAgIGNvbnN0IHAxeCA9IGkgKiBiYXJXaWR0aDsKICAgICAgICBjb25zdCBwMXkgPSB2YWx1ZXNbaV07CiAgICAgICAgY29uc3QgcDJ4ID0gKGkgKyAxKSAqIGJhcldpZHRoOwogICAgICAgIGNvbnN0IHAyeSA9IHZhbHVlc1tpICsgMV07CiAgICAgICAgY29uc3QgcDN4ID0gKGkgKyAyKSAqIGJhcldpZHRoOwogICAgICAgIGNvbnN0IHAzeSA9IHZhbHVlc1tNYXRoLm1pbih2YWx1ZXMubGVuZ3RoIC0gMSwgaSArIDIpXTsKICAgICAgICBjb25zdCBjMXggPSBwMXggKyAocDJ4IC0gcDB4KSAqIGludlNpeDsKICAgICAgICBjb25zdCBjMXkgPSBwMXkgKyAocDJ5IC0gcDB5KSAqIGludlNpeDsKICAgICAgICBjb25zdCBjMnggPSBwMnggLSAocDN4IC0gcDF4KSAqIGludlNpeDsKICAgICAgICBjb25zdCBjMnkgPSBwMnkgLSAocDN5IC0gcDF5KSAqIGludlNpeDsKICAgICAgICBidWlsZGVyLmN1YmljX3RvKGMxeCwgYzF5LCBjMngsIGMyeSwgcDJ4LCBwMnkpOwogICAgICB9CiAgICAgIGJ1aWxkZXIubGluZV90byh3aWR0aCwgaGVpZ2h0KTsKICAgICAgYnVpbGRlci5saW5lX3RvKDAsIGhlaWdodCk7CiAgICAgIGJ1aWxkZXIuY2xvc2UoKTsKICAgICAgc25hcHNob3QuYXBwZW5kX2ZpbGwoYnVpbGRlci50b19wYXRoKCksIEdzay5GaWxsUnVsZS5XSU5ESU5HLCBjb2xvcik7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICBjb25zb2xlLndhcm4oIkVycm8gbm8gc25hcHNob3QgZG8gQ2F2YToiLCBlcnJvcik7CiAgICB9CiAgfQp9Owp2YXIgX2NhdmEgPSBHT2JqZWN0Ni5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiAiQ2F2YSIgfSwgQ2F2YVdpZGdldCk7CnZhciBDYXZhQ2xhc3MgPSBjbGFzcyB7CiAgY29uc3RydWN0b3IoKSB7CiAgICBbdGhpcy5fdmlzaWJpbGl0eVN0YXRlLCB0aGlzLl9zZXRWaXNpYmlsaXR5U3RhdGVdID0gY3JlYXRlU3RhdGUoMCAvKiBBTFdBWVMgKi8pOwogICAgdGhpcy5kZWZhdWx0ID0gQXN0YWxDYXZhLmdldF9kZWZhdWx0KCk7CiAgICBpZiAodGhpcy5kZWZhdWx0KSB7CiAgICAgIHRoaXMuZGVmYXVsdC5zZXRfYXV0b3NlbnMoQ2F2YUNvbmZpZy5hdXRvc2Vucyk7CiAgICAgIHRoaXMuZGVmYXVsdC5zZXRfYmFycyhDYXZhQ29uZmlnLmJhcnMpOwogICAgICB0aGlzLmRlZmF1bHQuc2V0X2ZyYW1lcmF0ZShDYXZhQ29uZmlnLmZyYW1lcmF0ZSk7CiAgICAgIHRoaXMuZGVmYXVsdC5zZXRfaW5wdXQoQ2F2YUNvbmZpZy5pbnB1dCk7CiAgICAgIHRoaXMuZGVmYXVsdC5zZXRfbm9pc2VfcmVkdWN0aW9uKENhdmFDb25maWcubm9pc2VSZWR1Y3Rpb24pOwogICAgICB0aGlzLmRlZmF1bHQuc2V0X3N0ZXJlbyhDYXZhQ29uZmlnLnN0ZXJlbyk7CiAgICAgIHRoaXMuX3ZhbHVlcyA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAidmFsdWVzIikuYXMoKHYpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgY29uc3Qgc2VucyA9IENhdmFDb25maWcuc2Vuc2l0aXZpdHk7CiAgICAgICAgICByZXR1cm4gdi5tYXAoKGkpID0+IGkgKiBzZW5zKTsKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgY29uc29sZS53YXJuKCJFcnJvIG5vIGhhbmRsZXIgZ2xvYmFsIGRvIENhdmE6IiwgZXJyb3IpOwogICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBjb25zb2xlLmVycm9yKCJOXHhFM28gZm9pIHBvc3NceEVEdmVsIGluaWNpYWxpemFyIG8gQ2F2YSIpOwogICAgICB0aGlzLl92YWx1ZXMgPSBjcmVhdGVTdGF0ZShbXSlbMF07CiAgICB9CiAgfQogIHNob3VsZENhdmFBcHBlYXIobW9uaXRvcikgewogICAgcmV0dXJuIGNyZWF0ZUNvbXB1dGVkKAogICAgICBbdGhpcy5fdmlzaWJpbGl0eVN0YXRlLCBIeXBybGFuZF9kZWZhdWx0LnZpc2liaWxpdHlBY2Nlc3Nvcihtb25pdG9yKV0sCiAgICAgICh2cywgdmEpID0+IHsKICAgICAgICBzd2l0Y2ggKHZzKSB7CiAgICAgICAgICBjYXNlIDIgLyogRElTQUJMRUQgKi86CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgIGNhc2UgMCAvKiBBTFdBWVMgKi86CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgY2FzZSAxIC8qIE5PX0NMSUVOVFMgKi86CiAgICAgICAgICAgIHJldHVybiB2YTsKICAgICAgICB9CiAgICAgIH0KICAgICk7CiAgfQogIHRvZ2dsZVZpc2liaWxpdHlTdGF0ZSgpIHsKICAgIHN3aXRjaCAodGhpcy5fdmlzaWJpbGl0eVN0YXRlLmdldCgpKSB7CiAgICAgIGNhc2UgMCAvKiBBTFdBWVMgKi86CiAgICAgICAgdGhpcy5fc2V0VmlzaWJpbGl0eVN0YXRlKDEgLyogTk9fQ0xJRU5UUyAqLyk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMSAvKiBOT19DTElFTlRTICovOgogICAgICAgIHRoaXMuX3NldFZpc2liaWxpdHlTdGF0ZSgyIC8qIERJU0FCTEVEICovKTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAyIC8qIERJU0FCTEVEICovOgogICAgICAgIHRoaXMuX3NldFZpc2liaWxpdHlTdGF0ZSgwIC8qIEFMV0FZUyAqLyk7CiAgICAgICAgYnJlYWs7CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgdGhpcy5fc2V0VmlzaWJpbGl0eVN0YXRlKDIgLyogRElTQUJMRUQgKi8pOwogICAgfQogIH0KICBnZXQgdmlzaWJpbGl0eVN0YXRlKCkgewogICAgcmV0dXJuIHRoaXMuX3Zpc2liaWxpdHlTdGF0ZTsKICB9CiAgQ2F2YShjc3NDbGFzc2VzKSB7CiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjc3NDbGFzc2VzOiBbLi4uY3NzQ2xhc3NlcywgIkNhdmEiXSwgb3ZlcmZsb3c6IEd0ay5PdmVyZmxvdy5ISURERU4sIGNoaWxkcmVuOiBuZXcgX2NhdmEodGhpcy5fdmFsdWVzKSB9KTsKICB9Cn07CnZhciBjYXZhID0gbmV3IENhdmFDbGFzcygpOwp2YXIgQ2F2YV9kZWZhdWx0ID0gY2F2YTsKCi8vIG1vZHVsZXMvV2FsbHBhcGVyU2VsZWN0b3IudHN4CmltcG9ydCBHaW8zIGZyb20gImdpOi8vR2lvP3ZlcnNpb249Mi4wIjsKaW1wb3J0IEdMaWI2IGZyb20gImdpOi8vR0xpYj92ZXJzaW9uPTIuMCI7CgovLyB1dGlscy9Td3d3LnRzCmltcG9ydCBHTGliNSBmcm9tICJnaTovL0dMaWI/dmVyc2lvbj0yLjAiOwp2YXIgU3d3dzsKKChTd3d3MikgPT4gewogIGxldCBSZXNpemU7CiAgKChSZXNpemUyKSA9PiB7CiAgICBSZXNpemUyWyJOTyJdID0gIm5vIjsKICAgIFJlc2l6ZTJbIkNST1AiXSA9ICJjcm9wIjsKICAgIFJlc2l6ZTJbIkZJVCJdID0gImZpdCI7CiAgICBSZXNpemUyWyJTVFJFVENIIl0gPSAic3RyZXRjaCI7CiAgfSkoUmVzaXplID0gU3d3dzIuUmVzaXplIHx8IChTd3d3Mi5SZXNpemUgPSB7fSkpOwogIGxldCBGaWx0ZXI7CiAgKChGaWx0ZXIyKSA9PiB7CiAgICBGaWx0ZXIyWyJORUFSRVNUIl0gPSAiTmVhcmVzdCI7CiAgICBGaWx0ZXIyWyJCSUxJTkVBUiJdID0gIkJpbGluZWFyIjsKICAgIEZpbHRlcjJbIkNBVE1VTExST00iXSA9ICJDYXRtdWxsUm9tIjsKICAgIEZpbHRlcjJbIk1JVENIRUxMIl0gPSAiTWl0Y2hlbGwiOwogICAgRmlsdGVyMlsiTEFOQ1pPUzMiXSA9ICJMYW5jem9zMyI7CiAgfSkoRmlsdGVyID0gU3d3dzIuRmlsdGVyIHx8IChTd3d3Mi5GaWx0ZXIgPSB7fSkpOwogIGxldCBUcmFuc2l0aW9uVHlwZTsKICAoKFRyYW5zaXRpb25UeXBlMikgPT4gewogICAgVHJhbnNpdGlvblR5cGUyWyJOT05FIl0gPSAibm9uZSI7CiAgICBUcmFuc2l0aW9uVHlwZTJbIlNJTVBMRSJdID0gInNpbXBsZSI7CiAgICBUcmFuc2l0aW9uVHlwZTJbIkZBREUiXSA9ICJmYWRlIjsKICAgIFRyYW5zaXRpb25UeXBlMlsiTEVGVCJdID0gImxlZnQiOwogICAgVHJhbnNpdGlvblR5cGUyWyJSSUdIVCJdID0gInJpZ2h0IjsKICAgIFRyYW5zaXRpb25UeXBlMlsiVE9QIl0gPSAidG9wIjsKICAgIFRyYW5zaXRpb25UeXBlMlsiQk9UVE9NIl0gPSAiYm90dG9tIjsKICAgIFRyYW5zaXRpb25UeXBlMlsiV0lQRSJdID0gIndpcGUiOwogICAgVHJhbnNpdGlvblR5cGUyWyJXQVZFIl0gPSAid2F2ZSI7CiAgICBUcmFuc2l0aW9uVHlwZTJbIkdST1ciXSA9ICJncm93IjsKICAgIFRyYW5zaXRpb25UeXBlMlsiQ0VOVEVSIl0gPSAiY2VudGVyIjsKICAgIFRyYW5zaXRpb25UeXBlMlsiQU5ZIl0gPSAiYW55IjsKICAgIFRyYW5zaXRpb25UeXBlMlsiUkFORE9NIl0gPSAicmFuZG9tIjsKICB9KShUcmFuc2l0aW9uVHlwZSA9IFN3d3cyLlRyYW5zaXRpb25UeXBlIHx8IChTd3d3Mi5UcmFuc2l0aW9uVHlwZSA9IHt9KSk7CiAgbGV0IFRyYW5zaXRpb25Qb3M7CiAgKChUcmFuc2l0aW9uUG9zMikgPT4gewogICAgVHJhbnNpdGlvblBvczJbIkNFTlRFUiJdID0gImNlbnRlciI7CiAgICBUcmFuc2l0aW9uUG9zMlsiVE9QIl0gPSAidG9wIjsKICAgIFRyYW5zaXRpb25Qb3MyWyJMRUZUIl0gPSAibGVmdCI7CiAgICBUcmFuc2l0aW9uUG9zMlsiUklHSFQiXSA9ICJyaWdodCI7CiAgICBUcmFuc2l0aW9uUG9zMlsiQk9UVE9NIl0gPSAiYm90dG9tIjsKICAgIFRyYW5zaXRpb25Qb3MyWyJUT1BfTEVGVCJdID0gInRvcC1sZWZ0IjsKICAgIFRyYW5zaXRpb25Qb3MyWyJUT1BfUklHSFQiXSA9ICJ0b3AtcmlnaHQiOwogICAgVHJhbnNpdGlvblBvczJbIkJPVFRPTV9MRUZUIl0gPSAiYm90dG9tLWxlZnQiOwogICAgVHJhbnNpdGlvblBvczJbIkJPVFRPTV9SSUdIVCJdID0gImJvdHRvbS1yaWdodCI7CiAgfSkoVHJhbnNpdGlvblBvcyA9IFN3d3cyLlRyYW5zaXRpb25Qb3MgfHwgKFN3d3cyLlRyYW5zaXRpb25Qb3MgPSB7fSkpOwogIGNsYXNzIE1hbmFnZXIgewogICAgY29uc3RydWN0b3IoKSB7CiAgICAgIEdMaWI1LnNwYXduX2NvbW1hbmRfbGluZV9hc3luYygic3d3dyBjbGVhciIpOwogICAgfQogICAgc2V0V2FsbHBhcGVyKHBhdGgyLCBvcHRpb25zKSB7CiAgICAgIGxldCBjb21tYW5kID0gYHN3d3cgaW1nICR7cGF0aDJ9YDsKICAgICAgaWYgKG9wdGlvbnMpIHsKICAgICAgICBpZiAob3B0aW9ucy5yZXNpemUpIGNvbW1hbmQgKz0gYCAtLXJlc2l6ZSAke29wdGlvbnMucmVzaXplfWA7CiAgICAgICAgaWYgKG9wdGlvbnMuZmlsdGVyKSBjb21tYW5kICs9IGAgLWYgJHtvcHRpb25zLmZpbHRlcn1gOwogICAgICAgIGlmIChvcHRpb25zLmludmVydFkpIGNvbW1hbmQgKz0gYCAtLWludmVydC15ICR7b3B0aW9ucy5pbnZlcnRZLnZhbHVlT2YoKX1gOwogICAgICAgIGlmIChvcHRpb25zLnRyYW5zaXRpb25BbmdsZSkgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi1hbmdsZSAke29wdGlvbnMudHJhbnNpdGlvbkFuZ2xlfWA7CiAgICAgICAgaWYgKG9wdGlvbnMudHJhbnNpdGlvbkR1cmFudGlvbikgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi1kdXJhdGlvbiAke29wdGlvbnMudHJhbnNpdGlvbkR1cmFudGlvbn1gOwogICAgICAgIGlmIChvcHRpb25zLnRyYW5zaXRpb25Qb3MpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tcG9zICR7b3B0aW9ucy50cmFuc2l0aW9uUG9zfWA7CiAgICAgICAgaWYgKG9wdGlvbnMudHJhbnNpdGlvblN0ZXApIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tc3RlcCAke29wdGlvbnMudHJhbnNpdGlvblN0ZXB9YDsKICAgICAgICBpZiAob3B0aW9ucy50cmFuc2l0aW9uVHlwZSkgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi10eXBlICR7b3B0aW9ucy50cmFuc2l0aW9uVHlwZX1gOwogICAgICAgIGlmIChvcHRpb25zLnRyYW5zaXRpb25XYXZlKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLXdhdmUgJHtvcHRpb25zLnRyYW5zaXRpb25XYXZlLnh9LCR7b3B0aW9ucy50cmFuc2l0aW9uV2F2ZS55fWA7CiAgICAgICAgaWYgKG9wdGlvbnMub3V0cHV0cykgY29tbWFuZCArPSBgIC0tb3V0cHV0cyAke29wdGlvbnMub3V0cHV0c31gOwogICAgICB9CiAgICAgIEdMaWI1LnNwYXduX2NvbW1hbmRfbGluZV9hc3luYyhjb21tYW5kKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfQogIFN3d3cyLm1hbmFnZXIgPSBuZXcgTWFuYWdlcigpOwp9KShTd3d3IHx8IChTd3d3ID0ge30pKTsKCi8vIG1vZHVsZXMvV2FsbHBhcGVyU2VsZWN0b3IudHN4CnZhciBwYXRoID0gYCR7R0xpYjYuZ2V0X2hvbWVfZGlyKCl9Ly5jb25maWcvaHlwci9jb25maWdzL3dhbGxwYXBlcnNgOwp2YXIgcG9sbFRpbWUzID0gMjRlNDsKdmFyIGltYWdlRXh0ZW5zaW9ucyA9IFsiLmpwZyIsICIuanBlZyIsICIucG5nIiwgIi5naWYiLCAiLmJtcCIsICIud2VicCIsICIuc3ZnIl07CnZhciBXYWxscGFwZXJTZWxlY3RvckNsYXNzID0gY2xhc3MgewogIGNvbnN0cnVjdG9yKCkgewogICAgW3RoaXMuaW1hZ2VzLCB0aGlzLnNldEltYWdlc10gPSBjcmVhdGVTdGF0ZShbXSk7CiAgICBbdGhpcy50aW1lckFjdGl2ZSwgdGhpcy5zZXRUaW1lckFjdGl2ZV0gPSBjcmVhdGVTdGF0ZSh0cnVlKTsKICAgIHRoaXMucG9sbGluZyA9IGNyZWF0ZVBvbGwodHJ1ZSwgcG9sbFRpbWUzLCAocHJldikgPT4gIXByZXYpOwogICAgdGhpcy5zZXRJbWFnZXModGhpcy5yZWFkSW1hZ2VGaWxlcyhwYXRoKSk7CiAgfQogIGlzSW1hZ2VGaWxlKGZpbGVuYW1lKSB7CiAgICBjb25zdCBleHRlbnNpb24gPSBmaWxlbmFtZS50b0xvd2VyQ2FzZSgpLnN1YnN0cmluZyhmaWxlbmFtZS5sYXN0SW5kZXhPZigiLiIpKTsKICAgIHJldHVybiBpbWFnZUV4dGVuc2lvbnMuaW5jbHVkZXMoZXh0ZW5zaW9uKSA/IGV4dGVuc2lvbiA6IG51bGw7CiAgfQogIHJlYWRJbWFnZUZpbGVzKGRpcmVjdG9yeVBhdGgpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IGZpbGUgPSBHaW8zLkZpbGUubmV3X2Zvcl9wYXRoKGRpcmVjdG9yeVBhdGgpOwogICAgICBpZiAoIWZpbGUucXVlcnlfZXhpc3RzKG51bGwpKSByZXR1cm4gW107CiAgICAgIGNvbnN0IGVudW1lcmF0b3IgPSBmaWxlLmVudW1lcmF0ZV9jaGlsZHJlbigic3RhbmRhcmQ6Om5hbWUsc3RhbmRhcmQ6OnR5cGUiLCBHaW8zLkZpbGVRdWVyeUluZm9GbGFncy5OT05FLCBudWxsKTsKICAgICAgY29uc3QgaW1hZ2VzID0gW107CiAgICAgIGxldCBmaWxlSW5mbzsKICAgICAgd2hpbGUgKChmaWxlSW5mbyA9IGVudW1lcmF0b3IubmV4dF9maWxlKG51bGwpKSAhPT0gbnVsbCkgewogICAgICAgIGlmIChmaWxlSW5mby5nZXRfZmlsZV90eXBlKCkgPT09IEdpbzMuRmlsZVR5cGUuUkVHVUxBUikgewogICAgICAgICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlSW5mby5nZXRfbmFtZSgpOwogICAgICAgICAgY29uc3QgZXh0ID0gdGhpcy5pc0ltYWdlRmlsZShmaWxlTmFtZSk7CiAgICAgICAgICBpZiAoZXh0KSBpbWFnZXMucHVzaChmaWxlTmFtZSk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGVudW1lcmF0b3IuY2xvc2UobnVsbCk7CiAgICAgIHJldHVybiBpbWFnZXM7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICBjb25zb2xlLmVycm9yKCJcdTI3NEMgRXJybyBHaW8gYW8gbGVyIGRpcmV0XHhGM3JpbzoiLCBkaXJlY3RvcnlQYXRoLCBlcnJvcik7CiAgICAgIHJldHVybiBbXTsKICAgIH0KICB9CiAgU2VsZWN0b3JJbmRpY2F0b3IoZ2RrbW9uaXRvcikgewogICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9QUklNQVJZIH0pOwogICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoInByZXNzZWQiLCAoKSA9PiB0aGlzLnNldFRpbWVyQWN0aXZlKCF0aGlzLnRpbWVyQWN0aXZlLmdldCgpKSk7CiAgICBjb25zdCB1bnN1YiA9IHRoaXMucG9sbGluZy5zdWJzY3JpYmUoKCkgPT4gewogICAgICBpZiAodGhpcy50aW1lckFjdGl2ZS5nZXQoKSkgewogICAgICAgIGNvbnN0IGNvbm5lY3RvciA9IGdka21vbml0b3IuZ2V0X2Nvbm5lY3RvcigpOwogICAgICAgIGlmIChjb25uZWN0b3IpIHsKICAgICAgICAgIGNvbnN0IGltZ0FycmF5ID0gdGhpcy5pbWFnZXMuZ2V0KCk7CiAgICAgICAgICBjb25zdCBpbWcgPSBpbWdBcnJheVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbWdBcnJheS5sZW5ndGgpXTsKICAgICAgICAgIFN3d3cubWFuYWdlci5zZXRXYWxscGFwZXIoYCR7cGF0aH0vJHtpbWd9YCwgeyBvdXRwdXRzOiBjb25uZWN0b3IsIHRyYW5zaXRpb25UeXBlOiBTd3d3LlRyYW5zaXRpb25UeXBlLkdST1cgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGV4ZWNBc3luYyhgbm90aWZ5LXNlbmQgIk1vbml0b3IgJHtnZGttb25pdG9yLmdldF9kZXNjcmlwdGlvbigpfSBuXHhFM28gdGVtIGNvbmVjdG9yIiAiJHtnZGttb25pdG9yLmdldF9kZXNjcmlwdGlvbigpfSBuXHhFM28gdGVtIGNvbmVjdG9yLiJgKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogICAgb25DbGVhbnVwKCgpID0+IHsKICAgICAgY2xpY2suZGlzY29ubmVjdChoYW5kbGVyKTsKICAgICAgdW5zdWIoKTsKICAgIH0pOwogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKAogICAgICAiYm94IiwKICAgICAgewogICAgICAgIGNzc0NsYXNzZXM6IFsiU2VsZWN0b3JJbmRpY2F0b3IiXSwKICAgICAgICBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMLAogICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICAgICAibGFiZWwiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgY3NzQ2xhc3NlczogWyJTdWJ0aXRsZSJdLAogICAgICAgICAgICAgIGxhYmVsOiAiU2VsZXRvciBkZSBQYXBceEU5aXMgZGUgUGFyZWRlIgogICAgICAgICAgICB9CiAgICAgICAgICApLAogICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNzc0NsYXNzZXM6IFsiT3B0aW9uIiwgIlRvZ2dsZUFjdGl2ZSJdLAogICAgICAgICAgICAgIGxhYmVsOiB0aGlzLnRpbWVyQWN0aXZlLmFzKCh0YSkgPT4gYEVzdGFkbzogJHt0YSA/ICJBdGl2byIgOiAiRGVzYXRpdmFkbyJ9YCksCiAgICAgICAgICAgICAgJDogKHNlbGYpID0+IHNlbGYuYWRkX2NvbnRyb2xsZXIoY2xpY2spCiAgICAgICAgICAgIH0KICAgICAgICAgICkKICAgICAgICBdCiAgICAgIH0KICAgICk7CiAgfQp9Owp2YXIgd2FsbHBhcGVyU2VsZWN0b3IgPSBuZXcgV2FsbHBhcGVyU2VsZWN0b3JDbGFzcygpOwp2YXIgV2FsbHBhcGVyU2VsZWN0b3JfZGVmYXVsdCA9IHdhbGxwYXBlclNlbGVjdG9yOwoKLy8gbW9kdWxlcy9Db250cm9sQ2VudGVyLnRzeAp2YXIgQ29udHJvbENlbnRlckNsYXNzID0gY2xhc3MgewogIGNvbnN0cnVjdG9yKCkgewogIH0KICBzZXR1cEJ1dHRvbihzZWxmLCBjYWxsYmFjaykgewogICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9QUklNQVJZIH0pOwogICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoInByZXNzZWQiLCBjYWxsYmFjayk7CiAgICBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKTsKICAgIG9uQ2xlYW51cCgoKSA9PiBjbGljay5kaXNjb25uZWN0KGhhbmRsZXIpKTsKICB9CiAgZm9ybWF0Q2F2YVZpc2libGl0eVRleHQoaSkgewogICAgc3dpdGNoIChpKSB7CiAgICAgIGNhc2UgMCAvKiBBTFdBWVMgKi86CiAgICAgICAgcmV0dXJuICJDYXZhIHNlbXByZSBhdGl2byI7CiAgICAgIGNhc2UgMiAvKiBESVNBQkxFRCAqLzoKICAgICAgICByZXR1cm4gIkNhdmEgZGVzYXRpdmFkbyI7CiAgICAgIGNhc2UgMSAvKiBOT19DTElFTlRTICovOgogICAgICAgIHJldHVybiAiQ2F2YSBjb25kaWNpb25hbCI7CiAgICB9CiAgfQogIGdldCBUb2dnbGVWaXNpYmxlQ29tcG9uZW50cygpIHsKICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjc3NDbGFzc2VzOiBbIlRvZ2dsZVZpc2libGVDb21wb25lbnRzIl0sIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIlN1YnRpdGxlIl0sIGxhYmVsOiAiQW5pbWFceEU3XHhGNWVzIGUgY29tcG9uZW50ZXMiIH0pLAogICAgICAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICJsYWJlbCIsCiAgICAgICAgewogICAgICAgICAgY3NzQ2xhc3NlczogWyJUb2dnbGVBbmltYXRpb25zIiwgIk9wdGlvbiJdLAogICAgICAgICAgJDogKHNlbGYpID0+IHRoaXMuc2V0dXBCdXR0b24oc2VsZiwgKCkgPT4gQW5pbWF0aW9uc19kZWZhdWx0LnRvZ2dsZUFuaW1hdGlvbnMoKSksCiAgICAgICAgICBsYWJlbDogQW5pbWF0aW9uc19kZWZhdWx0LmFuaW1hdGlvbnNFbmFibGVkLmFzKChhZSkgPT4gYWUgPyAiRGVzYXRpdmFyIGFuaW1hXHhFN1x4RjVlcyIgOiAiQXRpdmFyIGFuaW1hXHhFN1x4RjVlcyIpLAogICAgICAgICAgd2lkdGhDaGFyczogMzAKICAgICAgICB9CiAgICAgICksCiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgImxhYmVsIiwKICAgICAgICB7CiAgICAgICAgICBjc3NDbGFzc2VzOiBbIlRvZ2dsZURhdGVUaW1lQ2FsZW5kYXIiLCAiT3B0aW9uIl0sCiAgICAgICAgICAkOiAoc2VsZikgPT4gdGhpcy5zZXR1cEJ1dHRvbihzZWxmLCAoKSA9PiBEYXRlVGltZV9kZWZhdWx0LnRvZ2dsZUlzRFRDdmlzaWJsZSgpKSwKICAgICAgICAgIGxhYmVsOiBEYXRlVGltZV9kZWZhdWx0LmlzRFRDdmlzaWJsZS5hcygoaWR2KSA9PiBpZHYgPyAiT2N1bHRhciBDYWxlbmRceEUxcmlvLCBkYXRhIGUgaG9yYSIgOiAiTW9zdHJhciBDYWxlbmRceEUxcmlvLCBkYXRhIGUgaG9yYSIpLAogICAgICAgICAgd2lkdGhDaGFyczogMzAKICAgICAgICB9CiAgICAgICksCiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgImxhYmVsIiwKICAgICAgICB7CiAgICAgICAgICBjc3NDbGFzc2VzOiBbIlRvZ2dsZUNhdmEiLCAiT3B0aW9uIl0sCiAgICAgICAgICAkOiAoc2VsZikgPT4gdGhpcy5zZXR1cEJ1dHRvbihzZWxmLCAoKSA9PiBDYXZhX2RlZmF1bHQudG9nZ2xlVmlzaWJpbGl0eVN0YXRlKCkpLAogICAgICAgICAgbGFiZWw6IENhdmFfZGVmYXVsdC52aXNpYmlsaXR5U3RhdGUuYXMoKHZzKSA9PiB0aGlzLmZvcm1hdENhdmFWaXNpYmxpdHlUZXh0KHZzKSksCiAgICAgICAgICB3aWR0aENoYXJzOiAzMAogICAgICAgIH0KICAgICAgKQogICAgXSB9KTsKICB9CiAgQ29udHJvbENlbnRlclBvcG92ZXIoZ2RrbW9uaXRvcikgewogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goInBvcG92ZXIiLCB7IGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJib3giLCB7IGNzc0NsYXNzZXM6IFsiQ29udHJvbENlbnRlclBvcG92ZXIiXSwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgIHRoaXMuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMsCiAgICAgIFdhbGxwYXBlclNlbGVjdG9yX2RlZmF1bHQuU2VsZWN0b3JJbmRpY2F0b3IoZ2RrbW9uaXRvcikKICAgIF0gfSkgfSkgfSk7CiAgfQogIENvbnRyb2xDZW50ZXIoZ2RrbW9uaXRvcikgewogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goIm1lbnVidXR0b24iLCB7IGNzc0NsYXNzZXM6IFsiQ29udHJvbENlbnRlciJdLCBwb3BvdmVyOiB0aGlzLkNvbnRyb2xDZW50ZXJQb3BvdmVyKGdka21vbml0b3IpLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGNzc0NsYXNzZXM6IFsiTGFiZWwiXSwgbGFiZWw6ICJcdXtGMDhDN30iIH0pIH0pOwogIH0KfTsKdmFyIGNvbnRyb2xDZW50ZXIgPSBuZXcgQ29udHJvbENlbnRlckNsYXNzKCk7CnZhciBDb250cm9sQ2VudGVyX2RlZmF1bHQgPSBjb250cm9sQ2VudGVyOwoKLy8gbW9kdWxlcy9Xb3Jrc3BhY2VzLnRzeAp2YXIgV29ya3NwYWNlc0NsYXNzID0gY2xhc3MgewogIGNvbnN0cnVjdG9yKCkgewogICAgdGhpcy5tYXhXb3Jrc3BhY2VzID0gNTsKICB9CiAgV29ya3NwYWNlKHsgd29ya3NwYWNlLCBpc0luUG9wb3ZlciA9IGZhbHNlIH0pIHsKICAgIGNvbnN0IGNsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soKTsKICAgIGNvbnN0IGhhbmRsZXJfaWQgPSBjbGljay5jb25uZWN0KCJwcmVzc2VkIiwgKCkgPT4gewogICAgICBpZiAoSHlwcmxhbmRfZGVmYXVsdC5mb2N1c2VkV29ya3NwYWNlLmdldCgpLmdldF9pZCgpICE9PSB3b3Jrc3BhY2UuZ2V0X2lkKCkpIHdvcmtzcGFjZS5mb2N1cygpOwogICAgfSk7CiAgICBvbkNsZWFudXAoKCkgPT4gewogICAgICBpZiAoaGFuZGxlcl9pZCkgY2xpY2suZGlzY29ubmVjdChoYW5kbGVyX2lkKTsKICAgIH0pOwogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICJsYWJlbCIsCiAgICAgIHsKICAgICAgICAkOiAoc2VsZikgPT4gc2VsZi5hZGRfY29udHJvbGxlcihjbGljayksCiAgICAgICAgY3NzQ2xhc3NlczogSHlwcmxhbmRfZGVmYXVsdC5mb2N1c2VkV29ya3NwYWNlLmFzKChmb2N1c2VkKSA9PiBbIldvcmtzcGFjZSIsIHdvcmtzcGFjZS5nZXRfaWQoKSA9PT0gZm9jdXNlZC5nZXRfaWQoKSA/ICJBY3RpdmUiIDogIkluYWN0aXZlIl0pLAogICAgICAgIGxhYmVsOiBgJHt3b3Jrc3BhY2UuZ2V0X2lkKCl9YCwKICAgICAgICB3aWR0aENoYXJzOiAzLAogICAgICAgIG1heFdpZHRoQ2hhcnM6IDMsCiAgICAgICAgaGFsaWduOiBHdGsuQWxpZ24uQ0VOVEVSLAogICAgICAgIHZhbGlnbjogR3RrLkFsaWduLkNFTlRFUgogICAgICB9CiAgICApOwogIH0KICBNYWluV29ya3NwYWNlKHdvcmtzcGFjZSkgewogICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljaygpOwogICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoInByZXNzZWQiLCAoKSA9PiB7CiAgICAgIGlmICh3b3Jrc3BhY2UuZ2V0X2lkKCkgIT09IEh5cHJsYW5kX2RlZmF1bHQuZm9jdXNlZFdvcmtzcGFjZS5nZXQoKS5nZXRfaWQoKSkgd29ya3NwYWNlLmZvY3VzKCk7CiAgICB9KTsKICAgIG9uQ2xlYW51cCgoKSA9PiB7CiAgICAgIGlmIChjbGljaykgY2xpY2suZGlzY29ubmVjdChoYW5kbGVyKTsKICAgIH0pOwogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICJsYWJlbCIsCiAgICAgIHsKICAgICAgICAkOiAoc2VsZikgPT4gc2VsZi5hZGRfY29udHJvbGxlcihjbGljayksCiAgICAgICAgY3NzQ2xhc3NlczogY3JlYXRlQ29tcHV0ZWQoW0h5cHJsYW5kX2RlZmF1bHQuZm9jdXNlZFdvcmtzcGFjZSwgY3JlYXRlQmluZGluZyh3b3Jrc3BhY2UsICJpZCIpXSwgKGZvY3VzZWQsIGlkKSA9PiBbIldvcmtzcGFjZSIsIGlkID09PSBmb2N1c2VkPy5nZXRfaWQoKSA/ICJBY3RpdmUiIDogIkluYWN0aXZlIl0pLAogICAgICAgIGxhYmVsOiB3b3Jrc3BhY2UuZ2V0X2lkKCkudG9TdHJpbmcoKSwKICAgICAgICB3aWR0aENoYXJzOiAxLAogICAgICAgIG1heFdpZHRoQ2hhcnM6IDEsCiAgICAgICAgaGFsaWduOiBHdGsuQWxpZ24uQ0VOVEVSLAogICAgICAgIHZhbGlnbjogR3RrLkFsaWduLkNFTlRFUgogICAgICB9CiAgICApOwogIH0KICBXb3Jrc3BhY2VQb3BvdmVyKHsgdGhlUmVzdCB9KSB7CiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgicG9wb3ZlciIsIHsgY3NzQ2xhc3NlczogWyJXb3Jrc3BhY2VQb3BvdmVyIl0sIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KEd0ay5GbG93Qm94LCB7IG1heENoaWxkcmVuUGVyTGluZTogNCwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goRm9yLCB7IGVhY2g6IHRoZVJlc3QsIGNoaWxkcmVuOiAoaXRlbSkgPT4gdGhpcy5Xb3Jrc3BhY2UoeyB3b3Jrc3BhY2U6IGl0ZW0sIGlzSW5Qb3BvdmVyOiB0cnVlIH0pIH0pIH0pIH0pOwogIH0KICBNb3JlV29ya3NwYWNlc0J1dHRvbih7IHRoZVJlc3QgfSkgewogICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goIm1lbnVidXR0b24iLCB7IGNzc0NsYXNzZXM6IFsiTW9yZVdvcmtzcGFjZXNCdXR0b24iXSwgc2Vuc2l0aXZlOiB0aGVSZXN0LmFzKCh0cikgPT4gdHIubGVuZ3RoID4gMCksIHBvcG92ZXI6IHRoaXMuV29ya3NwYWNlUG9wb3Zlcih7IHRoZVJlc3QgfSksIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgbGFiZWw6ICJcdXtGMDU0Rn0iIH0pIH0pOwogIH0KICBXb3Jrc3BhY2VzKHsgbW9uaXRvciB9KSB7CiAgICBjb25zdCBtb25pdG9yV29ya3NwYWNlcyA9IEh5cHJsYW5kX2RlZmF1bHQud29ya3NwYWNlcy5hcygod3MpID0+IHsKICAgICAgY29uc3QgZmlsdGVyZWQgPSB3cy5maWx0ZXIoKHdvcmtzcGFjZSkgPT4gd29ya3NwYWNlLmdldF9tb25pdG9yKCkgPT09IG1vbml0b3IpOwogICAgICByZXR1cm4gewogICAgICAgIG1haW46IGZpbHRlcmVkLnNsaWNlKDAsIHRoaXMubWF4V29ya3NwYWNlcyksCiAgICAgICAgdGhlUmVzdDogZmlsdGVyZWQuc2xpY2UodGhpcy5tYXhXb3Jrc3BhY2VzKQogICAgICB9OwogICAgfSk7CiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY3NzQ2xhc3NlczogWyJXb3Jrc3BhY2VzIl0sIGNoaWxkcmVuOiBbCiAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImJveCIsIHsgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goRm9yLCB7IGVhY2g6IG1vbml0b3JXb3Jrc3BhY2VzLmFzKChtdykgPT4gbXcubWFpbiksIGNoaWxkcmVuOiAodykgPT4gdGhpcy5NYWluV29ya3NwYWNlKHcpIH0pIH0pLAogICAgICB0aGlzLk1vcmVXb3Jrc3BhY2VzQnV0dG9uKHsgdGhlUmVzdDogbW9uaXRvcldvcmtzcGFjZXMuYXMoKHsgdGhlUmVzdCB9KSA9PiB0aGVSZXN0KSB9KQogICAgXSB9KTsKICB9Cn07CnZhciB3b3Jrc3BhY2VzID0gbmV3IFdvcmtzcGFjZXNDbGFzcygpOwp2YXIgV29ya3NwYWNlc19kZWZhdWx0ID0gd29ya3NwYWNlczsKCi8vIHdpZGdldC9CYXIudHN4CmZ1bmN0aW9uIEJhcih7IGdka21vbml0b3IgfSkgewogIGNvbnN0IHsgVE9QLCBMRUZULCBSSUdIVCB9ID0gQXN0YWwuV2luZG93QW5jaG9yOwogIGNvbnN0IGh5cHJNb25pdG9yID0gSHlwcmxhbmRfZGVmYXVsdC5nZXRIeXBybGFuZE1vbml0b3IoZ2RrbW9uaXRvcik7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAid2luZG93IiwKICAgIHsKICAgICAgbmFtZXNwYWNlOiAiQmFyIiwKICAgICAgY3NzQ2xhc3NlczogWyJCYXIiXSwKICAgICAgdmlzaWJsZTogdHJ1ZSwKICAgICAgZXhjbHVzaXZpdHk6IEFzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRSwKICAgICAgbGF5ZXI6IEFzdGFsLkxheWVyLkJPVFRPTSwKICAgICAgZ2RrbW9uaXRvciwKICAgICAgYW5jaG9yOiBUT1AgfCBSSUdIVCB8IExFRlQsCiAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgJDogKHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSksCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjc3NDbGFzc2VzOiBbIkJhciJdLCBoYWxpZ246IEd0ay5BbGlnbi5GSUxMLCBob21vZ2VuZW91czogdHJ1ZSwgY2hpbGRyZW46IFsKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJib3giLCB7IGhhbGlnbjogR3RrLkFsaWduLlNUQVJULCBjaGlsZHJlbjogU3lzdGVtVHJheV9kZWZhdWx0LlN5c3RlbVRyYXkgfSksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgaGFsaWduOiBHdGsuQWxpZ24uQ0VOVEVSLCBjaGlsZHJlbjogWwogICAgICAgICAgTWVkaWFfZGVmYXVsdC5NZWRpYSwKICAgICAgICAgIFdvcmtzcGFjZXNfZGVmYXVsdC5Xb3Jrc3BhY2VzKHsgbW9uaXRvcjogaHlwck1vbml0b3IgfSkKICAgICAgICBdIH0pLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGhhbGlnbjogR3RrLkFsaWduLkVORCwgY2hpbGRyZW46IFsKICAgICAgICAgIERhdGVUaW1lX2RlZmF1bHQuVGltZSwKICAgICAgICAgIEF1ZGlvQ29udHJvbF9kZWZhdWx0LkF1ZGlvQ29udHJvbCwKICAgICAgICAgIFN5c3RlbU1vbml0b3JfZGVmYXVsdC5TeXN0ZW1Nb25pdG9yLAogICAgICAgICAgQ29udHJvbENlbnRlcl9kZWZhdWx0LkNvbnRyb2xDZW50ZXIoZ2RrbW9uaXRvcikKICAgICAgICBdIH0pCiAgICAgIF0gfSkKICAgIH0KICApOwp9CgovLyB3aWRnZXQvQ2F2YU92ZXJsYXkudHN4CmZ1bmN0aW9uIENhdmFPdmVybGF5KHsgZ2RrbW9uaXRvciB9KSB7CiAgY29uc3QgeyBMRUZULCBSSUdIVCwgQk9UVE9NIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7CiAgY29uc3QgaHlwck1vbml0b3IgPSBIeXBybGFuZF9kZWZhdWx0LmdldEh5cHJsYW5kTW9uaXRvcihnZGttb25pdG9yKTsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgKICAgICJ3aW5kb3ciLAogICAgewogICAgICBuYW1lc3BhY2U6ICJDYXZhT3ZlcmxheSIsCiAgICAgIGxheWVyOiBBc3RhbC5MYXllci5CT1RUT00sCiAgICAgIGdka21vbml0b3IsCiAgICAgIGFuY2hvcjogUklHSFQgfCBMRUZUIHwgQk9UVE9NLAogICAgICB2aXNpYmxlOiBDYXZhX2RlZmF1bHQuc2hvdWxkQ2F2YUFwcGVhcihoeXByTW9uaXRvciksCiAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgJDogKHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSksCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJib3giLCB7IGhhbGlnbjogR3RrLkFsaWduLkZJTEwsIHZhbGlnbjogR3RrLkFsaWduLkVORCwgaGVpZ2h0UmVxdWVzdDogTWF0aC5mbG9vcihnZGttb25pdG9yLmdldF9nZW9tZXRyeSgpLmhlaWdodCAqIDAuMjUpLCBjaGlsZHJlbjogQ2F2YV9kZWZhdWx0LkNhdmEoWyJDYXZhT3ZlcmxheSJdKSB9KQogICAgfQogICk7Cn0KCi8vIHdpZGdldC9EVEMudHN4CmZ1bmN0aW9uIERUQyh7IGdka21vbml0b3IgfSkgewogIGNvbnN0IHsgVE9QLCBMRUZULCBSSUdIVCwgQk9UVE9NIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7CiAgY29uc3QgaHlwck1vbml0b3IgPSBIeXBybGFuZF9kZWZhdWx0LmdldEh5cHJsYW5kTW9uaXRvcihnZGttb25pdG9yKTsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgKICAgICJ3aW5kb3ciLAogICAgewogICAgICBuYW1lc3BhY2U6ICJEVEMiLAogICAgICBsYXllcjogQXN0YWwuTGF5ZXIuQk9UVE9NLAogICAgICBnZGttb25pdG9yLAogICAgICBhbmNob3I6IFRPUCB8IFJJR0hULAogICAgICB2aXNpYmxlOiBEYXRlVGltZV9kZWZhdWx0LnNob3VsZERUQ0FwcGVhcihoeXByTW9uaXRvciksCiAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgJDogKHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSksCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJib3giLCB7IGhhbGlnbjogR3RrLkFsaWduLkVORCwgdmFsaWduOiBHdGsuQWxpZ24uU1RBUlQsIGNoaWxkcmVuOiBEYXRlVGltZV9kZWZhdWx0LkRhdGVUaW1lQ2FsZW5kYXIgfSkKICAgIH0KICApOwp9CgovLyB3aWRnZXQvQ2hlYXRzaGVldC50c3gKZnVuY3Rpb24gRW50cnkoeyBiaW5kLCBhY3Rpb24gfSkgewogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjc3NDbGFzc2VzOiBbIkVudHJ5Il0sIG92ZXJmbG93OiBHdGsuT3ZlcmZsb3cuSElEREVOLCBob21vZ2VuZW91czogdHJ1ZSwgY2hpbGRyZW46IFsKICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIkJpbmQiXSwgbGFiZWw6IGJpbmQgfSksCiAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJBY3Rpb24iXSwgbGFiZWw6IGFjdGlvbiB9KQogIF0gfSk7Cn0KZnVuY3Rpb24gQ2hlYXRzaGVldCh7IGdka21vbml0b3IgfSkgewogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgIndpbmRvdyIsCiAgICB7CiAgICAgIG5hbWU6ICJDaGVhdHNoZWV0IiwKICAgICAgbGF5ZXI6IEFzdGFsLkxheWVyLk9WRVJMQVksCiAgICAgIGdka21vbml0b3IsCiAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgJDogKHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSksCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjc3NDbGFzc2VzOiBbIkNoZWF0c2hlZXQiXSwgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJUaXRsZSJdLCBsYWJlbDogIkNoZWF0c2hlZXQiIH0pLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiSGFsZiJdLCBob21vZ2VuZW91czogdHJ1ZSwgY2hpbGRyZW46IFsKICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiU2VjdGlvbiJdLCBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMLCBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJTdWJ0aXRsZSJdLCBsYWJlbDogIkdlc3RceEUzbyBkZSBDbGllbnRlcyIgfSksCiAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChFbnRyeSwgeyBiaW5kOiAiU1VQRVIgKyBQIiwgYWN0aW9uOiAiRml4YXIgY2xpZW50ZSIgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChFbnRyeSwgeyBiaW5kOiAiU1VQRVIgKyBRIiwgYWN0aW9uOiAiRmVjaGFyIHByb2dyYW1hIiB9KSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJTVVBFUiArIFYiLCBhY3Rpb246ICJGbHV0dWFyIGEgdGVsYSIgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChFbnRyeSwgeyBiaW5kOiAiU1VQRVIgKyBGIiwgYWN0aW9uOiAiRm9yXHhFN2FyIHRlbGEgY2hlaWEiIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIlNVUEVSICsgSiIsIGFjdGlvbjogIkRpdmlkaXIgZW0gRHdpbmRsZSIgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChFbnRyeSwgeyBiaW5kOiAiU1VQRVIgKyBcdUYwNjIiLCBhY3Rpb246ICJNb3ZlciBmb2NvIHBhcmEgamFuZWxhIGFjaW1hIiB9KSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJTVVBFUiArIFx1RjA2MyIsIGFjdGlvbjogIk1vdmVyIGZvY28gcGFyYSBqYW5lbGEgYWJhaXhvIiB9KSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJTVVBFUiArIFx1RjA2MCIsIGFjdGlvbjogIk1vdmVyIGZvY28gcGFyYSBqYW5lbGEgXHhFMCBlc3F1ZXJkYSIgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChFbnRyeSwgeyBiaW5kOiAiU1VQRVIgKyBcdUYwNjEiLCBhY3Rpb246ICJNb3ZlciBmb2NvIHBhcmEgamFuZWxhIFx4RTAgZGlyZWl0YSIgfSkKICAgICAgICAgICAgXSB9KQogICAgICAgICAgXSB9KSwKICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNzc0NsYXNzZXM6IFsiU2VjdGlvbiJdLCBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMLCBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY3NzQ2xhc3NlczogWyJTdWJ0aXRsZSJdLCBsYWJlbDogIkdlc3RceEUzbyBkZSBXb3Jrc3BhY2VzIiB9KSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJDVFJMICsgU1VQRVIgKyBcdUYwNjAiLCBhY3Rpb246ICJJciBwYXJhIFdvcmtzcGFjZSBceEUwIGVzcXVlcmRhIiB9KSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJDVFJMICsgU1VQRVIgKyBcdUYwNjEiLCBhY3Rpb246ICJJciBwYXJhIFdvcmtzcGFjZSBceEUwIGRpcmVpdGEiIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIkNUUkwgKyBTSElGVCArIFNVUEVSICsgXHVGMDYwIiwgYWN0aW9uOiAiTW92ZXIgcGFyYSBXb3Jrc3BhY2UgXHhFMCBlc3F1ZXJkYSIgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChFbnRyeSwgeyBiaW5kOiAiQ1RSTCArIFNISUZUICsgU1VQRVIgKyBcdUYwNjEiLCBhY3Rpb246ICJNb3ZlciBwYXJhIFdvcmtzcGFjZSBceEUwIGRpcmVpdGEiIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIlNVUEVSICsgUyIsIGFjdGlvbjogIklyIHBhcmEgV29ya3NwYWNlIGVzcGVjaWFsIiB9KSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJTVVBFUiArIFNISUZUICsgUyIsIGFjdGlvbjogIk1vdmVyIHBhcmEgd29ya3NwYWNlIGVzcGVjaWFsIiB9KQogICAgICAgICAgICBdIH0pCiAgICAgICAgICBdIH0pCiAgICAgICAgXSB9KSwKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjc3NDbGFzc2VzOiBbIkhhbGYiXSwgaG9tb2dlbmVvdXM6IHRydWUsIGNoaWxkcmVuOiBbCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjc3NDbGFzc2VzOiBbIlNlY3Rpb24iXSwgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGNzc0NsYXNzZXM6IFsiU3VidGl0bGUiXSwgbGFiZWw6ICJQcm9ncmFtYXMgcGFkclx4RTNvIiB9KSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJTVVBFUiArIEVudGVyIiwgYWN0aW9uOiAiVGVybWluYWwiIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIlNVUEVSICsgUiIsIGFjdGlvbjogIkxhblx4RTdhZG9yIGRlIGFwbGljYXRpdm9zIiB9KSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJTVVBFUiArIEUiLCBhY3Rpb246ICJBYnJpciBHZXJlbmNpYWRvciBkZSBBcnF1aXZvcyIgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChFbnRyeSwgeyBiaW5kOiAiU1VQRVIgKyBEIiwgYWN0aW9uOiAiQWJyaXIvRmVjaGFyIERvY2siIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIlNVUEVSICsgQyIsIGFjdGlvbjogIkFicmlyL0ZlY2hhciBDaGVhdHNoZWV0IiB9KSwKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJTVVBFUiArIEVTQyIsIGFjdGlvbjogIkFicmlyL2ZlY2hhciBXbG9nb3V0IiB9KQogICAgICAgICAgICBdIH0pCiAgICAgICAgICBdIH0pLAogICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY3NzQ2xhc3NlczogWyJTZWN0aW9uIl0sIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjc3NDbGFzc2VzOiBbIlN1YnRpdGxlIl0sIGxhYmVsOiAiT3V0cm9zIiB9KSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEVudHJ5LCB7IGJpbmQ6ICJQUklOVCIsIGFjdGlvbjogIkNhcHR1cmFyIHRlbGEiIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIlNVUEVSICsgUFJJTlQiLCBhY3Rpb246ICJDYXB0dXJhciByZWdpXHhFM28iIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIlNVUEVSICsgTSIsIGFjdGlvbjogIkZlY2hhciBzZXNzXHhFM28iIH0pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRW50cnksIHsgYmluZDogIlNVUEVSICsgTCIsIGFjdGlvbjogIkJsb3F1ZWFyIGEgdGVsYSIgfSkKICAgICAgICAgICAgXSB9KQogICAgICAgICAgXSB9KQogICAgICAgIF0gfSkKICAgICAgXSB9KQogICAgfQogICk7Cn0KCi8vIGFwcC50c3gKZnVuY3Rpb24gbWFpbigpIHsKICBjb25zdCBtb25pdG9ycyA9IGNyZWF0ZUJpbmRpbmcoYXBwX2RlZmF1bHQsICJtb25pdG9ycyIpOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KEZvciwgeyBlYWNoOiBtb25pdG9ycywgY2hpbGRyZW46IChtb25pdG9yKSA9PiAvKiBAX19QVVJFX18gKi8ganN4cyhUaGlzLCB7IHRoaXM6IGFwcF9kZWZhdWx0LCBjaGlsZHJlbjogWwogICAgLyogQF9fUFVSRV9fICovIGpzeChCYXIsIHsgZ2RrbW9uaXRvcjogbW9uaXRvciB9KSwKICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goQ2F2YU92ZXJsYXksIHsgZ2RrbW9uaXRvcjogbW9uaXRvciB9KSwKICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goRFRDLCB7IGdka21vbml0b3I6IG1vbml0b3IgfSksCiAgICAvKiBAX19QVVJFX18gKi8ganN4KENoZWF0c2hlZXQsIHsgZ2RrbW9uaXRvcjogbW9uaXRvciB9KQogIF0gfSkgfSk7Cn0KYXBwX2RlZmF1bHQuc3RhcnQoeyBjc3M6IHN0eWxlc19kZWZhdWx0LCBtYWluIH0pOwovLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV3b2dJQ0oyWlhKemFXOXVJam9nTXl3S0lDQWljMjkxY21ObGN5STZJRnNpYzJGemN6b3ZhRzl0WlM5cGRHbHlieTh1WTI5dVptbG5MMkZuY3k5emRIbHNaWE12YVc1a1pYZ3VjMk56Y3lJc0lDSXVMaTh1TGk4dUxpOHVMaTkxYzNJdmMyaGhjbVV2WVdkekwycHpMMnhwWWk5bmRHczBMMmx1WkdWNExuUnpJaXdnSW0xdlpIVnNaWE12VTNsemRHVnRUVzl1YVhSdmNpNTBjM2dpTENBaWMyVnlkbWxqWlhNdlZHbHRaVVp2Y20xaGRIUmxjaTUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTkxYzNJdmMyaGhjbVV2WVdkekwycHpMMjV2WkdWZmJXOWtkV3hsY3k5bmJtbHRMMlJwYzNRdmFuTjRMMnB6ZUM1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk5MWMzSXZjMmhoY21VdllXZHpMMnB6TDI1dlpHVmZiVzlrZFd4bGN5OW5ibWx0TDJScGMzUXZhbk40TDNOMFlYUmxMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5MWRHbHNMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5cWMzZ3ZaVzUyTG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12Ym05a1pWOXRiMlIxYkdWekwyZHVhVzB2WkdsemRDOXFjM2d2YzJOdmNHVXVkSE1pTENBaUxpNHZMaTR2TGk0dkxpNHZkWE55TDNOb1lYSmxMMkZuY3k5cWN5OXViMlJsWDIxdlpIVnNaWE12WjI1cGJTOWthWE4wTDJwemVDOUdjbUZuYldWdWRDNTBjeUlzSUNJdUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyNXZaR1ZmYlc5a2RXeGxjeTluYm1sdEwyUnBjM1F2WjI1dmJXVXZjMmxuYm1Gc1ZISmhZMnRsY2k1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk5MWMzSXZjMmhoY21VdllXZHpMMnB6TDI1dlpHVmZiVzlrZFd4bGN5OW5ibWx0TDJScGMzUXZhbk40TDBadmNpNTBjeUlzSUNJdUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyNXZaR1ZmYlc5a2RXeGxjeTluYm1sdEwyUnBjM1F2YW5ONEwxZHBkR2d1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTl1YjJSbFgyMXZaSFZzWlhNdloyNXBiUzlrYVhOMEwycHplQzlVYUdsekxuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJHbGlMM1JwYldVdWRITWlMQ0FpTGk0dkxpNHZMaTR2TGk0dmRYTnlMM05vWVhKbEwyRm5jeTlxY3k5c2FXSXZjSEp2WTJWemN5NTBjeUlzSUNJdUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyeHBZaTluZEdzMEwycHplQzF5ZFc1MGFXMWxMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5bmRHczBMMnB6ZUMxeWRXNTBhVzFsTG5Seklpd2dJbTF2WkhWc1pYTXZVM2x6ZEdWdFZISmhlUzUwYzNnaUxDQWliVzlrZFd4bGN5OU5aV1JwWVM1MGMzZ2lMQ0FpTGk0dkxpNHZMaTR2TGk0dmRYTnlMM05vWVhKbEwyRm5jeTlxY3k5c2FXSXZaM1JyTkM5aGNIQXVkSE1pTENBaUxpNHZMaTR2TGk0dkxpNHZkWE55TDNOb1lYSmxMMkZuY3k5cWN5OXNhV0l2YjNabGNuSnBaR1Z6TG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12YkdsaUwxOWhjSEF1ZEhNaUxDQWljMlZ5ZG1salpYTXZTSGx3Y214aGJtUXVkSE1pTENBaWJXOWtkV3hsY3k5RVlYUmxWR2x0WlM1MGMzZ2lMQ0FpYlc5a2RXeGxjeTlCZFdScGIwTnZiblJ5YjJ3dWRITjRJaXdnSW5ObGNuWnBZMlZ6TDBGdWFXMWhkR2x2Ym5NdWRITWlMQ0FpYlc5a2RXeGxjeTlEWVhaaExuUnplQ0lzSUNKdGIyUjFiR1Z6TDFkaGJHeHdZWEJsY2xObGJHVmpkRzl5TG5SemVDSXNJQ0oxZEdsc2N5OVRkM2QzTG5Seklpd2dJbTF2WkhWc1pYTXZRMjl1ZEhKdmJFTmxiblJsY2k1MGMzZ2lMQ0FpYlc5a2RXeGxjeTlYYjNKcmMzQmhZMlZ6TG5SemVDSXNJQ0ozYVdSblpYUXZRbUZ5TG5SemVDSXNJQ0ozYVdSblpYUXZRMkYyWVU5MlpYSnNZWGt1ZEhONElpd2dJbmRwWkdkbGRDOUVWRU11ZEhONElpd2dJbmRwWkdkbGRDOURhR1ZoZEhOb1pXVjBMblJ6ZUNJc0lDSmhjSEF1ZEhONElsMHNDaUFnSW5OdmRYSmpaWE5EYjI1MFpXNTBJam9nV3lJdktpQkRZWFJ3Y0hWalkybHVJRzF2WTJoaElHTnZiRzl5Y3lBcUwxeHVMa052Ym5SeWIyeERaVzUwWlhJc0lDNU5aV1JwWVN3Z0xsZHZjbXR6Y0dGalpYTXNJQzVCZFdScGIwTnZiblJ5YjJ3c0lDNURjSFZWYzJGblpTd2dMa0poZEhSbGNua3NJQzVOWlcxdmNubFZjMkZuWlN3Z0xsUnBiV1VnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUJ1YjI1bE8xeHVJQ0J3WVdSa2FXNW5PaUEwY0hnN1hHNGdJRzFoY21kcGJqb2dNbkI0TzF4dUlDQmliM0prWlhJNklHNXZibVU3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURFNGNIZzdYRzU5WEc0dVEyOXVkSEp2YkVObGJuUmxjaUFxTENBdVRXVmthV0VnS2l3Z0xsZHZjbXR6Y0dGalpYTWdLaXdnTGtGMVpHbHZRMjl1ZEhKdmJDQXFMQ0F1UTNCMVZYTmhaMlVnS2l3Z0xrSmhkSFJsY25rZ0tpd2dMazFsYlc5eWVWVnpZV2RsSUNvc0lDNVVhVzFsSUNvZ2UxeHVJQ0J0WVhKbmFXNDZJREJ3ZUNBeWNIZzdYRzU5WEc1Y2JpNVVjbUY1U1hSbGJTd2dMbGR2Y210emNHRmpaWE1nTGxkdmNtdHpjR0ZqWlN3Z0xsZHZjbXR6Y0dGalpYTWdMazF2Y21WWGIzSnJjM0JoWTJWelFuVjBkRzl1TENBdVRXbDRaWElnTGsxcGVHVnlSVzUwY25rZ0xrbGpiMjRnZTF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBeE1EQWxPMXh1SUNCdGFXNHRkMmxrZEdnNklESTBjSGc3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREkwY0hnN1hHNTlYRzVjYmk1TmFYaGxjaUF1VFdsNFpYSkZiblJ5ZVNBdVUyeHBaR1Z5SUh0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01qQndlRHRjYmlBZ2JXbHVMWGRwWkhSb09pQXhOakJ3ZUR0Y2JpQWdiV2x1TFdobGFXZG9kRG9nTWpCd2VEdGNibjFjYmx4dUxrUmhkR1ZVYVcxbFEyRnNaVzVrWVhJZ2UxeHVJQ0J0WVhKbmFXNDZJREV3Y0hnN1hHNGdJR0p2Y21SbGNqb2dibTl1WlR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01UQndlRHRjYmlBZ2NHRmtaR2x1WnpvZ05YQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySmhLREUzTENBeE55d2dNamNzSURBdU5pazdYRzU5WEc0dVJHRjBaVlJwYldWRFlXeGxibVJoY2lBdVEyRnNaVzVrWVhJZ2FHVmhaR1Z5SUh0Y2JpQWdjR0ZrWkdsdVp6b2dOSEI0TzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBMmNIZzdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKblltRW9ORGtzSURVd0xDQTJPQ3dnTUM0NEtUdGNibjFjYmk1RVlYUmxWR2x0WlVOaGJHVnVaR0Z5SUM1RFlXeGxibVJoY2lCaWRYUjBiMjRnZTF4dUlDQnRZWEpuYVc0NklESndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRBd0pUdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TTNNZ1pXRnpaVHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dibTl1WlR0Y2JuMWNiaTVFWVhSbFZHbHRaVU5oYkdWdVpHRnlJQzVEWVd4bGJtUmhjaUJpZFhSMGIyNGdLaUI3WEc0Z0lHTnZiRzl5T2lBalkyUmtObVkwTzF4dWZWeHVMa1JoZEdWVWFXMWxRMkZzWlc1a1lYSWdMa05oYkdWdVpHRnlJR0oxZEhSdmJqcG9iM1psY2lCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNNNE9XSTBabUU3WEc1OVhHNHVSR0YwWlZScGJXVkRZV3hsYm1SaGNpQXVRMkZzWlc1a1lYSWdZblYwZEc5dU9taHZkbVZ5SUNvZ2UxeHVJQ0JqYjJ4dmNqb2dJekZsTVdVeVpUdGNibjFjYmk1RVlYUmxWR2x0WlVOaGJHVnVaR0Z5SUM1RFlXeGxibVJoY2lCbmNtbGtJSHRjYmlBZ2NHRmtaR2x1WnpvZ05uQjRPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUE0Y0hnN1hHNGdJRzFoY21kcGJqb2dOSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0RZNUxDQTNNU3dnT1RBc0lEQXVOeWs3WEc1OVhHNHVSR0YwWlZScGJXVkRZV3hsYm1SaGNpQXVRMkZzWlc1a1lYSWdaM0pwWkNCc1lXSmxiQzV2ZEdobGNpMXRiMjUwYUNCN1hHNGdJRzl3WVdOcGRIazZJREF1TlR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nYm05dVpUdGNiaUFnWTI5c2IzSTZJQ05qWkdRMlpqUTdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpOeklHVmhjMlU3WEc1OVhHNHVSR0YwWlZScGJXVkRZV3hsYm1SaGNpQXVRMkZzWlc1a1lYSWdaM0pwWkNCc1lXSmxiQzV2ZEdobGNpMXRiMjUwYURwb2IzWmxjaUI3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ05tTldVd1pHTTdYRzRnSUdOdmJHOXlPaUFqTVdVeFpUSmxPMXh1ZlZ4dUxrUmhkR1ZVYVcxbFEyRnNaVzVrWVhJZ0xrTmhiR1Z1WkdGeUlHZHlhV1FnYkdGaVpXd3VaR0Y1TFc1MWJXSmxjaUI3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURFd01DVTdYRzRnSUcxaGNtZHBiam9nTVhCNE8xeHVJQ0JpWVdOclozSnZkVzVrT2lCdWIyNWxPMXh1SUNCamIyeHZjam9nSTJOa1pEWm1ORHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU0zTWdaV0Z6WlR0Y2JuMWNiaTVFWVhSbFZHbHRaVU5oYkdWdVpHRnlJQzVEWVd4bGJtUmhjaUJuY21sa0lHeGhZbVZzTG1SaGVTMXVkVzFpWlhJNmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqWTJKaE5tWTNPMXh1SUNCamIyeHZjam9nSXpGbE1XVXlaVHRjYm4xY2JpNUVZWFJsVkdsdFpVTmhiR1Z1WkdGeUlDNURZV3hsYm1SaGNpQm5jbWxrSUd4aFltVnNMblJ2WkdGNUlIdGNiaUFnWTI5c2IzSTZJQ014WlRGbE1tVTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNOaU5HSmxabVU3WEc1OVhHNHVSR0YwWlZScGJXVkRZV3hsYm1SaGNpQXVSR0YwWlZScGJXVWdlMXh1SUNCdFlYSm5hVzQ2SURWd2VEdGNibjFjYmk1RVlYUmxWR2x0WlVOaGJHVnVaR0Z5SUM1RVlYUmxWR2x0WlNBdVZHbHRaU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVFl3Y0hnN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1ZlZ4dUxrUmhkR1ZVYVcxbFEyRnNaVzVrWVhJZ0xrUmhkR1ZVYVcxbElDNUVZWFJsSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF6TW5CNE8xeHVmVnh1WEc0dVZHbHRaU0I3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVmVnh1WEc0dVRXVnRiM0o1VlhOaFoyVWdlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTUM0emN5QmxZWE5sTzF4dUlDQmlZV05yWjNKdmRXNWtPaUJ1YjI1bE8xeHVmVnh1TGsxbGJXOXllVlZ6WVdkbElDb2dlMXh1SUNCamIyeHZjam9nSTJaaFlqTTROenRjYm4xY2JpNU5aVzF2Y25sVmMyRm5aVHBvYjNabGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklDTm1ZV0l6T0RjN1hHNTlYRzR1VFdWdGIzSjVWWE5oWjJVNmFHOTJaWElnS2lCN1hHNGdJR052Ykc5eU9pQWpNV1V4WlRKbE8xeHVmVnh1TGsxbGJXOXllVlZ6WVdkbElDNUpZMjl1SUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVmVnh1WEc0dVFtRjBkR1Z5ZVNCN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklESXdjSGc3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqSTFjeUJsWVhObExXbHVMVzkxZER0Y2JuMWNibHh1TGtKaGRIUmxjbmxPYjNKdFlXd2dlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTUM0emN5QmxZWE5sTzF4dUlDQmlZV05yWjNKdmRXNWtPaUJ1YjI1bE8xeHVmVnh1TGtKaGRIUmxjbmxPYjNKdFlXd2dLaUI3WEc0Z0lHTnZiRzl5T2lBallqUmlaV1psTzF4dWZWeHVMa0poZEhSbGNubE9iM0p0WVd3NmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqWWpSaVpXWmxPMXh1ZlZ4dUxrSmhkSFJsY25sT2IzSnRZV3c2YUc5MlpYSWdLaUI3WEc0Z0lHTnZiRzl5T2lBak1URXhNVEZpTzF4dWZWeHVYRzR1UW1GMGRHVnllVU55YVhScFkyRnNJSHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU0zTWdaV0Z6WlR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nYm05dVpUdGNibjFjYmk1Q1lYUjBaWEo1UTNKcGRHbGpZV3dnS2lCN1hHNGdJR052Ykc5eU9pQWpaak00WW1FNE8xeHVmVnh1TGtKaGRIUmxjbmxEY21sMGFXTmhiRHBvYjNabGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklDTm1NemhpWVRnN1hHNTlYRzR1UW1GMGRHVnllVU55YVhScFkyRnNPbWh2ZG1WeUlDb2dlMXh1SUNCamIyeHZjam9nSXpFeE1URXhZanRjYm4xY2JseHVMa0poZEhSbGNubFFiM0J2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZzBPU3dnTlRBc0lEWTRMQ0F3TGpncE8xeHVJQ0J3WVdSa2FXNW5PaUF5Y0hnN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklERTJjSGc3WEc1OVhHNHVRbUYwZEdWeWVWQnZjRzkyWlhJZ0xsUnBkR3hsTENBdVFtRjBkR1Z5ZVZCdmNHOTJaWElnTGtKaGRIUmxjbmxNYVdabExDQXVRbUYwZEdWeWVWQnZjRzkyWlhJZ0xsUnZaMmRzWlVKMWRIUnZiaUI3WEc0Z0lHMWhjbWRwYmpvZ01uQjRPMXh1ZlZ4dUxrSmhkSFJsY25sUWIzQnZkbVZ5SUM1VWFYUnNaU0I3WEc0Z0lHTnZiRzl5T2lBalkyUmtObVkwTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNibjFjYmk1Q1lYUjBaWEo1VUc5d2IzWmxjaUF1UW1GMGRHVnllVXhwWm1VZ2UxeHVJQ0JqYjJ4dmNqb2dJMk5rWkRabU5EdGNibjFjYmk1Q1lYUjBaWEo1VUc5d2IzWmxjaUF1Vkc5bloyeGxRblYwZEc5dUlIdGNiaUFnYldGeVoybHVPaUF5Y0hnZ05IQjRPMXh1SUNCd1lXUmthVzVuT2lBeWNIZzdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREV3Y0hnN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhKblltRW9NVE0zTENBeE9EQXNJREkxTUN3Z01DNDNOU2s3WEc0Z0lHTnZiRzl5T2lCeVoySmhLRE13TENBek1Dd2dORFlzSURBdU56VXBPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTUM0emN5QmxZWE5sTzF4dWZWeHVMa0poZEhSbGNubFFiM0J2ZG1WeUlDNVViMmRuYkdWQ2RYUjBiMjQ2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0RNd0xDQXpNQ3dnTkRZc0lEQXVOelVwTzF4dUlDQmpiMnh2Y2pvZ2NtZGlZU2d4TXpjc0lERTRNQ3dnTWpVd0xDQXdMamMxS1R0Y2JuMWNibHh1TGtOd2RWVnpZV2RsSUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVNM01nWldGelpUdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2JtOXVaVHRjYm4xY2JpNURjSFZWYzJGblpTQXFJSHRjYmlBZ1kyOXNiM0k2SUNOaE5tVXpZVEU3WEc1OVhHNHVRM0IxVlhOaFoyVTZhRzkyWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lBallUWmxNMkV4TzF4dWZWeHVMa053ZFZWellXZGxPbWh2ZG1WeUlDb2dlMXh1SUNCamIyeHZjam9nSXpGbE1XVXlaVHRjYm4xY2JpNURjSFZWYzJGblpTQXVTV052YmlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTWpCd2VEdGNibjFjYmx4dUxrRjFaR2x2UTI5dWRISnZiQ0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqTnpJR1ZoYzJVN1hHNGdJR0poWTJ0bmNtOTFibVE2SUc1dmJtVTdYRzU5WEc0dVFYVmthVzlEYjI1MGNtOXNJQ29nZTF4dUlDQmpiMnh2Y2pvZ0kyTmtaRFptTkR0Y2JuMWNiaTVCZFdScGIwTnZiblJ5YjJ3NmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqT0RsaU5HWmhPMXh1ZlZ4dUxrRjFaR2x2UTI5dWRISnZiRHBvYjNabGNpQXFJSHRjYmlBZ1kyOXNiM0k2SUNNeFpURmxNbVU3WEc1OVhHNWNiaTVOYVhobGNpQjdYRzRnSUhCaFpHUnBibWM2SURad2VEdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNVFp3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNnME9Td2dOVEFzSURZNExDQXdMamdwTzF4dUlDQmliM0prWlhJNklHNXZibVU3WEc1OVhHNHVUV2w0WlhJZ0xreGhZbVZzSUh0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzRnSUdadmJuUXRjMmw2WlRvZ01qUndlRHRjYmlBZ2JXRnlaMmx1T2lBMmNIZzdYRzRnSUdOdmJHOXlPaUFqWTJSa05tWTBPMXh1ZlZ4dUxrMXBlR1Z5SUM1TmFYaGxja1Z1ZEhKNUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpRMU5EYzFZVHRjYmlBZ2NHRmtaR2x1WnpvZ01uQjRPMXh1SUNCdFlYSm5hVzQ2SURKd2VEdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhObkI0TzF4dWZWeHVMazFwZUdWeUlDNU5hWGhsY2tWdWRISjVJQzVKWTI5dUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2JtOXVaVHRjYmlBZ1kyOXNiM0k2SUNOalpHUTJaalE3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqTnpJR1ZoYzJVN1hHNTlYRzR1VFdsNFpYSWdMazFwZUdWeVJXNTBjbmtnTGtsamIyNDZhRzkyWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lBak9EbGlOR1poTzF4dUlDQmpiMnh2Y2pvZ0l6RmxNV1V5WlR0Y2JuMWNiaTVOYVhobGNpQXVUV2w0WlhKRmJuUnllU0F1VTJ4cFpHVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6VTROV0kzTUR0Y2JuMWNiaTVOYVhobGNpQXVUV2w0WlhKRmJuUnllU0F1VTJ4cFpHVnlJR2hwWjJoc2FXZG9kQ0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTTRPV0kwWm1FN1hHNTlYRzVjYmk1WGIzSnJjM0JoWTJWeklIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZzBPU3dnTlRBc0lEWTRMQ0F3TGpncE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhPSEI0TzF4dWZWeHVMbGR2Y210emNHRmpaWE1nTGxkdmNtdHpjR0ZqWlN3Z0xsZHZjbXR6Y0dGalpYTWdMazF2Y21WWGIzSnJjM0JoWTJWelFuVjBkRzl1SUh0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKblltRW9NVGNzSURFM0xDQXlOeXdnTUM0NEtUdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0J0WVhKbmFXNDZJREp3ZUR0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVNbk1nWldGelpUdGNibjFjYmk1WGIzSnJjM0JoWTJWeklDNU5iM0psVjI5eWEzTndZV05sYzBKMWRIUnZiaUI3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqTnpJR1ZoYzJVN1hHNGdJR0poWTJ0bmNtOTFibVE2SUc1dmJtVTdYRzU5WEc0dVYyOXlhM053WVdObGN5QXVUVzl5WlZkdmNtdHpjR0ZqWlhOQ2RYUjBiMjRnS2lCN1hHNGdJR052Ykc5eU9pQWpZMlJrTm1ZME8xeHVmVnh1TGxkdmNtdHpjR0ZqWlhNZ0xrMXZjbVZYYjNKcmMzQmhZMlZ6UW5WMGRHOXVPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0l6ZzVZalJtWVR0Y2JuMWNiaTVYYjNKcmMzQmhZMlZ6SUM1TmIzSmxWMjl5YTNOd1lXTmxjMEoxZEhSdmJqcG9iM1psY2lBcUlIdGNiaUFnWTI5c2IzSTZJQ014WlRGbE1tVTdYRzU5WEc0dVYyOXlhM053WVdObGN5QXVRV04wYVhabElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3hNemNzSURFNE1Dd2dNalV3TENBd0xqa3BPMXh1SUNCamIyeHZjam9nSXpFeE1URXhZanRjYm4xY2JpNVhiM0pyYzNCaFkyVnpJQzVKYm1GamRHbDJaU0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqSnpJR1ZoYzJVN1hHNTlYRzR1VjI5eWEzTndZV05sY3lBdVNXNWhZM1JwZG1VNmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0RFek55d2dNVGd3TENBeU5UQXNJREF1TmlrN1hHNGdJR052Ykc5eU9pQWpNVEV4TVRGaU8xeHVmVnh1TGxkdmNtdHpjR0ZqWlhNZ0xsZHZjbXR6Y0dGalpWQnZjRzkyWlhJZ2UxeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhObkI0TzF4dUlDQndZV1JrYVc1bk9pQTJjSGc3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISm5ZbUVvTkRrc0lEVXdMQ0EyT0N3Z01DNDVLVHRjYmlBZ2JXRnlaMmx1T2lBeWNIZzdYRzU5WEc1Y2JpNVVjbUY1U1hSbGJTQjdYRzRnSUcxaGNtZHBiam9nTW5CNE8xeHVJQ0F0WjNSckxXbGpiMjR0YzJsNlpUb2dNalJ3ZUR0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVNalZ6SUdWaGMyVTdYRzU5WEc0dVZISmhlVWwwWlcwNmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0RFek55d2dNVGd3TENBeU5UQXNJREF1T0NrN1hHNGdJR052Ykc5eU9pQWpNVEV4TVRGaU8xeHVmVnh1TGxSeVlYbEpkR1Z0T21GamRHbDJaU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISm5ZbUVvTVRNM0xDQXhPREFzSURJMU1Dd2dNQzQyS1R0Y2JpQWdZMjlzYjNJNklDTXhNVEV4TVdJN1hHNTlYRzR1VkhKaGVVbDBaVzBnY0c5d2IzWmxjaTV0Wlc1MUlIdGNiaUFnYldGeVoybHVPaUF4TUhCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTXpFek1qUTBPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF4TUhCNE8xeHVmVnh1TGxSeVlYbEpkR1Z0SUhCdmNHOTJaWEl1YldWdWRTQnRiMlJsYkdKMWRIUnZiaUI3WEc0Z0lIQmhaR1JwYm1jNklESndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTkhCNE8xeHVJQ0J0WVhKbmFXNDZJREFnTW5CNE8xeHVmVnh1TGxSeVlYbEpkR1Z0SUhCdmNHOTJaWEl1YldWdWRTQnRiMlJsYkdKMWRIUnZianBvYjNabGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklISm5ZbUVvTmprc0lEY3hMQ0E1TUN3Z01DNHlLVHRjYm4xY2JpNVVjbUY1U1hSbGJTQndiM0J2ZG1WeUxtMWxiblVnYlc5a1pXeGlkWFIwYjI0NllXTjBhWFpsSUh0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZzJPU3dnTnpFc0lEa3dMQ0F3TGpRcE8xeHVmVnh1WEc0dVRXVmthV0VnZTF4dUlDQnRZWEpuYVc0NklESndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTWpCd2VEdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TTNNZ1pXRnpaVHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dibTl1WlR0Y2JuMWNiaTVOWldScFlTQXFJSHRjYmlBZ1kyOXNiM0k2SUNOalpHUTJaalE3WEc1OVhHNHVUV1ZrYVdFNmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqT0RsaU5HWmhPMXh1ZlZ4dUxrMWxaR2xoT21odmRtVnlJQ29nZTF4dUlDQmpiMnh2Y2pvZ0l6RXhNVEV4WWp0Y2JuMWNiaTVOWldScFlTQXVUWEJ5YVhOUWIzQnZkbVZ5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNneU5Dd2dNalFzSURNM0xDQXdMamdwTzF4dWZWeHVMazFsWkdsaElDNU5jSEpwYzFCdmNHOTJaWElnTGsxd2NtbHpVR3hoZVdWeUlIdGNiaUFnY0dGa1pHbHVaem9nTVRad2VEdGNibjFjYmk1TlpXUnBZU0F1VFhCeWFYTlFiM0J2ZG1WeUlDNU5jSEpwYzFCc1lYbGxjaUF1VFdWMFlXUmhkR0VnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTVRKd2VEdGNibjFjYmk1TlpXUnBZU0F1VFhCeWFYTlFiM0J2ZG1WeUlDNU5jSEpwYzFCc1lYbGxjaUF1VFdWMFlXUmhkR0VnTGxScGRHeGxJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQmpiMnh2Y2pvZ0kyTmtaRFptTkR0Y2JuMWNiaTVOWldScFlTQXVUWEJ5YVhOUWIzQnZkbVZ5SUM1TmNISnBjMUJzWVhsbGNpQXVUV1YwWVdSaGRHRWdMa0Z5ZEdsemRDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ1kyOXNiM0k2SUhKblltRW9NakExTENBeU1UUXNJREkwTkN3Z01DNDNLVHRjYm4xY2JpNU5aV1JwWVNBdVRYQnlhWE5RYjNCdmRtVnlJQzVOY0hKcGMxQnNZWGxsY2lBdVRXVjBZV1JoZEdFZ0xrRnNZblZ0SUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TkhCNE8xeHVJQ0JqYjJ4dmNqb2djbWRpWVNneU1EVXNJREl4TkN3Z01qUTBMQ0F3TGpVcE8xeHVJQ0JtYjI1MExYTjBlV3hsT2lCcGRHRnNhV003WEc1OVhHNHVUV1ZrYVdFZ0xrMXdjbWx6VUc5d2IzWmxjaUF1VFhCeWFYTlFiR0Y1WlhJZ0xreHZkMlZ5VUdGeWRDQjdYRzRnSUcxaGNtZHBiaTEwYjNBNklERXljSGc3WEc0Z0lIQmhaR1JwYm1jNklERXljSGc3WEc1OVhHNHVUV1ZrYVdFZ0xrMXdjbWx6VUc5d2IzWmxjaUF1VFhCeWFYTlFiR0Y1WlhJZ0xreHZkMlZ5VUdGeWRDQXVVR3hoZVdWeVUyeHBaR1Z5SUh0Y2JpQWdjR0ZrWkdsdVp6b2dOSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0RNd0xDQXpNQ3dnTkRZc0lEQXVOaWs3WEc0Z0lHSnZjbVJsY2pvZ2JtOXVaVHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRSd2VEdGNiaUFnYldGeVoybHVPaUExY0hnN1hHNTlYRzR1VFdWa2FXRWdMazF3Y21selVHOXdiM1psY2lBdVRYQnlhWE5RYkdGNVpYSWdMa3h2ZDJWeVVHRnlkQ0F1VUd4aGVXVnlVMnhwWkdWeUlDNVRiR2xrWlhJZ2UxeHVJQ0J0YVc0dGQybGtkR2c2SURFMk1IQjRPMXh1ZlZ4dUxrMWxaR2xoSUM1TmNISnBjMUJ2Y0c5MlpYSWdMazF3Y21selVHeGhlV1Z5SUM1TWIzZGxjbEJoY25RZ0xsQnNZWGxsY2xOc2FXUmxjaUF1VTJ4cFpHVnlJR2hwWjJoc2FXZG9kQ0I3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ00zTkdNM1pXTTdYRzU5WEc0dVRXVmthV0VnTGsxd2NtbHpVRzl3YjNabGNpQXVUWEJ5YVhOUWJHRjVaWElnTGt4dmQyVnlVR0Z5ZENBdVVHeGhlV1Z5VTJ4cFpHVnlJQzVVYVcxbFRHRmlaV3dnZTF4dUlDQmpiMnh2Y2pvZ0kyTmtaRFptTkR0Y2JpQWdiV0Z5WjJsdUxXeGxablE2SURFd2NIZzdYRzRnSUdadmJuUXRjMmw2WlRvZ01UUndlRHRjYmlBZ2IzQmhZMmwwZVRvZ01DNDRPMXh1SUNCdGFXNHRkMmxrZEdnNklEUXdjSGc3WEc1OVhHNHVUV1ZrYVdFZ0xrMXdjbWx6VUc5d2IzWmxjaUF1VFhCeWFYTlFiR0Y1WlhJZ0xreHZkMlZ5VUdGeWRDQXVRMjl1ZEhKdmJHeGxjbk1nTGxCeVpYWnBiM1Z6TENBdVRXVmthV0VnTGsxd2NtbHpVRzl3YjNabGNpQXVUWEJ5YVhOUWJHRjVaWElnTGt4dmQyVnlVR0Z5ZENBdVEyOXVkSEp2Ykd4bGNuTWdMbEJzWVhsUVlYVnpaU3dnTGsxbFpHbGhJQzVOY0hKcGMxQnZjRzkyWlhJZ0xrMXdjbWx6VUd4aGVXVnlJQzVNYjNkbGNsQmhjblFnTGtOdmJuUnliMnhzWlhKeklDNU9aWGgwSUh0Y2JpQWdiV0Z5WjJsdU9pQTBjSGc3WEc0Z0lHSnZjbVJsY2pvZ2JtOXVaVHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nT0hCNE8xeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR6Y3lCbFlYTmxPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpNV1V4WlRKbE8xeHVmVnh1TGsxbFpHbGhJQzVOY0hKcGMxQnZjRzkyWlhJZ0xrMXdjbWx6VUd4aGVXVnlJQzVNYjNkbGNsQmhjblFnTGtOdmJuUnliMnhzWlhKeklDNVFjbVYyYVc5MWN5QnBiV0ZuWlN3Z0xrMWxaR2xoSUM1TmNISnBjMUJ2Y0c5MlpYSWdMazF3Y21selVHeGhlV1Z5SUM1TWIzZGxjbEJoY25RZ0xrTnZiblJ5YjJ4c1pYSnpJQzVRYkdGNVVHRjFjMlVnYVcxaFoyVXNJQzVOWldScFlTQXVUWEJ5YVhOUWIzQnZkbVZ5SUM1TmNISnBjMUJzWVhsbGNpQXVURzkzWlhKUVlYSjBJQzVEYjI1MGNtOXNiR1Z5Y3lBdVRtVjRkQ0JwYldGblpTQjdYRzRnSUcxaGNtZHBiam9nTVRKd2VEdGNibjFjYmk1TlpXUnBZU0F1VFhCeWFYTlFiM0J2ZG1WeUlDNU5jSEpwYzFCc1lYbGxjaUF1VEc5M1pYSlFZWEowSUM1RGIyNTBjbTlzYkdWeWN5QXVVSEpsZG1sdmRYTWdLaXdnTGsxbFpHbGhJQzVOY0hKcGMxQnZjRzkyWlhJZ0xrMXdjbWx6VUd4aGVXVnlJQzVNYjNkbGNsQmhjblFnTGtOdmJuUnliMnhzWlhKeklDNVFiR0Y1VUdGMWMyVWdLaXdnTGsxbFpHbGhJQzVOY0hKcGMxQnZjRzkyWlhJZ0xrMXdjbWx6VUd4aGVXVnlJQzVNYjNkbGNsQmhjblFnTGtOdmJuUnliMnhzWlhKeklDNU9aWGgwSUNvZ2UxeHVJQ0JqYjJ4dmNqb2dJemc1WWpSbVlUdGNibjFjYmk1TlpXUnBZU0F1VFhCeWFYTlFiM0J2ZG1WeUlDNU5jSEpwYzFCc1lYbGxjaUF1VEc5M1pYSlFZWEowSUM1RGIyNTBjbTlzYkdWeWN5QXVVSEpsZG1sdmRYTTZhRzkyWlhJc0lDNU5aV1JwWVNBdVRYQnlhWE5RYjNCdmRtVnlJQzVOY0hKcGMxQnNZWGxsY2lBdVRHOTNaWEpRWVhKMElDNURiMjUwY205c2JHVnljeUF1VUd4aGVWQmhkWE5sT21odmRtVnlMQ0F1VFdWa2FXRWdMazF3Y21selVHOXdiM1psY2lBdVRYQnlhWE5RYkdGNVpYSWdMa3h2ZDJWeVVHRnlkQ0F1UTI5dWRISnZiR3hsY25NZ0xrNWxlSFE2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpPRGxpTkdaaE8xeHVmVnh1TGsxbFpHbGhJQzVOY0hKcGMxQnZjRzkyWlhJZ0xrMXdjbWx6VUd4aGVXVnlJQzVNYjNkbGNsQmhjblFnTGtOdmJuUnliMnhzWlhKeklDNVFjbVYyYVc5MWN6cG9iM1psY2lBcUxDQXVUV1ZrYVdFZ0xrMXdjbWx6VUc5d2IzWmxjaUF1VFhCeWFYTlFiR0Y1WlhJZ0xreHZkMlZ5VUdGeWRDQXVRMjl1ZEhKdmJHeGxjbk1nTGxCc1lYbFFZWFZ6WlRwb2IzWmxjaUFxTENBdVRXVmthV0VnTGsxd2NtbHpVRzl3YjNabGNpQXVUWEJ5YVhOUWJHRjVaWElnTGt4dmQyVnlVR0Z5ZENBdVEyOXVkSEp2Ykd4bGNuTWdMazVsZUhRNmFHOTJaWElnS2lCN1hHNGdJR052Ykc5eU9pQWpNV1V4WlRKbE8xeHVmVnh1TGsxbFpHbGhJQzVOY0hKcGMxQnZjRzkyWlhJZ0xrTmhkbUVzSUM1TlpXUnBZU0F1VFhCeWFYTlFiM0J2ZG1WeUlDNURZWFpoSUQ0Z0tpQjdYRzRnSUdOdmJHOXlPaUJ5WjJKaEtERXpOeXdnTVRnd0xDQXlOVEFzSURBdU5TazdYRzU5WEc1Y2JpNURZWFpoTENBdVEyRjJZU0ErSUNvc0lDNURZWFpoVDNabGNteGhlU3dnTGtOaGRtRlBkbVZ5YkdGNUlENGdLaUI3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JuMWNibHh1TGtOaGRtRXNJQzVEWVhaaElENGdLaUI3WEc0Z0lHTnZiRzl5T2lCeVoySmhLREV6Tnl3Z01UZ3dMQ0F5TlRBc0lEQXVOU2s3WEc1OVhHNWNiaTVEWVhaaFQzWmxjbXhoZVNCN1hHNGdJR0p2Y21SbGNqb2dibTl1WlR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05EQndlQ0EwTUhCNElEQndlQ0F3Y0hnN1hHNGdJR0poWTJ0bmNtOTFibVE2SUc1dmJtVTdYRzRnSUdOdmJHOXlPaUJ5WjJKaEtERXpOeXdnTVRnd0xDQXlOVEFzSURBdU5pazdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpOeklHVmhjMlU3WEc1OVhHNHVRMkYyWVU5MlpYSnNZWGs2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0RFek55d2dNVGd3TENBeU5UQXNJREF1TmlrN1hHNGdJR052Ykc5eU9pQWpNV1V4WlRKbE8xeHVmVnh1WEc1MGIyOXNkR2x3SUh0Y2JpQWdjR0ZrWkdsdVp6b2dObkI0TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNekV6TWpRME8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNSEI0TzF4dWZWeHVYRzR1UTI5dWRISnZiRU5sYm5SbGNpQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpOeklHVmhjMlU3WEc1OVhHNHVRMjl1ZEhKdmJFTmxiblJsY2lBdVRHRmlaV3dnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREl3Y0hnN1hHNTlYRzR1UTI5dWRISnZiRU5sYm5SbGNqcG9iM1psY2lCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ000T1dJMFptRTdYRzU5WEc0dVEyOXVkSEp2YkVObGJuUmxjanBvYjNabGNpQXVUR0ZpWld3Z2UxeHVJQ0JqYjJ4dmNqb2dJekZsTVdVeVpUdGNibjFjYmk1RGIyNTBjbTlzUTJWdWRHVnlJQzVEYjI1MGNtOXNRMlZ1ZEdWeVVHOXdiM1psY2lCN1hHNGdJSEJoWkdScGJtYzZJRFZ3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNnME9Td2dOVEFzSURZNExDQXdMamdwTzF4dWZWeHVMa052Ym5SeWIyeERaVzUwWlhJZ0xrTnZiblJ5YjJ4RFpXNTBaWEpRYjNCdmRtVnlJQzVUZFdKMGFYUnNaU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JpQWdiV0Z5WjJsdU9pQTBjSGc3WEc1OVhHNHVRMjl1ZEhKdmJFTmxiblJsY2lBdVEyOXVkSEp2YkVObGJuUmxjbEJ2Y0c5MlpYSWdMbFJ2WjJkc1pWWnBjMmxpYkdWRGIyMXdiMjVsYm5SeklIdGNiaUFnYldGeVoybHVPaUEwY0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSEpuWW1Fb05qa3NJRGN4TENBNU1Dd2dNQzQ0S1R0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ09IQjRPMXh1ZlZ4dUxrTnZiblJ5YjJ4RFpXNTBaWElnTGtOdmJuUnliMnhEWlc1MFpYSlFiM0J2ZG1WeUlDNVViMmRuYkdWV2FYTnBZbXhsUTI5dGNHOXVaVzUwY3lBdVQzQjBhVzl1SUh0Y2JpQWdjR0ZrWkdsdVp6b2dNbkI0TzF4dUlDQnRZWEpuYVc0NklESndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRCd2VEdGNibjFjYmk1RGIyNTBjbTlzUTJWdWRHVnlJQzVEYjI1MGNtOXNRMlZ1ZEdWeVVHOXdiM1psY2lBdVZHOW5aMnhsVm1semFXSnNaVU52YlhCdmJtVnVkSE1nTGxSdloyZHNaVUZ1YVcxaGRHbHZibk1nZTF4dUlDQmlZV05yWjNKdmRXNWtPaUJ1YjI1bE8xeHVJQ0JqYjJ4dmNqb2dJMk5rWkRabU5EdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TTNNZ1pXRnpaVHRjYm4xY2JpNURiMjUwY205c1EyVnVkR1Z5SUM1RGIyNTBjbTlzUTJWdWRHVnlVRzl3YjNabGNpQXVWRzluWjJ4bFZtbHphV0pzWlVOdmJYQnZibVZ1ZEhNZ0xsUnZaMmRzWlVGdWFXMWhkR2x2Ym5NNmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqT0RsaU5HWmhPMXh1SUNCamIyeHZjam9nSXpGbE1XVXlaVHRjYm4xY2JpNURiMjUwY205c1EyVnVkR1Z5SUM1RGIyNTBjbTlzUTJWdWRHVnlVRzl3YjNabGNpQXVWRzluWjJ4bFZtbHphV0pzWlVOdmJYQnZibVZ1ZEhNZ0xsUnZaMmRzWlVSaGRHVlVhVzFsUTJGc1pXNWtZWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUJ1YjI1bE8xeHVJQ0JqYjJ4dmNqb2dJMk5rWkRabU5EdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TTNNZ1pXRnpaVHRjYm4xY2JpNURiMjUwY205c1EyVnVkR1Z5SUM1RGIyNTBjbTlzUTJWdWRHVnlVRzl3YjNabGNpQXVWRzluWjJ4bFZtbHphV0pzWlVOdmJYQnZibVZ1ZEhNZ0xsUnZaMmRzWlVSaGRHVlVhVzFsUTJGc1pXNWtZWEk2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpabUZpTXpnM08xeHVJQ0JqYjJ4dmNqb2dJekZsTVdVeVpUdGNibjFjYmk1RGIyNTBjbTlzUTJWdWRHVnlJQzVEYjI1MGNtOXNRMlZ1ZEdWeVVHOXdiM1psY2lBdVZHOW5aMnhsVm1semFXSnNaVU52YlhCdmJtVnVkSE1nTGxSdloyZHNaVU5oZG1FZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lCdWIyNWxPMXh1SUNCamIyeHZjam9nSTJOa1pEWm1ORHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU0zTWdaV0Z6WlR0Y2JuMWNiaTVEYjI1MGNtOXNRMlZ1ZEdWeUlDNURiMjUwY205c1EyVnVkR1Z5VUc5d2IzWmxjaUF1Vkc5bloyeGxWbWx6YVdKc1pVTnZiWEJ2Ym1WdWRITWdMbFJ2WjJkc1pVTmhkbUU2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpZalJpWldabE8xeHVJQ0JqYjJ4dmNqb2dJekZsTVdVeVpUdGNibjFjYmk1RGIyNTBjbTlzUTJWdWRHVnlJQzVEYjI1MGNtOXNRMlZ1ZEdWeVVHOXdiM1psY2lBdVYyRnNiSEJoY0dWeVUzbHpkR1Z0SUh0Y2JpQWdiV0Z5WjJsdU9pQXdjSGdnTkhCNE8xeHVmVnh1TGtOdmJuUnliMnhEWlc1MFpYSWdMa052Ym5SeWIyeERaVzUwWlhKUWIzQnZkbVZ5SUM1WFlXeHNjR0Z3WlhKVGVYTjBaVzBnTGxkaGJHeHdZWEJsY25NZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtEWTVMQ0EzTVN3Z09UQXNJREF1T0NrN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXdjSGc3WEc0Z0lIQmhaR1JwYm1jNklERXdjSGc3WEc1OVhHNHVRMjl1ZEhKdmJFTmxiblJsY2lBdVEyOXVkSEp2YkVObGJuUmxjbEJ2Y0c5MlpYSWdMbGRoYkd4d1lYQmxjbE41YzNSbGJTQXVWMkZzYkhCaGNHVnljeUF1VjJGc2JIQmhjR1Z5SUh0Y2JpQWdiM0JoWTJsMGVUb2dNQzQ0TzF4dUlDQmliM0prWlhJNklESndlQ0J6YjJ4cFpDQWpZalJpWldabE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNSEI0TzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNHpjeUJsWVhObE8xeHVmVnh1TGtOdmJuUnliMnhEWlc1MFpYSWdMa052Ym5SeWIyeERaVzUwWlhKUWIzQnZkbVZ5SUM1WFlXeHNjR0Z3WlhKVGVYTjBaVzBnTGxkaGJHeHdZWEJsY25NZ0xsZGhiR3h3WVhCbGNqcG9iM1psY2lCN1hHNGdJRzl3WVdOcGRIazZJREU3WEc0Z0lHSnZjbVJsY2kxamIyeHZjam9nSXpnNVlqUm1ZVHRjYm4xY2JseHVMbE5sYkdWamRHOXlTVzVrYVdOaGRHOXlJSHRjYmlBZ2JXRnlaMmx1T2lBMGNIZzdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKblltRW9OamtzSURjeExDQTVNQ3dnTUM0NEtUdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dPSEI0TzF4dWZWeHVMbE5sYkdWamRHOXlTVzVrYVdOaGRHOXlJQzVQY0hScGIyNGdlMXh1SUNCd1lXUmthVzVuT2lBeWNIZzdYRzRnSUcxaGNtZHBiam9nTW5CNE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNSEI0TzF4dWZWeHVMbE5sYkdWamRHOXlTVzVrYVdOaGRHOXlJQzVVYjJkbmJHVkJZM1JwZG1VZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lCdWIyNWxPMXh1SUNCamIyeHZjam9nSTJOa1pEWm1ORHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU0zTWdaV0Z6WlR0Y2JuMWNiaTVUWld4bFkzUnZja2x1WkdsallYUnZjaUF1Vkc5bloyeGxRV04wYVhabE9taHZkbVZ5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSXpnNVlqUm1ZVHRjYmlBZ1kyOXNiM0k2SUNNeFpURmxNbVU3WEc1OVhHNWNiaTVEYUdWaGRITm9aV1YwSUh0Y2JpQWdjR0ZrWkdsdVp6b2dNVEJ3ZUR0Y2JpQWdZbTl5WkdWeU9pQXljSGdnYzI5c2FXUWdJemc1WWpSbVlUdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNakJ3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNnek1Dd2dNekFzSURRMkxDQXdMamdwTzF4dWZWeHVMa05vWldGMGMyaGxaWFFnTGxScGRHeGxJSHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdSbGNqdGNiaUFnWm05dWRDMXphWHBsT2lBNE1IQjRPMXh1ZlZ4dUxrTm9aV0YwYzJobFpYUWdMbE4xWW5ScGRHeGxJSHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRN1hHNGdJR1p2Ym5RdGMybDZaVG9nTkRCd2VEdGNibjFjYmk1RGFHVmhkSE5vWldWMElDNVRaV04wYVc5dUlIdGNiaUFnYldGeVoybHVPaUEwY0hnN1hHNGdJSEJoWkdScGJtYzZJRFJ3ZUR0Y2JuMWNiaTVEYUdWaGRITm9aV1YwSUM1RmJuUnllU0I3WEc0Z0lHMWhjbWRwYmpvZ00zQjRPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUEyY0hnN1hHNTlYRzR1UTJobFlYUnphR1ZsZENBdVJXNTBjbmtnTGtKcGJtUXNJQzVEYUdWaGRITm9aV1YwSUM1RmJuUnllU0F1UVdOMGFXOXVJSHRjYmlBZ2NHRmtaR2x1WnpvZ01uQjRPMXh1ZlZ4dUxrTm9aV0YwYzJobFpYUWdMa1Z1ZEhKNUlDNUNhVzVrSUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVNbk1nWldGelpUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHSnZiR1E3WEc0Z0lHTnZiRzl5T2lBak9EbGlOR1poTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNekV6TWpRME8xeHVmVnh1TGtOb1pXRjBjMmhsWlhRZ0xrVnVkSEo1SUM1QlkzUnBiMjRnZTF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNHljeUJsWVhObE8xeHVJQ0JqYjJ4dmNqb2dJek14TXpJME5EdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpnNVlqUm1ZVHRjYm4xY2JpNURhR1ZoZEhOb1pXVjBJQzVGYm5SeWVUcG9iM1psY2lBdVFtbHVaQ0I3WEc0Z0lHTnZiRzl5T2lBak16RXpNalEwTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpPRGxpTkdaaE8xeHVmVnh1TGtOb1pXRjBjMmhsWlhRZ0xrVnVkSEo1T21odmRtVnlJQzVCWTNScGIyNGdlMXh1SUNCamIyeHZjam9nSXpnNVlqUm1ZVHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6TXhNekkwTkR0Y2JuMWNibHh1THlvZ1VtVnpaWFIwYVc1bklHVjJaWEo1SUdSbFkyOXlZWFJwYjI0Z1lYQndiR2xsWkNCbFlYSnNhV1Z5SUNvdlhHNHFJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpVFc5dWIzTndZV05sWENJN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNiaUFnTFdkMGF5MXBZMjl1TFhOcGVtVTZJREkwY0hnN1hHNGdJR052Ykc5eU9pQWpZMlJrTm1ZME8xeHVJQ0JpWVdOclozSnZkVzVrT2lCdWIyNWxPMXh1SUNCaWIzSmtaWEk2SUc1dmJtVTdYRzRnSUdKdmVDMXphR0ZrYjNjNklHNXZibVU3WEc0Z0lHOTFkR3hwYm1VNklHNXZibVU3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JuMWNibHh1TGtKaGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklDTXhaVEZsTW1VN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklESTRjSGc3WEc0Z0lHMWhjbWRwYmpvZ05IQjRJRFp3ZUR0Y2JuMGlMQ0FpYVcxd2IzSjBJRUZ6ZEdGc0lHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1AzWmxjbk5wYjI0OU5DNHdYQ0pjYm1sdGNHOXlkQ0JIZEdzZ1puSnZiU0JjSW1kcE9pOHZSM1JyUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQkhaR3NnWm5KdmJTQmNJbWRwT2k4dlIyUnJQM1psY25OcGIyNDlOQzR3WENKY2JtVjRjRzl5ZENCN0lFRnpkR0ZzTENCSGRHc3NJRWRrYXlCOVhHNGlMQ0FpYVcxd2IzSjBJRUZ6ZEdGc1FtRjBkR1Z5ZVNCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkVKaGRIUmxjbmxjSWx4dWFXMXdiM0owSUVkVWIzQWdabkp2YlNCY0ltZHBPaTh2UjFSdmNEOTJaWEp6YVc5dVBUSXVNRndpTzF4dWFXMXdiM0owSUhzZ1ptOXliV0YwVkdsdFpWWmxjbUp2YzJVZ2ZTQm1jbTl0SUZ3aUxpNHZjMlZ5ZG1salpYTXZWR2x0WlVadmNtMWhkSFJsY2x3aU8xeHVhVzF3YjNKMElIc2dRV05qWlhOemIzSXNJR055WldGMFpVSnBibVJwYm1jc0lHTnlaV0YwWlVOdmJYQjFkR1ZrSUgwZ1puSnZiU0JjSW1GbmMxd2lPMXh1YVcxd2IzSjBJSHNnWTNKbFlYUmxVRzlzYkNCOUlHWnliMjBnWENKaFozTXZkR2x0WlZ3aU8xeHVYRzUwZVhCbElFMWxkSEpwWTNNZ1BTQjdYRzRnSUNBZ1kzQjFPaUJ1ZFcxaVpYSXNYRzRnSUNBZ2JXVnRPaUJ1ZFcxaVpYSmNibjFjYmx4dVkyOXVjM1FnY0c5c2JGUnBiV1VnUFNBek1EQXdPMXh1WEc1amJHRnpjeUJUZVhOMFpXMU5iMjVwZEc5eVEyeGhjM01nZTF4dUlDQWdJSEJ5YVhaaGRHVWdZbUYwZEdWeWVUb2dRWE4wWVd4Q1lYUjBaWEo1TGtSbGRtbGpaVHRjYmlBZ0lDQndjbWwyWVhSbElHSmhkSFJsY25sUVpYSmpaVzUwWVdkbE9pQkJZMk5sYzNOdmNqeHVkVzFpWlhJK08xeHVJQ0FnSUhCeWFYWmhkR1VnWW1GMGRHVnllVU5vWVhKbmFXNW5PaUJCWTJObGMzTnZjanhpYjI5c1pXRnVQanRjYmlBZ0lDQndjbWwyWVhSbElHSmhkSFJsY25sRGNtbDBhV05oYkRvZ1FXTmpaWE56YjNJOGMzUnlhVzVuVzEwK08xeHVJQ0FnSUhCeWFYWmhkR1VnWW1GMGRHVnllVXhwWm1WTVlXSmxiRG9nUVdOalpYTnpiM0k4YzNSeWFXNW5QanRjYmlBZ0lDQndjbWwyWVhSbElHSmhkSFJsY25sSlkyOXVPaUJCWTJObGMzTnZjanh6ZEhKcGJtYytPMXh1WEc0Z0lDQWdjSEpwZG1GMFpTQmpjSFZUYjNWeVkyVTZJRWRVYjNBdVoyeHBZblJ2Y0Y5amNIVTdYRzRnSUNBZ2NISnBkbUYwWlNCamNIVkVZWFJoT2lCN0lIQnlaWFk2SUhzZ2RYTmxjam9nYm5WdFltVnlMQ0J6ZVhNNklHNTFiV0psY2l3Z2RHOTBZV3c2SUc1MWJXSmxjaUI5TENCa2FXWm1PaUI3SUhWelpYSTZJRzUxYldKbGNpd2djM2x6T2lCdWRXMWlaWElzSUhSdmRHRnNPaUJ1ZFcxaVpYSWdmU0I5TzF4dUlDQWdJSEJ5YVhaaGRHVWdiV1Z0VTI5MWNtTmxPaUJIVkc5d0xtZHNhV0owYjNCZmJXVnRPMXh1SUNBZ0lIQnlhWFpoZEdVZ1gyMWxkSEpwWTNNNklFRmpZMlZ6YzI5eVBFMWxkSEpwWTNNK08xeHVYRzRnSUNBZ2NIVmliR2xqSUdOdmJuTjBjblZqZEc5eUtDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtSmhkSFJsY25rZ1BTQkJjM1JoYkVKaGRIUmxjbmt1WjJWMFgyUmxabUYxYkhRb0tUdGNiaUFnSUNBZ0lDQWdkR2hwY3k1aVlYUjBaWEo1U1dOdmJpQTlJR055WldGMFpVSnBibVJwYm1jb2RHaHBjeTVpWVhSMFpYSjVMQ0JjSW1KaGRIUmxjbmxKWTI5dVRtRnRaVndpS1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVpWVhSMFpYSjVVR1Z5WTJWdWRHRm5aU0E5SUdOeVpXRjBaVUpwYm1ScGJtY29kR2hwY3k1aVlYUjBaWEo1TENCY0luQmxjbU5sYm5SaFoyVmNJaWs3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZbUYwZEdWeWVVTm9ZWEpuYVc1bklEMGdZM0psWVhSbFFtbHVaR2x1WnloMGFHbHpMbUpoZEhSbGNua3NJRndpWTJoaGNtZHBibWRjSWlrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WW1GMGRHVnllVU55YVhScFkyRnNJRDBnWTNKbFlYUmxRMjl0Y0hWMFpXUW9XM1JvYVhNdVltRjBkR1Z5ZVZCbGNtTmxiblJoWjJVc0lIUm9hWE11WW1GMGRHVnllVU5vWVhKbmFXNW5YU3dnS0hBc0lHTXBJRDArSUZ0Y0lrSmhkSFJsY25sY0lpd2djQ0E4UFNBd0xqTWdKaVlnSVdNZ1B5QmNJa0poZEhSbGNubERjbWwwYVdOaGJGd2lJRG9nWENKQ1lYUjBaWEo1VG05eWJXRnNYQ0pkS1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVpWVhSMFpYSjVUR2xtWlV4aFltVnNJRDBnZEdocGN5NWlZWFIwWlhKNVEyaGhjbWRwYm1jdVlYTW9ZeUE5UGlCaklEOGdZRU5oY25KbFoyRnVaRzg2SUNSN1ptOXliV0YwVkdsdFpWWmxjbUp2YzJVb2RHaHBjeTVpWVhSMFpYSjVMblJwYldWZmRHOWZablZzYkNsOUlISmxjM1JoYm5SbEtITXBZQ0E2SUdCRVpYTmpZWEp5WldkaGJtUnZPaUFrZTJadmNtMWhkRlJwYldWV1pYSmliM05sS0hSb2FYTXVZbUYwZEdWeWVTNTBhVzFsWDNSdlgyVnRjSFI1S1gwZ2NtVnpkR0Z1ZEdVb2N5bGdLVHRjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbU53ZFZOdmRYSmpaU0E5SUc1bGR5QkhWRzl3TG1kc2FXSjBiM0JmWTNCMUtDazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWJXVnRVMjkxY21ObElEMGdibVYzSUVkVWIzQXVaMnhwWW5SdmNGOXRaVzBvS1R0Y2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Od2RVUmhkR0VnUFNCN0lIQnlaWFk2SUhzZ2RYTmxjam9nTUN3Z2MzbHpPaUF3TENCMGIzUmhiRG9nTUNCOUxDQmthV1ptT2lCN0lIVnpaWEk2SURBc0lITjVjem9nTUN3Z2RHOTBZV3c2SURBZ2ZTQjlPMXh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMjFsZEhKcFkzTWdQU0JqY21WaGRHVlFiMnhzS0hzZ1kzQjFPaUF3TENCdFpXMDZJREFnZlN3Z2NHOXNiRlJwYldVc0lDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1IxUnZjQzVuYkdsaWRHOXdYMmRsZEY5amNIVW9kR2hwY3k1amNIVlRiM1Z5WTJVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFZFViM0F1WjJ4cFluUnZjRjluWlhSZmJXVnRLSFJvYVhNdWJXVnRVMjkxY21ObEtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHTndkU0E5SUhSb2FYTXVZM0IxVTI5MWNtTmxPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjSEpsZGlBOUlIUm9hWE11WTNCMVJHRjBZUzV3Y21WMk8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amNIVkVZWFJoTG1ScFptWWdQU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnpaWEk2SUdOd2RTNTFjMlZ5SUMwZ2NISmxkaTUxYzJWeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZVhNNklHTndkUzV6ZVhNZ0xTQndjbVYyTG5ONWN5eGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEc5MFlXdzZJR053ZFM1MGIzUmhiQ0F0SUhCeVpYWXVkRzkwWVd4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Od2RVUmhkR0V1Y0hKbGRpQTlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RYTmxjam9nWTNCMUxuVnpaWElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjVjem9nWTNCMUxuTjVjeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHOTBZV3c2SUdOd2RTNTBiM1JoYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdOd2RVUnBabVlnUFNCMGFHbHpMbU53ZFVSaGRHRXVaR2xtWmp0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdOd2RWQmxjbU5sYm5RZ1BTQmpjSFZFYVdabUxuUnZkR0ZzSUQ0Z01DQS9JRTFoZEdndWNtOTFibVFvS0NoamNIVkVhV1ptTG5WelpYSWdLeUJqY0hWRWFXWm1Mbk41Y3lrZ0x5QmpjSFZFYVdabUxuUnZkR0ZzS1NBcUlERXdNQ2tnT2lBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUcxbGJWQmxjbU5sYm5RZ1BTQjBhR2x6TG0xbGJWTnZkWEpqWlM1MGIzUmhiQ0ErSURBZ1B5Qk5ZWFJvTG5KdmRXNWtLQ2gwYUdsekxtMWxiVk52ZFhKalpTNTFjMlZ5SUM4Z2RHaHBjeTV0WlcxVGIzVnlZMlV1ZEc5MFlXd3BJQ29nTVRBd0tTQTZJREE3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXlCamNIVTZJRTFoZEdndWJXbHVLREV3TUN3Z1kzQjFVR1Z5WTJWdWRDa3NJRzFsYlRvZ1RXRjBhQzV0YVc0b01UQXdMQ0J0WlcxUVpYSmpaVzUwS1NCOU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvWlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b1hDSkZjbkp2SUdGdklHOWlkR1Z5SUcxY2RUQXdSVGwwY21sallYTWdaRzhnYzJsemRHVnRZVHBjSWl3Z1pYSnliM0lwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUI3SUdOd2RUb2dNQ3dnYldWdE9pQXdJSDA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEIxWW14cFl5Qm5aWFFnVTNsemRHVnRUVzl1YVhSdmNpZ3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnWTNOelEyeGhjM05sY3oxN1cxd2lVM2x6ZEdWdFRXOXVhWFJ2Y2x3aVhYMCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNCamMzTkRiR0Z6YzJWelBYdGJYQ0pEY0hWVmMyRm5aVndpWFgwK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJDQmpjM05EYkdGemMyVnpQWHRiSjBsamIyNG5YWDBnYkdGaVpXdzlleWRjZFVWRE1Ua25mU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThiR0ZpWld3Z1kzTnpRMnhoYzNObGN6MTdXeWRNWVdKbGJDZGRmU0JzWVdKbGJEMTdkR2hwY3k1ZmJXVjBjbWxqY3k1aGN5aHRJRDArSUdBa2UyMHVZM0IxZlNWZ0tYMGdkMmxrZEdoRGFHRnljejE3TkgwZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThMMkp2ZUQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFltOTRJR056YzBOc1lYTnpaWE05ZTF0Y0lrMWxiVzl5ZVZWellXZGxYQ0pkZlQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR3hoWW1Wc0lHTnpjME5zWVhOelpYTTllMXNuU1dOdmJpZGRmU0JzWVdKbGJEMTdKMXgxUkVJNE1WeDFSRVV4UVNkOUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4c1lXSmxiQ0JqYzNORGJHRnpjMlZ6UFh0YkoweGhZbVZzSjExOUlHeGhZbVZzUFh0MGFHbHpMbDl0WlhSeWFXTnpMbUZ6S0cwZ1BUNGdZQ1I3YlM1dFpXMTlKV0FwZlNCM2FXUjBhRU5vWVhKelBYczBmU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhpYjNnZ1kzTnpRMnhoYzNObGN6MTdkR2hwY3k1aVlYUjBaWEo1UTNKcGRHbGpZV3g5SUhSdmIyeDBhWEJVWlhoMFBYdDBhR2x6TG1KaGRIUmxjbmxNYVdabFRHRmlaV3g5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThhVzFoWjJVZ1kzTnpRMnhoYzNObGN6MTdXMXdpUW1GMGRHVnllVWxqYjI1Y0lsMTlJR2xqYjI1T1lXMWxQWHQwYUdsekxtSmhkSFJsY25sSlkyOXVmU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThiR0ZpWld3Z1kzTnpRMnhoYzNObGN6MTdXMXdpUW1GMGRHVnllVlZ6WVdkbFRHRmlaV3hjSWwxOUlHeGhZbVZzUFh0MGFHbHpMbUpoZEhSbGNubFFaWEpqWlc1MFlXZGxMbUZ6S0hBZ1BUNGdZQ1I3VFdGMGFDNXliM1Z1WkNoTllYUm9MbTFwYmlneExDQndLU0FxSURFd01Da2dQejhnTUgwbFlDbDlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnS1R0Y2JpQWdJQ0I5WEc1OVhHNWNibU52Ym5OMElITjVjM1JsYlUxdmJtbDBiM0lnUFNCdVpYY2dVM2x6ZEdWdFRXOXVhWFJ2Y2tOc1lYTnpPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdjM2x6ZEdWdFRXOXVhWFJ2Y2p0Y2JpSXNJQ0psZUhCdmNuUWdablZ1WTNScGIyNGdabTl5YldGMFZHbHRaU2h6WldOdmJtUnpPaUJ1ZFcxaVpYSXBPaUJ6ZEhKcGJtY2dlMXh1SUNBZ0lHbG1JQ2doYzJWamIyNWtjeUI4ZkNCelpXTnZibVJ6SUR3Z01Da2djbVYwZFhKdUlGd2lNRG93TUZ3aU8xeHVYRzRnSUNBZ1kyOXVjM1FnYUc5MWNuTWdQU0JOWVhSb0xtWnNiMjl5S0hObFkyOXVaSE1nTHlBek5qQXdLVHRjYmlBZ0lDQmpiMjV6ZENCdGFXNTFkR1Z6SUQwZ1RXRjBhQzVtYkc5dmNpZ29jMlZqYjI1a2N5QWxJRE0yTURBcElDOGdOakFwTzF4dUlDQWdJR052Ym5OMElISmxiV0ZwYm1sdVoxTmxZMjl1WkhNZ1BTQk5ZWFJvTG1ac2IyOXlLSE5sWTI5dVpITWdKU0EyTUNrN1hHNWNiaUFnSUNCcFppQW9hRzkxY25NZ1BpQXdLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJnSkh0b2IzVnljMzA2Skh0dGFXNTFkR1Z6TG5SdlUzUnlhVzVuS0NrdWNHRmtVM1JoY25Rb01pd2dKekFuS1gwNkpIdHlaVzFoYVc1cGJtZFRaV052Ym1SekxuUnZVM1J5YVc1bktDa3VjR0ZrVTNSaGNuUW9NaXdnSnpBbktYMWdPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCZ0pIdHRhVzUxZEdWemZUb2tlM0psYldGcGJtbHVaMU5sWTI5dVpITXVkRzlUZEhKcGJtY29LUzV3WVdSVGRHRnlkQ2d5TENBbk1DY3BmV0E3WEc0Z0lDQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1ptOXliV0YwVkdsdFpWWmxjbUp2YzJVb2MyVmpiMjVrY3pvZ2JuVnRZbVZ5S1RvZ2MzUnlhVzVuSUh0Y2JpQWdJQ0JwWmloelpXTnZibVJ6SUQ0OUlETTJNREFwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdBa2UwMWhkR2d1Wm14dmIzSW9jMlZqYjI1a2N5QXZJRE0yTURBcGZXZ2tlMDFoZEdndVpteHZiM0lvS0hObFkyOXVaSE1nSlNBek5qQXdLU0F2SURZd0tYMXRZRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1lDUjdUV0YwYUM1bWJHOXZjaWh6WldOdmJtUnpJQzhnTmpBcGZXMWdPMXh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQkhUMkpxWldOMElHWnliMjBnWENKbmFUb3ZMMGRQWW1wbFkzUmNJbHh1YVcxd2IzSjBJSHNnUm5KaFoyMWxiblFnZlNCbWNtOXRJRndpTGk5R2NtRm5iV1Z1ZEM1cWMxd2lYRzVwYlhCdmNuUWdleUJCWTJObGMzTnZjaUI5SUdaeWIyMGdYQ0l1TDNOMFlYUmxMbXB6WENKY2JtbHRjRzl5ZENCN0lIUjVjR1VnUTBNc0lIUjVjR1VnUmtNc0lHVnVkaUI5SUdaeWIyMGdYQ0l1TDJWdWRpNXFjMXdpWEc1cGJYQnZjblFnZXlCclpXSmhZbWxtZVN3Z2RIbHdaU0JRWVhOallXeHBabmtzSUhObGRDQjlJR1p5YjIwZ1hDSXVMaTkxZEdsc0xtcHpYQ0pjYm1sdGNHOXlkQ0I3SUc5dVEyeGxZVzUxY0NCOUlHWnliMjBnWENJdUwzTmpiM0JsTG1welhDSmNibHh1THlvcVhHNGdLaUJTWlhCeVpYTmxiblJ6SUdGc2JDQnZaaUIwYUdVZ2RHaHBibWR6SUhSb1lYUWdZMkZ1SUdKbElIQmhjM05sWkNCaGN5QmhJR05vYVd4a0lIUnZJR05zWVhOeklHTnZiWEJ2Ym1WdWRITXVYRzRnS2k5Y2JtVjRjRzl5ZENCMGVYQmxJRTV2WkdVZ1BWeHVJQ0FnSUh3Z1FYSnlZWGs4UjA5aWFtVmpkQzVQWW1wbFkzUStYRzRnSUNBZ2ZDQkhUMkpxWldOMExrOWlhbVZqZEZ4dUlDQWdJSHdnYm5WdFltVnlYRzRnSUNBZ2ZDQnpkSEpwYm1kY2JpQWdJQ0I4SUdKdmIyeGxZVzVjYmlBZ0lDQjhJRzUxYkd4Y2JpQWdJQ0I4SUhWdVpHVm1hVzVsWkZ4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWjNSclZIbHdaU0E5SUZONWJXSnZiQ2hjSW1kMGF5QmlkV2xzWkdWeUlIUjVjR1ZjSWlsY2JseHVMeW9xWEc0Z0tpQkhaWFFnZEdobElIUjVjR1VnYjJZZ2RHaGxJRzlpYW1WamRDQnpjR1ZqYVdacFpXUWdkR2h5YjNWbmFDQjBhR1VnWUNSMGVYQmxZQ0J3Y205d1pYSjBlVnh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1oyVjBWSGx3WlNodlltcGxZM1E2SUVkUFltcGxZM1F1VDJKcVpXTjBLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHZDBhMVI1Y0dVZ2FXNGdiMkpxWldOMElEOGdLRzlpYW1WamRGdG5kR3RVZVhCbFhTQmhjeUJ6ZEhKcGJtY3BJRG9nYm5Wc2JGeHVmVnh1WEc0dktpcGNiaUFxSUVaMWJtTjBhVzl1SUVOdmJYQnZibVZ1ZENCUWNtOXdaWEowYVdWelhHNGdLaTljYm1WNGNHOXlkQ0IwZVhCbElFWkRVSEp2Y0hNOFUyVnNaaXdnVUhKdmNITStJRDBnVUhKdmNITWdKaUI3WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUjNSckxrSjFhV3hrWlhJZ2RIbHdaVnh1SUNBZ0lDQXFJR2wwY3lCamIyNXpkVzFsWkNCcGJuUmxjbTVoYkd4NUlHRnVaQ0J1YjNRZ1lXTjBkV0ZzYkhrZ2NHRnpjMlZrSUdGeklHRWdjR0Z5WVcxbGRHVnljMXh1SUNBZ0lDQXFMMXh1SUNBZ0lDUjBlWEJsUHpvZ2MzUnlhVzVuWEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nYzJWMGRYQWdablZ1WTNScGIyNWNiaUFnSUNBZ0tpQnBkSE1nWTI5dWMzVnRaV1FnYVc1MFpYSnVZV3hzZVNCaGJtUWdibTkwSUdGamRIVmhiR3g1SUhCaGMzTmxaQ0JoY3lCaElIQmhjbUZ0WlhSbGNuTmNiaUFnSUNBZ0tpOWNiaUFnSUNBa1B5aHpaV3htT2lCVFpXeG1LVG9nZG05cFpGeHVmVnh1WEc0dktpcGNiaUFxSUVOc1lYTnpJRU52YlhCdmJtVnVkQ0JRY205d1pYSjBhV1Z6WEc0Z0tpOWNibVY0Y0c5eWRDQjBlWEJsSUVORFVISnZjSE04VTJWc1ppQmxlSFJsYm1SeklFZFBZbXBsWTNRdVQySnFaV04wTENCUWNtOXdjejRnUFNCN1hHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FHbHVkR1Z5Ym1Gc0lHTm9hV3hrY21WdUlHVnNaVzFsYm5SelhHNGdJQ0FnSUNvZ2FYUnpJR052Ym5OMWJXVmtJR2x1ZEdWeWJtRnNiSGtnWVc1a0lHNXZkQ0JoWTNSMVlXeHNlU0J3WVhOelpXUWdkRzhnWTJ4aGMzTWdZMjl0Y0c5dVpXNTBJR052Ym5OMGNuVmpkRzl5YzF4dUlDQWdJQ0FxTDF4dUlDQWdJR05vYVd4a2NtVnVQem9nUVhKeVlYazhUbTlrWlQ0Z2ZDQk9iMlJsWEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUjNSckxrSjFhV3hrWlhJZ2RIbHdaVnh1SUNBZ0lDQXFJR2wwY3lCamIyNXpkVzFsWkNCcGJuUmxjbTVoYkd4NUlHRnVaQ0J1YjNRZ1lXTjBkV0ZzYkhrZ2NHRnpjMlZrSUhSdklHTnNZWE56SUdOdmJYQnZibVZ1ZENCamIyNXpkSEoxWTNSdmNuTmNiaUFnSUNBZ0tpOWNiaUFnSUNBa2RIbHdaVDg2SUhOMGNtbHVaMXh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJR1oxYm1OMGFXOXVJSFJ2SUhWelpTQmhjeUJoSUdOdmJuTjBjblZqZEc5eUxGeHVJQ0FnSUNBcUlHbDBjeUJqYjI1emRXMWxaQ0JwYm5SbGNtNWhiR3g1SUdGdVpDQnViM1FnWVdOMGRXRnNiSGtnY0dGemMyVmtJSFJ2SUdOc1lYTnpJR052YlhCdmJtVnVkQ0JqYjI1emRISjFZM1J2Y25OY2JpQWdJQ0FnS2k5Y2JpQWdJQ0FrWTI5dWMzUnlkV04wYjNJL0tIQnliM0J6T2lCUVlYSjBhV0ZzUEZCeWIzQnpQaWs2SUZObGJHWmNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQnpaWFIxY0NCbWRXNWpkR2x2Yml4Y2JpQWdJQ0FnS2lCcGRITWdZMjl1YzNWdFpXUWdhVzUwWlhKdVlXeHNlU0JoYm1RZ2JtOTBJR0ZqZEhWaGJHeDVJSEJoYzNObFpDQjBieUJqYkdGemN5QmpiMjF3YjI1bGJuUWdZMjl1YzNSeWRXTjBiM0p6WEc0Z0lDQWdJQ292WEc0Z0lDQWdKRDhvYzJWc1pqb2dVMlZzWmlrNklIWnZhV1JjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJEVTFNZ1kyeGhjM01nYm1GdFpYTmNiaUFnSUNBZ0tpOWNiaUFnSUNCamJHRnpjejg2SUhOMGNtbHVaeUI4SUVGalkyVnpjMjl5UEhOMGNtbHVaejVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJwYm14cGJtVWdRMU5UWEc0Z0lDQWdJQ292WEc0Z0lDQWdZM056UHpvZ2MzUnlhVzVuSUh3Z1FXTmpaWE56YjNJOGMzUnlhVzVuUGx4dWZTQW1JSHRjYmlBZ0lDQmJTeUJwYmlCclpYbHZaaUJRY205d2MxMDZJRUZqWTJWemMyOXlQRTV2Yms1MWJHeGhZbXhsUEZCeWIzQnpXMHRkUGo0Z2ZDQlFjbTl3YzF0TFhWeHVmU0FtSUh0Y2JpQWdJQ0JiVXlCcGJpQnJaWGx2WmlCVFpXeG1XMXdpSkhOcFoyNWhiSE5jSWwwZ1lYTWdVeUJsZUhSbGJtUnpJR0J1YjNScFpuazZPaVI3YVc1bVpYSWdVSDFnWEc0Z0lDQWdJQ0FnSUQ4Z1lHOXVUbTkwYVdaNUpIdFFZWE5qWVd4cFpuazhVRDU5WUZ4dUlDQWdJQ0FnSUNBNklGTWdaWGgwWlc1a2N5QnpkSEpwYm1kY2JpQWdJQ0FnSUNBZ0lDQS9JR0J2YmlSN1VHRnpZMkZzYVdaNVBGTStmV0JjYmlBZ0lDQWdJQ0FnSUNBNklHNWxkbVZ5WFQ4NklFZFBZbXBsWTNRdVUybG5ibUZzUTJGc2JHSmhZMnM4VTJWc1ppd2dVMlZzWmx0Y0lpUnphV2R1WVd4elhDSmRXMU5kUGx4dWZWeHVYRzR2THlCd2NtVjBkR2xsY2kxcFoyNXZjbVZjYm5SNWNHVWdTbk40VUhKdmNITThReXdnVUhKdmNITStJRDFjYmlBZ0lDQkRJR1Y0ZEdWdVpITWdkSGx3Wlc5bUlFWnlZV2R0Wlc1MElEOGdLRkJ5YjNCeklDWWdlMzBwWEc0Z0lDQWdMeThnYVc1MGNtbHVjMmxqUld4bGJXVnVkSE1nWVd4M1lYbHpJSEpsYzI5c2RtVWdZWE1nUmtOY2JpQWdJQ0F2THlCemJ5QjNaU0JqWVc0bmRDQnVZWEp5YjNjZ2FYUWdaRzkzYml3Z1lXNWtJR2x1SUhOdmJXVWdZMkZ6WlhOY2JpQWdJQ0F2THlCMGFHVWdjMlYwZFhBZ1puVnVZM1JwYjI0Z2FYTWdkSGx3WldRZ1lYTWdZU0IxYm1sdmJpQnZaaUJQWW1wbFkzUWdZVzVrSUdGamRIVmhiQ0IwZVhCbFhHNGdJQ0FnTHk4Z1lYTWdZU0JtYVhnZ2RYTmxjbk1nWTJGdUlHRnVaQ0J6YUc5MWJHUWdkWE5sSUVaRFVISnZjSE5jYmlBZ0lDQTZJRU1nWlhoMFpXNWtjeUJHUXlBL0lGQnliM0J6SUNZZ1QyMXBkRHhHUTFCeWIzQnpQRkpsZEhWeWJsUjVjR1U4UXo0c0lGQnliM0J6UGl3Z1hDSWtYQ0krWEc0Z0lDQWdPaUJESUdWNGRHVnVaSE1nUTBNZ1B5QkRRMUJ5YjNCelBFbHVjM1JoYm1ObFZIbHdaVHhEUGl3Z1VISnZjSE0rWEc0Z0lDQWdPaUJ1WlhabGNseHVYRzVtZFc1amRHbHZiaUJwYzBkUFltcGxZM1JEZEc5eUtHTjBiM0k2SUdGdWVTazZJR04wYjNJZ2FYTWdRME1nZTF4dUlDQWdJSEpsZEhWeWJpQmpkRzl5TG5CeWIzUnZkSGx3WlNCcGJuTjBZVzVqWlc5bUlFZFBZbXBsWTNRdVQySnFaV04wWEc1OVhHNWNibVoxYm1OMGFXOXVJR2x6Um5WdVkzUnBiMjVEZEc5eUtHTjBiM0k2SUdGdWVTazZJR04wYjNJZ2FYTWdSa01nZTF4dUlDQWdJSEpsZEhWeWJpQjBlWEJsYjJZZ1kzUnZjaUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lJQ1ltSUNGcGMwZFBZbXBsWTNSRGRHOXlLR04wYjNJcFhHNTlYRzVjYmk4cUtpQkFhVzUwWlhKdVlXd2dLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ6WlhSVWVYQmxLRzlpYW1WamREb2diMkpxWldOMExDQjBlWEJsT2lCemRISnBibWNwSUh0Y2JpQWdJQ0JwWmlBb1ozUnJWSGx3WlNCcGJpQnZZbXBsWTNRZ0ppWWdiMkpxWldOMFcyZDBhMVI1Y0dWZElDRTlQU0JjSWx3aUtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmloZ2RIbHdaU0J2ZG1WeWNtbGtaVzRnWm5KdmJTQWtlMjlpYW1WamRGdG5kR3RVZVhCbFhYMGdkRzhnSkh0MGVYQmxmU0J2YmlBa2UyOWlhbVZqZEgxZ0tWeHVJQ0FnSUgxY2JseHVJQ0FnSUU5aWFtVmpkQzVoYzNOcFoyNG9iMkpxWldOMExDQjdJRnRuZEd0VWVYQmxYVG9nZEhsd1pTQjlLVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2FuTjRQRlFnWlhoMFpXNWtjeUFvY0hKdmNITTZJR0Z1ZVNrZ1BUNGdSMDlpYW1WamRDNVBZbXBsWTNRK0tGeHVJQ0FnSUdOMGIzSTZJRlFzWEc0Z0lDQWdjSEp2Y0hNNklFcHplRkJ5YjNCelBGUXNJRkJoY21GdFpYUmxjbk04VkQ1Yk1GMCtMRnh1S1RvZ1VtVjBkWEp1Vkhsd1pUeFVQbHh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYW5ONFBGUWdaWGgwWlc1a2N5QnVaWGNnS0hCeWIzQnpPaUJoYm5rcElEMCtJRWRQWW1wbFkzUXVUMkpxWldOMFBpaGNiaUFnSUNCamRHOXlPaUJVTEZ4dUlDQWdJSEJ5YjNCek9pQktjM2hRY205d2N6eFVMQ0JEYjI1emRISjFZM1J2Y2xCaGNtRnRaWFJsY25NOFZENWJNRjArTEZ4dUtUb2dTVzV6ZEdGdVkyVlVlWEJsUEZRK1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnFjM2c4VkNCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBQaWhjYmlBZ0lDQmpkRzl5T2lCclpYbHZaaUFvZEhsd1pXOW1JR1Z1ZGlsYlhDSnBiblJ5YVc1emFXTkZiR1Z0Wlc1MGMxd2lYU0I4SUNodVpYY2dLSEJ5YjNCek9pQmhibmtwSUQwK0lGUXBJSHdnS0Nod2NtOXdjem9nWVc1NUtTQTlQaUJVS1N4Y2JpQWdJQ0JwYm5CeWIzQnpPaUJoYm5rc1hHNGdJQ0FnTHk4Z2EyVjVJR2x6SUdFZ2MzQmxZMmxoYkNCd2NtOXdJR2x1SUdwemVDQjNhR2xqYUNCcGN5QndZWE56WldRZ1lYTWdZU0IwYUdseVpDQmhjbWQxYldWdWRDQmhibVFnYm05MElHbHVJSEJ5YjNCelhHNGdJQ0FnYTJWNVB6b2djM1J5YVc1bkxGeHVLVG9nVkNCN1hHNGdJQ0FnWTI5dWMzUWdleUFrTENBa2RIbHdaU3dnSkdOdmJuTjBjblZqZEc5eUxDQmphR2xzWkhKbGJpd2dMaTR1Y21WemRDQjlJRDBnYVc1d2NtOXdjeUJoY3lCRFExQnliM0J6UEZRc0lHRnVlVDVjYmlBZ0lDQmpiMjV6ZENCd2NtOXdjeUE5SUhKbGMzUWdZWE1nVW1WamIzSmtQSE4wY21sdVp5d2dZVzU1UGx4dVhHNGdJQ0FnYVdZZ0tHdGxlU2tnVDJKcVpXTjBMbUZ6YzJsbmJpaHdjbTl3Y3l3Z2V5QnJaWGtnZlNsY2JpQWdJQ0JsYm5ZdWFXNXBkRkJ5YjNCektIQnliM0J6S1Z4dVhHNGdJQ0FnWm05eUlDaGpiMjV6ZENCYmEyVjVMQ0IyWVd4MVpWMGdiMllnVDJKcVpXTjBMbVZ1ZEhKcFpYTW9jSEp2Y0hNcEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0E5UFQwZ2RXNWtaV1pwYm1Wa0tTQmtaV3hsZEdVZ2NISnZjSE5iYTJWNVhWeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ1kzUnZjaUE5UFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb1kzUnZjaUJwYmlCbGJuWXVhVzUwY21sdWMybGpSV3hsYldWdWRITXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjBiM0lnUFNCbGJuWXVhVzUwY21sdWMybGpSV3hsYldWdWRITmJZM1J2Y2wwZ1lYTWdSa004VkQ0Z2ZDQkRRenhVUGx4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ1JYSnliM0lvWUhWdWEyNXZkMjRnYVc1MGNtbHVjMmxqSUdWc1pXMWxiblFnWENJa2UyTjBiM0o5WENKZ0tWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR2x6Um5WdVkzUnBiMjVEZEc5eUtHTjBiM0lwS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUc5aWFtVmpkQ0E5SUdOMGIzSW9leUJqYUdsc1pISmxiaXdnTGk0dWNISnZjSE1nZlNsY2JpQWdJQ0FnSUNBZ2FXWWdLQ1IwZVhCbEtTQnpaWFJVZVhCbEtHOWlhbVZqZEN3Z0pIUjVjR1VwWEc0Z0lDQWdJQ0FnSUNRL0xpaHZZbXBsWTNRcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdlltcGxZM1JjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJqYjJ4c1pXTjBJR056Y3lCaGJtUWdZMnhoYzNOT1lXMWxYRzRnSUNBZ1kyOXVjM1FnZXlCamMzTXNJR05zWVhOek9pQmpiR0Z6YzA1aGJXVWdmU0E5SUhCeWIzQnpYRzRnSUNBZ1pHVnNaWFJsSUhCeWIzQnpMbU56YzF4dUlDQWdJR1JsYkdWMFpTQndjbTl3Y3k1amJHRnpjMXh1WEc0Z0lDQWdZMjl1YzNRZ2MybG5ibUZzY3pvZ1FYSnlZWGs4VzNOMGNtbHVaeXdnS0M0dUxuQnliM0J6T2lCMWJtdHViM2R1VzEwcElEMCtJSFZ1YTI1dmQyNWRQaUE5SUZ0ZFhHNGdJQ0FnWTI5dWMzUWdZbWx1WkdsdVozTTZJRUZ5Y21GNVBGdHpkSEpwYm1jc0lFRmpZMlZ6YzI5eVBIVnVhMjV2ZDI0K1hUNGdQU0JiWFZ4dVhHNGdJQ0FnTHk4Z1kyOXNiR1ZqZENCemFXZHVZV3h6SUdGdVpDQmlhVzVrYVc1bmMxeHVJQ0FnSUdadmNpQW9ZMjl1YzNRZ1cydGxlU3dnZG1Gc2RXVmRJRzltSUU5aWFtVmpkQzVsYm5SeWFXVnpLSEJ5YjNCektTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2EyVjVMbk4wWVhKMGMxZHBkR2dvWENKdmJsd2lLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjMmxuYm1Gc2N5NXdkWE5vS0Z0clpYa3VjMnhwWTJVb01pa3NJSFpoYkhWbElHRnpJQ2dwSUQwK0lIVnVhMjV2ZDI1ZEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJSEJ5YjNCelcydGxlVjFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQkJZMk5sYzNOdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltbHVaR2x1WjNNdWNIVnphQ2hiYTJWNUxDQjJZV3gxWlYwcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205d2MxdHJaWGxkSUQwZ2RtRnNkV1V1WjJWMEtDbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJR052Ym5OMGNuVmpkRnh1SUNBZ0lHTnZibk4wSUc5aWFtVmpkQ0E5SUNSamIyNXpkSEoxWTNSdmNpQS9JQ1JqYjI1emRISjFZM1J2Y2lod2NtOXdjeWtnT2lCdVpYY2dLR04wYjNJZ1lYTWdRME04VkQ0cEtIQnliM0J6S1Z4dUlDQWdJR2xtSUNna1kyOXVjM1J5ZFdOMGIzSXBJRTlpYW1WamRDNWhjM05wWjI0b2IySnFaV04wTENCd2NtOXdjeWxjYmlBZ0lDQnBaaUFvSkhSNWNHVXBJSE5sZEZSNWNHVW9iMkpxWldOMExDQWtkSGx3WlNsY2JseHVJQ0FnSUdsbUlDaGpjM01wSUdWdWRpNXpaWFJEYzNNb2IySnFaV04wTENCamMzTXBYRzRnSUNBZ2FXWWdLR05zWVhOelRtRnRaU2tnWlc1MkxuTmxkRU5zWVhOektHOWlhbVZqZEN3Z1kyeGhjM05PWVcxbEtWeHVYRzRnSUNBZ0x5OGdZV1JrSUdOb2FXeGtjbVZ1WEc0Z0lDQWdabTl5SUNoamIyNXpkQ0JqYUdsc1pDQnZaaUJCY25KaGVTNXBjMEZ5Y21GNUtHTm9hV3hrY21WdUtTQS9JR05vYVd4a2NtVnVJRG9nVzJOb2FXeGtjbVZ1WFNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWTJocGJHUWdQVDA5SUhSeWRXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWhjSWxSeWVXbHVaeUIwYnlCaFpHUWdZbTl2YkdWaGJpQjJZV3gxWlNCdlppQmdkSEoxWldBZ1lYTWdZU0JqYUdsc1pDNWNJaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hqYUdsc1pDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvWTI5dWMzUWdZMmdnYjJZZ1kyaHBiR1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuWXVZV1JrUTJocGJHUW9iMkpxWldOMExDQmphQ3dnTFRFcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1kyaHBiR1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGk1aFpHUkRhR2xzWkNodlltcGxZM1FzSUdOb2FXeGtMQ0F0TVNsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklHaGhibVJzWlNCemFXZHVZV3h6WEc0Z0lDQWdZMjl1YzNRZ1pHbHpjRzl6WlVoaGJtUnNaWEp6SUQwZ2MybG5ibUZzY3k1dFlYQW9LRnR6YVdjc0lHaGhibVJzWlhKZEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRzVoYldVZ1BTQnJaV0poWW1sbWVTaHphV2NwWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR2xrSUQwZ2JtRnRaUzV6ZEdGeWRITlhhWFJvS0Z3aWJtOTBhV1o1TFZ3aUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnUHlCdlltcGxZM1F1WTI5dWJtVmpkQ2hnYm05MGFXWjVPam9rZTI1aGJXVXVjMnhwWTJVb055bDlZQ3dnYUdGdVpHeGxjaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lEb2diMkpxWldOMExtTnZibTVsWTNRb2EyVmlZV0pwWm5rb2MybG5LU3dnYUdGdVpHeGxjaWxjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnS0NrZ1BUNGdiMkpxWldOMExtUnBjMk52Ym01bFkzUW9hV1FwWEc0Z0lDQWdmU2xjYmx4dUlDQWdJQzh2SUdoaGJtUnNaU0JpYVc1a2FXNW5jMXh1SUNBZ0lHTnZibk4wSUdScGMzQnZjMlZDYVc1a2FXNW5jeUE5SUdKcGJtUnBibWR6TG0xaGNDZ29XM0J5YjNBc0lHSnBibVJwYm1kZEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1JwYzNCdmMyVWdQU0JpYVc1a2FXNW5Mbk4xWW5OamNtbGlaU2dvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCelpYUW9iMkpxWldOMExDQndjbTl3TENCaWFXNWthVzVuTG1kbGRDZ3BLVnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCelpYUW9iMkpxWldOMExDQndjbTl3TENCaWFXNWthVzVuTG1kbGRDZ3BLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdaR2x6Y0c5elpWeHVJQ0FnSUgwcFhHNWNiaUFnSUNBdkx5QmpiR1ZoYm5Wd1hHNGdJQ0FnYVdZZ0tHUnBjM0J2YzJWQ2FXNWthVzVuY3k1c1pXNW5kR2dnUGlBd0lIeDhJR1JwYzNCdmMyVklZVzVrYkdWeWN5NXNaVzVuZEdnZ1BpQXdLU0I3WEc0Z0lDQWdJQ0FnSUc5dVEyeGxZVzUxY0Nnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YjNObFNHRnVaR3hsY25NdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiM05sUW1sdVpHbHVaM011Wm05eVJXRmphQ2dvWTJJcElEMCtJR05pS0NrcFhHNGdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pEOHVLRzlpYW1WamRDbGNiaUFnSUNCeVpYUjFjbTRnYjJKcVpXTjBYRzU5WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JxYzNoeklEMGdhbk40WEc1Y2JtUmxZMnhoY21VZ1oyeHZZbUZzSUh0Y2JpQWdJQ0F2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnUUhSNWNHVnpZM0pwY0hRdFpYTnNhVzUwTDI1dkxXNWhiV1Z6Y0dGalpWeHVJQ0FnSUc1aGJXVnpjR0ZqWlNCS1UxZ2dlMXh1SUNBZ0lDQWdJQ0IwZVhCbElFVnNaVzFsYm5SVWVYQmxJRDBnYTJWNWIyWWdTVzUwY21sdWMybGpSV3hsYldWdWRITWdmQ0JHUXlCOElFTkRYRzRnSUNBZ0lDQWdJSFI1Y0dVZ1JXeGxiV1Z1ZENBOUlFZFBZbXBsWTNRdVQySnFaV04wWEc0Z0lDQWdJQ0FnSUhSNWNHVWdSV3hsYldWdWRFTnNZWE56SUQwZ1IwOWlhbVZqZEM1UFltcGxZM1JjYmx4dUlDQWdJQ0FnSUNCMGVYQmxJRXhwWW5KaGNubE5ZVzVoWjJWa1FYUjBjbWxpZFhSbGN6eERMQ0JRY205d2N6NGdQU0JLYzNoUWNtOXdjenhETENCUWNtOXdjejRnSmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCR1NWaE5SVG9nZDJoNUlHUnZaWE1nWVc0Z2FXNTBjbWx1YzJsaklHVnNaVzFsYm5RZ1lXeDNZWGx6SUhKbGMyOXNkbVVnWVhNZ1JrTS9YRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QmZYM1I1Y0dVL09pQkRJR1Y0ZEdWdVpITWdRME1nUHlCY0lrTkRYQ0lnT2lCRElHVjRkR1Z1WkhNZ1JrTWdQeUJjSWtaRFhDSWdPaUJ1WlhabGNseHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUVCMGVYQmxjMk55YVhCMExXVnpiR2x1ZEM5dWJ5MWxiWEIwZVMxdlltcGxZM1F0ZEhsd1pWeHVJQ0FnSUNBZ0lDQnBiblJsY21aaFkyVWdTVzUwY21sdWMybGpSV3hsYldWdWRITWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdZMk02SUVORFVISnZjSE04UjNSckxrSnZlQ3dnUjNSckxrSnZlQzVEYjI1emRISjFZM1J2Y2xCeWIzQnpMQ0JIZEdzdVFtOTRMbE5wWjI1aGJGTnBaMjVoZEhWeVpYTStYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5Qm1Zem9nUmtOUWNtOXdjenhIZEdzdVYybGtaMlYwTENCR2JsQnliM0J6UGx4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhVzUwWlhKbVlXTmxJRVZzWlcxbGJuUkRhR2xzWkhKbGJrRjBkSEpwWW5WMFpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ1FIUjVjR1Z6WTNKcGNIUXRaWE5zYVc1MEwyNXZMV1Z0Y0hSNUxXOWlhbVZqZEMxMGVYQmxYRzRnSUNBZ0lDQWdJQ0FnSUNCamFHbHNaSEpsYmpvZ2UzMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjFjYmlJc0lDSnBiWEJ2Y25RZ1IwOWlhbVZqZENCbWNtOXRJRndpWjJrNkx5OUhUMkpxWldOMFhDSmNibWx0Y0c5eWRDQkhhVzhnWm5KdmJTQmNJbWRwT2k4dlIybHZYQ0pjYm1sdGNHOXlkQ0JIVEdsaUlHWnliMjBnWENKbmFUb3ZMMGRNYVdKY0lseHVhVzF3YjNKMElIc2dkSGx3WlNCUVlYTmpZV3hwWm5rc0lHTmhiV1ZzYVdaNUxDQnJaV0poWW1sbWVTQjlJR1p5YjIwZ1hDSXVMaTkxZEdsc0xtcHpYQ0pjYm1sdGNHOXlkQ0IwZVhCbElIc2dSR1ZsY0VsdVptVnlMQ0JTWldOMWNuTnBkbVZKYm1abGNpQjlJR1p5YjIwZ1hDSXVMaTkyWVhKcFlXNTBMbXB6WENKY2JseHVkSGx3WlNCVGRXSnpZM0pwWW1WRFlXeHNZbUZqYXlBOUlDZ3BJRDArSUhadmFXUmNiblI1Y0dVZ1JHbHpjRzl6WlVaMWJtTjBhVzl1SUQwZ0tDa2dQVDRnZG05cFpGeHVkSGx3WlNCVGRXSnpZM0pwWW1WR2RXNWpkR2x2YmlBOUlDaGpZV3hzWW1GamF6b2dVM1ZpYzJOeWFXSmxRMkZzYkdKaFkyc3BJRDArSUVScGMzQnZjMlZHZFc1amRHbHZibHh1WEc1bGVIQnZjblFnZEhsd1pTQkJZMk5sYzNObFpEeFVQaUE5SUZRZ1pYaDBaVzVrY3lCQlkyTmxjM052Y2p4cGJtWmxjaUJXUGlBL0lGWWdPaUJ1WlhabGNseHVYRzR2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnUUhSNWNHVnpZM0pwY0hRdFpYTnNhVzUwTDI1dkxYVnVjMkZtWlMxa1pXTnNZWEpoZEdsdmJpMXRaWEpuYVc1blhHNWxlSEJ2Y25RZ1kyeGhjM01nUVdOalpYTnpiM0k4VkNBOUlIVnVhMjV2ZDI0K0lHVjRkR1Z1WkhNZ1JuVnVZM1JwYjI0Z2UxeHVJQ0FnSUhOMFlYUnBZeUFrWjNSNWNHVWdQU0JIVDJKcVpXTjBMbFJaVUVWZlNsTlBRa3BGUTFRZ1lYTWdkVzVyYm05M2JpQmhjeUJIVDJKcVpXTjBMa2RVZVhCbFBFRmpZMlZ6YzI5eVBseHVYRzRnSUNBZ0kyZGxkRG9nS0NrZ1BUNGdWRnh1SUNBZ0lDTnpkV0p6WTNKcFltVTZJRk4xWW5OamNtbGlaVVoxYm1OMGFXOXVYRzVjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhuWlhRNklDZ3BJRDArSUZRc0lITjFZbk5qY21saVpUODZJRk4xWW5OamNtbGlaVVoxYm1OMGFXOXVLU0I3WEc0Z0lDQWdJQ0FnSUhOMWNHVnlLRndpY21WMGRYSnVJR0Z5WjNWdFpXNTBjeTVqWVd4c1pXVXVYMk5oYkd3dVlYQndiSGtvWVhKbmRXMWxiblJ6TG1OaGJHeGxaU3dnWVhKbmRXMWxiblJ6S1Z3aUtWeHVJQ0FnSUNBZ0lDQjBhR2x6TGlOemRXSnpZM0pwWW1VZ1BTQnpkV0p6WTNKcFltVWdQejhnS0NncElEMCtJQ2dwSUQwK0lIWnZhV1FnTUNsY2JpQWdJQ0FnSUNBZ2RHaHBjeTRqWjJWMElEMGdaMlYwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nVTNWaWMyTnlhV0psSUdadmNpQjJZV3gxWlNCamFHRnVaMlZ6TGx4dUlDQWdJQ0FxSUVCd1lYSmhiU0JqWVd4c1ltRmpheUJVYUdVZ1puVnVZM1JwYjI0Z2RHOGdjblZ1SUhkb1pXNGdkR2hsSUdOMWNuSmxiblFnZG1Gc2RXVWdZMmhoYm1kbGN5NWNiaUFnSUNBZ0tpQkFjbVYwZFhKdWN5QlZibk4xWW5OamNtbGlaU0JtZFc1amRHbHZiaTVjYmlBZ0lDQWdLaTljYmlBZ0lDQnpkV0p6WTNKcFltVW9ZMkZzYkdKaFkyczZJRk4xWW5OamNtbGlaVU5oYkd4aVlXTnJLVG9nUkdsemNHOXpaVVoxYm1OMGFXOXVJSHRjYmlBZ0lDQWdJQ0FnTHk4Z1ZFOUVUem9nWVhWMGJ5QjFibk4xWWlCM2FHVnVJR0VnYzJOdmNHVWdhWE1nWVhaaGFXeGhZbXhsUDF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NGpjM1ZpYzJOeWFXSmxLR05oYkd4aVlXTnJLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUJ5WlhSMWNtNXpJRlJvWlNCamRYSnlaVzUwSUhaaGJIVmxMbHh1SUNBZ0lDQXFMMXh1SUNBZ0lHZGxkQ2dwT2lCVUlIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11STJkbGRDZ3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRM0psWVhSbElHRWdibVYzSUdCQlkyTmxjM052Y21BZ2RHaGhkQ0JoY0hCc2FXVnpJR0VnZEhKaGJuTm1iM0p0WVhScGIyNGdiMjRnYVhSeklIWmhiSFZsTGx4dUlDQWdJQ0FxSUVCd1lYSmhiU0IwY21GdWMyWnZjbTBnVkdobElIUnlZVzV6Wm05eWJXRjBhVzl1SUhSdklHRndjR3g1TGlCVGFHOTFiR1FnWW1VZ1lTQndkWEpsSUdaMWJtTjBhVzl1TGx4dUlDQWdJQ0FxTDF4dUlDQWdJR0Z6UEZJZ1BTQlVQaWgwY21GdWMyWnZjbTA2SUNoMllXeDFaVG9nVkNrZ1BUNGdVaWs2SUVGalkyVnpjMjl5UEZJK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJCWTJObGMzTnZjaWdvS1NBOVBpQjBjbUZ1YzJadmNtMG9kR2hwY3k0aloyVjBLQ2twTENCMGFHbHpMaU56ZFdKelkzSnBZbVVwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSEp2ZEdWamRHVmtJRjlqWVd4c1BGSWdQU0JVUGloMGNtRnVjMlp2Y20wNklDaDJZV3gxWlRvZ1ZDa2dQVDRnVWlrNklFRmpZMlZ6YzI5eVBGSStJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYTW9kSEpoYm5ObWIzSnRLVnh1SUNBZ0lIMWNibHh1SUNBZ0lIUnZVM1J5YVc1bktDazZJSE4wY21sdVp5QjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmdRV05qWlhOemIzSThKSHQwYUdsekxtZGxkQ2dwZlQ1Z1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnVzFONWJXSnZiQzUwYjFCeWFXMXBkR2wyWlYwb0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmloY0lrRmpZMlZ6YzI5eUlHbHRjR3hwWTJsMGJIa2dZMjl1ZG1WeWRHVmtJSFJ2SUdFZ2NISnBiV2wwYVhabElIWmhiSFZsTGx3aUtWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYjFOMGNtbHVaeWdwWEc0Z0lDQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ2FXNTBaWEptWVdObElFRmpZMlZ6YzI5eVBGUStJSHRjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJEY21WaGRHVWdZU0J1WlhjZ1lFRmpZMlZ6YzI5eVlDQjBhR0YwSUdGd2NHeHBaWE1nWVNCMGNtRnVjMlp2Y20xaGRHbHZiaUJ2YmlCcGRITWdkbUZzZFdVdVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUhSeVlXNXpabTl5YlNCVWFHVWdkSEpoYm5ObWIzSnRZWFJwYjI0Z2RHOGdZWEJ3YkhrdUlGTm9iM1ZzWkNCaVpTQmhJSEIxY21VZ1puVnVZM1JwYjI0dVhHNGdJQ0FnSUNvdlhHNGdJQ0FnUEZJZ1BTQlVQaWgwY21GdWMyWnZjbTA2SUNoMllXeDFaVG9nVkNrZ1BUNGdVaWs2SUVGalkyVnpjMjl5UEZJK1hHNTlYRzVjYm1WNGNHOXlkQ0IwZVhCbElGTmxkSFJsY2p4VVBpQTlJSHRjYmlBZ0lDQW9kbUZzZFdVNklGUXBPaUIyYjJsa1hHNGdJQ0FnS0haaGJIVmxPaUFvY0hKbGRqb2dWQ2tnUFQ0Z1ZDazZJSFp2YVdSY2JuMWNibHh1Wlhod2IzSjBJSFI1Y0dVZ1UzUmhkR1U4VkQ0Z1BTQmJRV05qWlhOemIzSThWRDRzSUZObGRIUmxjanhVUGwxY2JseHVMeW9xWEc0Z0tpQkRjbVZoZEdVZ1lTQjNjbWwwWVdKc1pTQnphV2R1WVd3dVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUdsdWFYUWdWR2hsSUdsdWRHbGhiQ0IyWVd4MVpTQnZaaUIwYUdVZ2MybG5ibUZzWEc0Z0tpQkFjbVYwZFhKdWN5QkJiaUJnUVdOalpYTnpiM0pnSUdGdVpDQmhJSE5sZEhSbGNpQm1kVzVqZEdsdmJseHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxVM1JoZEdVOFZENG9hVzVwZERvZ1ZDazZJRk4wWVhSbFBGUStJSHRjYmlBZ0lDQnNaWFFnWTNWeWNtVnVkRlpoYkhWbElEMGdhVzVwZEZ4dUlDQWdJR052Ym5OMElITjFZbk5qY21saVpYSnpJRDBnYm1WM0lGTmxkRHhUZFdKelkzSnBZbVZEWVd4c1ltRmphejRvS1Z4dVhHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxPaUJUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0J6ZFdKelkzSnBZbVZ5Y3k1aFpHUW9ZMkZzYkdKaFkyc3BYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQW9LU0E5UGlCemRXSnpZM0pwWW1WeWN5NWtaV3hsZEdVb1kyRnNiR0poWTJzcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdjMlYwSUQwZ0tHNWxkMVpoYkhWbE9pQjFibXR1YjNkdUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSFpoYkhWbE9pQlVJRDBnZEhsd1pXOW1JRzVsZDFaaGJIVmxJRDA5UFNCY0ltWjFibU4wYVc5dVhDSWdQeUJ1WlhkV1lXeDFaU2hqZFhKeVpXNTBWbUZzZFdVcElEb2dibVYzVm1Gc2RXVmNiaUFnSUNBZ0lDQWdhV1lnS0dOMWNuSmxiblJXWVd4MVpTQWhQVDBnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5SV1lXeDFaU0E5SUhaaGJIVmxYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QnlkVzV1YVc1bklHTmhiR3hpWVdOcmN5QnRhV2RvZENCdGRYUmhkR1VnYzNWaWMyTnlhV0psY25OY2JpQWdJQ0FnSUNBZ0lDQWdJRUZ5Y21GNUxtWnliMjBvYzNWaWMyTnlhV0psY25NcExtWnZja1ZoWTJnb0tHTmlLU0E5UGlCallpZ3BLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlGdHVaWGNnUVdOalpYTnpiM0lvS0NrZ1BUNGdZM1Z5Y21WdWRGWmhiSFZsTENCemRXSnpZM0pwWW1VcExDQnpaWFFnWVhNZ1UyVjBkR1Z5UEZRK1hWeHVmVnh1WEc0dktpcGNiaUFxSUVOeVpXRjBaU0JoYmlCZ1FXTmpaWE56YjNKZ0lIZG9hV05vSUdseklHTnZiWEIxZEdWa0lHWnliMjBnWVNCc2FYTjBJRzltSUdCQlkyTmxjM052Y21CekxseHVJQ3BjYmlBcUlHQmdZSFJ6SUVWNFlXMXdiR1ZjYmlBcUlHeGxkQ0JoT2lCQlkyTmxjM052Y2p4dWRXMWlaWEkrWEc0Z0tpQnNaWFFnWWpvZ1FXTmpaWE56YjNJOGMzUnlhVzVuUGx4dUlDb2dZMjl1YzNRZ1l6b2dRV05qWlhOemIzSThXMjUxYldKbGNpd2djM1J5YVc1blhUNGdQU0JqY21WaGRHVkRiMjF3ZFhSbFpDaGJZU3dnWWwwcFhHNGdLaUJqYjI1emRDQmtPaUJCWTJObGMzTnZjanh6ZEhKcGJtYytJRDBnWTNKbFlYUmxRMjl0Y0hWMFpXUW9XMkVzSUdKZExDQW9ZVG9nYm5WdFltVnlMQ0JpT2lCemRISnBibWNwSUQwK0lHQWtlMkY5SUNSN1luMWdLVnh1SUNvZ1lHQmdYRzRnS2x4dUlDb2dRSEJoY21GdElHUmxjSE1nVEdsemRDQnZaaUJnUVdOalpYTnpiM0p6WUM1Y2JpQXFJRUJ3WVhKaGJTQjBjbUZ1YzJadmNtMGdRVzRnYjNCMGFXOXVZV3dnZEhKaGJuTm1iM0p0SUdaMWJtTjBhVzl1TGx4dUlDb2dRSEpsZEhWeWJuTWdWR2hsSUdOdmJYQjFkR1ZrSUdCQlkyTmxjM052Y21BdVhHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVkRiMjF3ZFhSbFpEeGNiaUFnSUNCamIyNXpkQ0JFWlhCeklHVjRkR1Z1WkhNZ1FYSnlZWGs4UVdOalpYTnpiM0k4WVc1NVBqNHNYRzRnSUNBZ1FYSm5jeUJsZUhSbGJtUnpJSHNnVzBzZ2FXNGdhMlY1YjJZZ1JHVndjMTA2SUVGalkyVnpjMlZrUEVSbGNITmJTMTArSUgwc1hHNGdJQ0FnVmlBOUlFRnlaM01zWEc0K0tHUmxjSE02SUVSbGNITXNJSFJ5WVc1elptOXliVDg2SUNndUxpNWhjbWR6T2lCQmNtZHpLU0E5UGlCV0tUb2dRV05qWlhOemIzSThWajRnZTF4dUlDQWdJR3hsZENCa2FYTndiM05sT2lCQmNuSmhlVHhFYVhOd2IzTmxSblZ1WTNScGIyNCtYRzRnSUNBZ1kyOXVjM1FnYzNWaWMyTnlhV0psY25NZ1BTQnVaWGNnVTJWMFBGTjFZbk5qY21saVpVTmhiR3hpWVdOclBpZ3BYRzRnSUNBZ1kyOXVjM1FnWTJGamFHVWdQU0J1WlhjZ1FYSnlZWGs4ZFc1cmJtOTNiajRvWkdWd2N5NXNaVzVuZEdncFhHNWNiaUFnSUNCamIyNXpkQ0J6ZFdKelkzSnBZbVU2SUZOMVluTmpjbWxpWlVaMWJtTjBhVzl1SUQwZ0tHTmhiR3hpWVdOcktTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2IzTmxJRDBnWkdWd2N5NXRZWEFvS0dSbGNDd2dhU2tnUFQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pYQXVjM1ZpYzJOeWFXSmxLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdkbUZzZFdVZ1BTQmtaWEF1WjJWMEtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTmhZMmhsVzJsZElDRTlQU0IyWVd4MVpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZqYUdWYmFWMGdQU0JrWlhBdVoyVjBLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUZ5Y21GNUxtWnliMjBvYzNWaWMyTnlhV0psY25NcExtWnZja1ZoWTJnb0tHTmlLU0E5UGlCallpZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J6ZFdKelkzSnBZbVZ5Y3k1aFpHUW9ZMkZzYkdKaFkyc3BYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOMVluTmpjbWxpWlhKekxtUmxiR1YwWlNoallXeHNZbUZqYXlsY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemRXSnpZM0pwWW1WeWN5NXphWHBsSUQwOVBTQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHOXpaUzV0WVhBb0tHTmlLU0E5UGlCallpZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCdmMyVXViR1Z1WjNSb0lEMGdNRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oWTJobExteGxibWQwYUNBOUlEQmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJR2RsZENBOUlDZ3BPaUJXSUQwK0lIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1lYSm5jeUE5SUdSbGNITXViV0Z3S0Noa1pYQXNJR2twSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hZMkZqYUdWYmFWMHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVdOb1pWdHBYU0E5SUdSbGNDNW5aWFFvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyRmphR1ZiYVYxY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEpoYm5ObWIzSnRJRDhnZEhKaGJuTm1iM0p0S0M0dUxpaGhjbWR6SUdGeklFRnlaM01wS1NBNklDaGhjbWR6SUdGeklGWXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QkJZMk5sYzNOdmNpaG5aWFFzSUhOMVluTmpjbWxpWlNsY2JuMWNibHh1THlvcVhHNGdLaUJEY21WaGRHVWdZVzRnWUVGalkyVnpjMjl5WUNCdmJpQmhJR0JIVDJKcVpXTjBMazlpYW1WamRHQW5jeUJnY0hKdmNHVnlkSGxnTGx4dUlDcGNiaUFxSUVCd1lYSmhiU0J2WW1wbFkzUWdWR2hsSUdCSFQySnFaV04wTGs5aWFtVmpkR0FnZEc4Z1kzSmxZWFJsSUhSb1pTQmdRV05qWlhOemIzSmdJRzl1TGx4dUlDb2dRSEJoY21GdElIQnliM0JsY25SNUlFOXVaU0J2WmlCcGRITWdjbVZuYVhOMFpYSmxaQ0J3Y205d1pYSjBhV1Z6TGx4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZM0psWVhSbFFtbHVaR2x1Wnp4VUlHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzSUZBZ1pYaDBaVzVrY3lCclpYbHZaaUJVUGloY2JpQWdJQ0J2WW1wbFkzUTZJRlFzWEc0Z0lDQWdjSEp2Y0dWeWRIazZJRVY0ZEhKaFkzUThVQ3dnYzNSeWFXNW5QaXhjYmlrNklFRmpZMlZ6YzI5eVBGUmJVRjArWEc1Y2JpOHZJRlJQUkU4NklITjFjSEJ2Y25RZ2JtVnpkR1ZrSUdKcGJtUnBibWR6WEc0dkx5QmxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUW1sdVpHbHVaenhjYmk4dklDQWdJQ0JVSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUXNYRzR2THlBZ0lDQWdVREVnWlhoMFpXNWtjeUJyWlhsdlppQlVMRnh1THk4Z0lDQWdJRkF5SUdWNGRHVnVaSE1nYTJWNWIyWWdUbTl1VG5Wc2JHRmliR1U4VkZ0UU1WMCtMRnh1THk4Z1BpaGNiaTh2SUNBZ0lDQnZZbXBsWTNRNklGUXNYRzR2THlBZ0lDQWdjSEp2Y0dWeWRIa3hPaUJGZUhSeVlXTjBQRkF4TENCemRISnBibWMrTEZ4dUx5OGdJQ0FnSUhCeWIzQmxjblI1TWpvZ1JYaDBjbUZqZER4UU1pd2djM1J5YVc1blBpeGNiaTh2SUNrNklFRmpZMlZ6YzI5eVBFNXZiazUxYkd4aFlteGxQRlJiVURGZFBsdFFNbDArWEc1Y2JpOHFLbHh1SUNvZ1EzSmxZWFJsSUdGdUlHQkJZMk5sYzNOdmNtQWdiMjRnWVNCZ1IybHZMbE5sZEhScGJtZHpZQ2R6SUdCclpYbGdMbHh1SUNvZ1ZtRnNkV1Z6SUdGeVpTQnlaV04xY25OcGRtVnNlU0IxYm5CaFkydGxaQzVjYmlBcVhHNGdLaUJBWkdWd2NtVmpZWFJsWkNCd2NtVm1aWElnZFhOcGJtY2dlMEJzYVc1cklHTnlaV0YwWlZObGRIUnBibWR6ZlM1Y2JpQXFJRUJ3WVhKaGJTQnZZbXBsWTNRZ1ZHaGxJR0JIYVc4dVUyVjBkR2x1WjNOZ0lIUnZJR055WldGMFpTQjBhR1VnWUVGalkyVnpjMjl5WUNCdmJpNWNiaUFxSUVCd1lYSmhiU0JyWlhrZ1ZHaGxJSE5sZEhScGJtZHpJR3RsZVZ4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZM0psWVhSbFFtbHVaR2x1Wnp4VVBpaHpaWFIwYVc1bmN6b2dSMmx2TGxObGRIUnBibWR6TENCclpYazZJSE4wY21sdVp5azZJRUZqWTJWemMyOXlQRlErWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZDYVc1a2FXNW5QRlErS0c5aWFtVmpkRG9nUjA5aWFtVmpkQzVQWW1wbFkzUWdmQ0JIYVc4dVUyVjBkR2x1WjNNc0lHdGxlVG9nYzNSeWFXNW5LVG9nUVdOalpYTnpiM0k4VkQ0Z2UxeHVJQ0FnSUdOdmJuTjBJSEJ5YjNBZ1BTQnJaV0poWW1sbWVTaHJaWGtwSUdGeklHdGxlVzltSUhSNWNHVnZaaUJ2WW1wbFkzUmNibHh1SUNBZ0lHTnZibk4wSUhOMVluTmpjbWxpWlRvZ1UzVmljMk55YVdKbFJuVnVZM1JwYjI0Z1BTQW9ZMkZzYkdKaFkyc3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJsbklEMGdiMkpxWldOMElHbHVjM1JoYm1ObGIyWWdSMmx2TGxObGRIUnBibWR6SUQ4Z1hDSmphR0Z1WjJWa1hDSWdPaUJjSW01dmRHbG1lVndpWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR2xrSUQwZ2IySnFaV04wTG1OdmJtNWxZM1FvWUNSN2MybG5mVG82Skh0d2NtOXdmV0FzSUNncElEMCtJR05oYkd4aVlXTnJLQ2twWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUFvS1NBOVBpQnZZbXBsWTNRdVpHbHpZMjl1Ym1WamRDaHBaQ2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZENCblpYUWdQU0FvS1RvZ1ZDQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaHZZbXBsWTNRZ2FXNXpkR0Z1WTJWdlppQkhhVzh1VTJWMGRHbHVaM01wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnZZbXBsWTNRdVoyVjBYM1poYkhWbEtHdGxlU2t1Y21WamRYSnphWFpsVlc1d1lXTnJLQ2tnWVhNZ1ZGeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaMlYwZEdWeUlEMGdZR2RsZEY4a2UzQnliM0F1Y21Wd2JHRmpaVUZzYkNoY0lpMWNJaXdnWENKZlhDSXBmV0FnWVhNZ2EyVjViMllnZEhsd1pXOW1JRzlpYW1WamRGeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aMlYwZEdWeUlHbHVJRzlpYW1WamRDQW1KaUIwZVhCbGIyWWdiMkpxWldOMFcyZGxkSFJsY2wwZ1BUMDlJRndpWm5WdVkzUnBiMjVjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlBb2IySnFaV04wVzJkbGRIUmxjbDBnWVhNZ0tDa2dQVDRnZFc1cmJtOTNiaWtvS1NCaGN5QlVYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdjbTl3SUdsdUlHOWlhbVZqZENrZ2NtVjBkWEp1SUc5aWFtVmpkRnR3Y205d1hTQmhjeUJVWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYTJWNUlHbHVJRzlpYW1WamRDa2djbVYwZFhKdUlHOWlhbVZqZEZ0clpYa2dZWE1nYTJWNWIyWWdkSGx3Wlc5bUlHOWlhbVZqZEYwZ1lYTWdWRnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCRmNuSnZjaWhnWTJGdWJtOTBJR2RsZENCd2NtOXdaWEowZVNBa2UydGxlWDFnS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRzVsZHlCQlkyTmxjM052Y2loblpYUXNJSE4xWW5OamNtbGlaU2xjYm4xY2JseHVkSGx3WlNCRGIyNXVaV04wYVc5dVNHRnVaR3hsY2p4Y2JpQWdJQ0JQSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUXNYRzRnSUNBZ1V5QmxlSFJsYm1SeklHdGxlVzltSUU5YlhDSWtjMmxuYm1Gc2Mxd2lYU3hjYmlBZ0lDQlVMRnh1UGlBOUlFOWJYQ0lrYzJsbmJtRnNjMXdpWFZ0VFhTQmxlSFJsYm1SeklDZ3VMaTVoY21kek9pQmhibmxiWFNrZ1BUNGdhVzVtWlhJZ1VseHVJQ0FnSUQ4Z2RtOXBaQ0JsZUhSbGJtUnpJRkpjYmlBZ0lDQWdJQ0FnUHlBb0xpNHVZWEpuY3pvZ1d5NHVMbEJoY21GdFpYUmxjbk04VDF0Y0lpUnphV2R1WVd4elhDSmRXMU5kUGl3Z1kzVnljbVZ1ZEZaaGJIVmxPaUJVWFNrZ1BUNGdWRnh1SUNBZ0lDQWdJQ0E2SUc1bGRtVnlYRzRnSUNBZ09pQnVaWFpsY2x4dVhHNHZLaXBjYmlBcUlFTnlaV0YwWlNCaGJpQmdRV05qWlhOemIzSmdJSGRvYVdOb0lITmxkSE1nZFhBZ1lTQnNhWE4wSUc5bUlHQkhUMkpxWldOMExrOWlhbVZqZEdBZ2MybG5ibUZzSUdOdmJtNWxZM1JwYjI1ekxseHVJQ3BjYmlBcUlHQmdZSFJ6SUVWNFlXMXdiR1ZjYmlBcUlHTnZibk4wSUhaaGJIVmxPaUJCWTJObGMzTnZjanh6ZEhKcGJtYytJRDBnWTNKbFlYUmxRMjl1Ym1WamRHbHZiaWhjYmlBcUlDQWdYQ0pwYm1sMGFXRnNJSFpoYkhWbFhDSXNYRzRnS2lBZ0lGdHZZbW94TENCY0luTnBaeTF1WVcxbFhDSXNJQ2d1TGk1aGNtZHpLU0E5UGlCY0luTjBjbHdpWFN4Y2JpQXFJQ0FnVzI5aWFqSXNJRndpYzJsbkxXNWhiV1ZjSWl3Z0tDNHVMbUZ5WjNNcElEMCtJRndpYzNSeVhDSmRYRzRnS2lBcFhHNGdLaUJnWUdCY2JpQXFYRzRnS2lCQWNHRnlZVzBnYVc1cGRDQlVhR1VnYVc1cGRHbGhiQ0IyWVd4MVpWeHVJQ29nUUhCaGNtRnRJSE5wWjI1aGJITWdRU0JzYVhOMElHOW1JR0JIVDJKcVpXTjBMazlpYW1WamRHQXNJSE5wWjI1aGJDQnVZVzFsSUdGdVpDQmpZV3hzWW1GamF5QndZV2x5Y3lCMGJ5QmpiMjV1WldOMExseHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxRMjl1Ym1WamRHbHZianhjYmlBZ0lDQlVMRnh1SUNBZ0lFOHhJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpFZ1pYaDBaVzVrY3lCclpYbHZaaUJQTVZ0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFOHlJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpJZ1pYaDBaVzVrY3lCclpYbHZaaUJQTWx0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFOHpJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpNZ1pYaDBaVzVrY3lCclpYbHZaaUJQTTF0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODBJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpRZ1pYaDBaVzVrY3lCclpYbHZaaUJQTkZ0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODFJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpVZ1pYaDBaVzVrY3lCclpYbHZaaUJQTlZ0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODJJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpZZ1pYaDBaVzVrY3lCclpYbHZaaUJQTmx0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODNJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpjZ1pYaDBaVzVrY3lCclpYbHZaaUJQTjF0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODRJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpnZ1pYaDBaVzVrY3lCclpYbHZaaUJQT0Z0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODVJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXprZ1pYaDBaVzVrY3lCclpYbHZaaUJQT1Z0Y0lpUnphV2R1WVd4elhDSmRMRnh1UGloY2JpQWdJQ0JwYm1sME9pQlVMRnh1SUNBZ0lHZ3hPaUJiVHpFc0lGTXhMQ0JEYjI1dVpXTjBhVzl1U0dGdVpHeGxjanhQTVN3Z1V6RXNJRlErWFN4Y2JpQWdJQ0JvTWo4NklGdFBNaXdnVXpJc0lFTnZibTVsWTNScGIyNUlZVzVrYkdWeVBFOHlMQ0JUTWl3Z1ZENWRMRnh1SUNBZ0lHZ3pQem9nVzA4ekxDQlRNeXdnUTI5dWJtVmpkR2x2YmtoaGJtUnNaWEk4VHpNc0lGTXpMQ0JVUGwwc1hHNGdJQ0FnYURRL09pQmJUelFzSUZNMExDQkRiMjV1WldOMGFXOXVTR0Z1Wkd4bGNqeFBOQ3dnVXpRc0lGUStYU3hjYmlBZ0lDQm9OVDg2SUZ0UE5Td2dVelVzSUVOdmJtNWxZM1JwYjI1SVlXNWtiR1Z5UEU4MUxDQlROU3dnVkQ1ZExGeHVJQ0FnSUdnMlB6b2dXMDgyTENCVE5pd2dRMjl1Ym1WamRHbHZia2hoYm1Sc1pYSThUellzSUZNMkxDQlVQbDBzWEc0Z0lDQWdhRGMvT2lCYlR6Y3NJRk0zTENCRGIyNXVaV04wYVc5dVNHRnVaR3hsY2p4UE55d2dVemNzSUZRK1hTeGNiaUFnSUNCb09EODZJRnRQT0N3Z1V6Z3NJRU52Ym01bFkzUnBiMjVJWVc1a2JHVnlQRTg0TENCVE9Dd2dWRDVkTEZ4dUlDQWdJR2c1UHpvZ1cwODVMQ0JUT1N3Z1EyOXVibVZqZEdsdmJraGhibVJzWlhJOFR6a3NJRk01TENCVVBsMHNYRzRwSUh0Y2JpQWdJQ0JzWlhRZ2RtRnNkV1VnUFNCcGJtbDBYRzRnSUNBZ2JHVjBJR1JwYzNCdmMyVTZJRUZ5Y21GNVBFUnBjM0J2YzJWR2RXNWpkR2x2Ymo1Y2JpQWdJQ0JqYjI1emRDQnpkV0p6WTNKcFltVnljeUE5SUc1bGR5QlRaWFE4VTNWaWMyTnlhV0psUTJGc2JHSmhZMnMrS0NsY2JpQWdJQ0JqYjI1emRDQnphV2R1WVd4eklEMGdXMmd4TENCb01pd2dhRE1zSUdnMExDQm9OU3dnYURZc0lHZzNMQ0JvT0N3Z2FEbGRMbVpwYkhSbGNpZ29hQ2tnUFQ0Z2FDQWhQVDBnZFc1a1pXWnBibVZrS1Z4dVhHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxPaUJUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2MzVmljMk55YVdKbGNuTXVjMmw2WlNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTQTlJSE5wWjI1aGJITXViV0Z3S0NoYmIySnFaV04wTENCemFXZHVZV3dzSUdOaGJHeGlZV05yWFNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnUjA5aWFtVmpkQzVQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMbU52Ym01bFkzUXVZMkZzYkNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YVdkdVlXd2dZWE1nYzNSeWFXNW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBb1h5d2dMaTR1WVhKbmN5a2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdibVYzVm1Gc2RXVWdQU0JqWVd4c1ltRmpheWd1TGk1aGNtZHpMQ0IyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTQWhQVDBnYm1WM1ZtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlNBOUlHNWxkMVpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRWEp5WVhrdVpuSnZiU2h6ZFdKelkzSnBZbVZ5Y3lrdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDZ3BJRDArSUVkUFltcGxZM1F1VDJKcVpXTjBMbkJ5YjNSdmRIbHdaUzVrYVhOamIyNXVaV04wTG1OaGJHd29iMkpxWldOMExDQnBaQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCemRXSnpZM0pwWW1WeWN5NWhaR1FvWTJGc2JHSmhZMnNwWEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITjFZbk5qY21saVpYSnpMbVJsYkdWMFpTaGpZV3hzWW1GamF5bGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjRzl6WlM1dFlYQW9LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnZjMlV1YkdWdVozUm9JRDBnTUZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJCWTJObGMzTnZjaWdvS1NBOVBpQjJZV3gxWlN3Z2MzVmljMk55YVdKbEtWeHVmVnh1WEc0dktpcGNiaUFxSUVOeVpXRjBaU0JoSUhOcFoyNWhiQ0JtY205dElHRWdjSEp2ZG1sbGNpQm1kVzVqZEdsdmJpNWNiaUFxSUZSb1pTQndjbTkyYVdSbGNpQnBjeUJqWVd4c1pXUWdkMmhsYmlCMGFHVWdabWx5YzNRZ2MzVmljMk55YVdKbGNpQmhjSEJsWVhKeklHRnVaQ0IwYUdVZ2NtVjBkWEp1WldRZ1pHbHpjRzl6WlZ4dUlDb2dablZ1WTNScGIyNGdabkp2YlNCMGFHVWdjSEp2ZG1sa1pYSWdkMmxzYkNCaVpTQmpZV3hzWldRZ2QyaGxiaUIwYUdVZ2JuVnRZbVZ5SUc5bUlITjFZbk5qY21saVpYSnpJR1J5YjNBZ2RHOGdlbVZ5Ynk1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDcGNiaUFxSUdCZ1lIUnpYRzRnS2lCamIyNXpkQ0IyWVd4MVpTQTlJR055WldGMFpVVjRkR1Z5Ym1Gc0tEQXNJQ2h6WlhRcElEMCtJSHRjYmlBcUlDQWdZMjl1YzNRZ2FXNTBaWEoyWVd3Z1BTQnpaWFJKYm5SbGNuWmhiQ2dvS1NBOVBpQnpaWFFvS0hZcElEMCtJSFlnS3lBeEtTbGNiaUFxSUNBZ2NtVjBkWEp1SUNncElEMCtJR05zWldGeVNXNTBaWEoyWVd3b2FXNTBaWEoyWVd3cFhHNGdLaUI5S1Z4dUlDb2dZR0JnWEc0Z0tseHVJQ29nUUhCaGNtRnRJR2x1YVhRZ1ZHaGxJR2x1YVhScFlXd2dkbUZzZFdWY2JpQXFJRUJ3WVhKaGJTQndjbTlrZFdObGNpQlVhR1VnY0hKdlpIVmpaWElnWm5WdVkzUnBiMjRnZDJocFkyZ2djMmh2ZFd4a0lISmxkSFZ5YmlCaElHTnNaV0Z1ZFhBZ1puVnVZM1JwYjI1Y2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpVVjRkR1Z5Ym1Gc1BGUStLRnh1SUNBZ0lHbHVhWFE2SUZRc1hHNGdJQ0FnY0hKdlpIVmpaWEk2SUNoelpYUTZJRk5sZEhSbGNqeFVQaWtnUFQ0Z1JHbHpjRzl6WlVaMWJtTjBhVzl1TEZ4dUtUb2dRV05qWlhOemIzSThWRDRnZTF4dUlDQWdJR3hsZENCamRYSnlaVzUwVm1Gc2RXVWdQU0JwYm1sMFhHNGdJQ0FnYkdWMElHUnBjM0J2YzJVNklFUnBjM0J2YzJWR2RXNWpkR2x2Ymx4dUlDQWdJR052Ym5OMElITjFZbk5qY21saVpYSnpJRDBnYm1WM0lGTmxkRHhUZFdKelkzSnBZbVZEWVd4c1ltRmphejRvS1Z4dVhHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxPaUJUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2MzVmljMk55YVdKbGNuTXVjMmw2WlNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTQTlJSEJ5YjJSMVkyVnlLQ2gyT2lCMWJtdHViM2R1S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNWbUZzZFdVNklGUWdQU0IwZVhCbGIyWWdkaUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lJRDhnZGloamRYSnlaVzUwVm1Gc2RXVXBJRG9nZGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVaWGRXWVd4MVpTQWhQVDBnWTNWeWNtVnVkRlpoYkhWbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJXWVd4MVpTQTlJRzVsZDFaaGJIVmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbVp5YjIwb2MzVmljMk55YVdKbGNuTXBMbVp2Y2tWaFkyZ29LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVoWkdRb1kyRnNiR0poWTJzcFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1SbGJHVjBaU2hqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6ZFdKelkzSnBZbVZ5Y3k1emFYcGxJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnYm1WM0lFRmpZMlZ6YzI5eUtDZ3BJRDArSUdOMWNuSmxiblJXWVd4MVpTd2djM1ZpYzJOeWFXSmxLVnh1ZlZ4dVhHNHZLaW9nUUdWNGNHVnlhVzFsYm5SaGJDQXFMMXh1ZEhsd1pTQlRaWFIwYVc1bmN6eFVJR1Y0ZEdWdVpITWdVbVZqYjNKa1BITjBjbWx1Wnl3Z2MzUnlhVzVuUGo0Z1BTQjdYRzRnSUNBZ1cwc2dhVzRnYTJWNWIyWWdWQ0JoY3lCVmJtTmhjR2wwWVd4cGVtVThVR0Z6WTJGc2FXWjVQRXMrUGwwNklFRmpZMlZ6YzI5eVBGSmxZM1Z5YzJsMlpVbHVabVZ5UEZSYlMxMCtQbHh1ZlNBbUlIdGNiaUFnSUNCYlN5QnBiaUJyWlhsdlppQlVJR0Z6SUdCelpYUWtlMUJoYzJOaGJHbG1lVHhMUG4xZ1hUb2dVMlYwZEdWeVBFUmxaWEJKYm1abGNqeFVXMHRkUGo1Y2JuMWNibHh1THlvcVhHNGdLaUJBWlhod1pYSnBiV1Z1ZEdGc1hHNGdLbHh1SUNvZ1YzSmhjQ0JoSUh0QWJHbHVheUJIYVc4dVUyVjBkR2x1WjNOOUlHbHVkRzhnWVNCamIyeHNaV04wYVc5dUlHOW1JSE5sZEhSbGNuTWdZVzVrSUdGalkyVnpjMjl5Y3k1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDcGNiaUFxSUdCZ1lIUnpYRzRnS2lCamIyNXpkQ0J6SUQwZ1kzSmxZWFJsVTJWMGRHbHVaM01vYzJWMGRHbHVaM01zSUh0Y2JpQXFJQ0FnWENKamIyMXdiR1Y0TFd0bGVWd2lPaUJjSW1GN2MyRjdjM045ZlZ3aUxGeHVJQ29nSUNCY0luTnBiWEJzWlMxclpYbGNJam9nWENKelhDSXNYRzRnS2lCOUtWeHVJQ3BjYmlBcUlITXVZMjl0Y0d4bGVFdGxlUzV6ZFdKelkzSnBZbVVvS0NrZ1BUNGdlMXh1SUNvZ0lDQndjbWx1ZENoekxtTnZiWEJzWlhoTFpYa3VaMlYwS0NrcFhHNGdLaUI5S1Z4dUlDcGNiaUFxSUhNdWMyVjBRMjl0Y0d4bGVFdGxlU2dvY0hKbGRpa2dQVDRnS0h0Y2JpQXFJQ0FnTGk0dWNISmxkaXhjYmlBcUlDQWdhMlY1T2lCN0lHNWxjM1JsWkRvZ1hDSmNJaUI5TEZ4dUlDb2dmU2twWEc0Z0tpQmdZR0JjYmlBcUwxeHVMeThnVkU5RVR6b2dZMjl0WlNCMWNDQjNhWFJvSUdGdUlFRlFTVnh1THk4Z0xTQjBieUJ0WVc1MVlXeHNlU0JoYm01dmRHRjBaU0JXWVhKcFlXNTBJSFI1Y0dWa0lITmxkSFJsY25NdloyVjBkR1Z5YzF4dUx5OGdMU0IwYnlCelpYUWdjbVZqZFhKemFYWmxJSFp6SUdSbFpYQWdkVzV3WVdOcklIQmxjaUJyWlhsY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZUWlhSMGFXNW5jenhqYjI1emRDQlVJR1Y0ZEdWdVpITWdVbVZqYjNKa1BITjBjbWx1Wnl3Z2MzUnlhVzVuUGo0b1hHNGdJQ0FnYzJWMGRHbHVaM002SUVkcGJ5NVRaWFIwYVc1bmN5eGNiaUFnSUNCclpYbHpPaUJVTEZ4dUtUb2dVMlYwZEdsdVozTThWRDRnZTF4dUlDQWdJSEpsZEhWeWJpQlBZbXBsWTNRdVpuSnZiVVZ1ZEhKcFpYTW9YRzRnSUNBZ0lDQWdJRTlpYW1WamRDNWxiblJ5YVdWektHdGxlWE1wTG1ac1lYUk5ZWEFvS0Z0clpYa3NJSFI1Y0dWZEtTQTlQaUJiWEc0Z0lDQWdJQ0FnSUNBZ0lDQmJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ0Wld4cFpua29hMlY1S1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYY2dRV05qWlhOemIzSW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNncElEMCtJSE5sZEhScGJtZHpMbWRsZEY5MllXeDFaU2hyWlhrcExuSmxZM1Z5YzJsMlpWVnVjR0ZqYXlncExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvWTJGc2JHSmhZMnNwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdsa0lEMGdjMlYwZEdsdVozTXVZMjl1Ym1WamRDaGdZMmhoYm1kbFpEbzZKSHRyWlhsOVlDd2dZMkZzYkdKaFkyc3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z0tDa2dQVDRnYzJWMGRHbHVaM011WkdselkyOXVibVZqZENocFpDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnWFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJRnRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JnYzJWMEpIdHJaWGxiTUYwdWRHOVZjSEJsY2tOaGMyVW9LU0FySUdOaGJXVnNhV1o1S0d0bGVTa3VjMnhwWTJVb01TbDlZQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvZGpvZ2RXNXJibTkzYmlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpYUjBhVzVuY3k1elpYUmZkbUZzZFdVb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnUjB4cFlpNVdZWEpwWVc1MEtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3Wlc5bUlIWWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQS9JSFlvYzJWMGRHbHVaM011WjJWMFgzWmhiSFZsS0d0bGVTa3VaR1ZsY0ZWdWNHRmpheWdwS1NBNklIWXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUYwc1hHNGdJQ0FnSUNBZ0lGMHBMRnh1SUNBZ0lDbGNibjFjYmlJc0lDSnBiWEJ2Y25RZ2RIbHdaU0JIVDJKcVpXTjBJR1p5YjIwZ1hDSm5hVG92TDBkUFltcGxZM1JjSWx4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2EyVmlZV0pwWm5rb2MzUnlPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2MzUnlYRzRnSUNBZ0lDQWdJQzV5WlhCc1lXTmxLQzhvVzJFdGVsMHBLRnRCTFZwZEtTOW5MQ0JjSWlReExTUXlYQ0lwWEc0Z0lDQWdJQ0FnSUM1eVpYQnNZV05sUVd4c0tGd2lYMXdpTENCY0lpMWNJaWxjYmlBZ0lDQWdJQ0FnTG5SdlRHOTNaWEpEWVhObEtDbGNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhOdVlXdGxhV1o1S0hOMGNqb2djM1J5YVc1bktTQjdYRzRnSUNBZ2NtVjBkWEp1SUhOMGNseHVJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpTZ3ZLRnRoTFhwZEtTaGJRUzFhWFNrdlp5d2dYQ0lrTVMwa01sd2lLVnh1SUNBZ0lDQWdJQ0F1Y21Wd2JHRmpaVUZzYkNoY0lpMWNJaXdnWENKZlhDSXBYRzRnSUNBZ0lDQWdJQzUwYjB4dmQyVnlRMkZ6WlNncFhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqWVcxbGJHbG1lU2h6ZEhJNklITjBjbWx1WnlrZ2UxeHVJQ0FnSUhKbGRIVnliaUJ6ZEhJdWNtVndiR0ZqWlNndld5MWZYU2d1S1M5bkxDQW9YeXdnWTJoaGNpa2dQVDRnWTJoaGNpNTBiMVZ3Y0dWeVEyRnpaU2dwS1Z4dWZWeHVYRzVsZUhCdmNuUWdkSGx3WlNCUVlYTmpZV3hwWm5rOFV6NGdQU0JUSUdWNGRHVnVaSE1nWUNSN2FXNW1aWElnU0dWaFpIMGtlMXdpTFZ3aUlId2dYQ0pmWENKOUpIdHBibVpsY2lCVVlXbHNmV0JjYmlBZ0lDQS9JR0FrZTBOaGNHbDBZV3hwZW1VOFNHVmhaRDU5Skh0UVlYTmpZV3hwWm5rOFZHRnBiRDU5WUZ4dUlDQWdJRG9nVXlCbGVIUmxibVJ6SUhOMGNtbHVaMXh1SUNBZ0lDQWdQeUJEWVhCcGRHRnNhWHBsUEZNK1hHNGdJQ0FnSUNBNklHNWxkbVZ5WEc1Y2JtVjRjRzl5ZENCMGVYQmxJRmh0YkU1dlpHVWdQU0I3WEc0Z0lDQWdibUZ0WlRvZ2MzUnlhVzVuWEc0Z0lDQWdZWFIwY21saWRYUmxjejg2SUZKbFkyOXlaRHh6ZEhKcGJtY3NJSE4wY21sdVp6NWNiaUFnSUNCamFHbHNaSEpsYmo4NklFRnljbUY1UEZodGJFNXZaR1UrWEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQjRiV3dvZXlCdVlXMWxMQ0JoZEhSeWFXSjFkR1Z6TENCamFHbHNaSEpsYmlCOU9pQlliV3hPYjJSbEtTQjdYRzRnSUNBZ2JHVjBJR0oxYVd4a1pYSWdQU0JnUENSN2JtRnRaWDFnWEc1Y2JpQWdJQ0JqYjI1emRDQmhkSFJ5Y3lBOUlFOWlhbVZqZEM1bGJuUnlhV1Z6S0dGMGRISnBZblYwWlhNZ1B6OGdXMTBwWEc1Y2JpQWdJQ0JwWmlBb1lYUjBjbk11YkdWdVozUm9JRDRnTUNrZ2UxeHVJQ0FnSUNBZ0lDQm1iM0lnS0dOdmJuTjBJRnRyWlhrc0lIWmhiSFZsWFNCdlppQmhkSFJ5Y3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWW5WcGJHUmxjaUFyUFNCZ0lDUjdhMlY1ZlQxY0lpUjdkbUZzZFdWOVhDSmdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWTJocGJHUnlaVzRnSmlZZ1kyaHBiR1J5Wlc0dWJHVnVaM1JvSUQ0Z01Da2dlMXh1SUNBZ0lDQWdJQ0JpZFdsc1pHVnlJQ3M5SUZ3aVBsd2lYRzRnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnYm05a1pTQnZaaUJqYUdsc1pISmxiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZblZwYkdSbGNpQXJQU0I0Yld3b2JtOWtaU2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCaWRXbHNaR1Z5SUNzOUlHQThMeVI3Ym1GdFpYMCtZRnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHSjFhV3hrWlhJZ0t6MGdYQ0lnTHo1Y0lseHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJpZFdsc1pHVnlYRzU5WEc1Y2JpOHZJRUpwYm1ScGJtZHpJSGR2Y21zZ2IzWmxjaUJ3Y205d1pYSjBhV1Z6SUdsdUlHdGxZbUZpTFdOaGMyVWdZbVZqWVhWelpTQjBhR0YwY3lCMGFHVWdZMjl1ZG1WdWRHbHZiaUJ2WmlCbmIySnFaV04wWEc0dkx5Qm9iM2RsZG1WeUlHbHVJR3B6SUdsMGN5QmxhWFJvWlhJZ2MyNWhhMlZmWTJGelpTQnZjaUJqWVcxbGJFTmhjMlZjYmk4dklHRnNjMjhnYjI0Z1JFSjFjeUJwYm5SbGNtWmhZMlZ6SUdsMGN5QlFZWE5qWVd4RFlYTmxJR0o1SUdOdmJuWmxiblJwYjI1Y2JpOHZJSE52SUdGeklHRWdkMjl5YTJGeWIzVnVaQ0IzWlNCMWMyVWdaMlYwWDNCeWIzQmxjblI1WDI1aGJXVWdZVzVrSUc5dWJIa2dkWE5sSUhSb1pTQndjbTl3WlhKMGVTQm1hV1ZzWkNCaGN5QmhJR1poYkd4aVlXTnJYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdaR1ZtYVc1bFVISnZjR1Z5ZEhsSFpYUjBaWEk4VkNCbGVIUmxibVJ6SUc5aWFtVmpkRDRvYjJKcVpXTjBPaUJVTENCd2NtOXdPaUJGZUhSeVlXTjBQR3RsZVc5bUlGUXNJSE4wY21sdVp6NHBJSHRjYmlBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvYjJKcVpXTjBMQ0JnWjJWMFh5UjdhMlZpWVdKcFpua29jSEp2Y0NrdWNtVndiR0ZqWlVGc2JDaGNJaTFjSWl3Z1hDSmZYQ0lwZldBc0lIdGNiaUFnSUNBZ0lDQWdZMjl1Wm1sbmRYSmhZbXhsT2lCbVlXeHpaU3hjYmlBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnZG1Gc2RXVTZJQ2dwSUQwK0lHOWlhbVZqZEZ0d2NtOXdYU3hjYmlBZ0lDQjlLVnh1ZlZ4dVhHNHZMeUJoZEhSbGJYQjBJSE5sZEhScGJtY2dZU0J3Y205d1pYSjBlU0J2WmlCSFQySnFaV04wTGs5aWFtVmpkRnh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE5sZENodlltbzZJRWRQWW1wbFkzUXVUMkpxWldOMExDQndjbTl3T2lCemRISnBibWNzSUhaaGJIVmxPaUJoYm5rcElIdGNiaUFnSUNCamIyNXpkQ0JyWlhrZ1BTQnpibUZyWldsbWVTaHdjbTl3S1Z4dUlDQWdJR052Ym5OMElHZGxkSFJsY2lBOUlHQm5aWFJmSkh0clpYbDlZQ0JoY3lCclpYbHZaaUIwZVhCbGIyWWdiMkpxWEc0Z0lDQWdZMjl1YzNRZ2MyVjBkR1Z5SUQwZ1lITmxkRjhrZTJ0bGVYMWdJR0Z6SUd0bGVXOW1JSFI1Y0dWdlppQnZZbXBjYmx4dUlDQWdJR3hsZENCamRYSnlaVzUwT2lCMWJtdHViM2R1WEc1Y2JpQWdJQ0JwWmlBb1oyVjBkR1Z5SUdsdUlHOWlhaUFtSmlCMGVYQmxiMllnYjJKcVcyZGxkSFJsY2wwZ1BUMDlJRndpWm5WdVkzUnBiMjVjSWlrZ2UxeHVJQ0FnSUNBZ0lDQmpkWEp5Wlc1MElEMGdLRzlpYWx0blpYUjBaWEpkSUdGeklDZ3BJRDArSUhWdWEyNXZkMjRwS0NsY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0JqZFhKeVpXNTBJRDBnYjJKcVczQnliM0FnWVhNZ2EyVjViMllnZEhsd1pXOW1JRzlpYWwxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1kzVnljbVZ1ZENBaFBUMGdkbUZzZFdVcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hObGRIUmxjaUJwYmlCdlltb2dKaVlnZEhsd1pXOW1JRzlpYWx0elpYUjBaWEpkSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRHNvYjJKcVczTmxkSFJsY2wwZ1lYTWdLSFk2SUdGdWVTa2dQVDRnZG05cFpDa29kbUZzZFdVcFhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVZWE56YVdkdUtHOWlhaXdnZXlCYmNISnZjRjA2SUhaaGJIVmxJSDBwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OVhHNGlMQ0FpYVcxd2IzSjBJSFI1Y0dVZ1IwOWlhbVZqZENCbWNtOXRJRndpWjJrNkx5OUhUMkpxWldOMFhDSmNibWx0Y0c5eWRDQjdJSFI1Y0dVZ1FXTmpaWE56YjNJZ2ZTQm1jbTl0SUZ3aUxpOXpkR0YwWlM1cWMxd2lYRzVjYm5SNWNHVWdSMDlpYWlBOUlFZFBZbXBsWTNRdVQySnFaV04wWEc1bGVIQnZjblFnZEhsd1pTQkRRenhVSUdWNGRHVnVaSE1nUjA5aWFpQTlJRWRQWW1vK0lEMGdleUJ1WlhjZ0tIQnliM0J6T2lCaGJua3BPaUJVSUgxY2JtVjRjRzl5ZENCMGVYQmxJRVpEUEZRZ1pYaDBaVzVrY3lCSFQySnFJRDBnUjA5aWFqNGdQU0FvY0hKdmNITTZJR0Z1ZVNrZ1BUNGdWRnh1WEc1MGVYQmxJRU56YzFObGRIUmxjaUE5SUNodlltcGxZM1E2SUVkUFltb3NJR056Y3pvZ2MzUnlhVzVuSUh3Z1FXTmpaWE56YjNJOGMzUnlhVzVuUGlrZ1BUNGdkbTlwWkZ4dWRIbHdaU0JEYUdsc1pFWnVJRDBnS0hCaGNtVnVkRG9nUjA5aWFpd2dZMmhwYkdRNklFZFBZbW9nZkNCdWRXMWlaWElnZkNCemRISnBibWNzSUdsdVpHVjRQem9nYm5WdFltVnlLU0E5UGlCMmIybGtYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqYjI1bWFXZDFaU2hqYjI1bU9pQlFZWEowYVdGc1BFcHplRVZ1ZGo0cElIdGNiaUFnSUNCeVpYUjFjbTRnVDJKcVpXTjBMbUZ6YzJsbmJpaGxibllzSUdOdmJtWXBYRzU5WEc1Y2JuUjVjR1VnU25ONFJXNTJJRDBnZTF4dUlDQWdJR2x1ZEhKcGJuTnBZMFZzWlcxbGJuUnpPaUJTWldOdmNtUThjM1J5YVc1bkxDQkRReUI4SUVaRFBseHVJQ0FnSUdGa1pFTm9hV3hrT2lCRGFHbHNaRVp1WEc0Z0lDQWdjMlYwUTNOek9pQkRjM05UWlhSMFpYSmNiaUFnSUNCelpYUkRiR0Z6Y3pvZ1EzTnpVMlYwZEdWeVhHNGdJQ0FnYVc1cGRGQnliM0J6T2lBb2NISnZjSE02SUdGdWVTa2dQVDRnZG05cFpGeHVJQ0FnSUdSbFptRjFiSFJEYkdWaGJuVndPaUFvYjJKcVpXTjBPaUJIVDJKcUtTQTlQaUIyYjJsa1hHNTlYRzVjYm1aMWJtTjBhVzl1SUcxcGMzTnBibWRKYlhCc0tDa2dlMXh1SUNBZ0lIUm9jbTkzSUVWeWNtOXlLRndpYldsemMybHVaeUJwYlhCc1hDSXBYRzU5WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JsYm5ZNklFcHplRVZ1ZGlBOUlIdGNiaUFnSUNCcGJuUnlhVzV6YVdORmJHVnRaVzUwY3pvZ2UzMHNYRzRnSUNBZ1lXUmtRMmhwYkdRNklHMXBjM05wYm1kSmJYQnNMRnh1SUNBZ0lITmxkRU56Y3pvZ2JXbHpjMmx1WjBsdGNHd3NYRzRnSUNBZ2MyVjBRMnhoYzNNNklHMXBjM05wYm1kSmJYQnNMRnh1SUNBZ0lHbHVhWFJRY205d2N6b2dLQ2tnUFQ0Z2RtOXBaQ0F3TEZ4dUlDQWdJR1JsWm1GMWJIUkRiR1ZoYm5Wd09pQW9LU0E5UGlCMmIybGtJREFzWEc1OVhHNGlMQ0FpWlhod2IzSjBJR05zWVhOeklGTmpiM0JsSUh0Y2JpQWdJQ0J6ZEdGMGFXTWdZM1Z5Y21WdWREODZJRk5qYjNCbElId2diblZzYkZ4dVhHNGdJQ0FnY0dGeVpXNTBQem9nVTJOdmNHVWdmQ0J1ZFd4c1hHNGdJQ0FnWTI5dWRHVjRkSE1nUFNCdVpYY2dUV0Z3UEVOdmJuUmxlSFFzSUhWdWEyNXZkMjQrS0NsY2JseHVJQ0FnSUhCeWFYWmhkR1VnWTJ4bFlXNTFjSE1nUFNCdVpYY2dVMlYwUENncElEMCtJSFp2YVdRK0tDbGNiaUFnSUNCd2NtbDJZWFJsSUcxdmRXNTBjeUE5SUc1bGR5QlRaWFE4S0NrZ1BUNGdkbTlwWkQ0b0tWeHVJQ0FnSUhCeWFYWmhkR1VnYlc5MWJuUmxaQ0E5SUdaaGJITmxYRzVjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWh3WVhKbGJuUS9PaUJUWTI5d1pTQjhJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1d1lYSmxiblFnUFNCd1lYSmxiblJjYmlBZ0lDQjlYRzVjYmlBZ0lDQnZia05zWldGdWRYQW9ZMkZzYkdKaFkyczZJQ2dwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVqYkdWaGJuVndjejh1WVdSa0tHTmhiR3hpWVdOcktWeHVJQ0FnSUgxY2JseHVJQ0FnSUc5dVRXOTFiblFvWTJGc2JHSmhZMnM2SUNncElEMCtJSFp2YVdRcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVjR0Z5Wlc1MElDWW1JQ0YwYUdsekxuQmhjbVZ1ZEM1dGIzVnVkR1ZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQmhjbVZ1ZEM1dmJrMXZkVzUwS0dOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzVnVkSE11WVdSa0tHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NuVnVQRlErS0dadU9pQW9LU0E5UGlCVUtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIQnlaWFlnUFNCVFkyOXdaUzVqZFhKeVpXNTBYRzRnSUNBZ0lDQWdJRk5qYjNCbExtTjFjbkpsYm5RZ1BTQjBhR2x6WEc1Y2JpQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWJpZ3BYRzRnSUNBZ0lDQWdJSDBnWm1sdVlXeHNlU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xdmRXNTBjeTVtYjNKRllXTm9LQ2hqWWlrZ1BUNGdZMklvS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOTFiblJ6TG1Oc1pXRnlLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5MWJuUmxaQ0E5SUhSeWRXVmNiaUFnSUNBZ0lDQWdJQ0FnSUZOamIzQmxMbU4xY25KbGJuUWdQU0J3Y21WMlhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCa2FYTndiM05sS0NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1Oc1pXRnVkWEJ6TG1admNrVmhZMmdvS0dOaUtTQTlQaUJqWWlncEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1Oc1pXRnVkWEJ6TG1Oc1pXRnlLQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiMjUwWlhoMGN5NWpiR1ZoY2lncFhHNGdJQ0FnSUNBZ0lHUmxiR1YwWlNCMGFHbHpMbkJoY21WdWRGeHVJQ0FnSUgxY2JuMWNibHh1Wlhod2IzSjBJSFI1Y0dVZ1EyOXVkR1Y0ZER4VUlEMGdZVzU1UGlBOUlIdGNiaUFnSUNCMWMyVW9LVG9nVkZ4dUlDQWdJSEJ5YjNacFpHVThVajRvZG1Gc2RXVTZJRlFzSUdadU9pQW9LU0E5UGlCU0tUb2dVbHh1SUNBZ0lDaHdjbTl3Y3pvZ2V5QjJZV3gxWlRvZ1ZEc2dZMmhwYkdSeVpXNDZJQ2dwSUQwK0lFcFRXQzVGYkdWdFpXNTBJSDBwT2lCS1UxZ3VSV3hsYldWdWRGeHVmVnh1WEc0dktpcGNiaUFxSUVWNFlXMXdiR1VnVlhOaFoyVTZYRzRnS2lCZ1lHQjBjM2hjYmlBcUlHTnZibk4wSUUxNVEyOXVkR1Y0ZENBOUlHTnlaV0YwWlVOdmJuUmxlSFFvWENKbVlXeHNZbUZqYXkxMllXeDFaVndpS1Z4dUlDcGNiaUFxSUdaMWJtTjBhVzl1SUVOdmJuTjFiV1Z5UTI5dGNHOXVaVzUwS0NrZ2UxeHVJQ29nSUNCamIyNXpkQ0IyWVd4MVpTQTlJRTE1UTI5dWRHVjRkQzUxYzJVb0tWeHVJQ3BjYmlBcUlDQWdjbVYwZFhKdUlEeEhkR3N1VEdGaVpXd2diR0ZpWld3OWUzWmhiSFZsZlNBdlBseHVJQ29nZlZ4dUlDcGNiaUFxSUdaMWJtTjBhVzl1SUZCeWIzWnBaR1Z5UTI5dGNHOXVaVzUwS0NrZ2UxeHVJQ29nSUNCeVpYUjFjbTRnS0Z4dUlDb2dJQ0FnSUR4SGRHc3VRbTk0UGx4dUlDb2dJQ0FnSUNBZ1BFMTVRMjl1ZEdWNGRDQjJZV3gxWlQxY0ltMTVMWFpoYkhWbFhDSStYRzRnS2lBZ0lDQWdJQ0FnSUhzb0tTQTlQaUE4UTI5dWMzVnRaWEpEYjIxd2IyNWxiblFnTHo1OVhHNGdLaUFnSUNBZ0lDQThMMDE1UTI5dWRHVjRkRDVjYmlBcUlDQWdJQ0E4TDBkMGF5NUNiM2crWEc0Z0tpQWdJQ2xjYmlBcUlIMWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxRMjl1ZEdWNGREeFVQaWhrWldaaGRXeDBWbUZzZFdVNklGUXBPaUJEYjI1MFpYaDBQRlErSUh0Y2JpQWdJQ0JzWlhRZ1kzUjRPaUJEYjI1MFpYaDBQRlErWEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJ3Y205MmFXUmxQRkkrS0haaGJIVmxPaUJVTENCbWJqb2dLQ2tnUFQ0Z1VpazZJRklnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6WTI5d1pTQTlJR2RsZEZOamIzQmxLQ2xjYmlBZ0lDQWdJQ0FnYzJOdmNHVXVZMjl1ZEdWNGRITXVjMlYwS0dOMGVDd2dkbUZzZFdVcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCelkyOXdaUzV5ZFc0b1ptNHBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z2RYTmxLQ2s2SUZRZ2UxeHVJQ0FnSUNBZ0lDQnNaWFFnYzJOdmNHVWdQU0JUWTI5d1pTNWpkWEp5Wlc1MFhHNGdJQ0FnSUNBZ0lIZG9hV3hsSUNoelkyOXdaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RtRnNkV1VnUFNCelkyOXdaUzVqYjI1MFpYaDBjeTVuWlhRb1kzUjRLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFpoYkhWbElDRTlQU0IxYm1SbFptbHVaV1FwSUhKbGRIVnliaUIyWVd4MVpTQmhjeUJVWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpZMjl3WlNBOUlITmpiM0JsTG5CaGNtVnVkRnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJrWldaaGRXeDBWbUZzZFdWY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJqYjI1MFpYaDBLSHNnZG1Gc2RXVXNJR05vYVd4a2NtVnVJSDA2SUhzZ2RtRnNkV1U2SUZRN0lHTm9hV3hrY21WdU9pQW9LU0E5UGlCS1UxZ3VSV3hsYldWdWRDQjlLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ3Y205MmFXUmxLSFpoYkhWbExDQmphR2xzWkhKbGJpbGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnS0dOMGVDQTlJRTlpYW1WamRDNWhjM05wWjI0b1kyOXVkR1Y0ZEN3Z2UxeHVJQ0FnSUNBZ0lDQndjbTkyYVdSbExGeHVJQ0FnSUNBZ0lDQjFjMlVzWEc0Z0lDQWdmU2twWEc1OVhHNWNiaThxS2x4dUlDb2dSMlYwY3lCMGFHVWdjMk52Y0dVZ2RHaGhkQ0J2ZDI1eklIUm9aU0JqZFhKeVpXNTBiSGtnY25WdWJtbHVaeUJqYjJSbExseHVJQ3BjYmlBcUlFVjRZVzF3YkdVNlhHNGdLaUJnWUdCMGMxeHVJQ29nWTI5dWMzUWdjMk52Y0dVZ1BTQm5aWFJUWTI5d1pTZ3BYRzRnS2lCelpYUlVhVzFsYjNWMEtDZ3BJRDArSUh0Y2JpQXFJQ0FnTHk4Z1ZHaHBjeUJqWVd4c1ltRmpheUJuWlhSeklISjFiaUIzYVhSb2IzVjBJR0Z1SUc5M2JtVnlJSE5qYjNCbExseHVJQ29nSUNBdkx5QlNaWE4wYjNKbElHOTNibVZ5SUhacFlTQnpZMjl3WlM1eWRXNDZYRzRnS2lBZ0lITmpiM0JsTG5KMWJpZ29LU0E5UGlCN1hHNGdLaUFnSUNBZ1kyOXVjM1FnWm05dklEMGdSbTl2UTI5dWRHVjRkQzUxYzJVb0tWeHVJQ29nSUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCN1hHNGdLaUFnSUNBZ0lDQndjbWx1ZENoY0luTnZiV1VnWTJ4bFlXNTFjRndpS1Z4dUlDb2dJQ0FnSUgwcFhHNGdLaUFnSUgwcFhHNGdLaUI5TENBeE1EQXdLVnh1SUNvZ1lHQmdYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCblpYUlRZMjl3WlNncE9pQlRZMjl3WlNCN1hHNGdJQ0FnWTI5dWMzUWdjMk52Y0dVZ1BTQlRZMjl3WlM1amRYSnlaVzUwWEc0Z0lDQWdhV1lnS0NGelkyOXdaU2tnZTF4dUlDQWdJQ0FnSUNCMGFISnZkeUJGY25KdmNpaGNJbU5oYm01dmRDQm5aWFFnYzJOdmNHVTZJRzkxZENCdlppQjBjbUZqYTJsdVp5QmpiMjUwWlhoMFhDSXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUhOamIzQmxYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FYUjBZV05vSUdFZ1kyeGxZVzUxY0NCallXeHNZbUZqYXlCMGJ5QjBhR1VnWTNWeWNtVnVkQ0I3UUd4cGJtc2dVMk52Y0dWOUxseHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYjI1RGJHVmhiblZ3S0dOc1pXRnVkWEE2SUNncElEMCtJSFp2YVdRcElIdGNiaUFnSUNCcFppQW9JVk5qYjNCbExtTjFjbkpsYm5RcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2loRmNuSnZjaWhjSW05MWRDQnZaaUIwY21GamEybHVaeUJqYjI1MFpYaDBPaUIzYVd4c0lHNXZkQ0JpWlNCaFlteGxJSFJ2SUdOc1pXRnVkWEJjSWlrcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnVTJOdmNHVXVZM1Z5Y21WdWREOHViMjVEYkdWaGJuVndLR05zWldGdWRYQXBYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FYUjBZV05vSUdFZ1kyRnNiR0poWTJzZ2RHOGdjblZ1SUhkb1pXNGdkR2hsSUdOMWNuSmxiblJzZVNCeWRXNXVhVzVuSUh0QWJHbHVheUJUWTI5d1pYMGdjbVYwZFhKdWN5NWNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUc5dVRXOTFiblFvWTJ4bFlXNTFjRG9nS0NrZ1BUNGdkbTlwWkNrZ2UxeHVJQ0FnSUdsbUlDZ2hVMk52Y0dVdVkzVnljbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0VWeWNtOXlLRndpWTJGdWJtOTBJR0YwZEdGamFDQnZiazF2ZFc1ME9pQnZkWFFnYjJZZ2RISmhZMnRwYm1jZ1kyOXVkR1Y0ZEZ3aUtTbGNiaUFnSUNCOVhHNWNiaUFnSUNCVFkyOXdaUzVqZFhKeVpXNTBQeTV2YmsxdmRXNTBLR05zWldGdWRYQXBYRzU5WEc1Y2JpOHFLbHh1SUNvZ1EzSmxZWFJsY3lCaElISnZiM1FnZTBCc2FXNXJJRk5qYjNCbGZTQjBhR0YwSUhkb1pXNGdaR2x6Y0c5elpXUWdkMmxzYkNCeVpXMXZkbVZjYmlBcUlHRnVlU0JqYUdsc1pDQnphV2R1WVd3Z2FHRnVaR3hsY2lCdmNpQnpkR0YwWlNCemRXSnpZM0pwWW1WeUxseHVJQ3BjYmlBcUlFVjRZVzF3YkdVNlhHNGdLaUJnWUdCMGMzaGNiaUFxSUdOeVpXRjBaVkp2YjNRb0tHUnBjM0J2YzJVcElEMCtJSHRjYmlBcUlDQWdiR1YwSUhKdmIzUTZJRWQwYXk1WGFXNWtiM2RjYmlBcVhHNGdLaUFnSUdOdmJuTjBJRnR6ZEdGMFpWMGdQU0JqY21WaGRHVlRkR0YwWlNoY0luWmhiSFZsWENJcFhHNGdLbHh1SUNvZ0lDQmpiMjV6ZENCeVpXMXZkbVVnUFNBb0tTQTlQaUI3WEc0Z0tpQWdJQ0FnY205dmRDNWtaWE4wY205NUtDbGNiaUFxSUNBZ0lDQmthWE53YjNObEtDbGNiaUFxSUNBZ2ZWeHVJQ3BjYmlBcUlDQWdjbVYwZFhKdUlDaGNiaUFxSUNBZ0lDQThSM1JyTGxkcGJtUnZkeUFrUFhzb2MyVnNaaWtnUFQ0Z0tISnZiM1FnUFNCelpXeG1LWDArWEc0Z0tpQWdJQ0FnSUNBOFIzUnJMa0p2ZUQ1Y2JpQXFJQ0FnSUNBZ0lDQWdQRWQwYXk1TVlXSmxiQ0JzWVdKbGJEMTdjM1JoZEdWOUlDOCtYRzRnS2lBZ0lDQWdJQ0FnSUR4SGRHc3VRblYwZEc5dUlDUmpiR2xqYTJWa1BYdHlaVzF2ZG1WOUlDOCtYRzRnS2lBZ0lDQWdJQ0E4TDBkMGF5NUNiM2crWEc0Z0tpQWdJQ0FnUEM5SGRHc3VWMmx1Wkc5M1BseHVJQ29nSUNBcFhHNGdLaUI5S1Z4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWU2IyOTBQRlErS0dadU9pQW9aR2x6Y0c5elpUb2dLQ2tnUFQ0Z2RtOXBaQ2tnUFQ0Z1ZDa2dlMXh1SUNBZ0lHTnZibk4wSUhOamIzQmxJRDBnYm1WM0lGTmpiM0JsS0c1MWJHd3BYRzRnSUNBZ2NtVjBkWEp1SUhOamIzQmxMbkoxYmlnb0tTQTlQaUJtYmlnb0tTQTlQaUJ6WTI5d1pTNWthWE53YjNObEtDa3BLVnh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQkhUMkpxWldOMElHWnliMjBnWENKbmFUb3ZMMGRQWW1wbFkzUmNJbHh1YVcxd2IzSjBJSHNnY21WbmFYTjBaWEpFWlhOMGNtOTVZV0pzWlZSNWNHVWdmU0JtY205dElGd2lMaTR2WjI1dmJXVXZjMmxuYm1Gc1ZISmhZMnRsY2k1cWMxd2lYRzVjYmk4dklGUlBSRTg2SUVaeVlXZHRaVzUwSUhOb2IzVnNaQ0JwYlhCc1pXMWxiblFnUjJsdkxreHBjM1JOYjJSbGJGeHVYRzVsZUhCdmNuUWdZMnhoYzNNZ1JuSmhaMjFsYm5ROFZDQTlJR0Z1ZVQ0Z1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ0I3WEc0Z0lDQWdjM1JoZEdsaklGdEhUMkpxWldOMExuTnBaMjVoYkhOZElEMGdlMXh1SUNBZ0lDQWdJQ0JjSW1SbGMzUnliM2xjSWpvZ2UzMHNYRzVjYmlBZ0lDQWdJQ0FnWENKamFHbHNaQzFoWkdSbFpGd2lPaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZWEpoYlY5MGVYQmxjem9nVzBkUFltcGxZM1F1VkZsUVJWOVBRa3BGUTFRc0lFZFBZbXBsWTNRdVZGbFFSVjlWU1U1VVhTeGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWENKamFHbHNaQzF5WlcxdmRtVmtYQ0k2SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoY21GdFgzUjVjR1Z6T2lCYlIwOWlhbVZqZEM1VVdWQkZYMDlDU2tWRFZDd2dSMDlpYW1WamRDNVVXVkJGWDFWSlRsUmRMRnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJSDFjYmx4dUlDQWdJSE4wWVhScFl5QmJSMDlpYW1WamRDNXdjbTl3WlhKMGFXVnpYU0E5SUh0Y2JpQWdJQ0FnSUNBZ1kyaHBiR1J5Wlc0NklFZFBZbXBsWTNRdVVHRnlZVzFUY0dWakxtcHpiMkpxWldOMEtGd2lZMmhwYkdSeVpXNWNJaXdnWENKY0lpd2dYQ0pjSWl3Z1IwOWlhbVZqZEM1UVlYSmhiVVpzWVdkekxsSkZRVVJCUWt4RktTeGNiaUFnSUNCOVhHNWNiaUFnSUNCemRHRjBhV01nZTF4dUlDQWdJQ0FnSUNCSFQySnFaV04wTG5KbFoybHpkR1Z5UTJ4aGMzTW9kR2hwY3lsY2JpQWdJQ0FnSUNBZ2NtVm5hWE4wWlhKRVpYTjBjbTk1WVdKc1pWUjVjR1VvZEdocGN5bGNiaUFnSUNCOVhHNWNiaUFnSUNCemRHRjBhV01nYm1WM1BGUStLR05vYVd4a2NtVnVPaUJCY25KaGVUeFVQaUE5SUZ0ZEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnUm5KaFoyMWxiblFvZXlCamFHbHNaSEpsYmlCOUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUhCeWFYWmhkR1VnWTI5dWJtVmpkR2x2Ymtsa2N5QTlJRzVsZHlCVFpYUThiblZ0WW1WeVBpZ3BYRzRnSUNBZ2NISnBkbUYwWlNCZlkyaHBiR1J5Wlc0NklFRnljbUY1UEZRK1hHNWNiaUFnSUNCblpYUWdZMmhwYkdSeVpXNG9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJiTGk0dWRHaHBjeTVmWTJocGJHUnlaVzVkWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZV1JrUTJocGJHUW9ZMmhwYkdRNklGUXNJR2x1WkdWNE9pQnVkVzFpWlhJZ1BTQXRNU2s2SUhadmFXUWdlMXh1SUNBZ0lDQWdJQ0JwWmlBb1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCR2NtRm5iV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdoeWIzY2dSWEp5YjNJb1lHNWxjM1JwYm1jZ1JuSmhaMjFsYm5SeklHRnlaU0J1YjNRZ2VXVjBJSE4xY0hCdmNuUmxaR0FwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvYVc1a1pYZ2dQaUF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOWphR2xzWkhKbGJpQTlJRnRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1TGk1MGFHbHpMbDlqYUdsc1pISmxiaTV6YkdsalpTZ3dMQ0JwYm1SbGVDa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhwYkdRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xpNHVkR2hwY3k1ZlkyaHBiR1J5Wlc0dWMyeHBZMlVvYVc1a1pYZ3BMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1hWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZZMmhwYkdSeVpXNHVjSFZ6YUNoamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0SUQwZ2RHaHBjeTVmWTJocGJHUnlaVzR1YkdWdVozUm9JQzBnTVZ4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJXbDBLRndpWTJocGJHUXRZV1JrWldSY0lpd2dZMmhwYkdRc0lHbHVaR1Y0S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVTaGNJbU5vYVd4a2NtVnVYQ0lwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdhR0Z6UTJocGJHUW9ZMmhwYkdRNklGUXBPaUJpYjI5c1pXRnVJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyTm9hV3hrY21WdUxtWnBibVJKYm1SbGVDZ29ZMmdwSUQwK0lHTm9JRDA5UFNCamFHbHNaQ2tnUGlBdE1WeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGJXOTJaVU5vYVd4a0tHTm9hV3hrT2lCVUtUb2dkbTlwWkNCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdsdVpHVjRJRDBnZEdocGN5NWZZMmhwYkdSeVpXNHVabWx1WkVsdVpHVjRLQ2hwS1NBOVBpQnBJRDA5UFNCamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NWZZMmhwYkdSeVpXNHVjM0JzYVdObEtHbHVaR1Y0TENBeEtWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXMXBkQ2hjSW1Ob2FXeGtMWEpsYlc5MlpXUmNJaXdnWTJocGJHUXNJR2x1WkdWNEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG01dmRHbG1lU2hjSW1Ob2FXeGtjbVZ1WENJcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb2V5QmphR2xzWkhKbGJpQTlJRnRkSUgwNklGQmhjblJwWVd3OGV5QmphR2xzWkhKbGJqb2dRWEp5WVhrOFZENGdmQ0JVSUgwK0lEMGdlMzBwSUh0Y2JpQWdJQ0FnSUNBZ2MzVndaWElvS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbDlqYUdsc1pISmxiaUE5SUVGeWNtRjVMbWx6UVhKeVlYa29ZMmhwYkdSeVpXNHBJRDhnWTJocGJHUnlaVzRnT2lCYlkyaHBiR1J5Wlc1ZFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWJtVmpkQ2h6YVdkdVlXdzZJSE4wY21sdVp5d2dZMkZzYkdKaFkyczZJQ2hmT2lCMGFHbHpMQ0F1TGk1aGNtZHpPaUJoYm5sYlhTa2dQVDRnZG05cFpDazZJRzUxYldKbGNpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnYzNWd1pYSXVZMjl1Ym1WamRDaHphV2R1WVd3c0lHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJtNWxZM1JwYjI1SlpITXVZV1JrS0dsa0tWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXUmNiaUFnSUNCOVhHNWNiaUFnSUNCa2FYTmpiMjV1WldOMEtHbGtPaUJ1ZFcxaVpYSXBPaUIyYjJsa0lIdGNiaUFnSUNBZ0lDQWdjM1Z3WlhJdVpHbHpZMjl1Ym1WamRDaHBaQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiMjV1WldOMGFXOXVTV1J6TG1SbGJHVjBaU2hwWkNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JrWlhOMGNtOTVLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbVZ0YVhRb1hDSmtaWE4wY205NVhDSXBYRzRnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnYVdRZ2IyWWdkR2hwY3k1amIyNXVaV04wYVc5dVNXUnpMblpoYkhWbGN5Z3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkWEJsY2k1a2FYTmpiMjV1WldOMEtHbGtLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQjBlWEJsSUVkUFltcGxZM1FnWm5KdmJTQmNJbWRwT2k4dlIwOWlhbVZqZEZ3aVhHNWNiblI1Y0dVZ1ZIbHdaU0E5SUhzZ2JtVjNJQ2d1TGk1aGNtZHpPaUJoYm5sYlhTazZJRWRQWW1wbFkzUXVUMkpxWldOMElIMWNibHh1THk4Z1FIUnpMV1Y0Y0dWamRDMWxjbkp2Y2lCdGFYTnphVzVuSUhSNWNHVnpYRzVqYjI1emRDQnRiMlFnUFNCcGJYQnZjblFvWENKeVpYTnZkWEpqWlRvdkx5OXZjbWN2WjI1dmJXVXZjMmhsYkd3dmJXbHpZeTl6YVdkdVlXeFVjbUZqYTJWeUxtcHpYQ0lwWEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0J5WldkcGMzUmxja1JsYzNSeWIzbGhZbXhsVkhsd1pUb2dLSFI1Y0dVNklGUjVjR1VwSUQwK0lIWnZhV1FnUFNCaGQyRnBkQ0J0YjJSY2JpQWdJQ0F1ZEdobGJpZ29iVzlrS1NBOVBpQnRiMlF1Y21WbmFYTjBaWEpFWlhOMGNtOTVZV0pzWlZSNWNHVXBYRzRnSUNBZ0xtTmhkR05vS0NncElEMCtJQ2dwSUQwK0lIWnZhV1FnTUNsY2JpSXNJQ0pwYlhCdmNuUWdleUJHY21GbmJXVnVkQ0I5SUdaeWIyMGdYQ0l1TDBaeVlXZHRaVzUwTG1welhDSmNibWx0Y0c5eWRDQjdJRUZqWTJWemMyOXlMQ0IwZVhCbElGTjBZWFJsTENCamNtVmhkR1ZUZEdGMFpTQjlJR1p5YjIwZ1hDSXVMM04wWVhSbExtcHpYQ0pjYm1sdGNHOXlkQ0I3SUdWdWRpQjlJR1p5YjIwZ1hDSXVMMlZ1ZGk1cWMxd2lYRzVwYlhCdmNuUWdleUJuWlhSVFkyOXdaU3dnYjI1RGJHVmhiblZ3TENCVFkyOXdaU0I5SUdaeWIyMGdYQ0l1TDNOamIzQmxMbXB6WENKY2JseHVhVzUwWlhKbVlXTmxJRVp2Y2xCeWIzQnpQRWwwWlcwc0lFVnNJR1Y0ZEdWdVpITWdTbE5ZTGtWc1pXMWxiblFzSUV0bGVUNGdlMXh1SUNBZ0lHVmhZMmc2SUVGalkyVnpjMjl5UEVsMFpYSmhZbXhsUEVsMFpXMCtQbHh1SUNBZ0lHTm9hV3hrY21WdU9pQW9hWFJsYlRvZ1NYUmxiU3dnYVc1a1pYZzZJRUZqWTJWemMyOXlQRzUxYldKbGNqNHBJRDArSUVWc1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkdkVzVqZEdsdmJpQjBieUJ5ZFc0Z1ptOXlJR1ZoWTJnZ2NtVnRiM1psWkNCbGJHVnRaVzUwTGx4dUlDQWdJQ0FxSUZSb1pTQmtaV1poZFd4MElIWmhiSFZsSUdSbGNHVnVaSE1nYjI0Z2RHaGxJR1Z1ZG1seWIyNXRaVzUwT2x4dUlDQWdJQ0FxWEc0Z0lDQWdJQ29nTFNBcUtrZDBhelFxS2pvZ2JuVnNiRnh1SUNBZ0lDQXFJQzBnS2lwSGRHc3pLaW82SUVkMGF5NVhhV1JuWlhRdWNISnZkRzkwZVhCbExtUmxjM1J5YjNsY2JpQWdJQ0FnS2lBdElDb3FSMjV2YldVcUtqb2dRMngxZEhSbGNpNUJZM1J2Y2k1d2NtOTBiM1I1Y0dVdVpHVnpkSEp2ZVZ4dUlDQWdJQ0FxTDF4dUlDQWdJR05zWldGdWRYQS9PaUJ1ZFd4c0lId2dLQ2hsYkdWdFpXNTBPaUJGYkN3Z2FYUmxiVG9nU1hSbGJTd2dhVzVrWlhnNklHNTFiV0psY2lrZ1BUNGdkbTlwWkNsY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFWjFibU4wYVc5dUlIUm9ZWFFnWjJWdVpYSmhkR1Z6SUhSb1pTQnJaWGtnWm05eUlHVmhZMmdnYVhSbGJTNWNiaUFnSUNBZ0tseHVJQ0FnSUNBcUlFSjVJR1JsWm1GMWJIUWdhWFJsYlhNZ1lYSmxJRzFoY0hCbFpDQmllVHBjYmlBZ0lDQWdLaUF0SUhaaGJIVmxJR2x1SUdOaGMyVWdiMllnY0hKcGJXbDBhWFpsSUhaaGJIVmxjMXh1SUNBZ0lDQXFJQzBnY21WbVpYSmxibU5sSUc5MGFHVnlkMmx6WlZ4dUlDQWdJQ0FxTDF4dUlDQWdJR2xrUHpvZ0tHbDBaVzA2SUVsMFpXMHBJRDArSUV0bGVTQjhJRWwwWlcxY2JuMWNibHh1THk4Z1ZFOUVUem9nYzNWd2NHOXlkQ0JIYVc4dVRHbHpkRTF2WkdWc1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQkdiM0k4U1hSbGJTd2dSV3dnWlhoMFpXNWtjeUJLVTFndVJXeGxiV1Z1ZEN3Z1MyVjVQaWg3WEc0Z0lDQWdaV0ZqYUN4Y2JpQWdJQ0JqYUdsc1pISmxiam9nYld0RGFHbHNaQ3hjYmlBZ0lDQmpiR1ZoYm5Wd0xGeHVJQ0FnSUdsa0lEMGdLR2wwWlcwNklFbDBaVzBwSUQwK0lHbDBaVzBzWEc1OU9pQkdiM0pRY205d2N6eEpkR1Z0TENCRmJDd2dTMlY1UGlrNklFWnlZV2R0Wlc1MFBFVnNQaUI3WEc0Z0lDQWdkSGx3WlNCTllYQkpkR1Z0SUQwZ2V5QnBkR1Z0T2lCSmRHVnRPeUJqYUdsc1pEb2dSV3c3SUdsdVpHVjRPaUJUZEdGMFpUeHVkVzFpWlhJK095QnpZMjl3WlRvZ1UyTnZjR1VnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdZM1Z5Y21WdWRGTmpiM0JsSUQwZ1oyVjBVMk52Y0dVb0tWeHVJQ0FnSUdOdmJuTjBJRzFoY0NBOUlHNWxkeUJOWVhBOFNYUmxiU0I4SUV0bGVTd2dUV0Z3U1hSbGJUNG9LVnh1SUNBZ0lHTnZibk4wSUdaeVlXZHRaVzUwSUQwZ2JtVjNJRVp5WVdkdFpXNTBQRVZzUGlncFhHNWNiaUFnSUNCbWRXNWpkR2x2YmlCeVpXMXZkbVVvZXlCcGRHVnRMQ0JqYUdsc1pDd2dhVzVrWlhnNklGdHBibVJsZUYwc0lITmpiM0JsSUgwNklFMWhjRWwwWlcwcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJqYkdWaGJuVndJRDA5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z1ZFhBb1kyaHBiR1FzSUdsMFpXMHNJR2x1WkdWNExtZGxkQ2dwS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHTnNaV0Z1ZFhBZ0lUMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdWdWRpNWtaV1poZFd4MFEyeGxZVzUxY0NoamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCelkyOXdaUzVrYVhOd2IzTmxLQ2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQmpZV3hzWW1GamF5aHBkR0Z5WldGaWJHVTZJRWwwWlhKaFlteGxQRWwwWlcwK0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHbDBaVzF6SUQwZ1d5NHVMbWwwWVhKbFlXSnNaVjFjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhV1J6SUQwZ2FYUmxiWE11YldGd0tHbGtLVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBaRk5sZENBOUlHNWxkeUJUWlhRb2FXUnpLVnh1WEc0Z0lDQWdJQ0FnSUM4dklHTnNaV0Z1ZFhBZ1kyaHBiR1J5Wlc0Z2JXbHpjMmx1WnlCbWNtOXRJR0Z5Y2x4dUlDQWdJQ0FnSUNCbWIzSWdLR052Ym5OMElGdHJaWGtzSUhaaGJIVmxYU0J2WmlCdFlYQXVaVzUwY21sbGN5Z3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUIwYUdWeVpTQnBjeUJ1YnlCblpXNWxjbWxqSUhkaGVTQjBieUJwYm5ObGNuUWdZMmhwYkdRZ1lYUWdhVzVrWlhoY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUhOdklIZGxJSE52Y25RZ1lua2djbVZ0YjNacGJtY2daWFpsY25rZ1kyaHBiR1FnWVc1a0lISmxZWEJ3Wlc1a2FXNW5JR2x1SUc5eVpHVnlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEM1eVpXMXZkbVZEYUdsc1pDaDJZV3gxWlM1amFHbHNaQ2xjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGcFpGTmxkQzVvWVhNb2EyVjVLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGJXOTJaU2gyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEF1WkdWc1pYUmxLR3RsZVNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDOHZJSFZ3WkdGMFpTQnBibVJsZUNCaGJtUWdZV1JrSUc1bGR5QnBkR1Z0YzF4dUlDQWdJQ0FnSUNCcGRHVnRjeTV0WVhBb0tHbDBaVzBzSUdrcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUd0bGVTQTlJR2xrYzF0cFhWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMWhjQzVvWVhNb2EyVjVLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtaWGc2SUZzc0lITmxkRWx1WkdWNFhTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0E5SUcxaGNDNW5aWFFvYTJWNUtTRmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJKYm1SbGVDaHBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobWNtRm5iV1Z1ZEM1b1lYTkRhR2xzWkNoamFHbHNaQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0dCa2RYQnNhV05oZEdVZ2EyVjVjeUJtYjNWdVpEb2dKSHRyWlhsOVlDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtY21GbmJXVnVkQzVoWkdSRGFHbHNaQ2hqYUdsc1pDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRnRwYm1SbGVDd2djMlYwU1c1a1pYaGRJRDBnWTNKbFlYUmxVM1JoZEdVb2FTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCelkyOXdaU0E5SUc1bGR5QlRZMjl3WlNoamRYSnlaVzUwVTJOdmNHVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1kyaHBiR1FnUFNCelkyOXdaUzV5ZFc0b0tDa2dQVDRnYld0RGFHbHNaQ2hwZEdWdExDQnBibVJsZUNrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRndMbk5sZENoclpYa3NJSHNnYVhSbGJTd2dZMmhwYkdRc0lHbHVaR1Y0T2lCYmFXNWtaWGdzSUhObGRFbHVaR1Y0WFN3Z2MyTnZjR1VnZlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEM1aFpHUkRhR2xzWkNoamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZENCa2FYTndiM05sSUQwZ1pXRmphQzV6ZFdKelkzSnBZbVVvS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JqWVd4c1ltRmpheWhsWVdOb0xtZGxkQ2dwS1Z4dUlDQWdJSDBwWEc0Z0lDQWdZMkZzYkdKaFkyc29aV0ZqYUM1blpYUW9LU2xjYmx4dUlDQWdJRzl1UTJ4bFlXNTFjQ2dvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR1JwYzNCdmMyVW9LVnh1WEc0Z0lDQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ2RtRnNkV1VnYjJZZ2JXRndMblpoYkhWbGN5Z3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaVzF2ZG1Vb2RtRnNkV1VwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnRZWEF1WTJ4bFlYSW9LVnh1SUNBZ0lIMHBYRzVjYmlBZ0lDQnlaWFIxY200Z1puSmhaMjFsYm5SY2JuMWNiaUlzSUNKcGJYQnZjblFnZXlCR2NtRm5iV1Z1ZENCOUlHWnliMjBnWENJdUwwWnlZV2R0Wlc1MExtcHpYQ0pjYm1sdGNHOXlkQ0I3SUVGalkyVnpjMjl5SUgwZ1puSnZiU0JjSWk0dmMzUmhkR1V1YW5OY0lseHVhVzF3YjNKMElIc2daVzUySUgwZ1puSnZiU0JjSWk0dlpXNTJMbXB6WENKY2JtbHRjRzl5ZENCN0lHZGxkRk5qYjNCbExDQnZia05zWldGdWRYQXNJRk5qYjNCbElIMGdabkp2YlNCY0lpNHZjMk52Y0dVdWFuTmNJbHh1WEc1cGJuUmxjbVpoWTJVZ1YybDBhRkJ5YjNCelBGUXNJRVVnWlhoMFpXNWtjeUJLVTFndVJXeGxiV1Z1ZEQ0Z2UxeHVJQ0FnSUhaaGJIVmxPaUJCWTJObGMzTnZjanhVUGx4dUlDQWdJR05vYVd4a2NtVnVPaUFvZG1Gc2RXVTZJRlFwSUQwK0lFVWdmQ0JjSWx3aUlId2dabUZzYzJVZ2ZDQnVkV3hzSUh3Z2RXNWtaV1pwYm1Wa1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkdkVzVqZEdsdmJpQjBieUJ5ZFc0Z1ptOXlJR1ZoWTJnZ2NtVnRiM1psWkNCbGJHVnRaVzUwTGx4dUlDQWdJQ0FxSUZSb1pTQmtaV1poZFd4MElIWmhiSFZsSUdSbGNHVnVaSE1nYjI0Z2RHaGxJR1Z1ZG1seWIyNXRaVzUwT2x4dUlDQWdJQ0FxWEc0Z0lDQWdJQ29nTFNBcUtrZDBhelFxS2pvZ2JuVnNiRnh1SUNBZ0lDQXFJQzBnS2lwSGRHc3pLaW82SUVkMGF5NVhhV1JuWlhRdWNISnZkRzkwZVhCbExtUmxjM1J5YjNsY2JpQWdJQ0FnS2lBdElDb3FSMjV2YldVcUtqb2dRMngxZEhSbGNpNUJZM1J2Y2k1d2NtOTBiM1I1Y0dVdVpHVnpkSEp2ZVZ4dUlDQWdJQ0FxTDF4dUlDQWdJR05zWldGdWRYQS9PaUJ1ZFd4c0lId2dLQ2hsYkdWdFpXNTBPaUJGS1NBOVBpQjJiMmxrS1Z4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdWMmwwYUR4VUxDQkZJR1Y0ZEdWdVpITWdTbE5ZTGtWc1pXMWxiblErS0h0Y2JpQWdJQ0IyWVd4MVpTeGNiaUFnSUNCamFHbHNaSEpsYmpvZ2JXdERhR2xzWkN4Y2JpQWdJQ0JqYkdWaGJuVndMRnh1ZlRvZ1YybDBhRkJ5YjNCelBGUXNJRVUrS1RvZ1JuSmhaMjFsYm5ROFJUNGdlMXh1SUNBZ0lHTnZibk4wSUdOMWNuSmxiblJUWTI5d1pTQTlJR2RsZEZOamIzQmxLQ2xjYmlBZ0lDQmpiMjV6ZENCbWNtRm5iV1Z1ZENBOUlHNWxkeUJHY21GbmJXVnVkRHhGUGlncFhHNWNiaUFnSUNCc1pYUWdjMk52Y0dVNklGTmpiM0JsWEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJqWVd4c1ltRmpheWgyT2lCVUtTQjdYRzRnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnWTJocGJHUWdiMllnWm5KaFoyMWxiblF1WTJocGJHUnlaVzRwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p5WVdkdFpXNTBMbkpsYlc5MlpVTm9hV3hrS0dOb2FXeGtLVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR05zWldGdWRYQWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05zWldGdWRYQW9ZMmhwYkdRcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dOc1pXRnVkWEFnSVQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuWXVaR1ZtWVhWc2RFTnNaV0Z1ZFhBb1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6WTI5d1pTa2djMk52Y0dVdVpHbHpjRzl6WlNncFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J6WTI5d1pTQTlJRzVsZHlCVFkyOXdaU2hqZFhKeVpXNTBVMk52Y0dVcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdOb0lEMGdjMk52Y0dVdWNuVnVLQ2dwSUQwK0lHMXJRMmhwYkdRb2Rpa3BYRzRnSUNBZ0lDQWdJR2xtSUNoamFDQWhQVDBnWENKY0lpQW1KaUJqYUNBaFBUMGdabUZzYzJVZ0ppWWdZMmdnSVQwOUlHNTFiR3dnSmlZZ1kyZ2dJVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm5KaFoyMWxiblF1WVdSa1EyaHBiR1FvWTJncFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JrYVhOd2IzTmxJRDBnZG1Gc2RXVXVjM1ZpYzJOeWFXSmxLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdZMkZzYkdKaFkyc29kbUZzZFdVdVoyVjBLQ2twWEc0Z0lDQWdmU2xjYmlBZ0lDQmpZV3hzWW1GamF5aDJZV3gxWlM1blpYUW9LU2xjYmx4dUlDQWdJRzl1UTJ4bFlXNTFjQ2dvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJSE5qYjNCbExtUnBjM0J2YzJVb0tWeHVJQ0FnSUNBZ0lDQmthWE53YjNObEtDbGNiaUFnSUNCOUtWeHVYRzRnSUNBZ2NtVjBkWEp1SUdaeVlXZHRaVzUwWEc1OVhHNGlMQ0FpYVcxd2IzSjBJRWRQWW1wbFkzUWdabkp2YlNCY0ltZHBPaTh2UjA5aWFtVmpkRndpWEc1cGJYQnZjblFnZXlCbGJuWWdmU0JtY205dElGd2lMaTlsYm5ZdWFuTmNJbHh1YVcxd2IzSjBJSHNnUVdOalpYTnpiM0lnZlNCbWNtOXRJRndpTGk5emRHRjBaUzVxYzF3aVhHNXBiWEJ2Y25RZ2V5QnJaV0poWW1sbWVTd2dkSGx3WlNCUVlYTmpZV3hwWm5rc0lITmxkQ0I5SUdaeWIyMGdYQ0l1TGk5MWRHbHNMbXB6WENKY2JtbHRjRzl5ZENCN0lHOXVRMnhsWVc1MWNDQjlJR1p5YjIwZ1hDSXVMM05qYjNCbExtcHpYQ0pjYm1sdGNHOXlkQ0I3SUhObGRGUjVjR1VnZlNCbWNtOXRJRndpTGk5cWMzZ3Vhbk5jSWx4dVhHNTBlWEJsSUVWc1pXMWxiblFnUFNCS1UxZ3VSV3hsYldWdWRDQjhJRndpWENJZ2ZDQm1ZV3h6WlNCOElHNTFiR3dnZkNCMWJtUmxabWx1WldSY2JseHVkSGx3WlNCVWFHbHpVSEp2Y0hNOFUyVnNaaUJsZUhSbGJtUnpJRWRQWW1wbFkzUXVUMkpxWldOMFBpQTlJSHRjYmlBZ0lDQjBhR2x6T2lCVFpXeG1YRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSM1JyTGtKMWFXeGtaWElnZEhsd1pWeHVJQ0FnSUNBcUlHbDBjeUJqYjI1emRXMWxaQ0JwYm5SbGNtNWhiR3g1SUdGdVpDQnViM1FnWVdOMGRXRnNiSGtnY0dGemMyVmtJSFJ2SUdOc1lYTnpJR052YlhCdmJtVnVkQ0JqYjI1emRISjFZM1J2Y25OY2JpQWdJQ0FnS2k5Y2JpQWdJQ0FrZEhsd1pUODZJSE4wY21sdVoxeHVYRzRnSUNBZ1kyaHBiR1J5Wlc0L09pQkZiR1Z0Wlc1MElId2dRWEp5WVhrOFJXeGxiV1Z1ZEQ1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCRFUxTWdZMnhoYzNNZ2JtRnRaWE5jYmlBZ0lDQWdLaTljYmlBZ0lDQmpiR0Z6Y3o4NklITjBjbWx1WnlCOElFRmpZMlZ6YzI5eVBITjBjbWx1Wno1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCcGJteHBibVVnUTFOVFhHNGdJQ0FnSUNvdlhHNGdJQ0FnWTNOelB6b2djM1J5YVc1bklId2dRV05qWlhOemIzSThjM1J5YVc1blBseHVmU0FtSUh0Y2JpQWdJQ0JiU3lCcGJpQnJaWGx2WmlCVFpXeG1YVDg2SUZObGJHWmJTMTBnZkNCQlkyTmxjM052Y2p4T2IyNU9kV3hzWVdKc1pUeFRaV3htVzB0ZFBqNWNibjBnSmlCN1hHNGdJQ0FnVzFNZ2FXNGdhMlY1YjJZZ1UyVnNabHRjSWlSemFXZHVZV3h6WENKZElHRnpJRk1nWlhoMFpXNWtjeUJnYm05MGFXWjVPam9rZTJsdVptVnlJRkI5WUZ4dUlDQWdJQ0FnSUNBL0lHQnZiazV2ZEdsbWVTUjdVR0Z6WTJGc2FXWjVQRkErZldCY2JpQWdJQ0FnSUNBZ09pQlRJR1Y0ZEdWdVpITWdjM1J5YVc1blhHNGdJQ0FnSUNBZ0lDQWdQeUJnYjI0a2UxQmhjMk5oYkdsbWVUeFRQbjFnWEc0Z0lDQWdJQ0FnSUNBZ09pQnVaWFpsY2wwL09pQkhUMkpxWldOMExsTnBaMjVoYkVOaGJHeGlZV05yUEZObGJHWXNJRk5sYkdaYlhDSWtjMmxuYm1Gc2Mxd2lYVnRUWFQ1Y2JuMWNibHh1THk4Z1ZFOUVUenBjYmk4dklHTnZibk5wWkdWeUlHMWhhMmx1WnlCMGFHbHpJR052YlhCdmJtVnVkQ0JoSUhCdmRHVnVkR2xoYkNCemRXSnpkR2wwZFhSbElHWnZjaUJnWTNKbFlYUmxVbTl2ZENncFlGeHVMeThnWkdsemNHOXphVzVuSUhSb1pTQnpZMjl3WlNCMWMybHVaeUJoSUdSbGMzUnliM2tnYzJsbmJtRnNYRzVjYmk4cUtpQkFaWGh3WlhKcGJXVnVkR0ZzSUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1ZHaHBjenhVSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUStLSHRjYmlBZ0lDQjBhR2x6T2lCelpXeG1MRnh1SUNBZ0lHTm9hV3hrY21WdUxGeHVJQ0FnSUNSMGVYQmxMRnh1SUNBZ0lDNHVMbkJ5YjNCelhHNTlPaUJVYUdselVISnZjSE04VkQ0cElIdGNiaUFnSUNCamIyNXpkQ0JqYkdWaGJuVndJRDBnYm1WM0lFRnljbUY1UENncElEMCtJSFp2YVdRK0tDbGNibHh1SUNBZ0lHbG1JQ2drZEhsd1pTa2djMlYwVkhsd1pTaHpaV3htTENBa2RIbHdaU2xjYmx4dUlDQWdJR1p2Y2lBb1kyOXVjM1FnVzJ0bGVTd2dkbUZzZFdWZElHOW1JRTlpYW1WamRDNWxiblJ5YVdWektIQnliM0J6S1NrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvYTJWNUlEMDlQU0JjSW1OemMxd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJCWTJObGMzTnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdWRpNXpaWFJEYzNNb2MyVnNaaXdnZG1Gc2RXVXVaMlYwS0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZVzUxY0M1d2RYTm9LSFpoYkhWbExuTjFZbk5qY21saVpTZ29LU0E5UGlCbGJuWXVjMlYwUTNOektITmxiR1lzSUhaaGJIVmxMbWRsZENncEtTa3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIUjVjR1Z2WmlCMllXeDFaU0E5UFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGk1elpYUkRjM01vYzJWc1ppd2dkbUZzZFdVcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2EyVjVJRDA5UFNCY0ltTnNZWE56WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDJZV3gxWlNCcGJuTjBZVzVqWlc5bUlFRmpZMlZ6YzI5eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzUyTG5ObGRFTnNZWE56S0hObGJHWXNJSFpoYkhWbExtZGxkQ2dwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOc1pXRnVkWEF1Y0hWemFDaDJZV3gxWlM1emRXSnpZM0pwWW1Vb0tDa2dQVDRnWlc1MkxuTmxkRU5zWVhOektITmxiR1lzSUhaaGJIVmxMbWRsZENncEtTa3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIUjVjR1Z2WmlCMllXeDFaU0E5UFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGk1elpYUkRiR0Z6Y3loelpXeG1MQ0IyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHJaWGt1YzNSaGNuUnpWMmwwYUNoY0ltOXVYQ0lwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnBaQ0E5SUd0bGVTNXpkR0Z5ZEhOWGFYUm9LRndpYjI1T2IzUnBabmxjSWlsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBL0lITmxiR1l1WTI5dWJtVmpkQ2hnYm05MGFXWjVPam9rZTJ0bFltRmlhV1o1S0d0bGVTNXpiR2xqWlNnNEtTbDlZQ3dnZG1Gc2RXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdPaUJ6Wld4bUxtTnZibTVsWTNRb2EyVmlZV0pwWm5rb2EyVjVMbk5zYVdObEtESXBLU3dnZG1Gc2RXVXBYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z1ZFhBdWNIVnphQ2dvS1NBOVBpQnpaV3htTG1ScGMyTnZibTVsWTNRb2FXUXBLVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0haaGJIVmxJR2x1YzNSaGJtTmxiMllnUVdOalpYTnpiM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE5sZENoelpXeG1MQ0JyWlhrc0lIWmhiSFZsTG1kbGRDZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZVzUxY0M1d2RYTm9LSFpoYkhWbExuTjFZbk5qY21saVpTZ29LU0E5UGlCelpYUW9jMlZzWml3Z2EyVjVMQ0IyWVd4MVpTNW5aWFFvS1NrcEtWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMEtITmxiR1lzSUd0bGVTd2dkbUZzZFdVcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoamFHbHNaSEpsYmlrcElIdGNiaUFnSUNBZ0lDQWdabTl5SUNoamIyNXpkQ0JqYUNCdlppQmphR2xzWkhKbGJpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR05vSUNFOVBTQmNJbHdpSUNZbUlHTm9JQ0U5UFNCbVlXeHpaU0FtSmlCamFDQWhQVDBnYm5Wc2JDQW1KaUJqYUNBaFBUMGdkVzVrWldacGJtVmtLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1MkxtRmtaRU5vYVd4a0tITmxiR1lzSUdOb0xDQXRNU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdOb0lEMGdZMmhwYkdSeVpXNWNiaUFnSUNBZ0lDQWdhV1lnS0dOb0lDRTlQU0JjSWx3aUlDWW1JR05vSUNFOVBTQm1ZV3h6WlNBbUppQmphQ0FoUFQwZ2JuVnNiQ0FtSmlCamFDQWhQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JsYm5ZdVlXUmtRMmhwYkdRb2MyVnNaaXdnWTJnc0lDMHhLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0dOc1pXRnVkWEF1YkdWdVozUm9JRDRnTUNrZ2UxeHVJQ0FnSUNBZ0lDQnZia05zWldGdWRYQW9LQ2tnUFQ0Z1kyeGxZVzUxY0M1bWIzSkZZV05vS0Noallpa2dQVDRnWTJJb0tTa3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUhObGJHWmNibjFjYmlJc0lDSnBiWEJ2Y25RZ2V5QkJZMk5sYzNOdmNpQjlJR1p5YjIwZ1hDSm5ibWx0WENKY2JtbHRjRzl5ZENCQmMzUmhiRWxQSUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzU1U5Y0lseHVhVzF3YjNKMElIc2daWGhsWTBGemVXNWpJSDBnWm5KdmJTQmNJaTR2Y0hKdlkyVnpjeTVxYzF3aVhHNWNibVY0Y0c5eWRDQjBlWEJsSUZScGJXVWdQU0JCYzNSaGJFbFBMbFJwYldWY2JtVjRjRzl5ZENCamIyNXpkQ0JVYVcxbElEMGdRWE4wWVd4SlR5NVVhVzFsWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCcGJuUmxjblpoYkNocGJuUmxjblpoYkRvZ2JuVnRZbVZ5TENCallXeHNZbUZqYXo4NklDZ3BJRDArSUhadmFXUXBJSHRjYmlBZ0lDQnlaWFIxY200Z1FYTjBZV3hKVHk1VWFXMWxMbWx1ZEdWeWRtRnNLR2x1ZEdWeWRtRnNMQ0FvS1NBOVBpQjJiMmxrSUdOaGJHeGlZV05yUHk0b0tTbGNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhScGJXVnZkWFFvZEdsdFpXOTFkRG9nYm5WdFltVnlMQ0JqWVd4c1ltRmphejg2SUNncElEMCtJSFp2YVdRcElIdGNiaUFnSUNCeVpYUjFjbTRnUVhOMFlXeEpUeTVVYVcxbExuUnBiV1Z2ZFhRb2RHbHRaVzkxZEN3Z0tDa2dQVDRnZG05cFpDQmpZV3hzWW1GamF6OHVLQ2twWEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnBaR3hsS0dOaGJHeGlZV05yUHpvZ0tDa2dQVDRnZG05cFpDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCQmMzUmhiRWxQTGxScGJXVXVhV1JzWlNnb0tTQTlQaUIyYjJsa0lHTmhiR3hpWVdOclB5NG9LU2xjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlZCdmJHd29YRzRnSUNBZ2FXNXBkRG9nYzNSeWFXNW5MRnh1SUNBZ0lHbHVkR1Z5ZG1Gc09pQnVkVzFpWlhJc1hHNGdJQ0FnWlhobFl6b2djM1J5YVc1bklId2djM1J5YVc1blcxMHNYRzRwT2lCQlkyTmxjM052Y2p4emRISnBibWMrWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZRYjJ4c1BGUStLRnh1SUNBZ0lHbHVhWFE2SUZRc1hHNGdJQ0FnYVc1MFpYSjJZV3c2SUc1MWJXSmxjaXhjYmlBZ0lDQmxlR1ZqT2lCemRISnBibWNnZkNCemRISnBibWRiWFN4Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUNoemRHUnZkWFE2SUhOMGNtbHVaeXdnY0hKbGRqb2dWQ2tnUFQ0Z1ZDeGNiaWs2SUVGalkyVnpjMjl5UEZRK1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWUWIyeHNQRlErS0Z4dUlDQWdJR2x1YVhRNklGUXNYRzRnSUNBZ2FXNTBaWEoyWVd3NklHNTFiV0psY2l4Y2JpQWdJQ0JtYmpvZ0tIQnlaWFk2SUZRcElEMCtJRlFnZkNCUWNtOXRhWE5sUEZRK0xGeHVLVG9nUVdOalpYTnpiM0k4VkQ1Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlZCdmJHdzhWRDRvWEc0Z0lDQWdhVzVwZERvZ1ZDeGNiaUFnSUNCcGRtRnNPaUJ1ZFcxaVpYSXNYRzRnSUNBZ1pYaGxZMDl5Um00NklITjBjbWx1WnlCOElITjBjbWx1WjF0ZElId2dLQ2h3Y21WMk9pQlVLU0E5UGlCVUlId2dVSEp2YldselpUeFVQaWtzWEc0Z0lDQWdkSEpoYm5ObWIzSnRQem9nS0hOMFpHOTFkRG9nYzNSeWFXNW5MQ0J3Y21WMk9pQlVLU0E5UGlCVUxGeHVLVG9nUVdOalpYTnpiM0k4VkQ0Z2UxeHVJQ0FnSUd4bGRDQmpkWEp5Wlc1MFZtRnNkV1VnUFNCcGJtbDBYRzRnSUNBZ2JHVjBJSFJwYldWeU9pQkJjM1JoYkVsUExsUnBiV1VnZkNCdWRXeHNJRDBnYm5Wc2JGeHVJQ0FnSUdOdmJuTjBJSE4xWW5OamNtbGlaWEp6SUQwZ2JtVjNJRk5sZER3b0tTQTlQaUIyYjJsa1BpZ3BYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQnpkV0p6WTNKcFltVW9ZMkZzYkdKaFkyczZJQ2dwSUQwK0lIWnZhV1FwT2lBb0tTQTlQaUIyYjJsa0lIdGNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjMlYwS0haaGJIVmxPaUJVS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnSVQwOUlHTjFjbkpsYm5SV1lXeDFaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJXWVd4MVpTQTlJSFpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzVmljMk55YVdKbGNuTXVabTl5UldGamFDZ29ZMklwSUQwK0lHTmlLQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9jM1ZpYzJOeWFXSmxjbk11YzJsNlpTQTlQVDBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdsdFpYSWdQU0JwYm5SbGNuWmhiQ2hwZG1Gc0xDQW9LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmxlR1ZqVDNKR2JpQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFpoYkhWbElEMGdaWGhsWTA5eVJtNG9ZM1Z5Y21WdWRGWmhiSFZsS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJRY205dGFYTmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpTNTBhR1Z1S0hObGRDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sZENoMllXeDFaU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Y0WldOQmMzbHVZeWhsZUdWalQzSkdiaWt1ZEdobGJpZ29jM1JrYjNWMEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WlhRb2RISmhibk5tYjNKdElEOGdkSEpoYm5ObWIzSnRLSE4wWkc5MWRDd2dZM1Z5Y21WdWRGWmhiSFZsS1NBNklDaHpkR1J2ZFhRZ1lYTWdWQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhOMVluTmpjbWxpWlhKekxtRmtaQ2hqWVd4c1ltRmpheWxjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzVmljMk55YVdKbGNuTXVaR1ZzWlhSbEtHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITjFZbk5qY21saVpYSnpMbk5wZW1VZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFXMWxjajh1WTJGdVkyVnNLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYVcxbGNpQTlJRzUxYkd4Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUVdOalpYTnpiM0lvS0NrZ1BUNGdZM1Z5Y21WdWRGWmhiSFZsTENCemRXSnpZM0pwWW1VcFhHNTlYRzRpTENBaWFXMXdiM0owSUVGemRHRnNTVThnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hKVDF3aVhHNXBiWEJ2Y25RZ2V5QkJZMk5sYzNOdmNpQjlJR1p5YjIwZ1hDSm5ibWx0WENKY2JseHVkSGx3WlNCQmNtZHpJRDBnZTF4dUlDQWdJR050WkRvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzExY2JpQWdJQ0J2ZFhRL09pQW9jM1JrYjNWME9pQnpkSEpwYm1jcElEMCtJSFp2YVdSY2JpQWdJQ0JsY25JL09pQW9jM1JrWlhKeU9pQnpkSEpwYm1jcElEMCtJSFp2YVdSY2JuMWNibHh1Wlhod2IzSjBJSFI1Y0dVZ1VISnZZMlZ6Y3lBOUlFRnpkR0ZzU1U4dVVISnZZMlZ6YzF4dVpYaHdiM0owSUdOdmJuTjBJRkJ5YjJObGMzTWdQU0JCYzNSaGJFbFBMbEJ5YjJObGMzTmNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE4xWW5CeWIyTmxjM01vWVhKbmN6b2dRWEpuY3lrNklFRnpkR0ZzU1U4dVVISnZZMlZ6YzF4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2MzVmljSEp2WTJWemN5aGNiaUFnSUNCamJXUTZJSE4wY21sdVp5QjhJSE4wY21sdVoxdGRMRnh1SUNBZ0lHOXVUM1YwUHpvZ0tITjBaRzkxZERvZ2MzUnlhVzVuS1NBOVBpQjJiMmxrTEZ4dUlDQWdJRzl1UlhKeVB6b2dLSE4wWkdWeWNqb2djM1J5YVc1bktTQTlQaUIyYjJsa0xGeHVLVG9nUVhOMFlXeEpUeTVRY205alpYTnpYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ6ZFdKd2NtOWpaWE56S0Z4dUlDQWdJR0Z5WjNOUGNrTnRaRG9nUVhKbmN5QjhJSE4wY21sdVp5QjhJSE4wY21sdVoxdGRMRnh1SUNBZ0lHOXVUM1YwT2lBb2MzUmtiM1YwT2lCemRISnBibWNwSUQwK0lIWnZhV1FnUFNCd2NtbHVkQ3hjYmlBZ0lDQnZia1Z5Y2pvZ0tITjBaR1Z5Y2pvZ2MzUnlhVzVuS1NBOVBpQjJiMmxrSUQwZ2NISnBiblJsY25Jc1hHNHBJSHRjYmlBZ0lDQmpiMjV6ZENCaGNtZHpJRDBnUVhKeVlYa3VhWE5CY25KaGVTaGhjbWR6VDNKRGJXUXBJSHg4SUhSNWNHVnZaaUJoY21kelQzSkRiV1FnUFQwOUlGd2ljM1J5YVc1blhDSmNiaUFnSUNCamIyNXpkQ0I3SUdOdFpDd2daWEp5TENCdmRYUWdmU0E5SUh0Y2JpQWdJQ0FnSUNBZ1kyMWtPaUJoY21keklEOGdZWEpuYzA5eVEyMWtJRG9nWVhKbmMwOXlRMjFrTG1OdFpDeGNiaUFnSUNBZ0lDQWdaWEp5T2lCaGNtZHpJRDhnYjI1RmNuSWdPaUJoY21kelQzSkRiV1F1WlhKeUlIeDhJRzl1UlhKeUxGeHVJQ0FnSUNBZ0lDQnZkWFE2SUdGeVozTWdQeUJ2Yms5MWRDQTZJR0Z5WjNOUGNrTnRaQzV2ZFhRZ2ZId2diMjVQZFhRc1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdjSEp2WXlBOUlFRnljbUY1TG1selFYSnlZWGtvWTIxa0tWeHVJQ0FnSUNBZ0lDQS9JRUZ6ZEdGc1NVOHVVSEp2WTJWemN5NXpkV0p3Y205alpYTnpkaWhqYldRcFhHNGdJQ0FnSUNBZ0lEb2dRWE4wWVd4SlR5NVFjbTlqWlhOekxuTjFZbkJ5YjJObGMzTW9ZMjFrS1Z4dVhHNGdJQ0FnY0hKdll5NWpiMjV1WldOMEtGd2ljM1JrYjNWMFhDSXNJQ2hmTENCemRHUnZkWFE2SUhOMGNtbHVaeWtnUFQ0Z2IzVjBLSE4wWkc5MWRDa3BYRzRnSUNBZ2NISnZZeTVqYjI1dVpXTjBLRndpYzNSa1pYSnlYQ0lzSUNoZkxDQnpkR1JsY25JNklITjBjbWx1WnlrZ1BUNGdaWEp5S0hOMFpHVnljaWtwWEc0Z0lDQWdjbVYwZFhKdUlIQnliMk5jYm4xY2JseHVMeW9xSUVCMGFISnZkM01nZTBkTWFXSXVSWEp5YjNKOUlGUm9jbTkzY3lCemRHUmxjbklnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCbGVHVmpLR050WkRvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwcElIdGNiaUFnSUNCeVpYUjFjbTRnUVhKeVlYa3VhWE5CY25KaGVTaGpiV1FwSUQ4Z1FYTjBZV3hKVHk1UWNtOWpaWE56TG1WNFpXTjJLR050WkNrZ09pQkJjM1JoYkVsUExsQnliMk5sYzNNdVpYaGxZeWhqYldRcFhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJsZUdWalFYTjVibU1vWTIxa09pQnpkSEpwYm1jZ2ZDQnpkSEpwYm1kYlhTazZJRkJ5YjIxcGMyVThjM1J5YVc1blBpQjdYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QlFjbTl0YVhObEtDaHlaWE52YkhabExDQnlaV3BsWTNRcElEMCtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWTIxa0tTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1FYTjBZV3hKVHk1UWNtOWpaWE56TG1WNFpXTmZZWE41Ym1OMktHTnRaQ3dnS0Y4c0lISmxjeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnllU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxjMjlzZG1Vb1FYTjBZV3hKVHk1UWNtOWpaWE56TG1WNFpXTmZZWE41Ym1OMlgyWnBibWx6YUNoeVpYTXBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGFtVmpkQ2hsY25KdmNpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnUVhOMFlXeEpUeTVRY205alpYTnpMbVY0WldOZllYTjVibU1vWTIxa0xDQW9YeXdnY21WektTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WemIyeDJaU2hCYzNSaGJFbFBMbEJ5YjJObGMzTXVaWGhsWTE5bWFXNXBjMmdvY21WektTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WldwbFkzUW9aWEp5YjNJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcFhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVlRkV0p3Y205alpYTnpLR2x1YVhRNklITjBjbWx1Wnl3Z1pYaGxZem9nYzNSeWFXNW5JSHdnYzNSeWFXNW5XMTBwT2lCQlkyTmxjM052Y2p4emRISnBibWMrWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZUZFdKd2NtOWpaWE56UEZRK0tGeHVJQ0FnSUdsdWFYUTZJRlFzWEc0Z0lDQWdaWGhsWXpvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwc1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lBb2MzUmtiM1YwT2lCemRISnBibWNzSUhCeVpYWTZJRlFwSUQwK0lGUXNYRzRwT2lCQlkyTmxjM052Y2p4VVBseHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZM0psWVhSbFUzVmljSEp2WTJWemN6eFVQaWhjYmlBZ0lDQnBibWwwT2lCVUxGeHVJQ0FnSUdWNFpXTTZJSE4wY21sdVp5QjhJSE4wY21sdVoxdGRMRnh1SUNBZ0lIUnlZVzV6Wm05eWJUODZJQ2h6ZEdSdmRYUTZJSE4wY21sdVp5d2djSEpsZGpvZ1ZDa2dQVDRnVkN4Y2JpazZJRUZqWTJWemMyOXlQRlErSUh0Y2JpQWdJQ0JzWlhRZ1kzVnljbVZ1ZEZaaGJIVmxJRDBnYVc1cGRGeHVJQ0FnSUd4bGRDQndjbTlqT2lCQmMzUmhiRWxQTGxCeWIyTmxjM01nZkNCdWRXeHNJRDBnYm5Wc2JGeHVJQ0FnSUdOdmJuTjBJSE4xWW5OamNtbGlaWEp6SUQwZ2JtVjNJRk5sZER3b0tTQTlQaUIyYjJsa1BpZ3BYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQnpkV0p6WTNKcFltVW9ZMkZzYkdKaFkyczZJQ2dwSUQwK0lIWnZhV1FwT2lBb0tTQTlQaUIyYjJsa0lIdGNiaUFnSUNBZ0lDQWdhV1lnS0hOMVluTmpjbWxpWlhKekxuTnBlbVVnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnliMk1nUFNCemRXSndjbTlqWlhOektHVjRaV01zSUNoemRHUnZkWFFwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMllXeDFaU0E5SUhSeVlXNXpabTl5YlNBL0lIUnlZVzV6Wm05eWJTaHpkR1J2ZFhRc0lHTjFjbkpsYm5SV1lXeDFaU2tnT2lBb2MzUmtiM1YwSUdGeklGUXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOMWNuSmxiblJXWVd4MVpTQWhQVDBnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEZaaGJIVmxJRDBnZG1Gc2RXVmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNWaWMyTnlhV0psY25NdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhOMVluTmpjbWxpWlhKekxtRmtaQ2hqWVd4c1ltRmpheWxjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzVmljMk55YVdKbGNuTXVaR1ZzWlhSbEtHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITjFZbk5qY21saVpYSnpMbk5wZW1VZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtOWpQeTVyYVd4c0tDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbTlqSUQwZ2JuVnNiRnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QkJZMk5sYzNOdmNpZ29LU0E5UGlCamRYSnlaVzUwVm1Gc2RXVXNJSE4xWW5OamNtbGlaU2xjYm4xY2JpSXNJQ0l2S2lCbGMyeHBiblF0WkdsellXSnNaU0JBZEhsd1pYTmpjbWx3ZEMxbGMyeHBiblF2Ym04dGJtRnRaWE53WVdObElDb3ZYRzVwYlhCdmNuUWdSM1JySUdaeWIyMGdYQ0puYVRvdkwwZDBhejkyWlhKemFXOXVQVFF1TUZ3aVhHNXBiWEJ2Y25RZ1FYTjBZV3dnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3cvZG1WeWMybHZiajAwTGpCY0lseHVhVzF3YjNKMElIc2dRME5RY205d2N5QjlJR1p5YjIwZ1hDSm5ibWx0WENKY2JtbHRjRzl5ZENCN0lHbHVkSEpwYm5OcFkwVnNaVzFsYm5SeklIMGdabkp2YlNCY0ltZHVhVzB2WjNSck5DOXFjM2d0Y25WdWRHbHRaVndpWEc1Y2JuUjVjR1VnVUhKdmNITThWQ0JsZUhSbGJtUnpJRWQwYXk1WGFXUm5aWFFzSUZCeWIzQnpQaUE5SUVORFVISnZjSE04VkN3Z1VHRnlkR2xoYkR4UWNtOXdjejQrWEc1Y2JrOWlhbVZqZEM1aGMzTnBaMjRvYVc1MGNtbHVjMmxqUld4bGJXVnVkSE1zSUh0Y2JpQWdJQ0JpYjNnNklFZDBheTVDYjNnc1hHNGdJQ0FnWW5WMGRHOXVPaUJIZEdzdVFuVjBkRzl1TEZ4dUlDQWdJR05sYm5SbGNtSnZlRG9nUjNSckxrTmxiblJsY2tKdmVDeGNiaUFnSUNBdkx5QmphWEpqZFd4aGNuQnliMmR5WlhOek9pQkJjM1JoYkM1RGFYSmpkV3hoY2xCeWIyZHlaWE56TEZ4dUlDQWdJR1J5WVhkcGJtZGhjbVZoT2lCSGRHc3VSSEpoZDJsdVowRnlaV0VzWEc0Z0lDQWdaVzUwY25rNklFZDBheTVGYm5SeWVTeGNiaUFnSUNCcGJXRm5aVG9nUjNSckxrbHRZV2RsTEZ4dUlDQWdJR3hoWW1Wc09pQkhkR3N1VEdGaVpXd3NYRzRnSUNBZ2JHVjJaV3hpWVhJNklFZDBheTVNWlhabGJFSmhjaXhjYmlBZ0lDQnRaVzUxWW5WMGRHOXVPaUJIZEdzdVRXVnVkVUoxZEhSdmJpeGNiaUFnSUNCdmRtVnliR0Y1T2lCSGRHc3VUM1psY214aGVTeGNiaUFnSUNCd2IzQnZkbVZ5T2lCSGRHc3VVRzl3YjNabGNpeGNiaUFnSUNCeVpYWmxZV3hsY2pvZ1IzUnJMbEpsZG1WaGJHVnlMRnh1SUNBZ0lITmpjbTlzYkdWa2QybHVaRzkzT2lCSGRHc3VVMk55YjJ4c1pXUlhhVzVrYjNjc1hHNGdJQ0FnYzJ4cFpHVnlPaUJCYzNSaGJDNVRiR2xrWlhJc1hHNGdJQ0FnYzNSaFkyczZJRWQwYXk1VGRHRmpheXhjYmlBZ0lDQnpkMmwwWTJnNklFZDBheTVUZDJsMFkyZ3NYRzRnSUNBZ2RHOW5aMnhsWW5WMGRHOXVPaUJIZEdzdVZHOW5aMnhsUW5WMGRHOXVMRnh1SUNBZ0lIZHBibVJ2ZHpvZ1FYTjBZV3d1VjJsdVpHOTNMRnh1ZlNsY2JseHVaR1ZqYkdGeVpTQm5iRzlpWVd3Z2UxeHVJQ0FnSUc1aGJXVnpjR0ZqWlNCS1UxZ2dlMXh1SUNBZ0lDQWdJQ0JwYm5SbGNtWmhZMlVnU1c1MGNtbHVjMmxqUld4bGJXVnVkSE1nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZbTk0T2lCUWNtOXdjenhIZEdzdVFtOTRMQ0JIZEdzdVFtOTRMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCaWRYUjBiMjQ2SUZCeWIzQnpQRWQwYXk1Q2RYUjBiMjRzSUVkMGF5NUNkWFIwYjI0dVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJR05sYm5SbGNtSnZlRG9nVUhKdmNITThSM1JyTGtObGJuUmxja0p2ZUN3Z1IzUnJMa05sYm5SbGNrSnZlQzVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdZMmx5WTNWc1lYSndjbTluY21WemN6b2dVSEp2Y0hNOFFYTjBZV3d1UTJseVkzVnNZWEpRY205bmNtVnpjeXdnUVhOMFlXd3VRMmx5WTNWc1lYSlFjbTluY21WemN5NURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnWkhKaGQybHVaMkZ5WldFNklGQnliM0J6UEVkMGF5NUVjbUYzYVc1blFYSmxZU3dnUjNSckxrUnlZWGRwYm1kQmNtVmhMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJuUnllVG9nVUhKdmNITThSM1JyTGtWdWRISjVMQ0JIZEdzdVJXNTBjbmt1UTI5dWMzUnlkV04wYjNKUWNtOXdjejVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHRZV2RsT2lCUWNtOXdjenhIZEdzdVNXMWhaMlVzSUVkMGF5NUpiV0ZuWlM1RGIyNXpkSEoxWTNSdmNsQnliM0J6UGx4dUlDQWdJQ0FnSUNBZ0lDQWdiR0ZpWld3NklGQnliM0J6UEVkMGF5NU1ZV0psYkN3Z1IzUnJMa3hoWW1Wc0xrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhabGJHSmhjam9nVUhKdmNITThSM1JyTGt4bGRtVnNRbUZ5TENCSGRHc3VUR1YyWld4Q1lYSXVRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUcxbGJuVmlkWFIwYjI0NklGQnliM0J6UEVkMGF5NU5aVzUxUW5WMGRHOXVMQ0JIZEdzdVRXVnVkVUoxZEhSdmJpNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnYjNabGNteGhlVG9nVUhKdmNITThSM1JyTGs5MlpYSnNZWGtzSUVkMGF5NVBkbVZ5YkdGNUxrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjNCdmRtVnlPaUJRY205d2N6eEhkR3N1VUc5d2IzWmxjaXdnUjNSckxsQnZjRzkyWlhJdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZG1WaGJHVnlPaUJRY205d2N6eEhkR3N1VW1WMlpXRnNaWElzSUVkMGF5NVNaWFpsWVd4bGNpNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJOeWIyeHNaV1IzYVc1a2IzYzZJRkJ5YjNCelBFZDBheTVUWTNKdmJHeGxaRmRwYm1SdmR5d2dSM1JyTGxOamNtOXNiR1ZrVjJsdVpHOTNMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCemJHbGtaWEk2SUZCeWIzQnpQRUZ6ZEdGc0xsTnNhV1JsY2l3Z1FYTjBZV3d1VTJ4cFpHVnlMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCemRHRmphem9nVUhKdmNITThSM1JyTGxOMFlXTnJMQ0JIZEdzdVUzUmhZMnN1UTI5dWMzUnlkV04wYjNKUWNtOXdjejVjYmlBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYURvZ1VISnZjSE04UjNSckxsTjNhWFJqYUN3Z1IzUnJMbE4zYVhSamFDNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnZEc5bloyeGxZblYwZEc5dU9pQlFjbTl3Y3p4SGRHc3VWRzluWjJ4bFFuVjBkRzl1TENCSGRHc3VWRzluWjJ4bFFuVjBkRzl1TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhVzVrYjNjNklGQnliM0J6UEVGemRHRnNMbGRwYm1SdmR5d2dRWE4wWVd3dVYybHVaRzkzTGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OVhHNWNibVY0Y0c5eWRDQXFJR1p5YjIwZ1hDSm5ibWx0TDJkMGF6UXZhbk40TFhKMWJuUnBiV1ZjSWx4dUlpd2dJbWx0Y0c5eWRDQkhkR3NnWm5KdmJTQmNJbWRwT2k4dlIzUnJQM1psY25OcGIyNDlOQzR3WENKY2JtbHRjRzl5ZENCSGFXOGdabkp2YlNCY0ltZHBPaTh2UjJsdlAzWmxjbk5wYjI0OU1pNHdYQ0pjYm1sdGNHOXlkQ0JIVDJKcVpXTjBJR1p5YjIwZ1hDSm5hVG92TDBkUFltcGxZM1JjSWx4dWFXMXdiM0owSUhzZ1oyVjBWSGx3WlN3Z2IyNURiR1ZoYm5Wd0xDQkJZMk5sYzNOdmNpd2dSbkpoWjIxbGJuUWdmU0JtY205dElGd2lMaTR2YVc1a1pYZ3Vhbk5jSWx4dWFXMXdiM0owSUhzZ1kyOXVabWxuZFdVZ2ZTQm1jbTl0SUZ3aUxpNHZhbk40TDJWdWRpNXFjMXdpWEc1Y2JtTnZibk4wSUdSMWJXMTVRblZwYkdSbGNpQTlJRzVsZHlCSGRHc3VRblZwYkdSbGNpZ3BYRzVjYm1aMWJtTjBhVzl1SUdGa1pDaHdZWEpsYm5RNklFZDBheTVDZFdsc1pHRmliR1VzSUdOb2FXeGtPaUJIVDJKcVpXTjBMazlpYW1WamRDd2dYem9nYm5WdFltVnlLU0I3WEc0Z0lDQWdhV1lnS0NGemNHVmphV0ZzUVdSa0tIQmhjbVZ1ZEN3Z1kyaHBiR1FzSUY4cEtTQjdYRzRnSUNBZ0lDQWdJSEJoY21WdWRDNTJablZ1WTE5aFpHUmZZMmhwYkdRb1pIVnRiWGxDZFdsc1pHVnlMQ0JqYUdsc1pDd2daMlYwVkhsd1pTaGphR2xzWkNrcFhHNGdJQ0FnZlZ4dWZWeHVYRzVtZFc1amRHbHZiaUJ6Y0dWamFXRnNVbVZ0YjNabEtGOXdZWEpsYm5RNklFZFBZbXBsWTNRdVQySnFaV04wTENCZlkyaHBiR1E2SUVkUFltcGxZM1F1VDJKcVpXTjBLU0I3WEc0Z0lDQWdMeThnVkU5RVR6b2dZV1JrSUdGdWVTQnpjR1ZqYVdGc0lHTmhjMlZjYmlBZ0lDQnlaWFIxY200Z1ptRnNjMlZjYm4xY2JseHVablZ1WTNScGIyNGdjM0JsWTJsaGJFRmtaQ2h3WVhKbGJuUTZJRWRQWW1wbFkzUXVUMkpxWldOMExDQmphR2xzWkRvZ1IwOWlhbVZqZEM1UFltcGxZM1FzSUY4NklHNTFiV0psY2lrZ2UxeHVJQ0FnSUM4dklGUlBSRTg2SUdGa1pDQmhibmtnYjNSb1pYSWdjM0JsWTJsaGJDQmpZWE5sWEc0Z0lDQWdhV1lnS0Z4dUlDQWdJQ0FnSUNCamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVkMGF5NUJaR3AxYzNSdFpXNTBJQ1ltWEc0Z0lDQWdJQ0FnSUZ3aWMyVjBYMkZrYW5WemRHMWxiblJjSWlCcGJpQndZWEpsYm5RZ0ppWmNiaUFnSUNBZ0lDQWdkSGx3Wlc5bUlIQmhjbVZ1ZEM1elpYUmZZV1JxZFhOMGJXVnVkQ0E5UFQwZ1hDSm1kVzVqZEdsdmJsd2lYRzRnSUNBZ0tTQjdYRzRnSUNBZ0lDQWdJSEJoY21WdWRDNXpaWFJmWVdScWRYTjBiV1Z1ZENoamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5ZFdWY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1hHNGdJQ0FnSUNBZ0lHTm9hV3hrSUdsdWMzUmhibU5sYjJZZ1IzUnJMbGRwWkdkbGRDQW1KbHh1SUNBZ0lDQWdJQ0J3WVhKbGJuUWdhVzV6ZEdGdVkyVnZaaUJIZEdzdVUzUmhZMnNnSmlaY2JpQWdJQ0FnSUNBZ1kyaHBiR1F1Ym1GdFpTQWhQVDBnWENKY0lpQW1KbHh1SUNBZ0lDQWdJQ0JqYUdsc1pDNXVZVzFsSUNFOVBTQnVkV3hzSUNZbVhHNGdJQ0FnSUNBZ0lHZGxkRlI1Y0dVb1kyaHBiR1FwSUQwOVBTQmNJbTVoYldWa1hDSmNiaUFnSUNBcElIdGNiaUFnSUNBZ0lDQWdjR0Z5Wlc1MExtRmtaRjl1WVcxbFpDaGphR2xzWkN3Z1kyaHBiR1F1Ym1GdFpTbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUnlkV1ZjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWTJocGJHUWdhVzV6ZEdGdVkyVnZaaUJIZEdzdVVHOXdiM1psY2lBbUppQndZWEpsYm5RZ2FXNXpkR0Z1WTJWdlppQkhkR3N1VFdWdWRVSjFkSFJ2YmlrZ2UxeHVJQ0FnSUNBZ0lDQndZWEpsYm5RdWMyVjBYM0J2Y0c5MlpYSW9ZMmhwYkdRcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNuVmxYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLRnh1SUNBZ0lDQWdJQ0JqYUdsc1pDQnBibk4wWVc1alpXOW1JRWRwYnk1TlpXNTFUVzlrWld3Z0ppWmNiaUFnSUNBZ0lDQWdLSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1TlpXNTFRblYwZEc5dUlIeDhJSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1UWIzQnZkbVZ5VFdWdWRTbGNiaUFnSUNBcElIdGNiaUFnSUNBZ0lDQWdjR0Z5Wlc1MExuTmxkRjl0Wlc1MVgyMXZaR1ZzS0dOb2FXeGtLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEoxWlZ4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVkcGJ5NU5aVzUxU1hSbGJTQW1KaUJ3WVhKbGJuUWdhVzV6ZEdGdVkyVnZaaUJIYVc4dVRXVnVkU2tnZTF4dUlDQWdJQ0FnSUNBdkx5QlVUMFJQT2x4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVkMGF5NVhhVzVrYjNjZ0ppWWdjR0Z5Wlc1MElHbHVjM1JoYm1ObGIyWWdSM1JyTGtGd2NHeHBZMkYwYVc5dUtTQjdYRzRnSUNBZ0lDQWdJSEJoY21WdWRDNWhaR1JmZDJsdVpHOTNLR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISjFaVnh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2hqYUdsc1pDQnBibk4wWVc1alpXOW1JRWQwYXk1VVpYaDBRblZtWm1WeUlDWW1JSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1VVpYaDBWbWxsZHlrZ2UxeHVJQ0FnSUNBZ0lDQndZWEpsYm5RdWMyVjBYMkoxWm1abGNpaGphR2xzWkNsY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVmNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnWm1Gc2MyVmNibjFjYmx4dVpuVnVZM1JwYjI0Z2NtVnRiM1psS0hCaGNtVnVkRG9nUjA5aWFtVmpkQzVQWW1wbFkzUXNJR05vYVd4a09pQkhUMkpxWldOMExrOWlhbVZqZENrZ2UxeHVJQ0FnSUdsbUlDaHpjR1ZqYVdGc1VtVnRiM1psS0hCaGNtVnVkQ3dnWTJocGJHUXBLU0J5WlhSMWNtNWNibHh1SUNBZ0lHbG1JQ2h3WVhKbGJuUWdhVzV6ZEdGdVkyVnZaaUJIZEdzdVYybGtaMlYwSUNZbUlHTm9hV3hrSUdsdWMzUmhibU5sYjJZZ1IzUnJMa1YyWlc1MFEyOXVkSEp2Ykd4bGNpa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR0Z5Wlc1MExuSmxiVzkyWlY5amIyNTBjbTlzYkdWeUtHTm9hV3hrS1Z4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoY0luTmxkRjlqYUdsc1pGd2lJR2x1SUhCaGNtVnVkQ0FtSmlCMGVYQmxiMllnY0dGeVpXNTBMbk5sZEY5amFHbHNaQ0E5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSEJoY21WdWRDNXpaWFJmWTJocGJHUW9iblZzYkNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1hDSnlaVzF2ZG1WY0lpQnBiaUJ3WVhKbGJuUWdKaVlnZEhsd1pXOW1JSEJoY21WdWRDNXlaVzF2ZG1VZ1BUMGdYQ0ptZFc1amRHbHZibHdpS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCd1lYSmxiblF1Y21WdGIzWmxLR05vYVd4a0tWeHVJQ0FnSUgxY2JseHVJQ0FnSUhSb2NtOTNJRVZ5Y205eUtHQmpZVzV1YjNRZ2NtVnRiM1psSUNSN1kyaHBiR1I5SUdaeWIyMGdKSHR3WVhKbGJuUjlZQ2xjYm4xY2JseHVZMjl1YzNRZ2V5QmhaR1JEYUdsc1pDd2dhVzUwY21sdWMybGpSV3hsYldWdWRITWdmU0E5SUdOdmJtWnBaM1ZsS0h0Y2JpQWdJQ0J6WlhSRGMzTW9iMkpxWldOMExDQmpjM01wSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0VvYjJKcVpXTjBJR2x1YzNSaGJtTmxiMllnUjNSckxsZHBaR2RsZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b1JYSnliM0lvWUdOaGJtNXZkQ0J6WlhRZ1kzTnpJRzl1SUNSN2IySnFaV04wZldBcEtWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZM1I0SUQwZ2IySnFaV04wTG1kbGRGOXpkSGxzWlY5amIyNTBaWGgwS0NsY2JpQWdJQ0FnSUNBZ2JHVjBJSEJ5YjNacFpHVnlPaUJIZEdzdVEzTnpVSEp2ZG1sa1pYSmNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnpaWFIwWlhJZ1BTQW9ZM056T2lCemRISnBibWNwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hZM056TG1sdVkyeDFaR1Z6S0Z3aWUxd2lLU0I4ZkNBaFkzTnpMbWx1WTJ4MVpHVnpLRndpZlZ3aUtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR056Y3lBOUlHQXFJSHNnSkh0amMzTjlJSDFnWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3Y205MmFXUmxjaWtnWTNSNExuSmxiVzkyWlY5d2NtOTJhV1JsY2lod2NtOTJhV1JsY2lsY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmRtbGtaWElnUFNCdVpYY2dSM1JyTGtOemMxQnliM1pwWkdWeUtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzWnBaR1Z5TG14dllXUmZabkp2YlY5emRISnBibWNvWTNOektWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTNSNExtRmtaRjl3Y205MmFXUmxjaWh3Y205MmFXUmxjaXdnUjNSckxsTlVXVXhGWDFCU1QxWkpSRVZTWDFCU1NVOVNTVlJaWDFWVFJWSXBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9ZM056SUdsdWMzUmhibU5sYjJZZ1FXTmpaWE56YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhObGRIUmxjaWhqYzNNdVoyVjBLQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCa2FYTndiM05sSUQwZ1kzTnpMbk4xWW5OamNtbGlaU2dvS1NBOVBpQnpaWFIwWlhJb1kzTnpMbWRsZENncEtTbGNiaUFnSUNBZ0lDQWdJQ0FnSUc5dVEyeGxZVzUxY0Noa2FYTndiM05sS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjMlYwZEdWeUtHTnpjeWxjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDBzWEc0Z0lDQWdjMlYwUTJ4aGMzTW9iMkpxWldOMExDQmpiR0Z6YzA1aGJXVXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tDRW9iMkpxWldOMElHbHVjM1JoYm1ObGIyWWdSM1JyTGxkcFpHZGxkQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvUlhKeWIzSW9ZR05oYm01dmRDQnpaWFFnWTJ4aGMzTk9ZVzFsSUc5dUlDUjdiMkpxWldOMGZXQXBLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR05zWVhOelRtRnRaU0JwYm5OMFlXNWpaVzltSUVGalkyVnpjMjl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUXVZM056UTJ4aGMzTmxjeUE5SUdOc1lYTnpUbUZ0WlM1blpYUW9LUzV6Y0d4cGRDZ3ZYRnh6S3k4cFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmthWE53YjNObElEMGdZMnhoYzNOT1lXMWxMbk4xWW5OamNtbGlaU2hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvS1NBOVBpQW9iMkpxWldOMExtTnpjME5zWVhOelpYTWdQU0JqYkdGemMwNWhiV1V1WjJWMEtDa3VjM0JzYVhRb0wxeGNjeXN2S1Nrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnZia05zWldGdWRYQW9aR2x6Y0c5elpTbGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkQzV6WlhSZlkzTnpYMk5zWVhOelpYTW9ZMnhoYzNOT1lXMWxMbk53YkdsMEtDOWNYSE1yTHlrcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOUxGeHVJQ0FnSUdGa1pFTm9hV3hrS0hCaGNtVnVkQ3dnWTJocGJHUXNJR2x1WkdWNElEMGdMVEVwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0VvWTJocGJHUWdhVzV6ZEdGdVkyVnZaaUJIVDJKcVpXTjBMazlpYW1WamRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTm9hV3hrSUQwZ1IzUnJMa3hoWW1Wc0xtNWxkeWhUZEhKcGJtY29ZMmhwYkdRcEtWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tITndaV05wWVd4QlpHUW9jR0Z5Wlc1MExDQmphR2xzWkN3Z2FXNWtaWGdwS1NCeVpYUjFjbTVjYmx4dUlDQWdJQ0FnSUNCcFppQW9jR0Z5Wlc1MElHbHVjM1JoYm1ObGIyWWdSbkpoWjIxbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhjbVZ1ZEM1aFpHUkRhR2xzWkNoamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymx4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0hCaGNtVnVkQ0JwYm5OMFlXNWpaVzltSUVkMGF5NUNkV2xzWkdGaWJHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqYUdsc1pDQnBibk4wWVc1alpXOW1JRVp5WVdkdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaGpiMjV6ZENCamFDQnZaaUJqYUdsc1pDNWphR2xzWkhKbGJpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFpHUW9jR0Z5Wlc1MExDQmphQ3dnYVc1a1pYZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUXVZMjl1Ym1WamRDaGNJbU5vYVd4a0xXRmtaR1ZrWENJc0lDaGZMQ0JqYURvZ2RXNXJibTkzYml3Z2FXNWtaWGc2SUc1MWJXSmxjaWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lTaGphQ0JwYm5OMFlXNWpaVzltSUVkUFltcGxZM1F1VDJKcVpXTjBLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaFVlWEJsUlhKeWIzSW9ZR05oYm01dmRDQmhaR1FnSkh0amFIMGdkRzhnSkh0d1lYSmxiblI5WUNrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWkdSRGFHbHNaQ2h3WVhKbGJuUXNJR05vTENCcGJtUmxlQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1F1WTI5dWJtVmpkQ2hjSW1Ob2FXeGtMWEpsYlc5MlpXUmNJaXdnS0Y4c0lHTm9PaUIxYm10dWIzZHVLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaEtHTm9JR2x1YzNSaGJtTmxiMllnUjA5aWFtVmpkQzVQWW1wbFkzUXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtGUjVjR1ZGY25KdmNpaGdZMkZ1Ym05MElISmxiVzkyWlNBa2UyTm9mU0JtY205dElDUjdjR0Z5Wlc1MGZXQXBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnRiM1psS0hCaGNtVnVkQ3dnWTJncFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl1UTJ4bFlXNTFjQ2dvS1NBOVBpQmphR2xzWkM1a1pYTjBjbTk1S0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHRmtaQ2h3WVhKbGJuUXNJR05vYVd4a0xDQnBibVJsZUNsY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJseHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZEdoeWIzY2dSWEp5YjNJb1lHTmhibTV2ZENCaFpHUWdKSHRqYUdsc1pIMGdkRzhnSkh0d1lYSmxiblI5WUNsY2JpQWdJQ0I5TEZ4dWZTbGNibHh1Wlhod2IzSjBJSHNnUm5KaFoyMWxiblFzSUdsdWRISnBibk5wWTBWc1pXMWxiblJ6SUgxY2JtVjRjRzl5ZENCN0lHcHplQ3dnYW5ONGN5QjlJR1p5YjIwZ1hDSXVMaTlxYzNndmFuTjRMbXB6WENKY2JpSXNJQ0pwYlhCdmNuUWdleUJCWTJObGMzTnZjaXdnWTNKbFlYUmxRbWx1WkdsdVp5d2dSbTl5TENCdmJrTnNaV0Z1ZFhBZ2ZTQm1jbTl0SUZ3aVlXZHpYQ0k3WEc1cGJYQnZjblFnZXlCSGRHc2dmU0JtY205dElGd2lZV2R6TDJkMGF6UmNJanRjYm1sdGNHOXlkQ0JCYzNSaGJGUnlZWGtnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hVY21GNVAzWmxjbk5wYjI0OU1DNHhYQ0k3WEc1Y2JtTnNZWE56SUZONWMzUmxiVlJ5WVhsRGJHRnpjeUI3WEc0Z0lDQWdjSEpwZG1GMFpTQmtaV1poZFd4ME9pQkJjM1JoYkZSeVlYa3VWSEpoZVR0Y2JpQWdJQ0J3Y21sMllYUmxJR2wwWlcxelFtbHVaR2x1WnpvZ1FXTmpaWE56YjNJOFFYTjBZV3hVY21GNUxsUnlZWGxKZEdWdFcxMCtPMXh1WEc0Z0lDQWdjSFZpYkdsaklHTnZibk4wY25WamRHOXlLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbVJsWm1GMWJIUWdQU0JCYzNSaGJGUnlZWGt1WjJWMFgyUmxabUYxYkhRb0tUdGNiaUFnSUNBZ0lDQWdkR2hwY3k1cGRHVnRjMEpwYm1ScGJtY2dQU0JqY21WaGRHVkNhVzVrYVc1bktIUm9hWE11WkdWbVlYVnNkQ3dnWENKcGRHVnRjMXdpS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J3Y21sMllYUmxJSE5sZEhWd1ZISmhlVWwwWlcwZ1BTQW9ZblJ1T2lCSGRHc3VUV1Z1ZFVKMWRIUnZiaXdnYVhSbGJUb2dRWE4wWVd4VWNtRjVMbFJ5WVhsSmRHVnRLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHSjBiaTV0Wlc1MVRXOWtaV3dnUFNCcGRHVnRMbTFsYm5WTmIyUmxiRHRjYmlBZ0lDQWdJQ0FnWW5SdUxtbHVjMlZ5ZEY5aFkzUnBiMjVmWjNKdmRYQW9YQ0prWW5WemJXVnVkVndpTENCcGRHVnRMbUZqZEdsdmJrZHliM1Z3S1R0Y2JseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCaFowbGtJRDBnYVhSbGJTNWpiMjV1WldOMEtGd2libTkwYVdaNU9qcGhZM1JwYjI0dFozSnZkWEJjSWl3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZblJ1TG1sdWMyVnlkRjloWTNScGIyNWZaM0p2ZFhBb1hDSmtZblZ6YldWdWRWd2lMQ0JwZEdWdExtRmpkR2x2YmtkeWIzVndLVHRjYmlBZ0lDQWdJQ0FnZlNrN1hHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2JXMUpaQ0E5SUdsMFpXMHVZMjl1Ym1WamRDaGNJbTV2ZEdsbWVUbzZiV1Z1ZFMxdGIyUmxiRndpTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlkRzR1YzJWMFgyMWxiblZmYlc5a1pXd29hWFJsYlM1dFpXNTFUVzlrWld3cE8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmx4dUlDQWdJQ0FnSUNCdmJrTnNaV0Z1ZFhBb0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhWFJsYlM1a2FYTmpiMjV1WldOMEtHRm5TV1FwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhWFJsYlM1a2FYTmpiMjV1WldOMEtHMXRTV1FwTzF4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ2NISnBkbUYwWlNCVWNtRjVTWFJsYlNoN0lHbDBaVzBnZlRvZ2V5QnBkR1Z0T2lCQmMzUmhiRlJ5WVhrdVZISmhlVWwwWlcwZ2ZTa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lDQWdJQ0FnSUNBZ1BHMWxiblZpZFhSMGIyNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpjM05EYkdGemMyVnpQWHRiWENKVWNtRjVTWFJsYlZ3aVhYMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiMjlzZEdsd1RXRnlhM1Z3UFh0amNtVmhkR1ZDYVc1a2FXNW5LR2wwWlcwc0lGd2lkRzl2YkhScGNFMWhjbXQxY0Z3aUtYMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtQWHNvYzJWc1ppa2dQVDRnZEdocGN5NXpaWFIxY0ZSeVlYbEpkR1Z0S0hObGJHWXNJR2wwWlcwcGZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGhiR2xuYmoxN1IzUnJMa0ZzYVdkdUxrTkZUbFJGVW4xY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeHBaMjQ5ZTBkMGF5NUJiR2xuYmk1RFJVNVVSVko5WEc0Z0lDQWdJQ0FnSUNBZ0lDQStYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR2x0WVdkbElHZHBZMjl1UFh0amNtVmhkR1ZDYVc1a2FXNW5LR2wwWlcwc0lGd2laMmxqYjI1Y0lpbDlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQThMMjFsYm5WaWRYUjBiMjQrWEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY0hWaWJHbGpJR2RsZENCVGVYTjBaVzFVY21GNUtDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlQ0JqYzNORGJHRnpjMlZ6UFh0YlhDSlRlWE4wWlcxVWNtRjVYQ0pkZlQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFJtOXlJR1ZoWTJnOWUzUm9hWE11YVhSbGJYTkNhVzVrYVc1bmZTQmphR2xzWkhKbGJqMTdLR2wwWlcwcElEMCtJSFJvYVhNdVZISmhlVWwwWlcwb2V5QnBkR1Z0SUgwcGZTQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BDOWliM2crWEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnZlZ4dWZWeHVYRzVqYjI1emRDQnplWE4wWlcxVWNtRjVJRDBnYm1WM0lGTjVjM1JsYlZSeVlYbERiR0Z6Y3p0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2MzbHpkR1Z0VkhKaGVUdGNiaUlzSUNKcGJYQnZjblFnZXlCQlkyTmxjM052Y2l3Z1kzSmxZWFJsUW1sdVpHbHVaeXdnYjI1RGJHVmhiblZ3TENCWGFYUm9JSDBnWm5KdmJTQmNJbUZuYzF3aU8xeHVhVzF3YjNKMElIc2dSMlJyTENCSGRHc2dmU0JtY205dElGd2lZV2R6TDJkMGF6UmNJanRjYm1sdGNHOXlkQ0JCYzNSaGJFMXdjbWx6SUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzVFhCeWFYTS9kbVZ5YzJsdmJqMHdMakZjSWp0Y2JseHVkSGx3WlNCUWJHRjVaWEpDZFhSMGIyNGdQU0FuY0hKbGRtbHZkWE1uSUh3Z0oyNWxlSFFuSUh3Z0ozQnNZWGxwYm1jbklId2dKM0JoZFhObFpDY2dmQ0FuYzNSdmNIQmxaQ2M3WEc1Y2JtTnZibk4wSUZCc1lYbGxja0oxZEhSdmJrbGpiMjV6SUQwZ2UxeHVJQ0FnSUhCc1lYbHBibWM2SUZ3aWJXVmthV0V0Y0d4aGVXSmhZMnN0YzNSaGNuUXRjM2x0WW05c2FXTmNJaXhjYmlBZ0lDQndZWFZ6WldRNklGd2liV1ZrYVdFdGNHeGhlV0poWTJzdGNHRjFjMlV0YzNsdFltOXNhV05jSWl4Y2JpQWdJQ0J6ZEc5d2NHVmtPaUJjSW0xbFpHbGhMWEJzWVhsaVlXTnJMWE4wYjNBdGMzbHRZbTlzYVdOY0lpeGNiaUFnSUNCdVpYaDBPaUJjSW0xbFpHbGhMWE5yYVhBdFptOXlkMkZ5WkMxemVXMWliMnhwWTF3aUxGeHVJQ0FnSUhCeVpYWnBiM1Z6T2lCY0ltMWxaR2xoTFhOcmFYQXRZbUZqYTNkaGNtUXRjM2x0WW05c2FXTmNJbHh1ZlZ4dVhHNTBlWEJsSUZCc1lYbGxja1JoZEdFZ1BTQjdYRzRnSUNBZ1lXTjBhWFpsT2lCaWIyOXNaV0Z1TEZ4dUlDQWdJSFJwZEd4bE9pQkJZMk5sYzNOdmNqeHpkSEpwYm1jK0lId2djM1J5YVc1bkxGeHVJQ0FnSUdGeWRHbHpkRG9nUVdOalpYTnpiM0k4YzNSeWFXNW5QaUI4SUhOMGNtbHVaeXhjYmlBZ0lDQmhiR0oxYlRvZ1FXTmpaWE56YjNJOGMzUnlhVzVuUGlCOElITjBjbWx1Wnl4Y2JpQWdJQ0J6ZEdGMGRYTkpZMjl1T2lCQlkyTmxjM052Y2p4emRISnBibWMrSUh3Z2MzUnlhVzVuTEZ4dUlDQWdJSE4wWVhSMWMxUmxlSFE2SUVGalkyVnpjMjl5UEhOMGNtbHVaejRnZkNCemRISnBibWNzWEc0Z0lDQWdibVY0ZERvZ0tDa2dQVDRnZG05cFpDeGNiaUFnSUNCd2NtVjJhVzkxY3pvZ0tDa2dQVDRnZG05cFpDeGNiaUFnSUNCd2JHRjVVR0YxYzJVNklDZ3BJRDArSUhadmFXUmNibjFjYmx4dVkyeGhjM01nVFdWa2FXRkRiR0Z6Y3lCN1hHNGdJQ0FnY0hKcGRtRjBaU0J0Y0hKcGN6b2dRWE4wWVd4TmNISnBjeTVOY0hKcGN6dGNiaUFnSUNCd2NtbDJZWFJsSUY5aFkzUnBkbVZRYkdGNVpYSkVZWFJoT2lCQlkyTmxjM052Y2p4UWJHRjVaWEpFWVhSaFBqdGNibHh1SUNBZ0lIQjFZbXhwWXlCamIyNXpkSEoxWTNSdmNpZ3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXRjSEpwY3lBOUlFRnpkR0ZzVFhCeWFYTXVaMlYwWDJSbFptRjFiSFFvS1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVmWVdOMGFYWmxVR3hoZVdWeVJHRjBZU0E5SUdOeVpXRjBaVUpwYm1ScGJtY29kR2hwY3k1dGNISnBjeXdnWENKd2JHRjVaWEp6WENJcExtRnpLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0tIQnNZWGxsY25NcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NHeGhlV2x1WnpvZ1FYTjBZV3hOY0hKcGN5NVFiR0Y1WlhJZ2ZDQnVkV3hzSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NHRjFjMlZrT2lCQmMzUmhiRTF3Y21sekxsQnNZWGxsY2lCOElHNTFiR3dnUFNCdWRXeHNPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbWFXNWhiRG9nUVhOMFlXeE5jSEpwY3k1UWJHRjVaWElnZkNCdWRXeHNJRDBnYm5Wc2JEdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnY0d4aGVXVnlJRzltSUhCc1lYbGxjbk1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2MzUmhkSFZ6SUQwZ2NHeGhlV1Z5TG1kbGRGOXdiR0Y1WW1GamExOXpkR0YwZFhNb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITjBZWFIxY3lBOVBUMGdRWE4wWVd4TmNISnBjeTVRYkdGNVltRmphMU4wWVhSMWN5NVFURUZaU1U1SEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiR0Y1YVc1bklEMGdjR3hoZVdWeU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9jM1JoZEhWeklEMDlQU0JCYzNSaGJFMXdjbWx6TGxCc1lYbGlZV05yVTNSaGRIVnpMbEJCVlZORlJDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0YxYzJWa0lEMGdjR3hoZVdWeU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptbHVZV3dnUFNCd2JHRjVhVzVuSUh4OElIQmhkWE5sWkR0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2htYVc1aGJDQWhQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J6ZEdGMGRYTWdQU0JqY21WaGRHVkNhVzVrYVc1bktHWnBibUZzTENBbmNHeGhlV0poWTJ0VGRHRjBkWE1uS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1kyRnVSMjlPWlhoMElEMGdZM0psWVhSbFFtbHVaR2x1WnlobWFXNWhiQ3dnSjJOaGJrZHZUbVY0ZENjcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmpZVzVIYjFCeVpYWnBiM1Z6SUQwZ1kzSmxZWFJsUW1sdVpHbHVaeWhtYVc1aGJDd2dKMk5oYmtkdlVISmxkbWx2ZFhNbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdZMkZ1VUdGMWMyVWdQU0JqY21WaGRHVkNhVzVrYVc1bktHWnBibUZzTENBblkyRnVVR0YxYzJVbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdZMkZ1VUd4aGVTQTlJR055WldGMFpVSnBibVJwYm1jb1ptbHVZV3dzSUNkallXNVFiR0Y1SnlrN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZqZEdsMlpUb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhScGRHeGxPaUJqY21WaGRHVkNhVzVrYVc1bktHWnBibUZzTENBbmRHbDBiR1VuS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGeWRHbHpkRG9nWTNKbFlYUmxRbWx1WkdsdVp5aG1hVzVoYkN3Z0oyRnlkR2x6ZENjcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXeGlkVzA2SUdOeVpXRjBaVUpwYm1ScGJtY29abWx1WVd3c0lDZGhiR0oxYlNjcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUmhkSFZ6U1dOdmJqb2djM1JoZEhWekxtRnpLSE4wSUQwK0lIUm9hWE11WjJWMFVHeGhlV1Z5VTNSaGRIVnpTV052YmloemRDQTlQVDBnUVhOMFlXeE5jSEpwY3k1UWJHRjVZbUZqYTFOMFlYUjFjeTVRVEVGWlNVNUhJRDhnSjNCaGRYTmxaQ2NnT2lBbmNHeGhlV2x1WnljcEtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBZWFIxYzFSbGVIUTZJSE4wWVhSMWN5NWhjeWh6ZENBOVBpQjBhR2x6TG1kbGRGQnNZWGxsY2xOMFlYUjFjeWh6ZENrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVjRkRG9nS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpZVzVIYjA1bGVIUXVaMlYwS0NrcElHWnBibUZzSVM1dVpYaDBLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGRtbHZkWE02SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZMkZ1UjI5UWNtVjJhVzkxY3k1blpYUW9LU2tnWm1sdVlXd2hMbkJ5WlhacGIzVnpLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0d4aGVWQmhkWE5sT2lBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR05oYmxCaGRYTmxMbWRsZENncElIeDhJR05oYmxCc1lYa3VaMlYwS0NrcElHWnBibUZzSVM1d2JHRjVYM0JoZFhObEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdOMGFYWmxPaUJtWVd4elpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdsMGJHVTZJQ2RPWlc1b2RXMGdjR3hoZVdWeUlHRjBhWFp2Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWEowYVhOME9pQW5KeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXeGlkVzA2SUNjbkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEdGMGRYTkpZMjl1T2lCUWJHRjVaWEpDZFhSMGIyNUpZMjl1Y3k1emRHOXdjR1ZrTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR0YwZFhOVVpYaDBPaUIwYUdsekxtZGxkRkJzWVhsbGNsTjBZWFIxY3loQmMzUmhiRTF3Y21sekxsQnNZWGxpWVdOclUzUmhkSFZ6TGxOVVQxQlFSVVFwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGgwT2lBb0tTQTlQaUI3SUgwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5WlhacGIzVnpPaUFvS1NBOVBpQjdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnNZWGxRWVhWelpUb2dLQ2tnUFQ0Z2V5QjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQndjbWwyWVhSbElHZGxkRkJzWVhsbGNsTjBZWFIxY3loemRHRjBkWE02SUVGemRHRnNUWEJ5YVhNdVVHeGhlV0poWTJ0VGRHRjBkWE1wSUh0Y2JpQWdJQ0FnSUNBZ2MzZHBkR05vS0hOMFlYUjFjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCQmMzUmhiRTF3Y21sekxsQnNZWGxpWVdOclUzUmhkSFZ6TGxCTVFWbEpUa2M2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQ2RVYjJOaGJtUnZKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnUVhOMFlXeE5jSEpwY3k1UWJHRjVZbUZqYTFOMFlYUjFjeTVRUVZWVFJVUTZYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDZFFZWFZ6WVdSdkp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQ2RPWVdSaElIUnZZMkZ1Wkc4bk8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NISnBkbUYwWlNCblpYUlFiR0Y1WlhKVGRHRjBkWE5KWTI5dUtITjBZWFIxY3pvZ1VHeGhlV1Z5UW5WMGRHOXVLU0I3WEc0Z0lDQWdJQ0FnSUhOM2FYUmphQ2h6ZEdGMGRYTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSjNCeVpYWnBiM1Z6SnpwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVUd4aGVXVnlRblYwZEc5dVNXTnZibk11Y0hKbGRtbHZkWE03WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNkd2JHRjVhVzVuSnpwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVUd4aGVXVnlRblYwZEc5dVNXTnZibk11Y0d4aGVXbHVaenRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSjNCaGRYTmxaQ2M2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRkJzWVhsbGNrSjFkSFJ2YmtsamIyNXpMbkJoZFhObFpEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdKM04wYjNCd1pXUW5PbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlFiR0Y1WlhKQ2RYUjBiMjVKWTI5dWN5NXpkRzl3Y0dWa08xeHVJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQW5ibVY0ZENjNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCc1lYbGxja0oxZEhSdmJrbGpiMjV6TG01bGVIUTdYRzRnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJRYkdGNVpYSkNkWFIwYjI1SlkyOXVjeTV6ZEc5d2NHVmtPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSFZpYkdsaklHZGxkQ0JOWldScFlTZ3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2crWEc0Z0lDQWdJQ0FnSUNBZ0lDQThWMmwwYUNCMllXeDFaVDE3ZEdocGN5NWZZV04wYVhabFVHeGhlV1Z5UkdGMFlYMCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlM0JzWVhsbGNpQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGJXVnVkV0oxZEhSdmJseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZzZDJGNWMxTm9iM2RCY25KdmR6MTdabUZzYzJWOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM056UTJ4aGMzTmxjejE3VzF3aVRXVmthV0ZjSWwxOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZ1YzJsMGFYWmxQWHR3YkdGNVpYSXVZV04wYVhabGZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2Y0c5MlpYSTllMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThjRzl3YjNabGNqNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhpYjNnZ1kzTnpRMnhoYzNObGN6MTdXMXdpVFhCeWFYTlFiM0J2ZG1WeVhDSmRmU0J2ZG1WeVpteHZkejE3UjNSckxrOTJaWEptYkc5M0xraEpSRVJGVG4wK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEdKdmVDQmpjM05EYkdGemMyVnpQWHRiWENKTmNISnBjMUJzWVhsbGNsd2lYWDBnYjNKcFpXNTBZWFJwYjI0OWUwZDBheTVQY21sbGJuUmhkR2x2Ymk1V1JWSlVTVU5CVEgwK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnWTNOelEyeGhjM05sY3oxN1cxd2lUV1YwWVdSaGRHRmNJbDE5SUc5eWFXVnVkR0YwYVc5dVBYdEhkR3N1VDNKcFpXNTBZWFJwYjI0dVZrVlNWRWxEUVV4OVBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNJR056YzBOc1lYTnpaWE05ZTF0Y0lsUnBkR3hsWENKZGZTQnNZV0psYkQxN2NHeGhlV1Z5TG5ScGRHeGxmU0JsYkd4cGNITnBlbVU5ZXpOOUlHMWhlRmRwWkhSb1EyaGhjbk05ZXpFMWZTQjNhV1IwYUVOb1lYSnpQWHN6TUgwZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4c1lXSmxiQ0JqYzNORGJHRnpjMlZ6UFh0YlhDSkJjblJwYzNSY0lsMTlJR3hoWW1Wc1BYdHdiR0Y1WlhJdVlYSjBhWE4wZlNCbGJHeHBjSE5wZW1VOWV6TjlJRzFoZUZkcFpIUm9RMmhoY25NOWV6RTFmU0IzYVdSMGFFTm9ZWEp6UFhzek1IMGdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkNCamMzTkRiR0Z6YzJWelBYdGJYQ0pCYkdKMWJWd2lYWDBnYkdGaVpXdzllM0JzWVhsbGNpNWhiR0oxYlgwZ1pXeHNhWEJ6YVhwbFBYc3pmU0J0WVhoWGFXUjBhRU5vWVhKelBYc3hOWDBnZDJsa2RHaERhR0Z5Y3oxN016QjlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WW05NElHTnpjME5zWVhOelpYTTllMXRjSWt4dmQyVnlVR0Z5ZEZ3aVhYMGdiM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVXUlZKVVNVTkJUSDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThZbTk0SUdOemMwTnNZWE56WlhNOWUxdGNJa052Ym5SeWIyeHNaWEp6WENKZGZTQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNURSVTVVUlZKOVBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnWTNOelEyeGhjM05sY3oxN1cxd2lVSEpsZG1sdmRYTmNJbDE5SUhObGJuTnBkR2wyWlQxN2NHeGhlV1Z5TG1GamRHbDJaWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pEMTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW9jMlZzWmlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR05zYVdOcklEMGdibVYzSUVkMGF5NUhaWE4wZFhKbFEyeHBZMnNvZXlCaWRYUjBiMjQ2SUVka2F5NUNWVlJVVDA1ZlVGSkpUVUZTV1NCOUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQm9ZVzVrYkdWeUlEMGdZMnhwWTJzdVkyOXVibVZqZENoY0luQnlaWE56WldSY0lpd2djR3hoZVdWeUxuQnlaWFpwYjNWektUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bUxtRmtaRjlqYjI1MGNtOXNiR1Z5S0dOc2FXTnJLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmJrTnNaV0Z1ZFhBb0tDa2dQVDU3WTJ4cFkyc3VaR2x6WTI5dWJtVmpkQ2hvWVc1a2JHVnlLWDBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGFXMWhaMlVnYVdOdmJsTnBlbVU5ZTBkMGF5NUpZMjl1VTJsNlpTNU1RVkpIUlgwZ2FXTnZiazVoYldVOWUxQnNZWGxsY2tKMWRIUnZia2xqYjI1ekxuQnlaWFpwYjNWemZTQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHd2WW05NFBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnWTNOelEyeGhjM05sY3oxN1cxd2lVR3hoZVZCaGRYTmxYQ0pkZlNCelpXNXphWFJwZG1VOWUzQnNZWGxsY2k1aFkzUnBkbVY5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUTllMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdLSE5sYkdZcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JqYkdsamF5QTlJRzVsZHlCSGRHc3VSMlZ6ZEhWeVpVTnNhV05yS0hzZ1luVjBkRzl1T2lCSFpHc3VRbFZVVkU5T1gxQlNTVTFCVWxrZ2ZTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdhR0Z1Wkd4bGNpQTlJR05zYVdOckxtTnZibTVsWTNRb1hDSndjbVZ6YzJWa1hDSXNJSEJzWVhsbGNpNXdiR0Y1VUdGMWMyVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObGJHWXVZV1JrWDJOdmJuUnliMnhzWlhJb1kyeHBZMnNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UG50amJHbGpheTVrYVhOamIyNXVaV04wS0doaGJtUnNaWElwZlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0ErWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHBiV0ZuWlNCcFkyOXVVMmw2WlQxN1IzUnJMa2xqYjI1VGFYcGxMa3hCVWtkRmZTQnBZMjl1VG1GdFpUMTdjR3hoZVdWeUxuTjBZWFIxYzBsamIyNTlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNCamMzTkRiR0Z6YzJWelBYdGJYQ0pPWlhoMFhDSmRmU0J6Wlc1emFYUnBkbVU5ZTNCc1lYbGxjaTVoWTNScGRtVjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNROWUxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tITmxiR1lwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmpiR2xqYXlBOUlHNWxkeUJIZEdzdVIyVnpkSFZ5WlVOc2FXTnJLSHNnWW5WMGRHOXVPaUJIWkdzdVFsVlVWRTlPWDFCU1NVMUJVbGtnZlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2FHRnVaR3hsY2lBOUlHTnNhV05yTG1OdmJtNWxZM1FvWENKd2NtVnpjMlZrWENJc0lIQnNZWGxsY2k1dVpYaDBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbUZrWkY5amIyNTBjbTlzYkdWeUtHTnNhV05yS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZia05zWldGdWRYQW9LQ2tnUFQ1N1kyeHBZMnN1WkdselkyOXVibVZqZENob1lXNWtiR1Z5S1gwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThhVzFoWjJVZ2FXTnZibE5wZW1VOWUwZDBheTVKWTI5dVUybDZaUzVNUVZKSFJYMGdhV052Yms1aGJXVTllMUJzWVhsbGNrSjFkSFJ2YmtsamIyNXpMbTVsZUhSOUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BDOXdiM0J2ZG1WeVBpQmhjeUJIZEdzdVVHOXdiM1psY24xY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThiR0ZpWld3Z2JHRmlaV3c5ZTNCc1lYbGxjaTV6ZEdGMGRYTlVaWGgwZlNCM2FXUjBhRU5vWVhKelBYc3hNbjB2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5dFpXNTFZblYwZEc5dVBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxOVhHNGdJQ0FnSUNBZ0lDQWdJQ0E4TDFkcGRHZytYRzRnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnS1R0Y2JpQWdJQ0I5WEc1OVhHNWNibU52Ym5OMElHMWxaR2xoSUQwZ2JtVjNJRTFsWkdsaFEyeGhjM003WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUcxbFpHbGhPMXh1SWl3Z0ltbHRjRzl5ZENCSFRHbGlJR1p5YjIwZ1hDSm5hVG92TDBkTWFXSS9kbVZ5YzJsdmJqMHlMakJjSWx4dWFXMXdiM0owSUVkMGF5Qm1jbTl0SUZ3aVoyazZMeTlIZEdzL2RtVnljMmx2YmowMExqQmNJbHh1YVcxd2IzSjBJRUZ6ZEdGc0lHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1AzWmxjbk5wYjI0OU5DNHdYQ0pjYm1sdGNHOXlkQ0I3SUcxclFYQndJSDBnWm5KdmJTQmNJaTR1TDE5aGNIQXVhbk5jSWx4dVhHNUhkR3N1YVc1cGRDZ3BYRzVjYmk4dklITjBiM0FnZEdocGN5Qm1jbTl0SUd4bFlXdHBibWNnYVc1MGJ5QnpkV0p3Y205alpYTnpaWE5jYmk4dklHRnVaQ0JuYVc4Z2JHRjFibU5vSUdsdWRtOWpZWFJwYjI1elhHNUhUR2xpTG5WdWMyVjBaVzUyS0Z3aVRFUmZVRkpGVEU5QlJGd2lLVnh1WEc0dkx5QjFjMlZ5Y3lCdGFXZG9kQ0IzWVc1MElIUnZJSFZ6WlNCQlpIZGhhWFJoSUdsdUlIZG9hV05vSUdOaGMyVWdhWFFnYUdGeklIUnZJR0psSUdsdWFYUnBZV3hwZW1Wa1hHNHZMeUJwZENCdGFXZG9kQ0JpWlNCamIyMXRiMjRnY0dsMFptRnNiQ0IwYnlCbWIzSm5aWFFnYVhRZ1ltVmpZWFZ6WlNCZ1FYQndZQ0JwY3lCdWIzUWdZRUZrZHk1QmNIQnNhV05oZEdsdmJtQmNibUYzWVdsMElHbHRjRzl5ZENoY0ltZHBPaTh2UVdSM1AzWmxjbk5wYjI0OU1Wd2lLUzUwYUdWdUtDaDdJR1JsWm1GMWJIUTZJRUZrZHlCOUtTQTlQaUJCWkhjdWFXNXBkQ2dwS1M1allYUmphQ2dvS1NBOVBpQjJiMmxrSURBcFhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHMXJRWEJ3S0VGemRHRnNMa0Z3Y0d4cFkyRjBhVzl1S1Z4dUlpd2dJaThxS2x4dUlDb2dWMjl5YTJGeWIzVnVaQ0JtYjNJZ1hDSkRZVzRuZENCamIyNTJaWEowSUc1dmJpMXVkV3hzSUhCdmFXNTBaWElnZEc4Z1NsTWdkbUZzZFdVZ1hDSmNiaUFxTDF4dVhHNWxlSEJ2Y25RZ2UzMWNibHh1Wm5WdVkzUnBiMjRnYzI1aGEyVnBabmtvYzNSeU9pQnpkSEpwYm1jcElIdGNiaUFnSUNCeVpYUjFjbTRnYzNSeVhHNGdJQ0FnSUNBZ0lDNXlaWEJzWVdObEtDOG9XMkV0ZWwwcEtGdEJMVnBkS1M5bkxDQmNJaVF4WHlReVhDSXBYRzRnSUNBZ0lDQWdJQzV5WlhCc1lXTmxRV3hzS0Z3aUxWd2lMQ0JjSWw5Y0lpbGNiaUFnSUNBZ0lDQWdMblJ2VEc5M1pYSkRZWE5sS0NsY2JuMWNibHh1WVhONWJtTWdablZ1WTNScGIyNGdjM1Z3Y0hKbGMzTThWRDRvYlc5a09pQlFjbTl0YVhObFBIc2daR1ZtWVhWc2REb2dWQ0I5UGl3Z2NHRjBZMmc2SUNodE9pQlVLU0E5UGlCMmIybGtLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHMXZaQzUwYUdWdUtDaHRLU0E5UGlCd1lYUmphQ2h0TG1SbFptRjFiSFFwS1M1allYUmphQ2dvS1NBOVBpQjJiMmxrSURBcFhHNTlYRzVjYm1aMWJtTjBhVzl1SUhCaGRHTm9QRkFnWlhoMFpXNWtjeUJ2WW1wbFkzUStLSEJ5YjNSdk9pQlFMQ0J3Y205d09pQkZlSFJ5WVdOMFBHdGxlVzltSUZBc0lITjBjbWx1Wno0cElIdGNiaUFnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29jSEp2ZEc4c0lIQnliM0FzSUh0Y2JpQWdJQ0FnSUNBZ1oyVjBLQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE5iWUdkbGRGOGtlM051WVd0bGFXWjVLSEJ5YjNBcGZXQmRLQ2xjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0I5S1Z4dWZWeHVYRzVoZDJGcGRDQnpkWEJ3Y21WemN5aHBiWEJ2Y25Rb1hDSm5hVG92TDBGemRHRnNRWEJ3YzF3aUtTd2dLSHNnUVhCd2N5d2dRWEJ3YkdsallYUnBiMjRnZlNrZ1BUNGdlMXh1SUNBZ0lIQmhkR05vS0VGd2NITXVjSEp2ZEc5MGVYQmxMQ0JjSW14cGMzUmNJaWxjYmlBZ0lDQndZWFJqYUNoQmNIQnNhV05oZEdsdmJpNXdjbTkwYjNSNWNHVXNJRndpYTJWNWQyOXlaSE5jSWlsY2JpQWdJQ0J3WVhSamFDaEJjSEJzYVdOaGRHbHZiaTV3Y205MGIzUjVjR1VzSUZ3aVkyRjBaV2R2Y21sbGMxd2lLVnh1ZlNsY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJFSmhkSFJsY25sY0lpa3NJQ2g3SUZWUWIzZGxjaUI5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvVlZCdmQyVnlMbkJ5YjNSdmRIbHdaU3dnWENKa1pYWnBZMlZ6WENJcFhHNTlLVnh1WEc1aGQyRnBkQ0J6ZFhCd2NtVnpjeWhwYlhCdmNuUW9YQ0puYVRvdkwwRnpkR0ZzUW14MVpYUnZiM1JvWENJcExDQW9leUJCWkdGd2RHVnlMQ0JDYkhWbGRHOXZkR2dzSUVSbGRtbGpaU0I5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvUVdSaGNIUmxjaTV3Y205MGIzUjVjR1VzSUZ3aWRYVnBaSE5jSWlsY2JpQWdJQ0J3WVhSamFDaENiSFZsZEc5dmRHZ3VjSEp2ZEc5MGVYQmxMQ0JjSW1Ga1lYQjBaWEp6WENJcFhHNGdJQ0FnY0dGMFkyZ29RbXgxWlhSdmIzUm9MbkJ5YjNSdmRIbHdaU3dnWENKa1pYWnBZMlZ6WENJcFhHNGdJQ0FnY0dGMFkyZ29SR1YyYVdObExuQnliM1J2ZEhsd1pTd2dYQ0oxZFdsa2Mxd2lLVnh1ZlNsY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJFaDVjSEpzWVc1a1hDSXBMQ0FvZXlCSWVYQnliR0Z1WkN3Z1RXOXVhWFJ2Y2l3Z1YyOXlhM053WVdObElIMHBJRDArSUh0Y2JpQWdJQ0J3WVhSamFDaEllWEJ5YkdGdVpDNXdjbTkwYjNSNWNHVXNJRndpWW1sdVpITmNJaWxjYmlBZ0lDQndZWFJqYUNoSWVYQnliR0Z1WkM1d2NtOTBiM1I1Y0dVc0lGd2liVzl1YVhSdmNuTmNJaWxjYmlBZ0lDQndZWFJqYUNoSWVYQnliR0Z1WkM1d2NtOTBiM1I1Y0dVc0lGd2lkMjl5YTNOd1lXTmxjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFaDVjSEpzWVc1a0xuQnliM1J2ZEhsd1pTd2dYQ0pqYkdsbGJuUnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1RXOXVhWFJ2Y2k1d2NtOTBiM1I1Y0dVc0lGd2lZWFpoYVd4aFlteGxUVzlrWlhOY0lpbGNiaUFnSUNCd1lYUmphQ2hOYjI1cGRHOXlMbkJ5YjNSdmRIbHdaU3dnWENKaGRtRnBiR0ZpYkdWZmJXOWtaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaFhiM0pyYzNCaFkyVXVjSEp2ZEc5MGVYQmxMQ0JjSW1Oc2FXVnVkSE5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hOY0hKcGMxd2lLU3dnS0hzZ1RYQnlhWE1zSUZCc1lYbGxjaUI5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvVFhCeWFYTXVjSEp2ZEc5MGVYQmxMQ0JjSW5Cc1lYbGxjbk5jSWlsY2JpQWdJQ0J3WVhSamFDaFFiR0Y1WlhJdWNISnZkRzkwZVhCbExDQmNJbk4xY0hCdmNuUmxaRjkxY21sZmMyTm9aVzFsYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRkJzWVhsbGNpNXdjbTkwYjNSNWNHVXNJRndpYzNWd2NHOXlkR1ZrVlhKcFUyTm9aVzFsYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRkJzWVhsbGNpNXdjbTkwYjNSNWNHVXNJRndpYzNWd2NHOXlkR1ZrWDIxcGJXVmZkSGx3WlhOY0lpbGNiaUFnSUNCd1lYUmphQ2hRYkdGNVpYSXVjSEp2ZEc5MGVYQmxMQ0JjSW5OMWNIQnZjblJsWkUxcGJXVlVlWEJsYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRkJzWVhsbGNpNXdjbTkwYjNSNWNHVXNJRndpWTI5dGJXVnVkSE5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hPWlhSM2IzSnJYQ0lwTENBb2V5QlhhV1pwSUgwcElEMCtJSHRjYmlBZ0lDQndZWFJqYUNoWGFXWnBMbkJ5YjNSdmRIbHdaU3dnWENKaFkyTmxjM05mY0c5cGJuUnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1YybG1hUzV3Y205MGIzUjVjR1VzSUZ3aVlXTmpaWE56VUc5cGJuUnpYQ0lwWEc1OUtWeHVYRzVoZDJGcGRDQnpkWEJ3Y21WemN5aHBiWEJ2Y25Rb1hDSm5hVG92TDBGemRHRnNUbTkwYVdaa1hDSXBMQ0FvZXlCT2IzUnBabVFzSUU1dmRHbG1hV05oZEdsdmJpQjlLU0E5UGlCN1hHNGdJQ0FnY0dGMFkyZ29UbTkwYVdaa0xuQnliM1J2ZEhsd1pTd2dYQ0p1YjNScFptbGpZWFJwYjI1elhDSXBYRzRnSUNBZ2NHRjBZMmdvVG05MGFXWnBZMkYwYVc5dUxuQnliM1J2ZEhsd1pTd2dYQ0poWTNScGIyNXpYQ0lwWEc1OUtWeHVYRzVoZDJGcGRDQnpkWEJ3Y21WemN5aHBiWEJ2Y25Rb1hDSm5hVG92TDBGemRHRnNVRzkzWlhKUWNtOW1hV3hsYzF3aUtTd2dLSHNnVUc5M1pYSlFjbTltYVd4bGN5QjlLU0E5UGlCN1hHNGdJQ0FnY0dGMFkyZ29VRzkzWlhKUWNtOW1hV3hsY3k1d2NtOTBiM1I1Y0dVc0lGd2lZV04wYVc5dWMxd2lLVnh1ZlNsY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJGZHdYQ0lwTENBb2V5QlhjQ3dnUVhWa2FXOHNJRlpwWkdWdklIMHBJRDArSUh0Y2JpQWdJQ0J3WVhSamFDaFhjQzV3Y205MGIzUjVjR1VzSUZ3aVpHVjJhV05sYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRUYxWkdsdkxuQnliM1J2ZEhsd1pTd2dYQ0p6ZEhKbFlXMXpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1FYVmthVzh1Y0hKdmRHOTBlWEJsTENCY0luSmxZMjl5WkdWeWMxd2lLVnh1SUNBZ0lIQmhkR05vS0VGMVpHbHZMbkJ5YjNSdmRIbHdaU3dnWENKdGFXTnliM0JvYjI1bGMxd2lLVnh1SUNBZ0lIQmhkR05vS0VGMVpHbHZMbkJ5YjNSdmRIbHdaU3dnWENKemNHVmhhMlZ5YzF3aUtWeHVJQ0FnSUhCaGRHTm9LRUYxWkdsdkxuQnliM1J2ZEhsd1pTd2dYQ0prWlhacFkyVnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1ZtbGtaVzh1Y0hKdmRHOTBlWEJsTENCY0luTjBjbVZoYlhOY0lpbGNiaUFnSUNCd1lYUmphQ2hXYVdSbGJ5NXdjbTkwYjNSNWNHVXNJRndpY21WamIzSmtaWEp6WENJcFhHNGdJQ0FnY0dGMFkyZ29WbWxrWlc4dWNISnZkRzkwZVhCbExDQmNJbk5wYm10elhDSXBYRzRnSUNBZ2NHRjBZMmdvVm1sa1pXOHVjSEp2ZEc5MGVYQmxMQ0JjSW5OdmRYSmpaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaFdhV1JsYnk1d2NtOTBiM1I1Y0dVc0lGd2laR1YyYVdObGMxd2lLVnh1ZlNsY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJGUnlZWGxjSWlrc0lDaDdJRlJ5WVhrZ2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tGUnlZWGt1Y0hKdmRHOTBlWEJsTENCY0ltbDBaVzF6WENJcFhHNTlLVnh1SWl3Z0ltbHRjRzl5ZENCY0lpNHZiM1psY25KcFpHVnpMbXB6WENKY2JtbHRjRzl5ZENCN0lITmxkRU52Ym5OdmJHVk1iMmRFYjIxaGFXNGdmU0JtY205dElGd2lZMjl1YzI5c1pWd2lYRzVwYlhCdmNuUWdleUJsZUdsMExDQndjbTluY21GdFFYSm5jeUI5SUdaeWIyMGdYQ0p6ZVhOMFpXMWNJbHh1YVcxd2IzSjBJSHNnWTNKbFlYUmxVbTl2ZENCOUlHWnliMjBnWENKbmJtbHRYQ0pjYm1sdGNHOXlkQ0JKVHlCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkVsUFhDSmNibWx0Y0c5eWRDQkhUMkpxWldOMElHWnliMjBnWENKbmFUb3ZMMGRQWW1wbFkzUmNJbHh1YVcxd2IzSjBJRWRwYnlCbWNtOXRJRndpWjJrNkx5OUhhVzgvZG1WeWMybHZiajB5TGpCY0lseHVhVzF3YjNKMElIUjVjR1VnUVhOMFlXd3pJR1p5YjIwZ1hDSm5hVG92TDBGemRHRnNQM1psY25OcGIyNDlNeTR3WENKY2JtbHRjRzl5ZENCMGVYQmxJRUZ6ZEdGc05DQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJEOTJaWEp6YVc5dVBUUXVNRndpWEc1Y2JuUjVjR1VnUTI5dVptbG5JRDBnVUdGeWRHbGhiRHg3WEc0Z0lDQWdhVzV6ZEdGdVkyVk9ZVzFsT2lCemRISnBibWRjYmlBZ0lDQmpjM002SUhOMGNtbHVaMXh1SUNBZ0lHbGpiMjV6T2lCemRISnBibWRjYmlBZ0lDQm5kR3RVYUdWdFpUb2djM1J5YVc1blhHNGdJQ0FnYVdOdmJsUm9aVzFsT2lCemRISnBibWRjYmlBZ0lDQmpkWEp6YjNKVWFHVnRaVG9nYzNSeWFXNW5YRzRnSUNBZ2FHOXNaRG9nWW05dmJHVmhibHh1SUNBZ0lISmxjWFZsYzNSSVlXNWtiR1Z5S0hKbGNYVmxjM1E2SUhOMGNtbHVaeXdnY21Wek9pQW9jbVZ6Y0c5dWMyVTZJR0Z1ZVNrZ1BUNGdkbTlwWkNrNklIWnZhV1JjYmlBZ0lDQnRZV2x1S0M0dUxtRnlaM002SUhOMGNtbHVaMXRkS1RvZ2RtOXBaRnh1SUNBZ0lHTnNhV1Z1ZENodFpYTnpZV2RsT2lBb2JYTm5PaUJ6ZEhKcGJtY3BJRDArSUhOMGNtbHVaeXdnTGk0dVlYSm5jem9nYzNSeWFXNW5XMTBwT2lCMmIybGtYRzU5UGx4dVhHNXBiblJsY21aaFkyVWdRWE4wWVd3elNsTWdaWGgwWlc1a2N5QkJjM1JoYkRNdVFYQndiR2xqWVhScGIyNGdlMXh1SUNBZ0lHVjJZV3dvWW05a2VUb2djM1J5YVc1bktUb2dVSEp2YldselpUeGhibmsrWEc0Z0lDQWdjbVZ4ZFdWemRFaGhibVJzWlhJNklFTnZibVpwWjF0Y0luSmxjWFZsYzNSSVlXNWtiR1Z5WENKZFhHNGdJQ0FnWVhCd2JIbGZZM056S0hOMGVXeGxPaUJ6ZEhKcGJtY3NJSEpsYzJWMFB6b2dZbTl2YkdWaGJpazZJSFp2YVdSY2JpQWdJQ0J4ZFdsMEtHTnZaR1UvT2lCdWRXMWlaWElwT2lCMmIybGtYRzRnSUNBZ2MzUmhjblFvWTI5dVptbG5Qem9nUTI5dVptbG5LVG9nZG05cFpGeHVmVnh1WEc1cGJuUmxjbVpoWTJVZ1FYTjBZV3cwU2xNZ1pYaDBaVzVrY3lCQmMzUmhiRFF1UVhCd2JHbGpZWFJwYjI0Z2UxeHVJQ0FnSUdWMllXd29ZbTlrZVRvZ2MzUnlhVzVuS1RvZ1VISnZiV2x6WlR4aGJuaytYRzRnSUNBZ2NtVnhkV1Z6ZEVoaGJtUnNaWEkvT2lCRGIyNW1hV2RiWENKeVpYRjFaWE4wU0dGdVpHeGxjbHdpWFZ4dUlDQWdJR0Z3Y0d4NVgyTnpjeWh6ZEhsc1pUb2djM1J5YVc1bkxDQnlaWE5sZEQ4NklHSnZiMnhsWVc0cE9pQjJiMmxrWEc0Z0lDQWdjWFZwZENoamIyUmxQem9nYm5WdFltVnlLVG9nZG05cFpGeHVJQ0FnSUhOMFlYSjBLR052Ym1acFp6ODZJRU52Ym1acFp5azZJSFp2YVdSY2JuMWNibHh1ZEhsd1pTQkJjSEF6SUQwZ2RIbHdaVzltSUVGemRHRnNNeTVCY0hCc2FXTmhkR2x2Ymx4dWRIbHdaU0JCY0hBMElEMGdkSGx3Wlc5bUlFRnpkR0ZzTkM1QmNIQnNhV05oZEdsdmJseHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdiV3RCY0hBOFFYQndJR1Y0ZEdWdVpITWdRWEJ3TXo0b1FYQndPaUJCY0hBcE9pQkJjM1JoYkROS1UxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHMXJRWEJ3UEVGd2NDQmxlSFJsYm1SeklFRndjRFErS0VGd2NEb2dRWEJ3S1RvZ1FYTjBZV3cwU2xOY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHMXJRWEJ3S0VGd2NEb2dRWEJ3TXlCOElFRndjRFFwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUNoamJHRnpjeUJCYzNSaGJFcFRJR1Y0ZEdWdVpITWdRWEJ3SUh0Y2JpQWdJQ0FnSUNBZ2NISnBkbUYwWlNCa2FYTndiM05sVW05dmREODZJQ2dwSUQwK0lIWnZhV1JjYmx4dUlDQWdJQ0FnSUNCemRHRjBhV01nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdSMDlpYW1WamRDNXlaV2RwYzNSbGNrTnNZWE56S0hzZ1IxUjVjR1ZPWVcxbE9pQmNJa0Z6ZEdGc1NsTmNJaUI5TENCMGFHbHpJR0Z6SUdGdWVTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdWMllXd29ZbTlrZVRvZ2MzUnlhVzVuS1RvZ1VISnZiV2x6WlR4aGJuaytJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVSEp2YldselpTZ29jbVZ6TENCeVpXb3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JtYmlBOUlFWjFibU4wYVc5dUtHQnlaWFIxY200Z0tHRnplVzVqSUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pIdGliMlI1TG1sdVkyeDFaR1Z6S0Z3aU8xd2lLU0EvSUdKdlpIa2dPaUJnY21WMGRYSnVJQ1I3WW05a2VYMDdZSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTbGdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWJpZ3BLQ2t1ZEdobGJpaHlaWE1wTG1OaGRHTm9LSEpsYWlsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNobGNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV29vWlhKeWIzSXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhKbGNYVmxjM1JJWVc1a2JHVnlQem9nUTI5dVptbG5XMXdpY21WeGRXVnpkRWhoYm1Sc1pYSmNJbDFjYmx4dUlDQWdJQ0FnSUNCMlpuVnVZMTl6YUhWMFpHOTNiaWdwT2lCMmIybGtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITjFjR1Z5TG5abWRXNWpYM05vZFhSa2IzZHVLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkdsemNHOXpaVkp2YjNRL0xpZ3BYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCMlpuVnVZMTl5WlhGMVpYTjBLRzF6WnpvZ2MzUnlhVzVuTENCamIyNXVPaUJIYVc4dVUyOWphMlYwUTI5dWJtVmpkR2x2YmlrNklIWnZhV1FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUIwYUdsekxuSmxjWFZsYzNSSVlXNWtiR1Z5SUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsY1hWbGMzUklZVzVrYkdWeUtHMXpaeXdnS0hKbGMzQnZibk5sS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVsUExuZHlhWFJsWDNOdlkyc29ZMjl1Yml3Z1UzUnlhVzVuS0hKbGMzQnZibk5sS1N3Z0tGOHNJSEpsY3lrZ1BUNGdTVTh1ZDNKcGRHVmZjMjlqYTE5bWFXNXBjMmdvY21WektTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRYQmxjaTUyWm5WdVkxOXlaWEYxWlhOMEtHMXpaeXdnWTI5dWJpbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR0Z3Y0d4NVgyTnpjeWh6ZEhsc1pUb2djM1J5YVc1bkxDQnlaWE5sZENBOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZFhCbGNpNWhjSEJzZVY5amMzTW9jM1I1YkdVc0lISmxjMlYwS1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdjWFZwZENoamIyUmxQem9nYm5WdFltVnlLVG9nZG05cFpDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRYQmxjaTV4ZFdsMEtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUdWNGFYUW9ZMjlrWlNBL1B5QXdLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2MzUmhjblFvZXlCeVpYRjFaWE4wU0dGdVpHeGxjaXdnWTNOekxDQm9iMnhrTENCdFlXbHVMQ0JqYkdsbGJuUXNJR2xqYjI1ekxDQXVMaTVqWm1jZ2ZUb2dRMjl1Wm1sbklEMGdlMzBwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHRndjQ0E5SUhSb2FYTWdZWE1nZFc1cmJtOTNiaUJoY3lCSmJuTjBZVzVqWlZSNWNHVThRWEJ3TXlCOElFRndjRFErWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR05zYVdWdWRDQS9QejBnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YVc1MEtHQkJjM1JoYkNCcGJuTjBZVzVqWlNCY0lpUjdZWEJ3TG1sdWMzUmhibU5sVG1GdFpYMWNJaUJoYkhKbFlXUjVJSEoxYm01cGJtZGdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Y0YVhRb01TbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbUZ6YzJsbmJpaDBhR2x6TENCalptY3BYRzRnSUNBZ0lDQWdJQ0FnSUNCelpYUkRiMjV6YjJ4bFRHOW5SRzl0WVdsdUtHRndjQzVwYm5OMFlXNWpaVTVoYldVcFhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ4ZFdWemRFaGhibVJzWlhJZ1BTQnlaWEYxWlhOMFNHRnVaR3hsY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZWEJ3TG1OdmJtNWxZM1FvWENKaFkzUnBkbUYwWlZ3aUxDQW9LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzSmxZWFJsVW05dmRDZ29aR2x6Y0c5elpTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1ScGMzQnZjMlZTYjI5MElEMGdaR2x6Y0c5elpWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVdsdVB5NG9MaTR1Y0hKdlozSmhiVUZ5WjNNcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwcFhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhSeWVTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWEJ3TG1GamNYVnBjbVZmYzI5amEyVjBLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamJHbGxiblFvS0cxelp5a2dQVDRnU1U4dWMyVnVaRjl5WlhGMVpYTjBLR0Z3Y0M1cGJuTjBZVzVqWlU1aGJXVXNJRzF6WnlraExDQXVMaTV3Y205bmNtRnRRWEpuY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOemN5a2dkR2hwY3k1aGNIQnNlVjlqYzNNb1kzTnpMQ0JtWVd4elpTbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2xqYjI1ektTQmhjSEF1WVdSa1gybGpiMjV6S0dsamIyNXpLVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9iMnhrSUQ4L1BTQjBjblZsWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYUc5c1pDa2dZWEJ3TG1odmJHUW9LVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhjSEF1Y25WdVFYTjVibU1vVzEwcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOUtTZ3BYRzU5WEc0aUxDQWlhVzF3YjNKMElIc2dRV05qWlhOemIzSXNJR055WldGMFpVSnBibVJwYm1jc0lHTnlaV0YwWlVOdmJYQjFkR1ZrSUgwZ1puSnZiU0JjSW1GbmMxd2lPMXh1YVcxd2IzSjBJSHNnUjJScklIMGdabkp2YlNCY0ltRm5jeTluZEdzMFhDSTdYRzVwYlhCdmNuUWdRWE4wWVd4SWVYQnliR0Z1WkNCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkVoNWNISnNZVzVrUDNabGNuTnBiMjQ5TUM0eFhDSTdYRzVjYm1WNGNHOXlkQ0JqYkdGemN5QkllWEJ5YkdGdVpDQjdYRzRnSUNBZ2NISnBkbUYwWlNCa1pXWmhkV3gwT2lCQmMzUmhiRWg1Y0hKc1lXNWtMa2g1Y0hKc1lXNWtPMXh1SUNBZ0lIQnlhWFpoZEdVZ1gzZHZjbXR6Y0dGalpYTTZJRUZqWTJWemMyOXlQRUZ6ZEdGc1NIbHdjbXhoYm1RdVYyOXlhM053WVdObFcxMCtPMXh1SUNBZ0lIQnlhWFpoZEdVZ1gyWnZZM1Z6WldSWGIzSnJjM0JoWTJVNklFRmpZMlZ6YzI5eVBFRnpkR0ZzU0hsd2NteGhibVF1VjI5eWEzTndZV05sUGp0Y2JpQWdJQ0J3Y21sMllYUmxJRjlqYkdsbGJuUnpPaUJCWTJObGMzTnZjanhCYzNSaGJFaDVjSEpzWVc1a0xrTnNhV1Z1ZEZ0ZFBqdGNibHh1SUNBZ0lIQjFZbXhwWXlCamIyNXpkSEoxWTNSdmNpZ3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWtaV1poZFd4MElEMGdRWE4wWVd4SWVYQnliR0Z1WkM1blpYUmZaR1ZtWVhWc2RDZ3BPMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOTNiM0pyYzNCaFkyVnpJRDBnWTNKbFlYUmxRbWx1WkdsdVp5aDBhR2x6TG1SbFptRjFiSFFzSUZ3aWQyOXlhM053WVdObGMxd2lLUzVoY3lnb2QyOXlhM053WVdObGN5a2dQVDRnZDI5eWEzTndZV05sY3k1emIzSjBLQ2hoTENCaUtTQTlQaUJoTG1sa0lDMGdZaTVwWkNrcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5bWIyTjFjMlZrVjI5eWEzTndZV05sSUQwZ1kzSmxZWFJsUW1sdVpHbHVaeWgwYUdsekxtUmxabUYxYkhRc0lGd2labTlqZFhObFpGZHZjbXR6Y0dGalpWd2lLVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWZZMnhwWlc1MGN5QTlJR055WldGMFpVSnBibVJwYm1jb2RHaHBjeTVrWldaaGRXeDBMQ0JjSW1Oc2FXVnVkSE5jSWlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY0hWaWJHbGpJR2RsZENCM2IzSnJjM0JoWTJWektDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmQyOXlhM053WVdObGN6dGNiaUFnSUNCOVhHNWNiaUFnSUNCd2RXSnNhV01nWjJWMElHWnZZM1Z6WldSWGIzSnJjM0JoWTJVb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bWIyTjFjMlZrVjI5eWEzTndZV05sTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEIxWW14cFl5Qm5aWFFnWTJ4cFpXNTBjeWdwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMk5zYVdWdWRITTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NIVmliR2xqSUdGeVpVMXZibWwwYjNKelJYRjFZV3dvYlc5dWFYUnZjam9nUjJSckxrMXZibWwwYjNJc0lHaDVjSEpOYjI1cGRHOXlPaUJCYzNSaGJFaDVjSEpzWVc1a0xrMXZibWwwYjNJcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1oyVnZiV1YwY25rZ1BTQnRiMjVwZEc5eUxtZGxkRjluWlc5dFpYUnllU2dwTzF4dUlDQWdJQ0FnSUNCcFppaG9lWEJ5VFc5dWFYUnZjaTVuWlhSZmJXOWtaV3dvS1NBOVBUMGdiVzl1YVhSdmNpNW5aWFJmYlc5a1pXd29LVnh1SUNBZ0lDQWdJQ0FtSmlCb2VYQnlUVzl1YVhSdmNpNW5aWFJmYUdWcFoyaDBLQ2tnUFQwOUlHZGxiMjFsZEhKNUxtaGxhV2RvZEZ4dUlDQWdJQ0FnSUNBbUppQm9lWEJ5VFc5dWFYUnZjaTVuWlhSZmQybGtkR2dvS1NBOVBUMGdaMlZ2YldWMGNua3VkMmxrZEdoY2JpQWdJQ0FnSUNBZ0ppWWdhSGx3Y2sxdmJtbDBiM0l1WjJWMFgzZ29LU0E5UFQwZ1oyVnZiV1YwY25rdWVGeHVJQ0FnSUNBZ0lDQW1KaUJvZVhCeVRXOXVhWFJ2Y2k1blpYUmZlU2dwSUQwOVBTQm5aVzl0WlhSeWVTNTVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm1Gc2MyVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NIVmliR2xqSUdkbGRFaDVjSEpzWVc1a1RXOXVhWFJ2Y2lodGIyNXBkRzl5T2lCSFpHc3VUVzl1YVhSdmNpa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQm9lWEJ5YkdGdVpFMXZibWwwYjNKeklEMGdkR2hwY3k1a1pXWmhkV3gwTG1kbGRGOXRiMjVwZEc5eWN5Z3BPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdhSGx3Y214aGJtUk5iMjVwZEc5eWN5NW1hVzVrS0doNWNISk5iMjVwZEc5eUlEMCtJSFJvYVhNdVlYSmxUVzl1YVhSdmNuTkZjWFZoYkNodGIyNXBkRzl5TENCb2VYQnlUVzl1YVhSdmNpa3BJSHg4SUdoNWNISnNZVzVrVFc5dWFYUnZjbk5iTUYwN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY0hWaWJHbGpJSFpwYzJsaWFXeHBkSGxCWTJObGMzTnZjaWh0YjI1cGRHOXlPaUJCYzNSaGJFaDVjSEpzWVc1a0xrMXZibWwwYjNJcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTnlaV0YwWlVOdmJYQjFkR1ZrS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdXMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR055WldGMFpVSnBibVJwYm1jb2JXOXVhWFJ2Y2l3Z0oyRmpkR2wyWlZkdmNtdHpjR0ZqWlNjcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJOc2FXVnVkSE1zWEc0Z0lDQWdJQ0FnSUNBZ0lDQmRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0tHRmpkR2wyWlZkdmNtdHpjR0ZqWlN3Z1lXeHNRMnhwWlc1MGN5a2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR05zYVdWdWRITkpia0ZqZEdsMlpWZHZjbXR6Y0dGalpTQTlJR0ZzYkVOc2FXVnVkSE11Wm1sc2RHVnlLR05zYVdWdWRDQTlQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJHbGxiblF1ZDI5eWEzTndZV05sTG1sa0lEMDlQU0JoWTNScGRtVlhiM0pyYzNCaFkyVXVhV1JjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOc2FXVnVkSE5KYmtGamRHbDJaVmR2Y210emNHRmpaUzVzWlc1bmRHZ2dQVDA5SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnZlZ4dWZWeHVYRzVqYjI1emRDQm9lWEJ5YkdGdVpGTmxjblpwWTJVZ1BTQnVaWGNnU0hsd2NteGhibVE3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdoNWNISnNZVzVrVTJWeWRtbGpaVHRjYmlJc0lDSnBiWEJ2Y25RZ2V5QkhkR3NnZlNCbWNtOXRJRndpWVdkekwyZDBhelJjSWp0Y2JtbHRjRzl5ZENCb2VYQnliR0Z1WkZObGNuWnBZMlVnWm5KdmJTQmNJaTR1TDNObGNuWnBZMlZ6TDBoNWNISnNZVzVrWENJN1hHNXBiWEJ2Y25RZ2V5QkJZMk5sYzNOdmNpd2dZM0psWVhSbFEyOXRjSFYwWldRc0lHTnlaV0YwWlZOMFlYUmxMQ0JUWlhSMFpYSWdmU0JtY205dElGd2lZV2R6WENJN1hHNXBiWEJ2Y25RZ1IweHBZaUJtY205dElGd2laMms2THk5SFRHbGlQM1psY25OcGIyNDlNaTR3WENJN1hHNXBiWEJ2Y25RZ2V5QmpjbVZoZEdWUWIyeHNJSDBnWm5KdmJTQmNJbUZuY3k5MGFXMWxYQ0k3WEc1cGJYQnZjblFnUVhOMFlXeEllWEJ5YkdGdVpDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFaDVjSEpzWVc1a1AzWmxjbk5wYjI0OU1DNHhYQ0k3WEc1Y2JtTnZibk4wSUhCdmJHeFVhVzFsSUQwZ05qQXdNREE3WEc1Y2JtTnNZWE56SUVSaGRHVlVhVzFsUTJ4aGMzTWdlMXh1SUNBZ0lIQnlhWFpoZEdVZ1ptOXliV0YwZEdWeVZHbHRaU0E5SUZ3aUpVZzZKVTFjSWp0Y2JpQWdJQ0J3Y21sMllYUmxJR1p2Y20xaGRIUmxja1JoZEdVZ1BTQmNJa2h2YW1VZ1hIVXdNRVU1T2lBbFFTd2dKV1FnWkdVZ0pVSWdaR1VnSlZsY0lqdGNiaUFnSUNCd2NtbDJZWFJsSUY5a1lYUmxWR2x0WlRvZ1FXTmpaWE56YjNJOGV5QmtZWFJsT2lCemRISnBibWNzSUhScGJXVTZJSE4wY21sdVp5QjlQanRjYmlBZ0lDQndjbWwyWVhSbElGOXBjMFJVUTNacGMybGliR1U2SUVGalkyVnpjMjl5UEdKdmIyeGxZVzQrTzF4dUlDQWdJSEJ5YVhaaGRHVWdYM05sZEVselJGUkRkbWx6YVdKc1pUb2dVMlYwZEdWeVBHSnZiMnhsWVc0K08xeHVYRzVjYmlBZ0lDQndkV0pzYVdNZ1kyOXVjM1J5ZFdOMGIzSW9LU0I3WEc0Z0lDQWdJQ0FnSUZ0MGFHbHpMbDlwYzBSVVEzWnBjMmxpYkdVc0lIUm9hWE11WDNObGRFbHpSRlJEZG1semFXSnNaVjBnUFNCamNtVmhkR1ZUZEdGMFpTaDBjblZsS1R0Y2JseHVJQ0FnSUNBZ0lDQjBhR2x6TGw5a1lYUmxWR2x0WlNBOUlHTnlaV0YwWlZCdmJHd29leUJrWVhSbE9pQmNJbHdpTENCMGFXMWxPaUJjSWx3aUlIMHNJSEJ2Ykd4VWFXMWxMQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J1YjNjZ1BTQkhUR2xpTGtSaGRHVlVhVzFsTG01bGQxOXViM2RmYkc5allXd29LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBaVG9nYm05M0xtWnZjbTFoZENoMGFHbHpMbVp2Y20xaGRIUmxja1JoZEdVcElTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhVzFsT2lCdWIzY3VabTl5YldGMEtIUm9hWE11Wm05eWJXRjBkR1Z5VkdsdFpTa2hYRzRnSUNBZ0lDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQndkV0pzYVdNZ1oyVjBJR2x6UkZSRGRtbHphV0pzWlNncElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJselJGUkRkbWx6YVdKc1pUdGNiaUFnSUNCOVhHNWNiaUFnSUNCd2RXSnNhV01nYzJodmRXeGtSRlJEUVhCd1pXRnlLRzF2Ym1sMGIzSTZJRUZ6ZEdGc1NIbHdjbXhoYm1RdVRXOXVhWFJ2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1kzSmxZWFJsUTI5dGNIVjBaV1FvWEc0Z0lDQWdJQ0FnSUNBZ0lDQmJkR2hwY3k1ZmFYTkVWRU4yYVhOcFlteGxMQ0JvZVhCeWJHRnVaRk5sY25acFkyVXVkbWx6YVdKcGJHbDBlVUZqWTJWemMyOXlLRzF2Ym1sMGIzSXBYU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDaHBjMFJVUTNacGMybGliR1VzSUhacGMybGlhV3hwZEhrcElEMCtJR2x6UkZSRGRtbHphV0pzWlNBbUppQjJhWE5wWW1sc2FYUjVYRzRnSUNBZ0lDQWdJQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSFZpYkdsaklIUnZaMmRzWlVselJGUkRkbWx6YVdKc1pTZ3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWZjMlYwU1hORVZFTjJhWE5wWW14bEtDRjBhR2x6TGw5cGMwUlVRM1pwYzJsaWJHVXVaMlYwS0NrcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhCMVlteHBZeUJuWlhRZ1ZHbHRaU2dwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJDQmpjM05EYkdGemMyVnpQWHRiWENKVWFXMWxYQ0pkZlNCc1lXSmxiRDE3ZEdocGN5NWZaR0YwWlZScGJXVXVZWE1vZENBOVBpQmdYSFZHTURFM0lDUjdkQzUwYVcxbGZXQXBmU0IwYjI5c2RHbHdUV0Z5YTNWd1BYdDBhR2x6TGw5a1lYUmxWR2x0WlM1aGN5aGtJRDArSUdCY2RVUkNPREJjZFVSRFJVUWdKSHRrTG1SaGRHVjlZQ2w5SUM4K1hHNGdJQ0FnSUNBZ0lDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NIVmliR2xqSUdkbGRDQkVZWFJsVkdsdFpVTmhiR1Z1WkdGeUtDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlQ0JqYzNORGJHRnpjMlZ6UFh0YlhDSkVZWFJsVkdsdFpVTmhiR1Z1WkdGeVhDSmRmVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4UjNSckxrTmhiR1Z1WkdGeUlHTnpjME5zWVhOelpYTTllMXRjSWtOaGJHVnVaR0Z5WENKZGZTQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhpYjNnZ1kzTnpRMnhoYzNObGN6MTdXMXdpUkdGMFpWUnBiV1ZjSWwxOUlHOXlhV1Z1ZEdGMGFXOXVQWHRIZEdzdVQzSnBaVzUwWVhScGIyNHVWa1ZTVkVsRFFVeDlQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGJHRmlaV3dnWTNOelEyeGhjM05sY3oxN1cxd2lWR2x0WlZ3aVhYMGdiR0ZpWld3OWUzUm9hWE11WDJSaGRHVlVhVzFsTG1GektIUWdQVDRnZEM1MGFXMWxLWDBnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR3hoWW1Wc0lHTnpjME5zWVhOelpYTTllMXRjSWtSaGRHVmNJbDE5SUd4aFltVnNQWHQwYUdsekxsOWtZWFJsVkdsdFpTNWhjeWhrSUQwK0lHUXVaR0YwWlNsOUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQjlYRzU5WEc1Y2JtTnZibk4wSUdSaGRHVlVhVzFsSUQwZ2JtVjNJRVJoZEdWVWFXMWxRMnhoYzNNN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHUmhkR1ZVYVcxbE8xeHVJaXdnSW1sdGNHOXlkQ0JYY0NCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkZkd1hDSTdYRzVwYlhCdmNuUWdSMHhwWWlCbWNtOXRJRndpWjJrNkx5OUhUR2xpUDNabGNuTnBiMjQ5TWk0d1hDSTdYRzVwYlhCdmNuUWdleUJIZEdzc0lFZGtheUI5SUdaeWIyMGdYQ0poWjNNdlozUnJORndpTzF4dWFXMXdiM0owSUhzZ1FXTmpaWE56YjNJc0lHTnlaV0YwWlVKcGJtUnBibWNzSUc5dVEyeGxZVzUxY0N3Z1YybDBhQ0I5SUdaeWIyMGdYQ0poWjNOY0lqdGNibHh1WTJ4aGMzTWdRWFZrYVc5RGIyNTBjbTlzUTJ4aGMzTWdlMXh1SUNBZ0lIQnlhWFpoZEdVZ1pHVm1ZWFZzZERvZ1YzQXVWM0E3WEc0Z0lDQWdjSEpwZG1GMFpTQmtaV1poZFd4MFUzQmxZV3RsY2pvZ1FXTmpaWE56YjNJOFYzQXVSVzVrY0c5cGJuUStPMXh1SUNBZ0lIQnlhWFpoZEdVZ1pHVm1ZWFZzZEUxcFkzSnZjR2h2Ym1VNklFRmpZMlZ6YzI5eVBGZHdMa1Z1WkhCdmFXNTBQanRjYmlBZ0lDQndjbWwyWVhSbElISmxZV1J2Ym14NUlITjBaWEE2SUc1MWJXSmxjaUE5SURBdU1ESTdYRzVjYmlBZ0lDQndkV0pzYVdNZ1kyOXVjM1J5ZFdOMGIzSW9LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaR1ZtWVhWc2RDQTlJRmR3TG1kbGRGOWtaV1poZFd4MEtDa2hPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtUmxabUYxYkhSVGNHVmhhMlZ5SUQwZ1kzSmxZWFJsUW1sdVpHbHVaeWgwYUdsekxtUmxabUYxYkhRc0lDZGtaV1poZFd4MFUzQmxZV3RsY2ljcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1SbFptRjFiSFJOYVdOeWIzQm9iMjVsSUQwZ1kzSmxZWFJsUW1sdVpHbHVaeWgwYUdsekxtUmxabUYxYkhRc0lDZGtaV1poZFd4MFRXbGpjbTl3YUc5dVpTY3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIQnlhWFpoZEdVZ2FHRnVaR3hsVTJOeWIyeHNLR1ZrY0RvZ1YzQXVSVzVrY0c5cGJuUXNJR1I1T2lCdWRXMWlaWElwSUh0Y2JpQWdJQ0FnSUNBZ2JHVjBJRzVsZDFadmJIVnRaU0E5SUdWa2NDNW5aWFJmZG05c2RXMWxLQ2s3WEc0Z0lDQWdJQ0FnSUdsbUtHUjVJRHdnTUNrZ2JtVjNWbTlzZFcxbElDczlJSFJvYVhNdWMzUmxjRHRjYmlBZ0lDQWdJQ0FnWld4elpTQnVaWGRXYjJ4MWJXVWdMVDBnZEdocGN5NXpkR1Z3TzF4dUlDQWdJQ0FnSUNCbFpIQXVjMlYwWDNadmJIVnRaU2hOWVhSb0xtMXBiaWh1WlhkV2IyeDFiV1VzSURFcEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCd2NtbDJZWFJsSUVWdVpIQnZhVzUwS0hzZ1pXNWtjRzlwYm5RZ2ZUb2dleUJsYm1Sd2IybHVkRG9nUVdOalpYTnpiM0k4VjNBdVJXNWtjRzlwYm5RK0lIMHBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2crWEc0Z0lDQWdJQ0FnSUNBZ0lDQThWMmwwYUNCMllXeDFaVDE3Wlc1a2NHOXBiblI5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUh0bFpIQWdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcFkyOXVJRDBnWTNKbFlYUmxRbWx1WkdsdVp5aGxaSEFzSUNkMmIyeDFiV1ZKWTI5dUp5azdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFp2YkhWdFpTQTlJR055WldGMFpVSnBibVJwYm1jb1pXUndMQ0FuZG05c2RXMWxKeWt1WVhNb1lTQTlQaUJnSkh0TllYUm9Mbkp2ZFc1a0tHRWdLaUF4TURBcGZTVmdLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYkdWbWRFTnNhV05ySUQwZ2JtVjNJRWQwYXk1SFpYTjBkWEpsUTJ4cFkyc29leUJpZFhSMGIyNDZJRWRrYXk1Q1ZWUlVUMDVmVUZKSlRVRlNXU0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JHVm1kRWhoYm1Sc1pYSWdQU0JzWldaMFEyeHBZMnN1WTI5dWJtVmpkQ2duY0hKbGMzTmxaQ2NzSUNncElEMCtJR1ZrY0M1elpYUmZiWFYwWlNnaFpXUndMbWRsZEY5dGRYUmxLQ2twS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnpZM0p2Ykd3Z1BTQnVaWGNnUjNSckxrVjJaVzUwUTI5dWRISnZiR3hsY2xOamNtOXNiQ2g3SUdac1lXZHpPaUJIZEdzdVJYWmxiblJEYjI1MGNtOXNiR1Z5VTJOeWIyeHNSbXhoWjNNdVZrVlNWRWxEUVV3Z2ZTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSE5qY205c2JFaGhibVJzWlhJZ1BTQnpZM0p2Ykd3dVkyOXVibVZqZENnbmMyTnliMnhzSnl3Z0tHTnZiblJ5YjJ4bGNqb2dSM1JyTGtWMlpXNTBRMjl1ZEhKdmJHeGxjbE5qY205c2JDd2daSGc2SUc1MWJXSmxjaXdnWkhrNklHNTFiV0psY2lrZ1BUNGdkR2hwY3k1b1lXNWtiR1ZUWTNKdmJHd29aV1J3TENCa2VTa3BPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pXWjBRMnhwWTJzdVpHbHpZMjl1Ym1WamRDaHNaV1owU0dGdVpHeGxjaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WTNKdmJHd3VaR2x6WTI5dWJtVmpkQ2h6WTNKdmJHeElZVzVrYkdWeUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThZbTk0SUdOemMwTnNZWE56WlhNOWUxdGNJa1Z1WkhCdmFXNTBYQ0pkZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUTllMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW9jMlZzWmlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNWhaR1JmWTI5dWRISnZiR3hsY2loc1pXWjBRMnhwWTJzcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZzWmk1aFpHUmZZMjl1ZEhKdmJHeGxjaWh6WTNKdmJHd3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHBiV0ZuWlNCamMzTkRiR0Z6YzJWelBYdGJYQ0pKWTI5dVhDSmRmU0JwWTI5dVRtRnRaVDE3YVdOdmJuMGdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGJHRmlaV3dnWTNOelEyeGhjM05sY3oxN1cxd2lWbTlzZFcxbFhDSmRmU0JzWVdKbGJEMTdkbTlzZFcxbGZTQjNhV1IwYUVOb1lYSnpQWHMwZlNBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BDOWliM2crWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZWMmwwYUQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJRHd2WW05NFBseHVJQ0FnSUNBZ0lDQXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIQnlhWFpoZEdVZ1RXbDRaWEpGYm5SeWVTaDdJR1Z1WkhCdmFXNTBJSDA2SUhzZ1pXNWtjRzlwYm5RNklFRmpZMlZ6YzI5eVBGZHdMa1Z1WkhCdmFXNTBQaUI5S1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4WW05NFBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeFhhWFJvSUhaaGJIVmxQWHRsYm1Sd2IybHVkSDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIdGxaSEFnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYVdOdmJpQTlJR055WldGMFpVSnBibVJwYm1jb1pXUndMQ0FuZG05c2RXMWxTV052YmljcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZG05c2RXMWxJRDBnWTNKbFlYUmxRbWx1WkdsdVp5aGxaSEFzSUNkMmIyeDFiV1VuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFJ2WjJkc1pVMTFkR1ZEYkdsamF5QTlJRzVsZHlCSGRHc3VSMlZ6ZEhWeVpVTnNhV05yS0hzZ1luVjBkRzl1T2lCSFpHc3VRbFZVVkU5T1gxQlNTVTFCVWxrZ2ZTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMGIyZG5iR1ZOZFhSbFNHRnVaR3hsY2lBOUlIUnZaMmRzWlUxMWRHVkRiR2xqYXk1amIyNXVaV04wS0Nkd2NtVnpjMlZrSnl3Z0tDa2dQVDRnWldSd0xuTmxkRjl0ZFhSbEtDRmxaSEF1WjJWMFgyMTFkR1VvS1NrcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCelkzSnZiR3dnUFNCdVpYY2dSM1JyTGtWMlpXNTBRMjl1ZEhKdmJHeGxjbE5qY205c2JDaDdJR1pzWVdkek9pQkhkR3N1UlhabGJuUkRiMjUwY205c2JHVnlVMk55YjJ4c1JteGhaM011VmtWU1ZFbERRVXdnZlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J6WTNKdmJHeElZVzVrYkdWeUlEMGdjMk55YjJ4c0xtTnZibTVsWTNRb0ozTmpjbTlzYkNjc0lDaGpiMjUwY205c1pYSTZJRWQwYXk1RmRtVnVkRU52Ym5SeWIyeHNaWEpUWTNKdmJHd3NJR1I0T2lCdWRXMWlaWElzSUdSNU9pQnVkVzFpWlhJcElEMCtJSFJvYVhNdWFHRnVaR3hsVTJOeWIyeHNLR1ZrY0N3Z1pIa3BLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjI1RGJHVmhiblZ3S0NncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGIyZG5iR1ZOZFhSbFEyeHBZMnN1WkdselkyOXVibVZqZENoMGIyZG5iR1ZOZFhSbFNHRnVaR3hsY2lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMk55YjJ4c0xtUnBjMk52Ym01bFkzUW9jMk55YjJ4c1NHRnVaR3hsY2lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDaGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WW05NElHTnpjME5zWVhOelpYTTllMXRjSWsxcGVHVnlSVzUwY25sY0lsMTlQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThhVzFoWjJVZ1kzTnpRMnhoYzNObGN6MTdXMXdpU1dOdmJsd2lYWDBnYVdOdmJrNWhiV1U5ZTJsamIyNTlJQ1E5ZTNObGJHWWdQVDRnYzJWc1ppNWhaR1JmWTI5dWRISnZiR3hsY2loMGIyZG5iR1ZOZFhSbFEyeHBZMnNwZlNBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGMyeHBaR1Z5SUdOemMwTnNZWE56WlhNOWUxdGNJbE5zYVdSbGNsd2lYWDBnSkQxN2MyVnNaaUE5UGlCelpXeG1MbUZrWkY5amIyNTBjbTlzYkdWeUtITmpjbTlzYkNsOUlIWmhiSFZsUFh0MmIyeDFiV1Y5SUhOMFpYQTllekF1TVgwZ2JXbHVQWHN3ZlNCdFlYZzllekY5SUc5dVEyaGhibWRsVm1Gc2RXVTlleWg3SUhaaGJIVmxJSDBwSUQwK0lHVmtjQzV6WlhSZmRtOXNkVzFsS0haaGJIVmxLWDBnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThMMkp2ZUQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDE5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5WGFYUm9QbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BDOWliM2crWEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY0hKcGRtRjBaU0JOYVhobGNpZ3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lEeHdiM0J2ZG1WeUlHTnpjME5zWVhOelpYTTllMXRjSWsxcGVHVnlYQ0pkZlQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFltOTRJRzl5YVdWdWRHRjBhVzl1UFh0SGRHc3VUM0pwWlc1MFlYUnBiMjR1VmtWU1ZFbERRVXg5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThiR0ZpWld3Z1kzTnpRMnhoYzNObGN6MTdXMXdpVEdGaVpXeGNJbDE5SUd4aFltVnNQWHRjSWsxcGVHVnlYQ0o5SUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHQwYUdsekxrMXBlR1Z5Ulc1MGNua29leUJsYm1Sd2IybHVkRG9nZEdocGN5NWtaV1poZFd4MFUzQmxZV3RsY2lCOUtYMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZTNSb2FYTXVUV2w0WlhKRmJuUnllU2g3SUdWdVpIQnZhVzUwT2lCMGFHbHpMbVJsWm1GMWJIUk5hV055YjNCb2IyNWxJSDBwZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BDOXdiM0J2ZG1WeVBseHVJQ0FnSUNBZ0lDQXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIQjFZbXhwWXlCblpYUWdRWFZrYVc5RGIyNTBjbTlzS0NrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCemNHRjNibEJoZG5WamIyNTBjbTlzUTJ4cFkyc2dQU0J1WlhjZ1IzUnJMa2RsYzNSMWNtVkRiR2xqYXloN0lHSjFkSFJ2YmpvZ1IyUnJMa0pWVkZSUFRsOVRSVU5QVGtSQlVsa2dmU2s3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE53WVhkdVVHRjJkV052Ym5SeWIyeElZVzVrYkdWeUlEMGdjM0JoZDI1UVlYWjFZMjl1ZEhKdmJFTnNhV05yTG1OdmJtNWxZM1FvSjNCeVpYTnpaV1FuTENBb0tTQTlQaUJIVEdsaUxuTndZWGR1WDJOdmJXMWhibVJmYkdsdVpWOWhjM2x1WXlnbmNHRjJkV052Ym5SeWIyd25LU2s3WEc1Y2JpQWdJQ0FnSUNBZ2IyNURiR1ZoYm5Wd0tDZ3BJRDArSUhOd1lYZHVVR0YyZFdOdmJuUnliMnhEYkdsamF5NWthWE5qYjI1dVpXTjBLSE53WVhkdVVHRjJkV052Ym5SeWIyeElZVzVrYkdWeUtTazdYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnWTNOelEyeGhjM05sY3oxN1cxd2lRWFZrYVc5RGIyNTBjbTlzWENKZGZTQWtQWHR6Wld4bUlEMCtJSE5sYkdZdVlXUmtYMk52Ym5SeWIyeHNaWElvYzNCaGQyNVFZWFoxWTI5dWRISnZiRU5zYVdOcktYMCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlM1JvYVhNdVJXNWtjRzlwYm5Rb2V5QmxibVJ3YjJsdWREb2dkR2hwY3k1a1pXWmhkV3gwVTNCbFlXdGxjaUI5S1gxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGJXVnVkV0oxZEhSdmJpQndiM0J2ZG1WeVBYdDBhR2x6TGsxcGVHVnlLQ2tnWVhNZ1IzUnJMbEJ2Y0c5MlpYSjlJR05vYVd4a1BYczhiR0ZpWld3Z2JHRmlaV3c5ZXlkY2RVVkJSamduZlQ0OEwyeGhZbVZzUGlCaGN5QkhkR3N1VjJsa1oyVjBmU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDazdYRzRnSUNBZ2ZWeHVmVnh1WEc1amIyNXpkQ0JoZFdScGIwTnZiblJ5YjJ3Z1BTQnVaWGNnUVhWa2FXOURiMjUwY205c1EyeGhjM003WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdGMVpHbHZRMjl1ZEhKdmJEdGNiaUlzSUNKcGJYQnZjblFnZXlCbGVHVmpJSDBnWm5KdmJTQmNJbUZuY3k5d2NtOWpaWE56WENJN1hHNXBiWEJ2Y25RZ2V5QkJZMk5sYzNOdmNpd2dZM0psWVhSbFUzUmhkR1VzSUZObGRIUmxjaUI5SUdaeWIyMGdYQ0poWjNOY0lqdGNibHh1WTJ4aGMzTWdRVzVwYldGMGFXOXVjeUI3WEc0Z0lDQWdjSEpwZG1GMFpTQmZZVzVwYldGMGFXOXVjMFZ1WVdKc1pXUTZJRUZqWTJWemMyOXlQR0p2YjJ4bFlXNCtPMXh1SUNBZ0lIQnlhWFpoZEdVZ1gzTmxkRUZ1YVcxaGRHbHZibk5GYm1GaWJHVmtPaUJUWlhSMFpYSThZbTl2YkdWaGJqNDdYRzVjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwSUh0Y2JpQWdJQ0FnSUNBZ1czUm9hWE11WDJGdWFXMWhkR2x2Ym5ORmJtRmliR1ZrTENCMGFHbHpMbDl6WlhSQmJtbHRZWFJwYjI1elJXNWhZbXhsWkYwZ1BTQmpjbVZoZEdWVGRHRjBaU2gwYUdsekxtRnVhVzFoZEdsdmJsTjBZWFJsS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J3ZFdKc2FXTWdaMlYwSUdGdWFXMWhkR2x2YmxOMFlYUmxLQ2tnZTF4dUlDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnY21WemRXeDBJRDBnWlhobFl5aGNJbWg1Y0hKamRHd2daMlYwYjNCMGFXOXVJR0Z1YVcxaGRHbHZibk02Wlc1aFlteGxaQ0F0YWx3aUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSEJoY25ObFpDQTlJRXBUVDA0dWNHRnljMlVvY21WemRXeDBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd1lYSnpaV1F1YVc1MElEMDlQU0F4TzF4dUlDQWdJQ0FnSUNCOUlHTmhkR05vSUNobGNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0Z3aVJYSnlieUJoYnlCMlpYSnBabWxqWVhJZ1pYTjBZV1J2SUdSaGN5QmhibWx0WVZ4MU1EQkZOMXgxTURCR05XVnpPbHdpTENCbGNuSnZjaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J3ZFdKc2FXTWdjM2x1WTBGdWFXMWhkR2x2YmxOMFlYUmxLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDl6WlhSQmJtbHRZWFJwYjI1elJXNWhZbXhsWkNoMGFHbHpMbUZ1YVcxaGRHbHZibE4wWVhSbEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCd2RXSnNhV01nZEc5bloyeGxRVzVwYldGMGFXOXVjeWdwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYm1WM1UzUmhkR1VnUFNBaGRHaHBjeTVoYm1sdFlYUnBiMjVUZEdGMFpUdGNibHh1SUNBZ0lDQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWlhobFl5aGdhSGx3Y21OMGJDQnJaWGwzYjNKa0lHRnVhVzFoZEdsdmJuTTZaVzVoWW14bFpDQWtlMjVsZDFOMFlYUmxJRDhnTVNBNklEQjlZQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxlR1ZqS0dCb2VYQnlZM1JzSUd0bGVYZHZjbVFnWkdWamIzSmhkR2x2YmpwemFHRmtiM2M2Wlc1aFlteGxaQ0FrZTI1bGQxTjBZWFJsSUQ4Z01TQTZJREI5WUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXpaWFJCYm1sdFlYUnBiMjV6Ulc1aFlteGxaQ2h1WlhkVGRHRjBaU2s3WEc0Z0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0Z3aVJYSnlieUJoYnlCaGJIUmxjbUZ5SUdGdWFXMWhYSFV3TUVVM1hIVXdNRVkxWlhNNlhDSXNJR1Z5Y205eUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjM2x1WTBGdWFXMWhkR2x2YmxOMFlYUmxLQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J3ZFdKc2FXTWdaMlYwSUdGdWFXMWhkR2x2Ym5ORmJtRmliR1ZrS0NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWVc1cGJXRjBhVzl1YzBWdVlXSnNaV1E3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSFZpYkdsaklITmxkQ0J6WlhSQmJtbHRZWFJwYjI1elJXNWhZbXhsWkNodVpYZFRkR0YwWlRvZ1ltOXZiR1ZoYmlrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5elpYUkJibWx0WVhScGIyNXpSVzVoWW14bFpDaHVaWGRUZEdGMFpTazdYRzRnSUNBZ2ZWeHVmVnh1WEc1amIyNXpkQ0JoYm1sdFlYUnBiMjVUWlhKMmFXTmxJRDBnYm1WM0lFRnVhVzFoZEdsdmJuTTdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR0Z1YVcxaGRHbHZibE5sY25acFkyVTdYRzRpTENBaWFXMXdiM0owSUhzZ1IyUnJMQ0JIZEdzZ2ZTQm1jbTl0SUZ3aVlXZHpMMmQwYXpSY0lqdGNibWx0Y0c5eWRDQkhjMnNnWm5KdmJTQW5aMms2THk5SGMyc25PMXh1YVcxd2IzSjBJRUZ6ZEdGc1EyRjJZU0JtY205dElGd2laMms2THk5QmMzUmhiRU5oZG1FL2RtVnljMmx2Ymowd0xqRmNJanRjYm1sdGNHOXlkQ0JIVDJKcVpXTjBJR1p5YjIwZ0oyZHBPaTh2UjA5aWFtVmpkQ2M3WEc1cGJYQnZjblFnZXlCQlkyTmxjM052Y2l3Z1kzSmxZWFJsUW1sdVpHbHVaeXdnWTNKbFlYUmxRMjl0Y0hWMFpXUXNJR055WldGMFpWTjBZWFJsTENCdmJrTnNaV0Z1ZFhBc0lGTmxkSFJsY2lCOUlHWnliMjBnWENKaFozTmNJanRjYm1sdGNHOXlkQ0JvZVhCeWJHRnVaRk5sY25acFkyVWdabkp2YlNCY0lpNHVMM05sY25acFkyVnpMMGg1Y0hKc1lXNWtYQ0k3WEc1cGJYQnZjblFnUVhOMFlXeEllWEJ5YkdGdVpDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFaDVjSEpzWVc1a1AzWmxjbk5wYjI0OU1DNHhYQ0k3WEc1Y2JtTnZibk4wSUVOaGRtRkRiMjVtYVdjZ1BTQjdYRzRnSUNBZ1lYVjBiM05sYm5NNklIUnlkV1VzWEc0Z0lDQWdZbUZ5Y3pvZ01qVXNYRzRnSUNBZ1puSmhiV1Z5WVhSbE9pQTJNQ3hjYmlBZ0lDQnBibkIxZERvZ1FYTjBZV3hEWVhaaExrbHVjSFYwTGxCSlVFVlhTVkpGTEZ4dUlDQWdJRzV2YVhObFVtVmtkV04wYVc5dU9pQXdMamMzTEZ4dUlDQWdJSE5sYm5OcGRHbDJhWFI1T2lBd0xqYzFMRnh1SUNBZ0lITjBaWEpsYnpvZ1ptRnNjMlVzWEc1OU8xeHVYRzVsZUhCdmNuUWdaVzUxYlNCRFlYWmhWbWx6YVdKc2FYUjVJSHRjYmlBZ0lDQkJURmRCV1ZNc1hHNGdJQ0FnVGs5ZlEweEpSVTVVVXl4Y2JpQWdJQ0JFU1ZOQlFreEZSRnh1ZlZ4dVhHNWpiR0Z6Y3lCRFlYWmhWMmxrWjJWMElHVjRkR1Z1WkhNZ1IzUnJMa1J5WVhkcGJtZEJjbVZoSUh0Y2JpQWdJQ0J3Y21sMllYUmxJSFpoYkhWbGMwRmpZMlZ6YzI5eU9pQkJZMk5sYzNOdmNqeHVkVzFpWlhKYlhUNDdYRzRnSUNBZ2NISnBkbUYwWlNCMWJuTjFZa0ZqWTJWemMyOXlPaUFvS1NBOVBpQjJiMmxrTzF4dVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb2Rqb2dRV05qWlhOemIzSThiblZ0WW1WeVcxMCtLU0I3WEc0Z0lDQWdJQ0FnSUhOMWNHVnlLQ2s3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMlYwWDJobGVIQmhibVFvZEhKMVpTazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBYM1psZUhCaGJtUW9kSEoxWlNrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11ZG1Gc2RXVnpRV05qWlhOemIzSWdQU0IyTG1GektIWWdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2FHVnBaMmgwSUQwZ2RHaHBjeTVuWlhSZllXeHNiMk5oZEdWa1gyaGxhV2RvZENncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFl1YldGd0tHa2dQVDRnYUdWcFoyaDBJQ29nS0RFZ0xTQnBLU2s3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG5WdWMzVmlRV05qWlhOemIzSWdQU0IwYUdsekxuWmhiSFZsYzBGalkyVnpjMjl5TG5OMVluTmpjbWxpWlNnb0tTQTlQaUIwYUdsekxuRjFaWFZsWDJSeVlYY29LU2s3WEc1Y2JpQWdJQ0FnSUNBZ2IyNURiR1ZoYm5Wd0tDZ3BJRDArSUhSb2FYTXVkVzV6ZFdKQlkyTmxjM052Y2lncEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCdmRtVnljbWxrWlNCMlpuVnVZMTl6Ym1Gd2MyaHZkQ2h6Ym1Gd2MyaHZkRG9nUjNSckxsTnVZWEJ6YUc5MEtUb2dkbTlwWkNCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doZEdocGN5NW5aWFJmYldGd2NHVmtLQ2twSUhKbGRIVnlianRjYmx4dUlDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0YwYUdsekxuWnBjMmxpYkdVcElISmxkSFZ5Ymp0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdkMmxrZEdnZ1BTQjBhR2x6TG1kbGRGOWhiR3h2WTJGMFpXUmZkMmxrZEdnb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR2hsYVdkb2RDQTlJSFJvYVhNdVoyVjBYMkZzYkc5allYUmxaRjlvWldsbmFIUW9LVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hkcFpIUm9JRHc5SURBZ2ZId2dhR1ZwWjJoMElEdzlJREFwSUhKbGRIVnlianRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RtRnNkV1Z6SUQwZ2RHaHBjeTUyWVd4MVpYTkJZMk5sYzNOdmNpNW5aWFFvS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIWmhiSFZsY3k1c1pXNW5kR2dnUFQwOUlEQXBJSEpsZEhWeWJqdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWW1GeVYybGtkR2dnUFNCM2FXUjBhQ0F2SUNoMllXeDFaWE11YkdWdVozUm9JQzBnTVNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmpiMnh2Y2lBOUlIUm9hWE11Y0dGeVpXNTBMbWRsZEY5amIyeHZjaWdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1luVnBiR1JsY2lBOUlHNWxkeUJIYzJzdVVHRjBhRUoxYVd4a1pYSW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSjFhV3hrWlhJdWJXOTJaVjkwYnlnd0xDQjJZV3gxWlhOYk1GMHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYVc1MlUybDRJRDBnTVNBdklEWTdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvYkdWMElHa2dQU0F3T3lCcElEd2dkbUZzZFdWekxteGxibWQwYUNBdElERTdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhBd2VDQTlJQ2hwSUMwZ01Ta2dLaUJpWVhKWGFXUjBhRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQndNSGtnUFNCMllXeDFaWE5iVFdGMGFDNXRZWGdvTUN3Z2FTQXRJREVwWFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J3TVhnZ1BTQnBJQ29nWW1GeVYybGtkR2c3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjREY1SUQwZ2RtRnNkV1Z6VzJsZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhBeWVDQTlJQ2hwSUNzZ01Ta2dLaUJpWVhKWGFXUjBhRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQndNbmtnUFNCMllXeDFaWE5iYVNBcklERmRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIQXplQ0E5SUNocElDc2dNaWtnS2lCaVlYSlhhV1IwYUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J3TTNrZ1BTQjJZV3gxWlhOYlRXRjBhQzV0YVc0b2RtRnNkV1Z6TG14bGJtZDBhQ0F0SURFc0lHa2dLeUF5S1YwN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCak1YZ2dQU0J3TVhnZ0t5QW9jREo0SUMwZ2NEQjRLU0FxSUdsdWRsTnBlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmpNWGtnUFNCd01Ya2dLeUFvY0RKNUlDMGdjREI1S1NBcUlHbHVkbE5wZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JqTW5nZ1BTQndNbmdnTFNBb2NETjRJQzBnY0RGNEtTQXFJR2x1ZGxOcGVEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCak1ua2dQU0J3TW5rZ0xTQW9jRE41SUMwZ2NERjVLU0FxSUdsdWRsTnBlRHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKMWFXeGtaWEl1WTNWaWFXTmZkRzhvWXpGNExDQmpNWGtzSUdNeWVDd2dZeko1TENCd01uZ3NJSEF5ZVNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR0oxYVd4a1pYSXViR2x1WlY5MGJ5aDNhV1IwYUN3Z2FHVnBaMmgwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0oxYVd4a1pYSXViR2x1WlY5MGJ5Z3dMQ0JvWldsbmFIUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1luVnBiR1JsY2k1amJHOXpaU2dwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6Ym1Gd2MyaHZkQzVoY0hCbGJtUmZabWxzYkNoaWRXbHNaR1Z5TG5SdlgzQmhkR2dvS1N3Z1IzTnJMa1pwYkd4U2RXeGxMbGRKVGtSSlRrY3NJR052Ykc5eUtUdGNiaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9aWEp5YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpaGNJa1Z5Y204Z2JtOGdjMjVoY0hOb2IzUWdaRzhnUTJGMllUcGNJaXdnWlhKeWIzSXBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNWpiMjV6ZENCZlkyRjJZU0E5SUVkUFltcGxZM1F1Y21WbmFYTjBaWEpEYkdGemN5aDdJRWRVZVhCbFRtRnRaVG9nSjBOaGRtRW5JSDBzSUVOaGRtRlhhV1JuWlhRcE8xeHVYRzVqYkdGemN5QkRZWFpoUTJ4aGMzTWdlMXh1SUNBZ0lIQnlhWFpoZEdVZ1pHVm1ZWFZzZERvZ1FYTjBZV3hEWVhaaExrTmhkbUVnZkNCdWRXeHNPMXh1SUNBZ0lIQnlhWFpoZEdVZ1gzWmhiSFZsY3pvZ1FXTmpaWE56YjNJOGJuVnRZbVZ5VzEwK08xeHVYRzRnSUNBZ2NISnBkbUYwWlNCZmRtbHphV0pwYkdsMGVWTjBZWFJsT2lCQlkyTmxjM052Y2p4RFlYWmhWbWx6YVdKc2FYUjVQanRjYmlBZ0lDQndjbWwyWVhSbElGOXpaWFJXYVhOcFltbHNhWFI1VTNSaGRHVTZJRk5sZEhSbGNqeERZWFpoVm1semFXSnNhWFI1UGp0Y2JseHVJQ0FnSUhCMVlteHBZeUJqYjI1emRISjFZM1J2Y2lncElIdGNiaUFnSUNBZ0lDQWdXM1JvYVhNdVgzWnBjMmxpYVd4cGRIbFRkR0YwWlN3Z2RHaHBjeTVmYzJWMFZtbHphV0pwYkdsMGVWTjBZWFJsWFNBOUlHTnlaV0YwWlZOMFlYUmxQRU5oZG1GV2FYTnBZbXhwZEhrK0tFTmhkbUZXYVhOcFlteHBkSGt1UVV4WFFWbFRLVHRjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbVJsWm1GMWJIUWdQU0JCYzNSaGJFTmhkbUV1WjJWMFgyUmxabUYxYkhRb0tUdGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVaR1ZtWVhWc2RDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVrWldaaGRXeDBMbk5sZEY5aGRYUnZjMlZ1Y3loRFlYWmhRMjl1Wm1sbkxtRjFkRzl6Wlc1ektUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaR1ZtWVhWc2RDNXpaWFJmWW1GeWN5aERZWFpoUTI5dVptbG5MbUpoY25NcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWtaV1poZFd4MExuTmxkRjltY21GdFpYSmhkR1VvUTJGMllVTnZibVpwWnk1bWNtRnRaWEpoZEdVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWtaV1poZFd4MExuTmxkRjlwYm5CMWRDaERZWFpoUTI5dVptbG5MbWx1Y0hWMEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaR1ZtWVhWc2RDNXpaWFJmYm05cGMyVmZjbVZrZFdOMGFXOXVLRU5oZG1GRGIyNW1hV2N1Ym05cGMyVlNaV1IxWTNScGIyNHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVrWldaaGRXeDBMbk5sZEY5emRHVnlaVzhvUTJGMllVTnZibVpwWnk1emRHVnlaVzhwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmRtRnNkV1Z6SUQwZ1kzSmxZWFJsUW1sdVpHbHVaeWgwYUdsekxtUmxabUYxYkhRc0lDZDJZV3gxWlhNbktTNWhjeWdvZGlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElITmxibk1nUFNCRFlYWmhRMjl1Wm1sbkxuTmxibk5wZEdsMmFYUjVPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZGk1dFlYQW9hU0E5UGlCcElDb2djMlZ1Y3lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1pYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0Z3aVJYSnlieUJ1YnlCb1lXNWtiR1Z5SUdkc2IySmhiQ0JrYnlCRFlYWmhPbHdpTENCbGNuSnZjaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCYlhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9YQ0pPWEhVd01FVXpieUJtYjJrZ2NHOXpjMXgxTURCRlJIWmxiQ0JwYm1samFXRnNhWHBoY2lCdklFTmhkbUZjSWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTJZV3gxWlhNZ1BTQmpjbVZoZEdWVGRHRjBaVHh1ZFcxaVpYSmJYVDRvVzEwcFd6QmRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSFZpYkdsaklITm9iM1ZzWkVOaGRtRkJjSEJsWVhJb2JXOXVhWFJ2Y2pvZ1FYTjBZV3hJZVhCeWJHRnVaQzVOYjI1cGRHOXlLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJqY21WaGRHVkRiMjF3ZFhSbFpDaGJkR2hwY3k1ZmRtbHphV0pwYkdsMGVWTjBZWFJsTENCb2VYQnliR0Z1WkZObGNuWnBZMlV1ZG1semFXSnBiR2wwZVVGalkyVnpjMjl5S0cxdmJtbDBiM0lwWFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ2gyY3l3Z2RtRXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvZG5NcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQkRZWFpoVm1semFXSnNhWFI1TGtSSlUwRkNURVZFT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFTmhkbUZXYVhOcFlteHBkSGt1UVV4WFFWbFRPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnUTJGMllWWnBjMmxpYkdsMGVTNU9UMTlEVEVsRlRsUlRPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIWmhPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQndkV0pzYVdNZ2RHOW5aMnhsVm1semFXSnBiR2wwZVZOMFlYUmxLQ2tnZTF4dUlDQWdJQ0FnSUNCemQybDBZMmdvZEdocGN5NWZkbWx6YVdKcGJHbDBlVk4wWVhSbExtZGxkQ2dwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFTmhkbUZXYVhOcFlteHBkSGt1UVV4WFFWbFRPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzTmxkRlpwYzJsaWFXeHBkSGxUZEdGMFpTaERZWFpoVm1semFXSnNhWFI1TGs1UFgwTk1TVVZPVkZNcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCRFlYWmhWbWx6YVdKc2FYUjVMazVQWDBOTVNVVk9WRk02WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZjMlYwVm1semFXSnBiR2wwZVZOMFlYUmxLRU5oZG1GV2FYTnBZbXhwZEhrdVJFbFRRVUpNUlVRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCRFlYWmhWbWx6YVdKc2FYUjVMa1JKVTBGQ1RFVkVPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzTmxkRlpwYzJsaWFXeHBkSGxUZEdGMFpTaERZWFpoVm1semFXSnNhWFI1TGtGTVYwRlpVeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYRzRnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM05sZEZacGMybGlhV3hwZEhsVGRHRjBaU2hEWVhaaFZtbHphV0pzYVhSNUxrUkpVMEZDVEVWRUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lIQjFZbXhwWXlCblpYUWdkbWx6YVdKcGJHbDBlVk4wWVhSbEtDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmRtbHphV0pwYkdsMGVWTjBZWFJsTzF4dUlDQWdJSDFjYmx4dVhHNWNiaUFnSUNCd2RXSnNhV01nUTJGMllTaGpjM05EYkdGemMyVnpPaUJ6ZEhKcGJtZGJYU2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNCamMzTkRiR0Z6YzJWelBYdGJMaTR1WTNOelEyeGhjM05sY3l3Z1hDSkRZWFpoWENKZGZTQnZkbVZ5Wm14dmR6MTdSM1JyTGs5MlpYSm1iRzkzTGtoSlJFUkZUbjArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZTI1bGR5QmZZMkYyWVNoMGFHbHpMbDkyWVd4MVpYTXBmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1BDOWliM2crWEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnZlZ4dWZWeHVYRzVqYjI1emRDQmpZWFpoSUQwZ2JtVjNJRU5oZG1GRGJHRnpjenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJGMllUdGNiaUlzSUNKcGJYQnZjblFnZXlCQlkyTmxjM052Y2l3Z1kzSmxZWFJsVTNSaGRHVXNJRzl1UTJ4bFlXNTFjQ3dnVTJWMGRHVnlJSDBnWm5KdmJTQmNJbUZuYzF3aU8xeHVhVzF3YjNKMElIc2dZM0psWVhSbFVHOXNiQ0I5SUdaeWIyMGdYQ0poWjNNdmRHbHRaVndpTzF4dWFXMXdiM0owSUVkcGJ5Qm1jbTl0SUZ3aVoyazZMeTlIYVc4L2RtVnljMmx2YmoweUxqQmNJanRjYm1sdGNHOXlkQ0JIVEdsaUlHWnliMjBnWENKbmFUb3ZMMGRNYVdJL2RtVnljMmx2YmoweUxqQmNJanRjYm1sdGNHOXlkQ0I3SUZOM2QzY2dmU0JtY205dElGd2lMaTR2ZFhScGJITXZVM2QzZDF3aU8xeHVhVzF3YjNKMElIc2dSMlJyTENCSGRHc2dmU0JtY205dElGd2lZV2R6TDJkMGF6UmNJanRjYm1sdGNHOXlkQ0I3SUdWNFpXTkJjM2x1WXlCOUlHWnliMjBnWENKaFozTXZjSEp2WTJWemMxd2lPMXh1WEc1amIyNXpkQ0J3WVhSb0lEMGdZQ1I3UjB4cFlpNW5aWFJmYUc5dFpWOWthWElvS1gwdkxtTnZibVpwWnk5b2VYQnlMMk52Ym1acFozTXZkMkZzYkhCaGNHVnljMkE3WEc1amIyNXpkQ0J3YjJ4c1ZHbHRaU0E5SURJME1EQXdNRHRjYm1OdmJuTjBJR2x0WVdkbFJYaDBaVzV6YVc5dWN5QTlJRnNuTG1wd1p5Y3NJQ2N1YW5CbFp5Y3NJQ2N1Y0c1bkp5d2dKeTVuYVdZbkxDQW5MbUp0Y0Njc0lDY3VkMlZpY0Njc0lDY3VjM1puSjEwN1hHNWNibU5zWVhOeklGZGhiR3h3WVhCbGNsTmxiR1ZqZEc5eVEyeGhjM01nZTF4dUlDQWdJSEJ5YVhaaGRHVWdhVzFoWjJWek9pQkJZMk5sYzNOdmNqeHpkSEpwYm1kYlhUNDdYRzRnSUNBZ2NISnBkbUYwWlNCelpYUkpiV0ZuWlhNNklGTmxkSFJsY2p4emRISnBibWRiWFQ0N1hHNGdJQ0FnY0hKcGRtRjBaU0IwYVcxbGNrRmpkR2wyWlRvZ1FXTmpaWE56YjNJOFltOXZiR1ZoYmo0N1hHNGdJQ0FnY0hKcGRtRjBaU0J6WlhSVWFXMWxja0ZqZEdsMlpUb2dVMlYwZEdWeVBHSnZiMnhsWVc0K08xeHVJQ0FnSUhCeWFYWmhkR1VnY0c5c2JHbHVaem9nUVdOalpYTnpiM0k4WW05dmJHVmhiajQ3WEc1Y2JpQWdJQ0JqYjI1emRISjFZM1J2Y2lncElIdGNiaUFnSUNBZ0lDQWdXM1JvYVhNdWFXMWhaMlZ6TENCMGFHbHpMbk5sZEVsdFlXZGxjMTBnUFNCamNtVmhkR1ZUZEdGMFpTaGJYU0JoY3lCemRISnBibWRiWFNrN1hHNGdJQ0FnSUNBZ0lGdDBhR2x6TG5ScGJXVnlRV04wYVhabExDQjBhR2x6TG5ObGRGUnBiV1Z5UVdOMGFYWmxYU0E5SUdOeVpXRjBaVk4wWVhSbEtIUnlkV1VwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ2Ykd4cGJtY2dQU0JqY21WaGRHVlFiMnhzS0hSeWRXVXNJSEJ2Ykd4VWFXMWxMQ0FvY0hKbGRqb2dZbTl2YkdWaGJpa2dQVDRnSVhCeVpYWXBPMXh1SUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx0WVdkbGN5aDBhR2x6TG5KbFlXUkpiV0ZuWlVacGJHVnpLSEJoZEdncEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCd2NtbDJZWFJsSUdselNXMWhaMlZHYVd4bEtHWnBiR1Z1WVcxbE9pQnpkSEpwYm1jcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1pYaDBaVzV6YVc5dUlEMGdabWxzWlc1aGJXVXVkRzlNYjNkbGNrTmhjMlVvS1M1emRXSnpkSEpwYm1jb1ptbHNaVzVoYldVdWJHRnpkRWx1WkdWNFQyWW9KeTRuS1NrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJXRm5aVVY0ZEdWdWMybHZibk11YVc1amJIVmtaWE1vWlhoMFpXNXphVzl1S1NBL0lHVjRkR1Z1YzJsdmJqb2diblZzYkR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J3Y21sMllYUmxJSEpsWVdSSmJXRm5aVVpwYkdWektHUnBjbVZqZEc5eWVWQmhkR2c2SUhOMGNtbHVaeWtnZTF4dUlDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWm1sc1pTQTlJRWRwYnk1R2FXeGxMbTVsZDE5bWIzSmZjR0YwYUNoa2FYSmxZM1J2Y25sUVlYUm9LVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGbWFXeGxMbkYxWlhKNVgyVjRhWE4wY3lodWRXeHNLU2tnY21WMGRYSnVJRnRkTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmxiblZ0WlhKaGRHOXlJRDBnWm1sc1pTNWxiblZ0WlhKaGRHVmZZMmhwYkdSeVpXNG9KM04wWVc1a1lYSmtPanB1WVcxbExITjBZVzVrWVhKa09qcDBlWEJsSnl3Z1IybHZMa1pwYkdWUmRXVnllVWx1Wm05R2JHRm5jeTVPVDA1RkxDQnVkV3hzS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdhVzFoWjJWek9pQnpkSEpwYm1kYlhTQTlJRnRkTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdacGJHVkpibVp2TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9LR1pwYkdWSmJtWnZJRDBnWlc1MWJXVnlZWFJ2Y2k1dVpYaDBYMlpwYkdVb2JuVnNiQ2twSUNFOVBTQnVkV3hzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1pwYkdWSmJtWnZMbWRsZEY5bWFXeGxYM1I1Y0dVb0tTQTlQVDBnUjJsdkxrWnBiR1ZVZVhCbExsSkZSMVZNUVZJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdabWxzWlU1aGJXVWdQU0JtYVd4bFNXNW1ieTVuWlhSZmJtRnRaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCbGVIUWdQU0IwYUdsekxtbHpTVzFoWjJWR2FXeGxLR1pwYkdWT1lXMWxLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aWGgwS1NCcGJXRm5aWE11Y0hWemFDaG1hV3hsVG1GdFpTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJuVnRaWEpoZEc5eUxtTnNiM05sS0c1MWJHd3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdFlXZGxjenRjYmlBZ0lDQWdJQ0FnZlNCallYUmphQ0FvWlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSjF4MU1qYzBReUJGY25KdklFZHBieUJoYnlCc1pYSWdaR2x5WlhSY2RUQXdSak55YVc4Nkp5d2daR2x5WldOMGIzSjVVR0YwYUN3Z1pYSnliM0lwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGdGRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSFZpYkdsaklGTmxiR1ZqZEc5eVNXNWthV05oZEc5eUtHZGthMjF2Ym1sMGIzSTZJRWRrYXk1TmIyNXBkRzl5S1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdOc2FXTnJJRDBnYm1WM0lFZDBheTVIWlhOMGRYSmxRMnhwWTJzb2V5QmlkWFIwYjI0NklFZGtheTVDVlZSVVQwNWZVRkpKVFVGU1dTQjlLVHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhR0Z1Wkd4bGNpQTlJR05zYVdOckxtTnZibTVsWTNRb0ozQnlaWE56WldRbkxDQW9LU0E5UGlCMGFHbHpMbk5sZEZScGJXVnlRV04wYVhabEtDRjBhR2x6TG5ScGJXVnlRV04wYVhabExtZGxkQ2dwS1NrN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhWdWMzVmlJRDBnZEdocGN5NXdiMnhzYVc1bkxuTjFZbk5qY21saVpTZ29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTUwYVcxbGNrRmpkR2wyWlM1blpYUW9LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR052Ym01bFkzUnZjaUE5SUdka2EyMXZibWwwYjNJdVoyVjBYMk52Ym01bFkzUnZjaWdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHTnZibTVsWTNSdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JwYldkQmNuSmhlU0E5SUhSb2FYTXVhVzFoWjJWekxtZGxkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcGJXY2dQU0JwYldkQmNuSmhlVnROWVhSb0xtWnNiMjl5S0UxaGRHZ3VjbUZ1Wkc5dEtDa2dLaUJwYldkQmNuSmhlUzVzWlc1bmRHZ3BYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1UzZDNkeTV0WVc1aFoyVnlMbk5sZEZkaGJHeHdZWEJsY2loZ0pIdHdZWFJvZlM4a2UybHRaMzFnTENCN0lHOTFkSEIxZEhNNklHTnZibTVsWTNSdmNpd2dkSEpoYm5OcGRHbHZibFI1Y0dVNklGTjNkM2N1VkhKaGJuTnBkR2x2YmxSNWNHVXVSMUpQVnlCOUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsZUdWalFYTjVibU1vWUc1dmRHbG1lUzF6Wlc1a0lGd2lUVzl1YVhSdmNpQWtlMmRrYTIxdmJtbDBiM0l1WjJWMFgyUmxjMk55YVhCMGFXOXVLQ2w5SUc1Y2RUQXdSVE52SUhSbGJTQmpiMjVsWTNSdmNsd2lJRndpSkh0blpHdHRiMjVwZEc5eUxtZGxkRjlrWlhOamNtbHdkR2x2YmlncGZTQnVYSFV3TUVVemJ5QjBaVzBnWTI5dVpXTjBiM0l1WENKZ0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMHBPMXh1WEc0Z0lDQWdJQ0FnSUc5dVEyeGxZVzUxY0Nnb0tTQTlQaUI3SUdOc2FXTnJMbVJwYzJOdmJtNWxZM1FvYUdGdVpHeGxjaWs3SUhWdWMzVmlLQ2tnZlNrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4WW05NFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzTnpRMnhoYzNObGN6MTdXeWRUWld4bFkzUnZja2x1WkdsallYUnZjaWRkZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5eWFXVnVkR0YwYVc5dVBYdEhkR3N1VDNKcFpXNTBZWFJwYjI0dVZrVlNWRWxEUVV4OVhHNGdJQ0FnSUNBZ0lDQWdJQ0ErWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOemMwTnNZWE56WlhNOWUxdGNJbE4xWW5ScGRHeGxYQ0pkZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNZV0psYkQxN0oxTmxiR1YwYjNJZ1pHVWdVR0Z3WEhVd01FVTVhWE1nWkdVZ1VHRnlaV1JsSjMxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpjM05EYkdGemMyVnpQWHRiWENKUGNIUnBiMjVjSWl3Z1hDSlViMmRuYkdWQlkzUnBkbVZjSWwxOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoWW1Wc1BYdDBhR2x6TG5ScGJXVnlRV04wYVhabExtRnpLSFJoSUQwK0lHQkZjM1JoWkc4NklDUjdkR0VnUHlBblFYUnBkbThuT2lBblJHVnpZWFJwZG1Ga2J5ZDlZQ2w5SUNROWUzTmxiR1lnUFQ0Z2MyVnNaaTVoWkdSZlkyOXVkSEp2Ykd4bGNpaGpiR2xqYXlrZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnS1R0Y2JpQWdJQ0I5WEc1OVhHNWNibU52Ym5OMElIZGhiR3h3WVhCbGNsTmxiR1ZqZEc5eUlEMGdibVYzSUZkaGJHeHdZWEJsY2xObGJHVmpkRzl5UTJ4aGMzTTdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJSGRoYkd4d1lYQmxjbE5sYkdWamRHOXlPMXh1SWl3Z0ltbHRjRzl5ZENCN0lHVjRaV01zSUdWNFpXTkJjM2x1WXlCOUlHWnliMjBnWENKaFozTXZjSEp2WTJWemMxd2lPMXh1YVcxd2IzSjBJRWRNYVdJZ1puSnZiU0JjSW1kcE9pOHZSMHhwWWo5MlpYSnphVzl1UFRJdU1Gd2lPMXh1WEc1bGVIQnZjblFnYm1GdFpYTndZV05sSUZOM2QzY2dlMXh1SUNBZ0lHVjRjRzl5ZENCbGJuVnRJRkpsYzJsNlpTQjdYRzRnSUNBZ0lDQWdJRTVQSUQwZ0oyNXZKeXhjYmlBZ0lDQWdJQ0FnUTFKUFVDQTlJQ2RqY205d0p5eGNiaUFnSUNBZ0lDQWdSa2xVSUQwZ0oyWnBkQ2NzWEc0Z0lDQWdJQ0FnSUZOVVVrVlVRMGdnUFNBbmMzUnlaWFJqYUNkY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JsZUhCdmNuUWdaVzUxYlNCR2FXeDBaWElnZTF4dUlDQWdJQ0FnSUNCT1JVRlNSVk5VSUQwZ0owNWxZWEpsYzNRbkxGeHVJQ0FnSUNBZ0lDQkNTVXhKVGtWQlVpQTlJQ2RDYVd4cGJtVmhjaWNzWEc0Z0lDQWdJQ0FnSUVOQlZFMVZURXhTVDAwZ1BTQW5RMkYwYlhWc2JGSnZiU2NzWEc0Z0lDQWdJQ0FnSUUxSlZFTklSVXhNSUQwZ0owMXBkR05vWld4c0p5eGNiaUFnSUNBZ0lDQWdURUZPUTFwUFV6TWdQU0FuVEdGdVkzcHZjek1uWEc0Z0lDQWdmVnh1WEc0Z0lDQWdaWGh3YjNKMElHVnVkVzBnVkhKaGJuTnBkR2x2YmxSNWNHVWdlMXh1SUNBZ0lDQWdJQ0JPVDA1RklEMGdKMjV2Ym1VbkxGeHVJQ0FnSUNBZ0lDQlRTVTFRVEVVZ1BTQW5jMmx0Y0d4bEp5eGNiaUFnSUNBZ0lDQWdSa0ZFUlNBOUlDZG1ZV1JsSnl4Y2JpQWdJQ0FnSUNBZ1RFVkdWQ0E5SUNkc1pXWjBKeXhjYmlBZ0lDQWdJQ0FnVWtsSFNGUWdQU0FuY21sbmFIUW5MRnh1SUNBZ0lDQWdJQ0JVVDFBZ1BTQW5kRzl3Snl4Y2JpQWdJQ0FnSUNBZ1FrOVVWRTlOSUQwZ0oySnZkSFJ2YlNjc1hHNGdJQ0FnSUNBZ0lGZEpVRVVnUFNBbmQybHdaU2NzWEc0Z0lDQWdJQ0FnSUZkQlZrVWdQU0FuZDJGMlpTY3NYRzRnSUNBZ0lDQWdJRWRTVDFjZ1BTQW5aM0p2ZHljc1hHNGdJQ0FnSUNBZ0lFTkZUbFJGVWlBOUlDZGpaVzUwWlhJbkxGeHVJQ0FnSUNBZ0lDQkJUbGtnUFNBbllXNTVKeXhjYmlBZ0lDQWdJQ0FnVWtGT1JFOU5JRDBnSjNKaGJtUnZiU2RjYmlBZ0lDQjlYRzVjYmlBZ0lDQmxlSEJ2Y25RZ1pXNTFiU0JVY21GdWMybDBhVzl1VUc5eklIdGNiaUFnSUNBZ0lDQWdRMFZPVkVWU0lEMGdKMk5sYm5SbGNpY3NYRzRnSUNBZ0lDQWdJRlJQVUNBOUlDZDBiM0FuTEZ4dUlDQWdJQ0FnSUNCTVJVWlVJRDBnSjJ4bFpuUW5MRnh1SUNBZ0lDQWdJQ0JTU1VkSVZDQTlJQ2R5YVdkb2RDY3NYRzRnSUNBZ0lDQWdJRUpQVkZSUFRTQTlJQ2RpYjNSMGIyMG5MRnh1SUNBZ0lDQWdJQ0JVVDFCZlRFVkdWQ0E5SUNkMGIzQXRiR1ZtZENjc1hHNGdJQ0FnSUNBZ0lGUlBVRjlTU1VkSVZDQTlJQ2QwYjNBdGNtbG5hSFFuTEZ4dUlDQWdJQ0FnSUNCQ1QxUlVUMDFmVEVWR1ZDQTlJQ2RpYjNSMGIyMHRiR1ZtZENjc1hHNGdJQ0FnSUNBZ0lFSlBWRlJQVFY5U1NVZElWQ0E5SUNkaWIzUjBiMjB0Y21sbmFIUW5YRzRnSUNBZ2ZWeHVYRzVjYmlBZ0lDQmxlSEJ2Y25RZ2FXNTBaWEptWVdObElGQmhjbk5sY2s5d2RHbHZibk1nZTF4dUlDQWdJQ0FnSUNCeVpYTnBlbVU2SUZKbGMybDZaVHRjYmlBZ0lDQWdJQ0FnWm1sc2RHVnlPaUJHYVd4MFpYSTdYRzRnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjVVZVhCbE9pQlVjbUZ1YzJsMGFXOXVWSGx3WlR0Y2JpQWdJQ0FnSUNBZ2RISmhibk5wZEdsdmJsQnZjem9nVkhKaGJuTnBkR2x2YmxCdmN6dGNiaUFnSUNBZ0lDQWdiM1YwY0hWMGN6b2djM1J5YVc1bk8xeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVVM1JsY0RvZ2JuVnRZbVZ5TzF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dVJIVnlZVzUwYVc5dU9pQnVkVzFpWlhJN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6YVhScGIyNUJibWRzWlRvZ2JuVnRZbVZ5TzF4dUlDQWdJQ0FnSUNCcGJuWmxjblJaT2lCaWIyOXNaV0Z1TzF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dVYyRjJaVG9nZXlCNE9pQnVkVzFpWlhJc0lIazZJRzUxYldKbGNpQjlPMXh1SUNBZ0lIMWNibHh1WEc0Z0lDQWdZMnhoYzNNZ1RXRnVZV2RsY2lCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wY25WamRHOXlLQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdSMHhwWWk1emNHRjNibDlqYjIxdFlXNWtYMnhwYm1WZllYTjVibU1vSjNOM2QzY2dZMnhsWVhJbktUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhCMVlteHBZeUJ6WlhSWFlXeHNjR0Z3WlhJb2NHRjBhRG9nYzNSeWFXNW5MQ0J2Y0hScGIyNXpQem9nVUdGeWRHbGhiRHhRWVhKelpYSlBjSFJwYjI1elBpazZJR0p2YjJ4bFlXNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR052YlcxaGJtUWdQU0JnYzNkM2R5QnBiV2NnSkh0d1lYUm9mV0E3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWh2Y0hScGIyNXpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2IzQjBhVzl1Y3k1eVpYTnBlbVVwSUdOdmJXMWhibVFnS3owZ1lDQXRMWEpsYzJsNlpTQWtlMjl3ZEdsdmJuTXVjbVZ6YVhwbGZXQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYjNCMGFXOXVjeTVtYVd4MFpYSXBJR052YlcxaGJtUWdLejBnWUNBdFppQWtlMjl3ZEdsdmJuTXVabWxzZEdWeWZXQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYjNCMGFXOXVjeTVwYm5abGNuUlpLU0JqYjIxdFlXNWtJQ3M5SUdBZ0xTMXBiblpsY25RdGVTQWtlMjl3ZEdsdmJuTXVhVzUyWlhKMFdTNTJZV3gxWlU5bUtDbDlZRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlodmNIUnBiMjV6TG5SeVlXNXphWFJwYjI1QmJtZHNaU2tnWTI5dGJXRnVaQ0FyUFNCZ0lDMHRkSEpoYm5OcGRHbHZiaTFoYm1kc1pTQWtlMjl3ZEdsdmJuTXVkSEpoYm5OcGRHbHZia0Z1WjJ4bGZXQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYjNCMGFXOXVjeTUwY21GdWMybDBhVzl1UkhWeVlXNTBhVzl1S1NCamIyMXRZVzVrSUNzOUlHQWdMUzEwY21GdWMybDBhVzl1TFdSMWNtRjBhVzl1SUNSN2IzQjBhVzl1Y3k1MGNtRnVjMmwwYVc5dVJIVnlZVzUwYVc5dWZXQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYjNCMGFXOXVjeTUwY21GdWMybDBhVzl1VUc5ektTQmpiMjF0WVc1a0lDczlJR0FnTFMxMGNtRnVjMmwwYVc5dUxYQnZjeUFrZTI5d2RHbHZibk11ZEhKaGJuTnBkR2x2YmxCdmMzMWdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0c5d2RHbHZibk11ZEhKaGJuTnBkR2x2YmxOMFpYQXBJR052YlcxaGJtUWdLejBnWUNBdExYUnlZVzV6YVhScGIyNHRjM1JsY0NBa2UyOXdkR2x2Ym5NdWRISmhibk5wZEdsdmJsTjBaWEI5WUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHZjSFJwYjI1ekxuUnlZVzV6YVhScGIyNVVlWEJsS1NCamIyMXRZVzVrSUNzOUlHQWdMUzEwY21GdWMybDBhVzl1TFhSNWNHVWdKSHR2Y0hScGIyNXpMblJ5WVc1emFYUnBiMjVVZVhCbGZXQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYjNCMGFXOXVjeTUwY21GdWMybDBhVzl1VjJGMlpTa2dZMjl0YldGdVpDQXJQU0JnSUMwdGRISmhibk5wZEdsdmJpMTNZWFpsSUNSN2IzQjBhVzl1Y3k1MGNtRnVjMmwwYVc5dVYyRjJaUzU0ZlN3a2UyOXdkR2x2Ym5NdWRISmhibk5wZEdsdmJsZGhkbVV1ZVgxZ08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzl3ZEdsdmJuTXViM1YwY0hWMGN5a2dZMjl0YldGdVpDQXJQU0JnSUMwdGIzVjBjSFYwY3lBa2UyOXdkR2x2Ym5NdWIzVjBjSFYwYzMxZ08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdSMHhwWWk1emNHRjNibDlqYjIxdFlXNWtYMnhwYm1WZllYTjVibU1vWTI5dGJXRnVaQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQmxlSEJ2Y25RZ1kyOXVjM1FnYldGdVlXZGxjaUE5SUc1bGR5Qk5ZVzVoWjJWeU8xeHVmVnh1SWl3Z0ltbHRjRzl5ZENCN0lFZGtheXdnUjNScklIMGdabkp2YlNCY0ltRm5jeTluZEdzMFhDSTdYRzVwYlhCdmNuUWdZVzVwYldGMGFXOXVVMlZ5ZG1salpTQm1jbTl0SUZ3aUxpNHZjMlZ5ZG1salpYTXZRVzVwYldGMGFXOXVjMXdpTzF4dWFXMXdiM0owSUhzZ2IyNURiR1ZoYm5Wd0lIMGdabkp2YlNCY0ltRm5jMXdpTzF4dWFXMXdiM0owSUdSaGRHVlVhVzFsSUdaeWIyMGdYQ0l1TDBSaGRHVlVhVzFsWENJN1hHNXBiWEJ2Y25RZ1kyRjJZU3dnZXlCRFlYWmhWbWx6YVdKc2FYUjVJSDBnWm5KdmJTQmNJaTR2UTJGMllWd2lPMXh1YVcxd2IzSjBJSGRoYkd4d1lYQmxjbE5sYkdWamRHOXlJR1p5YjIwZ1hDSXVMMWRoYkd4d1lYQmxjbE5sYkdWamRHOXlYQ0k3WEc1Y2JtTnNZWE56SUVOdmJuUnliMnhEWlc1MFpYSkRiR0Z6Y3lCN1hHNGdJQ0FnY0hWaWJHbGpJR052Ym5OMGNuVmpkRzl5S0NrZ2UxeHVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NISnBkbUYwWlNCelpYUjFjRUoxZEhSdmJpaHpaV3htT2lCSGRHc3VWMmxrWjJWMExDQmpZV3hzWW1GamF6b2dLQ2tnUFQ0Z2RtOXBaQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JqYkdsamF5QTlJRzVsZHlCSGRHc3VSMlZ6ZEhWeVpVTnNhV05yS0hzZ1luVjBkRzl1T2lCSFpHc3VRbFZVVkU5T1gxQlNTVTFCVWxrZ2ZTazdYRzRnSUNBZ0lDQWdJR052Ym5OMElHaGhibVJzWlhJZ1BTQmpiR2xqYXk1amIyNXVaV04wS0Nkd2NtVnpjMlZrSnl3Z1kyRnNiR0poWTJzcE8xeHVJQ0FnSUNBZ0lDQnpaV3htTG1Ga1pGOWpiMjUwY205c2JHVnlLR05zYVdOcktUdGNiaUFnSUNBZ0lDQWdiMjVEYkdWaGJuVndLQ2dwSUQwK0lHTnNhV05yTG1ScGMyTnZibTVsWTNRb2FHRnVaR3hsY2lrcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhCeWFYWmhkR1VnWm05eWJXRjBRMkYyWVZacGMybGliR2wwZVZSbGVIUW9hVG9nUTJGMllWWnBjMmxpYkdsMGVTa2dlMXh1SUNBZ0lDQWdJQ0J6ZDJsMFkyZ29hU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCRFlYWmhWbWx6YVdKc2FYUjVMa0ZNVjBGWlV6cGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z0owTmhkbUVnYzJWdGNISmxJR0YwYVhadkp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdRMkYyWVZacGMybGliR2wwZVM1RVNWTkJRa3hGUkRwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnSjBOaGRtRWdaR1Z6WVhScGRtRmtieWRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnUTJGMllWWnBjMmxpYkdsMGVTNU9UMTlEVEVsRlRsUlRPbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQW5RMkYyWVNCamIyNWthV05wYjI1aGJDZGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lIQnlhWFpoZEdVZ1oyVjBJRlJ2WjJkc1pWWnBjMmxpYkdWRGIyMXdiMjVsYm5SektDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlQ0JqYzNORGJHRnpjMlZ6UFh0YlhDSlViMmRuYkdWV2FYTnBZbXhsUTI5dGNHOXVaVzUwYzF3aVhYMGdiM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVXUlZKVVNVTkJUSDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNJR056YzBOc1lYTnpaWE05ZTF0Y0lsTjFZblJwZEd4bFhDSmRmU0JzWVdKbGJEMTdKMEZ1YVcxaFhIVXdNRVUzWEhVd01FWTFaWE1nWlNCamIyMXdiMjVsYm5SbGN5ZDlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOemMwTnNZWE56WlhNOWUxdGNJbFJ2WjJkc1pVRnVhVzFoZEdsdmJuTmNJaXdnWENKUGNIUnBiMjVjSWwxOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1E5ZTNObGJHWWdQVDRnZEdocGN5NXpaWFIxY0VKMWRIUnZiaWh6Wld4bUxDQW9LU0E5UGlCaGJtbHRZWFJwYjI1VFpYSjJhV05sTG5SdloyZHNaVUZ1YVcxaGRHbHZibk1vS1NsOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoWW1Wc1BYdGhibWx0WVhScGIyNVRaWEoyYVdObExtRnVhVzFoZEdsdmJuTkZibUZpYkdWa0xtRnpLR0ZsSUQwK0lHRmxJRDhnWENKRVpYTmhkR2wyWVhJZ1lXNXBiV0ZjZFRBd1JUZGNkVEF3UmpWbGMxd2lJRG9nWENKQmRHbDJZWElnWVc1cGJXRmNkVEF3UlRkY2RUQXdSalZsYzF3aUtYMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHaERhR0Z5Y3oxN016QjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4YkdGaVpXeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTNOelEyeGhjM05sY3oxN1cxd2lWRzluWjJ4bFJHRjBaVlJwYldWRFlXeGxibVJoY2x3aUxDQmNJazl3ZEdsdmJsd2lYWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pEMTdjMlZzWmlBOVBpQjBhR2x6TG5ObGRIVndRblYwZEc5dUtITmxiR1lzSUNncElEMCtJR1JoZEdWVWFXMWxMblJ2WjJkc1pVbHpSRlJEZG1semFXSnNaU2dwS1gxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0ZpWld3OWUyUmhkR1ZVYVcxbExtbHpSRlJEZG1semFXSnNaUzVoY3locFpIWWdQVDRnYVdSMklEOGdYQ0pQWTNWc2RHRnlJRU5oYkdWdVpGeDFNREJGTVhKcGJ5d2daR0YwWVNCbElHaHZjbUZjSWlBNklGd2lUVzl6ZEhKaGNpQkRZV3hsYm1SY2RUQXdSVEZ5YVc4c0lHUmhkR0VnWlNCb2IzSmhYQ0lwZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUVOb1lYSnpQWHN6TUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpjM05EYkdGemMyVnpQWHRiWENKVWIyZG5iR1ZEWVhaaFhDSXNJRndpVDNCMGFXOXVYQ0pkZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtQWHR6Wld4bUlEMCtJSFJvYVhNdWMyVjBkWEJDZFhSMGIyNG9jMlZzWml3Z0tDa2dQVDRnWTJGMllTNTBiMmRuYkdWV2FYTnBZbWxzYVhSNVUzUmhkR1VvS1NsOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoWW1Wc1BYdGpZWFpoTG5acGMybGlhV3hwZEhsVGRHRjBaUzVoY3loMmN5QTlQaUIwYUdsekxtWnZjbTFoZEVOaGRtRldhWE5wWW14cGRIbFVaWGgwS0haektTbDlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9RMmhoY25NOWV6TXdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQThMMkp2ZUQ1Y2JpQWdJQ0FnSUNBZ0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNCd2NtbDJZWFJsSUVOdmJuUnliMnhEWlc1MFpYSlFiM0J2ZG1WeUtHZGthMjF2Ym1sMGIzSTZJRWRrYXk1TmIyNXBkRzl5S1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4Y0c5d2IzWmxjajVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WW05NElHTnpjME5zWVhOelpYTTllMXRjSWtOdmJuUnliMnhEWlc1MFpYSlFiM0J2ZG1WeVhDSmRmVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlQ0J2Y21sbGJuUmhkR2x2YmoxN1IzUnJMazl5YVdWdWRHRjBhVzl1TGxaRlVsUkpRMEZNZlQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUh0MGFHbHpMbFJ2WjJkc1pWWnBjMmxpYkdWRGIyMXdiMjVsYm5SemZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2UzZGhiR3h3WVhCbGNsTmxiR1ZqZEc5eUxsTmxiR1ZqZEc5eVNXNWthV05oZEc5eUtHZGthMjF2Ym1sMGIzSXBmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdJQ0FnSUR3dmNHOXdiM1psY2o1Y2JpQWdJQ0FnSUNBZ0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNCd2RXSnNhV01nUTI5dWRISnZiRU5sYm5SbGNpaG5aR3R0YjI1cGRHOXlPaUJIWkdzdVRXOXVhWFJ2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnUEcxbGJuVmlkWFIwYjI0Z1kzTnpRMnhoYzNObGN6MTdXMXdpUTI5dWRISnZiRU5sYm5SbGNsd2lYWDBnY0c5d2IzWmxjajE3ZEdocGN5NURiMjUwY205c1EyVnVkR1Z5VUc5d2IzWmxjaWhuWkd0dGIyNXBkRzl5S1NCaGN5QkhkR3N1VUc5d2IzWmxjbjArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNJR056YzBOc1lYTnpaWE05ZTFzblRHRmlaV3duWFgwZ2JHRmlaV3c5ZXlkY2RVUkNPREpjZFVSRFF6Y25mU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdQQzl0Wlc1MVluVjBkRzl1UGx4dUlDQWdJQ0FnSUNBcE8xeHVJQ0FnSUgxY2JuMWNibHh1WTI5dWMzUWdZMjl1ZEhKdmJFTmxiblJsY2lBOUlHNWxkeUJEYjI1MGNtOXNRMlZ1ZEdWeVEyeGhjM003WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdOdmJuUnliMnhEWlc1MFpYSTdYRzRpTENBaWFXMXdiM0owSUhzZ1IzUnJJSDBnWm5KdmJTQmNJbUZuY3k5bmRHczBYQ0k3WEc1cGJYQnZjblFnUVhOMFlXeEllWEJ5YkdGdVpDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFaDVjSEpzWVc1a1AzWmxjbk5wYjI0OU1DNHhYQ0k3WEc1cGJYQnZjblFnYUhsd2NteGhibVJUWlhKMmFXTmxJR1p5YjIwZ1hDSXVMaTl6WlhKMmFXTmxjeTlJZVhCeWJHRnVaRndpTzF4dWFXMXdiM0owSUhzZ1FXTmpaWE56YjNJc0lHTnlaV0YwWlVKcGJtUnBibWNzSUdOeVpXRjBaVU52YlhCMWRHVmtMQ0JHYjNJc0lHOXVRMnhsWVc1MWNDQjlJR1p5YjIwZ1hDSmhaM05jSWp0Y2JseHVZMnhoYzNNZ1YyOXlhM053WVdObGMwTnNZWE56SUh0Y2JpQWdJQ0J3Y21sMllYUmxJSEpsWVdSdmJteDVJRzFoZUZkdmNtdHpjR0ZqWlhNNklHNTFiV0psY2lBOUlEVTdYRzRnSUNBZ2NIVmliR2xqSUdOdmJuTjBjblZqZEc5eUtDa2dlMXh1WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSEpwZG1GMFpTQlhiM0pyYzNCaFkyVW9leUIzYjNKcmMzQmhZMlVzSUdselNXNVFiM0J2ZG1WeUlEMGdabUZzYzJVZ2ZUb2dleUIzYjNKcmMzQmhZMlU2SUVGemRHRnNTSGx3Y214aGJtUXVWMjl5YTNOd1lXTmxMQ0JwYzBsdVVHOXdiM1psY2pvZ1ltOXZiR1ZoYmlCOUtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHTnNhV05ySUQwZ2JtVjNJRWQwYXk1SFpYTjBkWEpsUTJ4cFkyc29LVHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhR0Z1Wkd4bGNsOXBaQ0E5SUdOc2FXTnJMbU52Ym01bFkzUW9YQ0p3Y21WemMyVmtYQ0lzSUNncElEMCtJSHNnYVdZb2FIbHdjbXhoYm1SVFpYSjJhV05sTG1adlkzVnpaV1JYYjNKcmMzQmhZMlV1WjJWMEtDa3VaMlYwWDJsa0tDa2dJVDA5SUhkdmNtdHpjR0ZqWlM1blpYUmZhV1FvS1NrZ2QyOXlhM053WVdObExtWnZZM1Z6S0NrZ2ZTazdYRzRnSUNBZ0lDQWdJRzl1UTJ4bFlXNTFjQ2dvS1NBOVBpQjdJR2xtSUNob1lXNWtiR1Z5WDJsa0tTQmpiR2xqYXk1a2FYTmpiMjV1WldOMEtHaGhibVJzWlhKZmFXUXBJSDBwTzF4dVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4YkdGaVpXeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtQWHR6Wld4bUlEMCtJSE5sYkdZdVlXUmtYMk52Ym5SeWIyeHNaWElvWTJ4cFkyc3BmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR056YzBOc1lYTnpaWE05ZTJoNWNISnNZVzVrVTJWeWRtbGpaUzVtYjJOMWMyVmtWMjl5YTNOd1lXTmxMbUZ6S0dadlkzVnpaV1FnUFQ0Z1cxd2lWMjl5YTNOd1lXTmxYQ0lzSUhkdmNtdHpjR0ZqWlM1blpYUmZhV1FvS1NBOVBUMGdabTlqZFhObFpDNW5aWFJmYVdRb0tTQS9JRndpUVdOMGFYWmxYQ0lnT2lCY0lrbHVZV04wYVhabFhDSmRLWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVdKbGJEMTdZQ1I3ZDI5eWEzTndZV05sTG1kbGRGOXBaQ2dwZldCOUlIZHBaSFJvUTJoaGNuTTllek45SUcxaGVGZHBaSFJvUTJoaGNuTTllek45SUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtORlRsUkZVbjBnZG1Gc2FXZHVQWHRIZEdzdVFXeHBaMjR1UTBWT1ZFVlNmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0x6NWNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQndjbWwyWVhSbElFMWhhVzVYYjNKcmMzQmhZMlVvZDI5eWEzTndZV05sT2lCQmMzUmhiRWg1Y0hKc1lXNWtMbGR2Y210emNHRmpaU2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JqYkdsamF5QTlJRzVsZHlCSGRHc3VSMlZ6ZEhWeVpVTnNhV05yS0NrN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdoaGJtUnNaWElnUFNCamJHbGpheTVqYjI1dVpXTjBLRndpY0hKbGMzTmxaRndpTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZDI5eWEzTndZV05sTG1kbGRGOXBaQ2dwSUNFOVBTQm9lWEJ5YkdGdVpGTmxjblpwWTJVdVptOWpkWE5sWkZkdmNtdHpjR0ZqWlM1blpYUW9LUzVuWlhSZmFXUW9LU2tnZDI5eWEzTndZV05sTG1adlkzVnpLQ2s3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVYRzRnSUNBZ0lDQWdJRzl1UTJ4bFlXNTFjQ2dvS1NBOVBpQjdJR2xtSUNoamJHbGpheWtnWTJ4cFkyc3VaR2x6WTI5dWJtVmpkQ2hvWVc1a2JHVnlLU0I5S1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUTlleWh6Wld4bUtTQTlQaUJ6Wld4bUxtRmtaRjlqYjI1MGNtOXNiR1Z5S0dOc2FXTnJLWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYzNORGJHRnpjMlZ6UFh0amNtVmhkR1ZEYjIxd2RYUmxaQ2hiYUhsd2NteGhibVJUWlhKMmFXTmxMbVp2WTNWelpXUlhiM0pyYzNCaFkyVXNJR055WldGMFpVSnBibVJwYm1jb2QyOXlhM053WVdObExDQmNJbWxrWENJcFhTd2dLR1p2WTNWelpXUXNJR2xrS1NBOVBpQmJYQ0pYYjNKcmMzQmhZMlZjSWl3Z2FXUWdQVDA5SUdadlkzVnpaV1EvTG1kbGRGOXBaQ2dwSUQ4Z1hDSkJZM1JwZG1WY0lpQTZJRndpU1c1aFkzUnBkbVZjSWwwcGZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGhZbVZzUFh0M2IzSnJjM0JoWTJVdVoyVjBYMmxrS0NrdWRHOVRkSEpwYm1jb0tYMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUVOb1lYSnpQWHN4ZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGVGZHBaSFJvUTJoaGNuTTllekY5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdGc2FXZHVQWHRIZEdzdVFXeHBaMjR1UTBWT1ZFVlNmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkdsbmJqMTdSM1JyTGtGc2FXZHVMa05GVGxSRlVuMWNiaUFnSUNBZ0lDQWdJQ0FnSUM4K1hHNGdJQ0FnSUNBZ0lDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NISnBkbUYwWlNCWGIzSnJjM0JoWTJWUWIzQnZkbVZ5S0hzZ2RHaGxVbVZ6ZENCOU9pQjdJSFJvWlZKbGMzUTZJRUZqWTJWemMyOXlQRUZ6ZEdGc1NIbHdjbXhoYm1RdVYyOXlhM053WVdObFcxMCtJSDBwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUNBZ0lDQWdJRHh3YjNCdmRtVnlJR056YzBOc1lYTnpaWE05ZTF0Y0lsZHZjbXR6Y0dGalpWQnZjRzkyWlhKY0lsMTlQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhIZEdzdVJteHZkMEp2ZUNCdFlYaERhR2xzWkhKbGJsQmxja3hwYm1VOWV6UjlQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFJtOXlJR1ZoWTJnOWUzUm9aVkpsYzNSOUlHTm9hV3hrY21WdVBYdHBkR1Z0SUQwK0lIUm9hWE11VjI5eWEzTndZV05sS0hzZ2QyOXlhM053WVdObE9pQnBkR1Z0TENCcGMwbHVVRzl3YjNabGNqb2dkSEoxWlNCOUtYMGdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDBkMGF5NUdiRzkzUW05NFBseHVJQ0FnSUNBZ0lDQWdJQ0FnUEM5d2IzQnZkbVZ5UGx4dUlDQWdJQ0FnSUNBcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhCeWFYWmhkR1VnVFc5eVpWZHZjbXR6Y0dGalpYTkNkWFIwYjI0b2V5QjBhR1ZTWlhOMElIMDZJSHNnZEdobFVtVnpkRG9nUVdOalpYTnpiM0k4UVhOMFlXeEllWEJ5YkdGdVpDNVhiM0pyYzNCaFkyVmJYVDRnZlNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnUEcxbGJuVmlkWFIwYjI0Z1kzTnpRMnhoYzNObGN6MTdXMXdpVFc5eVpWZHZjbXR6Y0dGalpYTkNkWFIwYjI1Y0lsMTlJSE5sYm5OcGRHbDJaVDE3ZEdobFVtVnpkQzVoY3loMGNpQTlQaUIwY2k1c1pXNW5kR2dnUGlBd0tYMGdjRzl3YjNabGNqMTdkR2hwY3k1WGIzSnJjM0JoWTJWUWIzQnZkbVZ5S0hzZ2RHaGxVbVZ6ZERvZ2RHaGxVbVZ6ZENCOUtTQmhjeUJIZEdzdVVHOXdiM1psY24wK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BHeGhZbVZzSUd4aFltVnNQWHNuWEhWRVFqZ3hYSFZFUkRSR0ozMGdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZiV1Z1ZFdKMWRIUnZiajVjYmlBZ0lDQWdJQ0FnS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J3ZFdKc2FXTWdWMjl5YTNOd1lXTmxjeWg3SUcxdmJtbDBiM0lnZlRvZ2V5QnRiMjVwZEc5eU9pQkJjM1JoYkVoNWNISnNZVzVrTGsxdmJtbDBiM0lnZlNrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCdGIyNXBkRzl5VjI5eWEzTndZV05sY3lBOUlHaDVjSEpzWVc1a1UyVnlkbWxqWlM1M2IzSnJjM0JoWTJWekxtRnpLSGR6SUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1pwYkhSbGNtVmtJRDBnZDNNdVptbHNkR1Z5S0NoM2IzSnJjM0JoWTJVcElEMCtJSGR2Y210emNHRmpaUzVuWlhSZmJXOXVhWFJ2Y2lncElEMDlQU0J0YjI1cGRHOXlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRnBiam9nWm1sc2RHVnlaV1F1YzJ4cFkyVW9NQ3dnZEdocGN5NXRZWGhYYjNKcmMzQmhZMlZ6S1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHVlNaWE4wT2lCbWFXeDBaWEpsWkM1emJHbGpaU2gwYUdsekxtMWhlRmR2Y210emNHRmpaWE1wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnUEdKdmVDQmpjM05EYkdGemMyVnpQWHRiWENKWGIzSnJjM0JoWTJWelhDSmRmVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WW05NFBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4Um05eUlHVmhZMmc5ZTIxdmJtbDBiM0pYYjNKcmMzQmhZMlZ6TG1GektHMTNJRDArSUcxM0xtMWhhVzRwZlNCamFHbHNaSEpsYmoxN0tIYzZJRUZ6ZEdGc1NIbHdjbXhoYm1RdVYyOXlhM053WVdObEtTQTlQaUIwYUdsekxrMWhhVzVYYjNKcmMzQmhZMlVvZHlsOUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2UzUm9hWE11VFc5eVpWZHZjbXR6Y0dGalpYTkNkWFIwYjI0b2V5QjBhR1ZTWlhOME9pQnRiMjVwZEc5eVYyOXlhM053WVdObGN5NWhjeWdvZXlCMGFHVlNaWE4wSUgwcElEMCtJSFJvWlZKbGMzUXBJSDBwZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDazdYRzRnSUNBZ2ZWeHVmVnh1WEc1amIyNXpkQ0IzYjNKcmMzQmhZMlZ6SUQwZ2JtVjNJRmR2Y210emNHRmpaWE5EYkdGemN6dGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdkMjl5YTNOd1lXTmxjenRjYmlJc0lDSnBiWEJ2Y25RZ2V5QkJjM1JoYkN3Z1IzUnJMQ0JIWkdzZ2ZTQm1jbTl0SUZ3aVlXZHpMMmQwYXpSY0lqdGNibWx0Y0c5eWRDQnplWE4wWlcxTmIyNXBkRzl5SUdaeWIyMGdYQ0l1TGk5dGIyUjFiR1Z6TDFONWMzUmxiVTF2Ym1sMGIzSmNJanRjYm1sdGNHOXlkQ0J6ZVhOMFpXMVVjbUY1SUdaeWIyMGdYQ0l1TGk5dGIyUjFiR1Z6TDFONWMzUmxiVlJ5WVhsY0lqdGNibWx0Y0c5eWRDQnRaV1JwWVNCbWNtOXRJRndpTGk0dmJXOWtkV3hsY3k5TlpXUnBZVndpTzF4dWFXMXdiM0owSUdGd2NDQm1jbTl0SUZ3aVlXZHpMMmQwYXpRdllYQndYQ0k3WEc1cGJYQnZjblFnWkdGMFpWUnBiV1VnWm5KdmJTQmNJaTR1TDIxdlpIVnNaWE12UkdGMFpWUnBiV1ZjSWp0Y2JtbHRjRzl5ZENCb2VYQnliR0Z1WkZObGNuWnBZMlVnWm5KdmJTQmNJaTR1TDNObGNuWnBZMlZ6TDBoNWNISnNZVzVrWENJN1hHNXBiWEJ2Y25RZ1lYVmthVzlEYjI1MGNtOXNJR1p5YjIwZ1hDSXVMaTl0YjJSMWJHVnpMMEYxWkdsdlEyOXVkSEp2YkZ3aU8xeHVhVzF3YjNKMElHTnZiblJ5YjJ4RFpXNTBaWElnWm5KdmJTQmNJaTR1TDIxdlpIVnNaWE12UTI5dWRISnZiRU5sYm5SbGNsd2lPMXh1YVcxd2IzSjBJSGR2Y210emNHRmpaWE1nWm5KdmJTQmNJaTR1TDIxdlpIVnNaWE12VjI5eWEzTndZV05sYzF3aU8xeHVhVzF3YjNKMElIc2diMjVEYkdWaGJuVndJSDBnWm5KdmJTQmNJbUZuYzF3aU8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQkNZWElvZXlCblpHdHRiMjVwZEc5eUlIMDZJSHNnWjJScmJXOXVhWFJ2Y2pvZ1IyUnJMazF2Ym1sMGIzSWdmU2tnZTF4dUlDQWdJR052Ym5OMElIc2dWRTlRTENCTVJVWlVMQ0JTU1VkSVZDQjlJRDBnUVhOMFlXd3VWMmx1Wkc5M1FXNWphRzl5TzF4dUlDQWdJR052Ym5OMElHaDVjSEpOYjI1cGRHOXlJRDBnYUhsd2NteGhibVJUWlhKMmFXTmxMbWRsZEVoNWNISnNZVzVrVFc5dWFYUnZjaWhuWkd0dGIyNXBkRzl5S1R0Y2JseHVJQ0FnSUhKbGRIVnliaUFvWEc0Z0lDQWdJQ0FnSUR4M2FXNWtiM2RjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1Z6Y0dGalpUMG5RbUZ5SjF4dUlDQWdJQ0FnSUNBZ0lDQWdZM056UTJ4aGMzTmxjejE3VzF3aVFtRnlYQ0pkZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkbWx6YVdKc1pWeHVJQ0FnSUNBZ0lDQWdJQ0FnWlhoamJIVnphWFpwZEhrOWUwRnpkR0ZzTGtWNFkyeDFjMmwyYVhSNUxrVllRMHhWVTBsV1JYMWNiaUFnSUNBZ0lDQWdJQ0FnSUd4aGVXVnlQWHRCYzNSaGJDNU1ZWGxsY2k1Q1QxUlVUMDE5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5aR3R0YjI1cGRHOXlQWHRuWkd0dGIyNXBkRzl5ZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdZVzVqYUc5eVBYdFVUMUFnZkNCU1NVZElWQ0I4SUV4RlJsUjlYRzRnSUNBZ0lDQWdJQ0FnSUNCaGNIQnNhV05oZEdsdmJqMTdZWEJ3ZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdKRDE3S0hObGJHWXBJRDArSUc5dVEyeGxZVzUxY0Nnb0tTQTlQaUJ6Wld4bUxtUmxjM1J5YjNrb0tTbDlYRzRnSUNBZ0lDQWdJRDVjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnWTNOelEyeGhjM05sY3oxN1cxd2lRbUZ5WENKZGZTQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNUdTVXhNZlNCb2IyMXZaMlZ1Wlc5MWN6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThZbTk0SUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGxOVVFWSlVmVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2UzTjVjM1JsYlZSeVlYa3VVM2x6ZEdWdFZISmhlWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThZbTk0SUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtORlRsUkZVbjArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIdHRaV1JwWVM1TlpXUnBZWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2UzZHZjbXR6Y0dGalpYTXVWMjl5YTNOd1lXTmxjeWg3SUcxdmJtbDBiM0k2SUdoNWNISk5iMjVwZEc5eUlIMHBmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHd2WW05NFBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnYUdGc2FXZHVQWHRIZEdzdVFXeHBaMjR1UlU1RWZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZTJSaGRHVlVhVzFsTGxScGJXVjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUh0aGRXUnBiME52Ym5SeWIyd3VRWFZrYVc5RGIyNTBjbTlzZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjdjM2x6ZEdWdFRXOXVhWFJ2Y2k1VGVYTjBaVzFOYjI1cGRHOXlmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCN1kyOXVkSEp2YkVObGJuUmxjaTVEYjI1MGNtOXNRMlZ1ZEdWeUtHZGthMjF2Ym1sMGIzSXBmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHd2WW05NFBseHVJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJRHd2ZDJsdVpHOTNQbHh1SUNBZ0lDazdYRzU5WEc0aUxDQWlhVzF3YjNKMElIc2dRWE4wWVd3c0lFZGtheXdnUjNScklIMGdabkp2YlNCY0ltRm5jeTluZEdzMFhDSmNibWx0Y0c5eWRDQmhjSEFnWm5KdmJTQmNJbUZuY3k5bmRHczBMMkZ3Y0Z3aU8xeHVhVzF3YjNKMElHTmhkbUVnWm5KdmJTQmNJaTR1TDIxdlpIVnNaWE12UTJGMllWd2lPMXh1YVcxd2IzSjBJR2g1Y0hKc1lXNWtVMlZ5ZG1salpTQm1jbTl0SUZ3aUxpNHZjMlZ5ZG1salpYTXZTSGx3Y214aGJtUmNJanRjYm1sdGNHOXlkQ0I3SUc5dVEyeGxZVzUxY0NCOUlHWnliMjBnWENKaFozTmNJanRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnUTJGMllVOTJaWEpzWVhrb2V5Qm5aR3R0YjI1cGRHOXlJSDA2SUhzZ1oyUnJiVzl1YVhSdmNqb2dSMlJyTGsxdmJtbDBiM0lnZlNrZ2UxeHVJQ0FnSUdOdmJuTjBJSHNnVEVWR1ZDd2dVa2xIU0ZRc0lFSlBWRlJQVFNCOUlEMGdRWE4wWVd3dVYybHVaRzkzUVc1amFHOXlPMXh1SUNBZ0lHTnZibk4wSUdoNWNISk5iMjVwZEc5eUlEMGdhSGx3Y214aGJtUlRaWEoyYVdObExtZGxkRWg1Y0hKc1lXNWtUVzl1YVhSdmNpaG5aR3R0YjI1cGRHOXlLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQW9YRzRnSUNBZ0lDQWdJRHgzYVc1a2IzZGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVnpjR0ZqWlQwblEyRjJZVTkyWlhKc1lYa25YRzRnSUNBZ0lDQWdJQ0FnSUNCc1lYbGxjajE3UVhOMFlXd3VUR0Y1WlhJdVFrOVVWRTlOZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdaMlJyYlc5dWFYUnZjajE3WjJScmJXOXVhWFJ2Y24xY2JpQWdJQ0FnSUNBZ0lDQWdJR0Z1WTJodmNqMTdVa2xIU0ZRZ2ZDQk1SVVpVSUh3Z1FrOVVWRTlOZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkbWx6YVdKc1pUMTdZMkYyWVM1emFHOTFiR1JEWVhaaFFYQndaV0Z5S0doNWNISk5iMjVwZEc5eUtYMWNiaUFnSUNBZ0lDQWdJQ0FnSUdGd2NHeHBZMkYwYVc5dVBYdGhjSEI5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWtQWHNvYzJWc1ppa2dQVDRnYjI1RGJHVmhiblZ3S0NncElEMCtJSE5sYkdZdVpHVnpkSEp2ZVNncEtYMWNiaUFnSUNBZ0lDQWdQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlQ0JvWVd4cFoyNDllMGQwYXk1QmJHbG5iaTVHU1V4TWZTQjJZV3hwWjI0OWUwZDBheTVCYkdsbmJpNUZUa1I5SUdobGFXZG9kRkpsY1hWbGMzUTllMDFoZEdndVpteHZiM0lvWjJScmJXOXVhWFJ2Y2k1blpYUmZaMlZ2YldWMGNua29LUzVvWldsbmFIUWdLaUF1TWpVcGZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjdZMkYyWVM1RFlYWmhLRnRjSWtOaGRtRlBkbVZ5YkdGNVhDSmRLWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnSUNBOEwzZHBibVJ2ZHo1Y2JpQWdJQ0FwTzF4dWZWeHVJaXdnSW1sdGNHOXlkQ0I3SUVGemRHRnNMQ0JIWkdzc0lFZDBheUI5SUdaeWIyMGdYQ0poWjNNdlozUnJORndpWEc1cGJYQnZjblFnYUhsd2NteGhibVJUWlhKMmFXTmxJR1p5YjIwZ1hDSXVMaTl6WlhKMmFXTmxjeTlJZVhCeWJHRnVaRndpTzF4dWFXMXdiM0owSUdSaGRHVlVhVzFsSUdaeWIyMGdYQ0l1TGk5dGIyUjFiR1Z6TDBSaGRHVlVhVzFsWENJN1hHNXBiWEJ2Y25RZ1lYQndJR1p5YjIwZ1hDSmhaM012WjNSck5DOWhjSEJjSWp0Y2JtbHRjRzl5ZENCN0lHOXVRMnhsWVc1MWNDQjlJR1p5YjIwZ1hDSmhaM05jSWp0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1JGUkRLSHNnWjJScmJXOXVhWFJ2Y2lCOU9pQjdJR2RrYTIxdmJtbDBiM0k2SUVka2F5NU5iMjVwZEc5eUlIMHBJSHRjYmlBZ0lDQmpiMjV6ZENCN0lGUlBVQ3dnVEVWR1ZDd2dVa2xIU0ZRc0lFSlBWRlJQVFNCOUlEMGdRWE4wWVd3dVYybHVaRzkzUVc1amFHOXlPMXh1SUNBZ0lHTnZibk4wSUdoNWNISk5iMjVwZEc5eUlEMGdhSGx3Y214aGJtUlRaWEoyYVdObExtZGxkRWg1Y0hKc1lXNWtUVzl1YVhSdmNpaG5aR3R0YjI1cGRHOXlLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQW9YRzRnSUNBZ0lDQWdJRHgzYVc1a2IzZGNiaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVnpjR0ZqWlQwblJGUkRKMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JHRjVaWEk5ZTBGemRHRnNMa3hoZVdWeUxrSlBWRlJQVFgxY2JpQWdJQ0FnSUNBZ0lDQWdJR2RrYTIxdmJtbDBiM0k5ZTJka2EyMXZibWwwYjNKOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1Ob2IzSTllMVJQVUNCOElGSkpSMGhVZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkbWx6YVdKc1pUMTdaR0YwWlZScGJXVXVjMmh2ZFd4a1JGUkRRWEJ3WldGeUtHaDVjSEpOYjI1cGRHOXlLWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHRndjR3hwWTJGMGFXOXVQWHRoY0hCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FrUFhzb2MyVnNaaWtnUFQ0Z2IyNURiR1ZoYm5Wd0tDZ3BJRDArSUhObGJHWXVaR1Z6ZEhKdmVTZ3BLWDFjYmlBZ0lDQWdJQ0FnUGx4dUlDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNCb1lXeHBaMjQ5ZTBkMGF5NUJiR2xuYmk1RlRrUjlJSFpoYkdsbmJqMTdSM1JyTGtGc2FXZHVMbE5VUVZKVWZTQmphR2xzWkhKbGJqMTdaR0YwWlZScGJXVXVSR0YwWlZScGJXVkRZV3hsYm1SaGNuMGdMejVjYmlBZ0lDQWdJQ0FnUEM5M2FXNWtiM2MrWEc0Z0lDQWdLVHRjYm4xY2JpSXNJQ0pwYlhCdmNuUWdleUJ2YmtOc1pXRnVkWEFnZlNCbWNtOXRJRndpWVdkelhDSTdYRzVwYlhCdmNuUWdleUJCYzNSaGJDd2dSMlJyTENCSGRHc2dmU0JtY205dElGd2lZV2R6TDJkMGF6UmNJbHh1YVcxd2IzSjBJR0Z3Y0NCbWNtOXRJRndpWVdkekwyZDBhelF2WVhCd1hDSTdYRzVjYm1aMWJtTjBhVzl1SUVWdWRISjVLSHNnWW1sdVpDd2dZV04wYVc5dUlIMDZJSHNnWW1sdVpEb2djM1J5YVc1bkxDQmhZM1JwYjI0NklITjBjbWx1WnlCOUtTQjdYRzRnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUNBZ1BHSnZlQ0JqYzNORGJHRnpjMlZ6UFh0YkowVnVkSEo1SjExOUlHOTJaWEptYkc5M1BYdEhkR3N1VDNabGNtWnNiM2N1U0VsRVJFVk9mU0JvYjIxdloyVnVaVzkxY3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJDQmpjM05EYkdGemMyVnpQWHRiWENKQ2FXNWtYQ0pkZlNCc1lXSmxiRDE3WW1sdVpIMGdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkNCamMzTkRiR0Z6YzJWelBYdGJYQ0pCWTNScGIyNWNJbDE5SUd4aFltVnNQWHRoWTNScGIyNTlJQzgrWEc0Z0lDQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lDazdYRzU5WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUVOb1pXRjBjMmhsWlhRb2V5Qm5aR3R0YjI1cGRHOXlJSDA2SUhzZ1oyUnJiVzl1YVhSdmNqb2dSMlJyTGsxdmJtbDBiM0lnZlNrZ2UxeHVYRzRnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUNBZ1BIZHBibVJ2ZDF4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlQwblEyaGxZWFJ6YUdWbGRDZGNiaUFnSUNBZ0lDQWdJQ0FnSUd4aGVXVnlQWHRCYzNSaGJDNU1ZWGxsY2k1UFZrVlNURUZaZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdaMlJyYlc5dWFYUnZjajE3WjJScmJXOXVhWFJ2Y24xY2JpQWdJQ0FnSUNBZ0lDQWdJR0Z3Y0d4cFkyRjBhVzl1UFh0aGNIQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBa1BYc29jMlZzWmlrZ1BUNGdiMjVEYkdWaGJuVndLQ2dwSUQwK0lITmxiR1l1WkdWemRISnZlU2dwS1gxY2JpQWdJQ0FnSUNBZ1BseHVJQ0FnSUNBZ0lDQWdJQ0FnUEdKdmVDQmpjM05EYkdGemMyVnpQWHRiSjBOb1pXRjBjMmhsWlhRblhYMGdiM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVXUlZKVVNVTkJUSDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNJR056YzBOc1lYTnpaWE05ZTFzblZHbDBiR1VuWFgwZ2JHRmlaV3c5ZXlkRGFHVmhkSE5vWldWMEozMGdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WW05NElHTnpjME5zWVhOelpYTTllMXNuU0dGc1ppZGRmU0JvYjIxdloyVnVaVzkxY3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNCamMzTkRiR0Z6YzJWelBYdGJKMU5sWTNScGIyNG5YWDBnYjNKcFpXNTBZWFJwYjI0OWUwZDBheTVQY21sbGJuUmhkR2x2Ymk1V1JWSlVTVU5CVEgwK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGJHRmlaV3dnWTNOelEyeGhjM05sY3oxN1cxd2lVM1ZpZEdsMGJHVmNJbDE5SUd4aFltVnNQWHRjSWtkbGMzUmNkVEF3UlROdklHUmxJRU5zYVdWdWRHVnpYQ0o5SUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFltOTRJRzl5YVdWdWRHRjBhVzl1UFh0SGRHc3VUM0pwWlc1MFlYUnBiMjR1VmtWU1ZFbERRVXg5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJRWENJZ1lXTjBhVzl1UFZ3aVJtbDRZWElnWTJ4cFpXNTBaVndpSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQRVZ1ZEhKNUlHSnBibVE5WENKVFZWQkZVaUFySUZGY0lpQmhZM1JwYjI0OVhDSkdaV05vWVhJZ2NISnZaM0poYldGY0lpQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4RmJuUnllU0JpYVc1a1BWd2lVMVZRUlZJZ0t5QldYQ0lnWVdOMGFXOXVQVndpUm14MWRIVmhjaUJoSUhSbGJHRmNJaUF2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJHWENJZ1lXTjBhVzl1UFZ3aVJtOXlYSFV3TUVVM1lYSWdkR1ZzWVNCamFHVnBZVndpSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQRVZ1ZEhKNUlHSnBibVE5WENKVFZWQkZVaUFySUVwY0lpQmhZM1JwYjI0OVhDSkVhWFpwWkdseUlHVnRJRVIzYVc1a2JHVmNJaUF2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJjZFVZd05qSmNJaUJoWTNScGIyNDlYQ0pOYjNabGNpQm1iMk52SUhCaGNtRWdhbUZ1Wld4aElHRmphVzFoWENJZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4Ulc1MGNua2dZbWx1WkQxY0lsTlZVRVZTSUNzZ1hIVkdNRFl6WENJZ1lXTjBhVzl1UFZ3aVRXOTJaWElnWm05amJ5QndZWEpoSUdwaGJtVnNZU0JoWW1GcGVHOWNJaUF2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJjZFVZd05qQmNJaUJoWTNScGIyNDlYQ0pOYjNabGNpQm1iMk52SUhCaGNtRWdhbUZ1Wld4aElGeDFNREJGTUNCbGMzRjFaWEprWVZ3aUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEVWdWRISjVJR0pwYm1ROVhDSlRWVkJGVWlBcklGeDFSakEyTVZ3aUlHRmpkR2x2YmoxY0lrMXZkbVZ5SUdadlkyOGdjR0Z5WVNCcVlXNWxiR0VnWEhVd01FVXdJR1JwY21WcGRHRmNJaUF2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFltOTRJR056YzBOc1lYTnpaWE05ZTFzblUyVmpkR2x2YmlkZGZTQnZjbWxsYm5SaGRHbHZiajE3UjNSckxrOXlhV1Z1ZEdGMGFXOXVMbFpGVWxSSlEwRk1mVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJDQmpjM05EYkdGemMyVnpQWHRiWENKVGRXSjBhWFJzWlZ3aVhYMGdiR0ZpWld3OWUxd2lSMlZ6ZEZ4MU1EQkZNMjhnWkdVZ1YyOXlhM053WVdObGMxd2lmU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEdKdmVDQnZjbWxsYm5SaGRHbHZiajE3UjNSckxrOXlhV1Z1ZEdGMGFXOXVMbFpGVWxSSlEwRk1mVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFJXNTBjbmtnWW1sdVpEMWNJa05VVWt3Z0t5QlRWVkJGVWlBcklGeDFSakEyTUZ3aUlHRmpkR2x2YmoxY0lrbHlJSEJoY21FZ1YyOXlhM053WVdObElGeDFNREJGTUNCbGMzRjFaWEprWVZ3aUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEVWdWRISjVJR0pwYm1ROVhDSkRWRkpNSUNzZ1UxVlFSVklnS3lCY2RVWXdOakZjSWlCaFkzUnBiMjQ5WENKSmNpQndZWEpoSUZkdmNtdHpjR0ZqWlNCY2RUQXdSVEFnWkdseVpXbDBZVndpSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQRVZ1ZEhKNUlHSnBibVE5WENKRFZGSk1JQ3NnVTBoSlJsUWdLeUJUVlZCRlVpQXJJRngxUmpBMk1Gd2lJR0ZqZEdsdmJqMWNJazF2ZG1WeUlIQmhjbUVnVjI5eWEzTndZV05sSUZ4MU1EQkZNQ0JsYzNGMVpYSmtZVndpSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQRVZ1ZEhKNUlHSnBibVE5WENKRFZGSk1JQ3NnVTBoSlJsUWdLeUJUVlZCRlVpQXJJRngxUmpBMk1Wd2lJR0ZqZEdsdmJqMWNJazF2ZG1WeUlIQmhjbUVnVjI5eWEzTndZV05sSUZ4MU1EQkZNQ0JrYVhKbGFYUmhYQ0lnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThSVzUwY25rZ1ltbHVaRDFjSWxOVlVFVlNJQ3NnVTF3aUlHRmpkR2x2YmoxY0lrbHlJSEJoY21FZ1YyOXlhM053WVdObElHVnpjR1ZqYVdGc1hDSWdMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFJXNTBjbmtnWW1sdVpEMWNJbE5WVUVWU0lDc2dVMGhKUmxRZ0t5QlRYQ0lnWVdOMGFXOXVQVndpVFc5MlpYSWdjR0Z5WVNCM2IzSnJjM0JoWTJVZ1pYTndaV05wWVd4Y0lpQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHd2WW05NFBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4aWIzZ2dZM056UTJ4aGMzTmxjejE3V3lkSVlXeG1KMTE5SUdodmJXOW5aVzVsYjNWelBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WW05NElHTnpjME5zWVhOelpYTTllMXNuVTJWamRHbHZiaWRkZlNCdmNtbGxiblJoZEdsdmJqMTdSM1JyTGs5eWFXVnVkR0YwYVc5dUxsWkZVbFJKUTBGTWZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkNCamMzTkRiR0Z6YzJWelBYdGJYQ0pUZFdKMGFYUnNaVndpWFgwZ2JHRmlaV3c5ZTF3aVVISnZaM0poYldGeklIQmhaSEpjZFRBd1JUTnZYQ0o5SUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFltOTRJRzl5YVdWdWRHRjBhVzl1UFh0SGRHc3VUM0pwWlc1MFlYUnBiMjR1VmtWU1ZFbERRVXg5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJGYm5SbGNsd2lJR0ZqZEdsdmJqMWNJbFJsY20xcGJtRnNYQ0lnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThSVzUwY25rZ1ltbHVaRDFjSWxOVlVFVlNJQ3NnVWx3aUlHRmpkR2x2YmoxY0lreGhibHgxTURCRk4yRmtiM0lnWkdVZ1lYQnNhV05oZEdsMmIzTmNJaUF2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJGWENJZ1lXTjBhVzl1UFZ3aVFXSnlhWElnUjJWeVpXNWphV0ZrYjNJZ1pHVWdRWEp4ZFdsMmIzTmNJaUF2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJFWENJZ1lXTjBhVzl1UFZ3aVFXSnlhWEl2Um1WamFHRnlJRVJ2WTJ0Y0lpQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4RmJuUnllU0JpYVc1a1BWd2lVMVZRUlZJZ0t5QkRYQ0lnWVdOMGFXOXVQVndpUVdKeWFYSXZSbVZqYUdGeUlFTm9aV0YwYzJobFpYUmNJaUF2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEZiblJ5ZVNCaWFXNWtQVndpVTFWUVJWSWdLeUJGVTBOY0lpQmhZM1JwYjI0OVhDSkJZbkpwY2k5bVpXTm9ZWElnVjJ4dloyOTFkRndpSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BDOWliM2crWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnWTNOelEyeGhjM05sY3oxN1d5ZFRaV04wYVc5dUoxMTlJRzl5YVdWdWRHRjBhVzl1UFh0SGRHc3VUM0pwWlc1MFlYUnBiMjR1VmtWU1ZFbERRVXg5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNJR056YzBOc1lYTnpaWE05ZTF0Y0lsTjFZblJwZEd4bFhDSmRmU0JzWVdKbGJEMTdYQ0pQZFhSeWIzTmNJbjBnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4aWIzZ2diM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVXUlZKVVNVTkJUSDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BFVnVkSEo1SUdKcGJtUTlYQ0pRVWtsT1ZGd2lJR0ZqZEdsdmJqMWNJa05oY0hSMWNtRnlJSFJsYkdGY0lpQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4RmJuUnllU0JpYVc1a1BWd2lVMVZRUlZJZ0t5QlFVa2xPVkZ3aUlHRmpkR2x2YmoxY0lrTmhjSFIxY21GeUlISmxaMmxjZFRBd1JUTnZYQ0lnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThSVzUwY25rZ1ltbHVaRDFjSWxOVlVFVlNJQ3NnVFZ3aUlHRmpkR2x2YmoxY0lrWmxZMmhoY2lCelpYTnpYSFV3TUVVemIxd2lJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BFVnVkSEo1SUdKcGJtUTlYQ0pUVlZCRlVpQXJJRXhjSWlCaFkzUnBiMjQ5WENKQ2JHOXhkV1ZoY2lCaElIUmxiR0ZjSWlBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BDOWliM2crWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BDOWliM2crWEc0Z0lDQWdJQ0FnSUR3dmQybHVaRzkzUGx4dUlDQWdJQ2s3WEc1OVhHNGlMQ0FpYVcxd2IzSjBJSE4wZVd4bElHWnliMjBnWENJdUwzTjBlV3hsY3k5cGJtUmxlQzV6WTNOelhDSTdYRzVwYlhCdmNuUWdRbUZ5SUdaeWIyMGdYQ0l1TDNkcFpHZGxkQzlDWVhKY0lqdGNibWx0Y0c5eWRDQmhjSEFnWm5KdmJTQmNJbUZuY3k5bmRHczBMMkZ3Y0Z3aU8xeHVhVzF3YjNKMElIc2dZM0psWVhSbFFtbHVaR2x1Wnl3Z1JtOXlMQ0JVYUdseklIMGdabkp2YlNCY0ltRm5jMXdpTzF4dWFXMXdiM0owSUVOaGRtRlBkbVZ5YkdGNUlHWnliMjBnWENJdUwzZHBaR2RsZEM5RFlYWmhUM1psY214aGVWd2lPMXh1YVcxd2IzSjBJRVJVUXlCbWNtOXRJRndpTGk5M2FXUm5aWFF2UkZSRFhDSTdYRzVwYlhCdmNuUWdleUJIZEdzZ2ZTQm1jbTl0SUZ3aVlXZHpMMmQwYXpSY0lqdGNibWx0Y0c5eWRDQkhUMkpxWldOMElHWnliMjBnWENKbmFUb3ZMMGRQWW1wbFkzUS9kbVZ5YzJsdmJqMHlMakJjSWp0Y2JtbHRjRzl5ZENCRGFHVmhkSE5vWldWMElHWnliMjBnWENJdUwzZHBaR2RsZEM5RGFHVmhkSE5vWldWMFhDSTdYRzVjYm1aMWJtTjBhVzl1SUcxaGFXNG9LU0I3WEc0Z0lDQWdZMjl1YzNRZ2JXOXVhWFJ2Y25NZ1BTQmpjbVZoZEdWQ2FXNWthVzVuS0dGd2NDd2dYQ0p0YjI1cGRHOXljMXdpS1R0Y2JpQWdJQ0J5WlhSMWNtNGdLRnh1SUNBZ0lDQWdJQ0E4Um05eUlHVmhZMmc5ZTIxdmJtbDBiM0p6ZlQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJSHR0YjI1cGRHOXlJRDArSUNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFZHaHBjeUIwYUdselBYdGhjSEI5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThRbUZ5SUdka2EyMXZibWwwYjNJOWUyMXZibWwwYjNKOUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4RFlYWmhUM1psY214aGVTQm5aR3R0YjI1cGRHOXlQWHR0YjI1cGRHOXlmU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThSRlJESUdka2EyMXZibWwwYjNJOWUyMXZibWwwYjNKOUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4RGFHVmhkSE5vWldWMElHZGthMjF2Ym1sMGIzSTllMjF2Ym1sMGIzSjlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5VWFHbHpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0tYMWNiaUFnSUNBZ0lDQWdQQzlHYjNJK1hHNGdJQ0FnS1R0Y2JuMWNibHh1WVhCd0xuTjBZWEowS0hzZ1kzTnpPaUJ6ZEhsc1pTd2diV0ZwYmpvZ2JXRnBiaUI5S1R0Y2JpSmRMQW9nSUNKdFlYQndhVzVuY3lJNklDSTdRVUZCUVRzN08wRkRRVUVzVDBGQlR5eFhRVUZYTzBGQlEyeENMRTlCUVU4c1UwRkJVenRCUVVOb1FpeFBRVUZQTEZOQlFWTTdPenRCUTBab1FpeFBRVUZQTEd0Q1FVRnJRanRCUVVONlFpeFBRVUZQTEZWQlFWVTdPenRCUTJGV0xGTkJRVk1zYTBKQlFXdENMRk5CUVhsQ08wRkJRM1pFTEUxQlFVY3NWMEZCVnl4TlFVRk5PMEZCUTJoQ0xGZEJRVThzUjBGQlJ5eExRVUZMTEUxQlFVMHNWVUZCVlN4SlFVRkpMRU5CUVVNc1NVRkJTU3hMUVVGTExFMUJRVThzVlVGQlZTeFBRVUZSTEVWQlFVVXNRMEZCUXp0QlFVRkJMRVZCUXpkRk8wRkJSVUVzVTBGQlR5eEhRVUZITEV0QlFVc3NUVUZCVFN4VlFVRlZMRVZCUVVVc1EwRkJRenRCUVVOMFF6czdPMEZEY0VKQkxFOUJRVTlCTEdOQlFXRTdPenRCUTBGd1FpeFBRVUZQTEdGQlFXRTdRVUZEY0VJc1QwRkJUeXhUUVVGVE8wRkJRMmhDTEU5QlFVOHNWVUZCVlRzN08wRkRRVllzVTBGQlV5eFRRVUZUTEV0QlFXRTdRVUZEYkVNc1UwRkJUeXhKUVVOR0xGRkJRVkVzYlVKQlFXMUNMRTlCUVU4c1JVRkRiRU1zVjBGQlZ5eExRVUZMTEVkQlFVY3NSVUZEYmtJc1dVRkJXVHRCUVVOeVFqdEJRVVZQTEZOQlFWTXNVMEZCVXl4TFFVRmhPMEZCUTJ4RExGTkJRVThzU1VGRFJpeFJRVUZSTEcxQ1FVRnRRaXhQUVVGUExFVkJRMnhETEZkQlFWY3NTMEZCU3l4SFFVRkhMRVZCUTI1Q0xGbEJRVms3UVVGRGNrSTdRVUYxUkU4c1UwRkJVeXhKUVVGSkxFdEJRWEZDTEUxQlFXTXNUMEZCV1R0QlFVTXZSQ3hSUVVGTkxFMUJRVTBzVTBGQlV5eEpRVUZKTzBGQlEzcENMRkZCUVUwc1UwRkJVeXhQUVVGUExFZEJRVWM3UVVGRGVrSXNVVUZCVFN4VFFVRlRMRTlCUVU4c1IwRkJSenRCUVVWNlFpeE5RVUZKTzBGQlJVb3NUVUZCU1N4VlFVRlZMRTlCUVU4c1QwRkJUeXhKUVVGSkxFMUJRVTBzVFVGQlRTeFpRVUZaTzBGQlEzQkVMR05CUVZjc1NVRkJTU3hOUVVGTkxFVkJRVzlDTzBGQlFVRXNSVUZETjBNc1QwRkJUenRCUVVOSUxHTkJRVlVzU1VGQlNTeEpRVUYzUWp0QlFVRkJMRVZCUXpGRE8wRkJSVUVzVFVGQlNTeFpRVUZaTEU5QlFVODdRVUZEYmtJc1VVRkJTU3hWUVVGVkxFOUJRVThzVDBGQlR5eEpRVUZKTEUxQlFVMHNUVUZCVFN4WlFVRlpPMEZCUTNCRU8wRkJRVU1zVFVGQlF5eEpRVUZKTEUxQlFVMHNSVUZCZFVJc1MwRkJTenRCUVVGQkxFbEJRelZETEU5QlFVODdRVUZEU0N4aFFVRlBMRTlCUVU4c1MwRkJTeXhGUVVGRkxFTkJRVU1zU1VGQlNTeEhRVUZITEUxQlFVMHNRMEZCUXp0QlFVRkJMRWxCUTNoRE8wRkJRVUVzUlVGRFNqdEJRVU5LT3pzN1FVUTFSVThzU1VGQlRTeFhRVUZPTEUxQlFVMHNhMEpCUVRoQ0xGTkJRVk03UVVGQlFTeEZRVU5vUkR0QlFVRkJMRk5CUVU4c1UwRkJVeXhSUVVGUk8wRkJRVUU3UVVGQlFTeEZRVVY0UWp0QlFVRkJMRVZCUTBFN1FVRkJRU3hGUVVWQkxGbEJRVmtzUzBGQll5eFhRVUVyUWp0QlFVTnlSQ3hWUVVGTkxHdEZRVUZyUlR0QlFVTjRSU3hUUVVGTExHRkJRV0VzWTBGQll5eE5RVUZOTEUxQlFVMDdRVUZETlVNc1UwRkJTeXhQUVVGUE8wRkJRVUVzUlVGRGFFSTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGUFFTeFZRVUZWTEZWQlFUaERPMEZCUlhCRUxGZEJRVThzUzBGQlN5eFhRVUZYTEZGQlFWRTdRVUZCUVN4RlFVTnVRenRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlMwRXNUVUZCVXp0QlFVTk1MRmRCUVU4c1MwRkJTeXhMUVVGTE8wRkJRVUVzUlVGRGNrSTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQkxFVkJUVUVzUjBGQlZTeFhRVUY1UXp0QlFVTXZReXhYUVVGUExFbEJRVWtzVlVGQlV5eE5RVUZOTEZWQlFWVXNTMEZCU3l4TFFVRkxMRU5CUVVNc1IwRkJSeXhMUVVGTExGVkJRVlU3UVVGQlFTeEZRVU55UlR0QlFVRkJMRVZCUlZVc1RVRkJZU3hYUVVGNVF6dEJRVU0xUkN4WFFVRlBMRXRCUVVzc1IwRkJSeXhUUVVGVE8wRkJRVUVzUlVGRE5VSTdRVUZCUVN4RlFVVkJMRmRCUVcxQ08wRkJRMllzVjBGQlR5eFpRVUZaTEV0QlFVc3NTVUZCU1N4RFFVRkRPMEZCUVVFc1JVRkRha003UVVGQlFTeEZRVVZCTEVOQlFVTXNUMEZCVHl4WFFVRlhMRWxCUVVrN1FVRkRia0lzV1VGQlVTeExRVUZMTEhGRVFVRnhSRHRCUVVOc1JTeFhRVUZQTEV0QlFVc3NVMEZCVXp0QlFVRkJMRVZCUTNwQ08wRkJRMG83UVVGMVFrOHNVMEZCVXl4WlFVRmxMRTFCUVcxQ08wRkJRemxETEUxQlFVa3NaVUZCWlR0QlFVTnVRaXhSUVVGTkxHTkJRV01zYjBKQlFVa3NTVUZCZFVJN1FVRkZMME1zVVVGQlRTeFpRVUVyUWl4RFFVRkRMR0ZCUVdFN1FVRkRMME1zWjBKQlFWa3NTVUZCU1N4UlFVRlJPMEZCUTNoQ0xGZEJRVThzVFVGQlRTeFpRVUZaTEU5QlFVOHNVVUZCVVR0QlFVRkJMRVZCUXpWRE8wRkJSVUVzVVVGQlRVTXNUMEZCVFN4RFFVRkRMR0ZCUVhOQ08wRkJReTlDTEZWQlFVMHNVVUZCVnl4UFFVRlBMR0ZCUVdFc1lVRkJZU3hUUVVGVExGbEJRVmtzU1VGQlNUdEJRVU16UlN4UlFVRkpMR2xDUVVGcFFpeFBRVUZQTzBGQlEzaENMSEZDUVVGbE8wRkJSV1lzV1VGQlRTeExRVUZMTEZkQlFWY3NSVUZCUlN4UlFVRlJMRU5CUVVNc1QwRkJUeXhIUVVGSExFTkJRVU03UVVGQlFTeEpRVU5vUkR0QlFVRkJMRVZCUTBvN1FVRkZRU3hUUVVGUExFTkJRVU1zU1VGQlNTeFRRVUZUTEUxQlFVMHNZMEZCWXl4VFFVRlRMRWRCUVVkQkxFbEJRV2RDTzBGQlEzcEZPMEZCWjBKUExGTkJRVk1zWlVGSlpDeE5RVUZaTEZkQlFTdERPMEZCUTNwRUxFMUJRVWs3UVVGRFNpeFJRVUZOTEdOQlFXTXNiMEpCUVVrc1NVRkJkVUk3UVVGREwwTXNVVUZCVFN4UlFVRlJMRWxCUVVrc1RVRkJaU3hMUVVGTExFMUJRVTA3UVVGRk5VTXNVVUZCVFN4WlFVRXJRaXhEUVVGRExHRkJRV0U3UVVGREwwTXNVVUZCU1N4WlFVRlpMRk5CUVZNc1IwRkJSenRCUVVONFFpeG5Ra0ZCVlN4TFFVRkxPMEZCUVVFc1VVRkJTU3hEUVVGRExFdEJRVXNzVFVGRGNrSXNTVUZCU1N4VlFVRlZMRTFCUVUwN1FVRkRhRUlzWjBKQlFVMHNVVUZCVVN4SlFVRkpMRWxCUVVrN1FVRkRkRUlzWTBGQlNTeE5RVUZOTEVOQlFVTXNUVUZCVFN4UFFVRlBPMEZCUTNCQ0xHdENRVUZOTEVOQlFVTXNTVUZCU1N4SlFVRkpMRWxCUVVrN1FVRkRia0lzYTBKQlFVMHNTMEZCU3l4WFFVRlhMRVZCUVVVc1VVRkJVU3hEUVVGRExFOUJRVThzUjBGQlJ5eERRVUZETzBGQlFVRXNWVUZEYUVRN1FVRkJRU3hSUVVOS0xFTkJRVU03UVVGQlFTeE5RVU5NTzBGQlFVRXNTVUZEU2p0QlFVVkJMR2RDUVVGWkxFbEJRVWtzVVVGQlVUdEJRVVY0UWl4WFFVRlBMRTFCUVUwN1FVRkRWQ3hyUWtGQldTeFBRVUZQTEZGQlFWRTdRVUZETTBJc1ZVRkJTU3haUVVGWkxGTkJRVk1zUjBGQlJ6dEJRVU40UWl4blFrRkJVU3hKUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEVOQlFVTTdRVUZEZUVJc1owSkJRVkVzVTBGQlV6dEJRVU5xUWl4alFVRk5MRk5CUVZNN1FVRkJRU3hOUVVOdVFqdEJRVUZCTEVsQlEwbzdRVUZCUVN4RlFVTktPMEZCUlVFc1VVRkJUU3hOUVVGTkxFMUJRVk03UVVGRGFrSXNWVUZCVFN4UFFVRlBMRXRCUVVzc1NVRkJTU3hEUVVGRExFdEJRVXNzVFVGQlRUdEJRVU01UWl4VlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFZEJRVWM3UVVGRFdDeGpRVUZOTEVOQlFVTXNTVUZCU1N4SlFVRkpMRWxCUVVrN1FVRkJRU3hOUVVOMlFqdEJRVVZCTEdGQlFVOHNUVUZCVFN4RFFVRkRPMEZCUVVFc1NVRkRiRUlzUTBGQlF6dEJRVVZFTEZkQlFVOHNXVUZCV1N4VlFVRlZMRWRCUVVrc1NVRkJZU3hKUVVGTE8wRkJRVUVzUlVGRGRrUTdRVUZGUVN4VFFVRlBMRWxCUVVrc1UwRkJVeXhMUVVGTExGTkJRVk03UVVGRGRFTTdRVUZyUTA4c1UwRkJVeXhqUVVGcFFpeFJRVUYxUXl4TFFVRXdRanRCUVVNNVJpeFJRVUZOTEU5QlFVOHNVMEZCVXl4SFFVRkhPMEZCUlhwQ0xGRkJRVTBzV1VGQkswSXNRMEZCUXl4aFFVRmhPMEZCUXk5RExGVkJRVTBzVFVGQlRTeHJRa0ZCYTBJc1NVRkJTU3hYUVVGWExGbEJRVms3UVVGRGVrUXNWVUZCVFN4TFFVRkxMRTlCUVU4c1VVRkJVU3hIUVVGSExFZEJRVWNzUzBGQlN5eEpRVUZKTEVsQlFVa3NUVUZCVFN4VFFVRlRMRU5CUVVNN1FVRkROMFFzVjBGQlR5eE5RVUZOTEU5QlFVOHNWMEZCVnl4RlFVRkZPMEZCUVVFc1JVRkRja003UVVGRlFTeFJRVUZOTEUxQlFVMHNUVUZCVXp0QlFVTnFRaXhSUVVGSkxHdENRVUZyUWl4SlFVRkpMRlZCUVZVN1FVRkRhRU1zWVVGQlR5eFBRVUZQTEZWQlFWVXNSMEZCUnl4RlFVRkZMR2RDUVVGblFqdEJRVUZCTEVsQlEycEVMRTlCUVU4N1FVRkRTQ3haUVVGTkxGTkJRVk1zVDBGQlR5eExRVUZMTEZkQlFWY3NTMEZCU3l4SFFVRkhMRU5CUVVNN1FVRkZMME1zVlVGQlNTeFZRVUZWTEZWQlFWVXNUMEZCVHl4UFFVRlBMRTFCUVUwc1RVRkJUU3haUVVGWk8wRkJRekZFTEdWQlFWRXNUMEZCVHl4TlFVRk5MRVZCUVc5Q08wRkJRVUVzVFVGRE4wTTdRVUZGUVN4VlFVRkpMRkZCUVZFc1QwRkJVU3hSUVVGUExFOUJRVThzU1VGQlNUdEJRVU4wUXl4VlFVRkpMRTlCUVU4c1QwRkJVU3hSUVVGUExFOUJRVThzUjBGQk1FSTdRVUZGTTBRc1dVRkJUU3hOUVVGTkxIVkNRVUYxUWl4SFFVRkhMRVZCUVVVN1FVRkJRU3hKUVVNMVF6dEJRVUZCTEVWQlEwbzdRVUZGUVN4VFFVRlBMRWxCUVVrc1UwRkJVeXhMUVVGTExGTkJRVk03UVVGRGRFTTdPenRCUlRGT1R5eFRRVUZUTEZOQlFWTXNUVUZCZFVJN1FVRkROVU1zVTBGQlR5eFBRVUZQTEU5QlFVOHNTMEZCU3l4SlFVRkpPMEZCUTJ4RE8wRkJWMEVzVTBGQlV5eGpRVUZqTzBGQlEyNUNMRkZCUVUwc1RVRkJUU3hqUVVGak8wRkJRemxDTzBGQlJVOHNTVUZCVFN4TlFVRmpPMEZCUVVFc1JVRkRka0lzYlVKQlFXMUNMRU5CUVVNN1FVRkJRU3hGUVVOd1FpeFZRVUZWTzBGQlFVRXNSVUZEVml4UlFVRlJPMEZCUVVFc1JVRkRVaXhWUVVGVk8wRkJRVUVzUlVGRFZpeFhRVUZYTEUxQlFVMDdRVUZCUVN4RlFVTnFRaXhuUWtGQlowSXNUVUZCVFR0QlFVTXhRanM3TzBGRGJFTlBMRWxCUVUwc1VVRkJUaXhOUVVGTkxFOUJRVTA3UVVGQlFTeEZRVlZtTEZsQlFWa3NVVUZCZFVJN1FVRk9ia01zYjBKQlFWY3NiMEpCUVVrc1NVRkJjMEk3UVVGRmNrTXNVMEZCVVN4WFFVRlhMRzlDUVVGSkxFbEJRV2RDTzBGQlEzWkRMRk5CUVZFc1UwRkJVeXh2UWtGQlNTeEpRVUZuUWp0QlFVTnlReXhUUVVGUkxGVkJRVlU3UVVGSFpDeFRRVUZMTEZOQlFWTTdRVUZCUVN4RlFVTnNRanRCUVVGQkxFVkJSVUVzVlVGQlZTeFZRVUZ6UWp0QlFVTTFRaXhUUVVGTExGVkJRVlVzU1VGQlNTeFJRVUZSTzBGQlFVRXNSVUZETDBJN1FVRkJRU3hGUVVWQkxGRkJRVkVzVlVGQmMwSTdRVUZETVVJc1VVRkJTU3hMUVVGTExGVkJRVlVzUTBGQlF5eExRVUZMTEU5QlFVOHNVMEZCVXp0QlFVTnlReXhYUVVGTExFOUJRVThzVVVGQlVTeFJRVUZSTzBGQlFVRXNTVUZEYUVNc1QwRkJUenRCUVVOSUxGZEJRVXNzVDBGQlR5eEpRVUZKTEZGQlFWRTdRVUZCUVN4SlFVTTFRanRCUVVGQkxFVkJRMG83UVVGQlFTeEZRVVZCTEVsQlFVOHNTVUZCWVR0QlFVTm9RaXhWUVVGTkxFOUJRVThzVDBGQlRUdEJRVU51UWl4WFFVRk5MRlZCUVZVN1FVRkZhRUlzVVVGQlNUdEJRVU5CTEdGQlFVOHNSMEZCUnp0QlFVRkJMRWxCUTJRc1ZVRkJSVHRCUVVORkxGZEJRVXNzVDBGQlR5eFJRVUZSTEVOQlFVTXNUMEZCVHl4SFFVRkhMRU5CUVVNN1FVRkRhRU1zVjBGQlN5eFBRVUZQTEUxQlFVMDdRVUZEYkVJc1YwRkJTeXhWUVVGVk8wRkJRMllzWVVGQlRTeFZRVUZWTzBGQlFVRXNTVUZEY0VJN1FVRkJRU3hGUVVOS08wRkJRVUVzUlVGRlFTeFZRVUZWTzBGQlEwNHNVMEZCU3l4VFFVRlRMRkZCUVZFc1EwRkJReXhQUVVGUExFZEJRVWNzUTBGQlF6dEJRVU5zUXl4VFFVRkxMRk5CUVZNc1RVRkJUVHRCUVVOd1FpeFRRVUZMTEZOQlFWTXNUVUZCVFR0QlFVTndRaXhYUVVGUExFdEJRVXM3UVVGQlFTeEZRVU5vUWp0QlFVTktPMEZCTmtWUExGTkJRVk1zVjBGQmEwSTdRVUZET1VJc1VVRkJUU3hSUVVGUkxFMUJRVTA3UVVGRGNFSXNUVUZCU1N4RFFVRkRMRTlCUVU4N1FVRkRVaXhWUVVGTkxFMUJRVTBzTWtOQlFUSkRPMEZCUVVFc1JVRkRNMFE3UVVGRlFTeFRRVUZQTzBGQlExZzdRVUZMVHl4VFFVRlRMRlZCUVZVc1UwRkJjVUk3UVVGRE0wTXNUVUZCU1N4RFFVRkRMRTFCUVUwc1UwRkJVenRCUVVOb1FpeFpRVUZSTEUxQlFVMHNUVUZCVFN4elJFRkJjMFFzUTBGQlF6dEJRVUZCTEVWQlF5OUZPMEZCUlVFc1VVRkJUU3hUUVVGVExGVkJRVlVzVDBGQlR6dEJRVU53UXp0QlFYZERUeXhUUVVGVExGZEJRV01zU1VGQlowTTdRVUZETVVRc1VVRkJUU3hSUVVGUkxFbEJRVWtzVFVGQlRTeEpRVUZKTzBGQlF6VkNMRk5CUVU4c1RVRkJUU3hKUVVGSkxFMUJRVTBzUjBGQlJ5eE5RVUZOTEUxQlFVMHNVVUZCVVN4RFFVRkRMRU5CUVVNN1FVRkRjRVE3T3p0QlNuSkxUeXhKUVVGTkxGVkJRVlVzVDBGQlR5eHJRa0ZCYTBJN1FVRkxla01zVTBGQlV5eFJRVUZSTEZGQlFYZENPMEZCUXpWRExGTkJRVThzVjBGQlZ5eFRRVUZWTEU5QlFVOHNUMEZCVHl4SlFVRmxPMEZCUXpkRU8wRkJkVVZCTEZOQlFWTXNZMEZCWXl4TlFVRjFRanRCUVVNeFF5eFRRVUZQTEV0QlFVc3NjVUpCUVhGQ1F5eFRRVUZSTzBGQlF6ZERPMEZCUlVFc1UwRkJVeXhsUVVGbExFMUJRWFZDTzBGQlF6TkRMRk5CUVU4c1QwRkJUeXhUUVVGVExHTkJRV01zUTBGQlF5eGpRVUZqTEVsQlFVazdRVUZETlVRN1FVRkhUeXhUUVVGVExGRkJRVkVzVVVGQlowSXNUVUZCWXp0QlFVTnNSQ3hOUVVGSkxGZEJRVmNzVlVGQlZTeFBRVUZQTEU5QlFVOHNUVUZCVFN4SlFVRkpPMEZCUXpkRExGbEJRVkVzUzBGQlN5eDFRa0ZCZFVJc1QwRkJUeXhQUVVGUExFTkJRVU1zVDBGQlR5eEpRVUZKTEU5QlFVOHNUVUZCVFN4RlFVRkZPMEZCUVVFc1JVRkRha1k3UVVGRlFTeFRRVUZQTEU5QlFVOHNVVUZCVVN4RlFVRkZMRU5CUVVNc1QwRkJUeXhIUVVGSExFdEJRVXNzUTBGQlF6dEJRVU0zUXp0QlFWbFBMRk5CUVZNc1NVRkRXaXhOUVVOQkxGTkJSVUVzUzBGRFF6dEJRVU5FTEZGQlFVMHNSVUZCUlN4SFFVRkhMRTlCUVU4c1kwRkJZeXhWUVVGVkxFZEJRVWNzUzBGQlN5eEpRVUZKTzBGQlEzUkVMRkZCUVUwc1VVRkJVVHRCUVVWa0xFMUJRVWtzU1VGQlN5eFJRVUZQTEU5QlFVOHNUMEZCVHl4RlFVRkZMRWxCUVVrc1EwRkJRenRCUVVOeVF5eE5RVUZKTEZWQlFWVXNTMEZCU3p0QlFVVnVRaXhoUVVGWExFTkJRVU5ETEUxQlFVc3NTMEZCU3l4TFFVRkxMRTlCUVU4c1VVRkJVU3hMUVVGTExFZEJRVWM3UVVGRE9VTXNVVUZCU1N4VlFVRlZMRTlCUVZjc1VVRkJUeXhOUVVGTlFTeEpRVUZITzBGQlFVRXNSVUZETjBNN1FVRkZRU3hOUVVGSkxFOUJRVThzVTBGQlV5eFZRVUZWTzBGQlF6RkNMRkZCUVVrc1VVRkJVU3hKUVVGSkxHMUNRVUZ0UWp0QlFVTXZRaXhoUVVGUExFbEJRVWtzYTBKQlFXdENMRWxCUVVrN1FVRkJRU3hKUVVOeVF5eFBRVUZQTzBGQlEwZ3NXVUZCVFN4TlFVRk5MRGhDUVVFNFFpeEpRVUZKTEVkQlFVYzdRVUZCUVN4SlFVTnlSRHRCUVVGQkxFVkJRMG83UVVGRlFTeE5RVUZKTEdWQlFXVXNTVUZCU1N4SFFVRkhPMEZCUTNSQ0xGVkJRVTFETEZWQlFWTXNTMEZCU3l4RlFVRkZMRlZCUVZVc1IwRkJSeXhOUVVGTkxFTkJRVU03UVVGRE1VTXNVVUZCU1N4TlFVRlBMRk5CUVZGQkxGTkJRVkVzUzBGQlN6dEJRVU5vUXl4UlFVRkpRU3hQUVVGTk8wRkJRMVlzVjBGQlQwRTdRVUZCUVN4RlFVTllPMEZCUjBFc1VVRkJUU3hGUVVGRkxFdEJRVXNzVDBGQlR5eFZRVUZWTEVsQlFVazdRVUZEYkVNc1UwRkJUeXhOUVVGTk8wRkJRMklzVTBGQlR5eE5RVUZOTzBGQlJXSXNVVUZCVFN4VlFVRTJSQ3hEUVVGRE8wRkJRM0JGTEZGQlFVMHNWMEZCSzBNc1EwRkJRenRCUVVkMFJDeGhRVUZYTEVOQlFVTkVMRTFCUVVzc1MwRkJTeXhMUVVGTExFOUJRVThzVVVGQlVTeExRVUZMTEVkQlFVYzdRVUZET1VNc1VVRkJTVUVzUzBGQlNTeFhRVUZYTEVsQlFVa3NSMEZCUnp0QlFVTjBRaXhqUVVGUkxFdEJRVXNzUTBGQlEwRXNTMEZCU1N4TlFVRk5MRU5CUVVNc1IwRkJSeXhMUVVGelFpeERRVUZETzBGQlEyNUVMR0ZCUVU4c1RVRkJUVUVzU1VGQlJ6dEJRVUZCTEVsQlEzQkNPMEZCUTBFc1VVRkJTU3hwUWtGQmFVSXNWVUZCVlR0QlFVTXpRaXhsUVVGVExFdEJRVXNzUTBGQlEwRXNUVUZCU3l4TFFVRkxMRU5CUVVNN1FVRkRNVUlzV1VGQlRVRXNTVUZCUnl4SlFVRkpMRTFCUVUwc1NVRkJTVHRCUVVGQkxFbEJRek5DTzBGQlFVRXNSVUZEU2p0QlFVZEJMRkZCUVUwc1UwRkJVeXhsUVVGbExHRkJRV0VzUzBGQlN5eEpRVUZKTEVsQlFVc3NTMEZCWlN4TFFVRkxPMEZCUXpkRkxFMUJRVWtzWVVGQll5eFJRVUZQTEU5QlFVOHNVVUZCVVN4TFFVRkxPMEZCUXpkRExFMUJRVWtzVFVGQlR5eFRRVUZSTEZGQlFWRXNTMEZCU3p0QlFVVm9ReXhOUVVGSkxFbEJRVXNzUzBGQlNTeFBRVUZQTEZGQlFWRXNSMEZCUnp0QlFVTXZRaXhOUVVGSkxGVkJRVmNzUzBGQlNTeFRRVUZUTEZGQlFWRXNVMEZCVXp0QlFVYzNReXhoUVVGWExGTkJRVk1zVFVGQlRTeFJRVUZSTEZGQlFWRXNTVUZCU1N4WFFVRlhMRU5CUVVNc1VVRkJVU3hIUVVGSE8wRkJRMnBGTEZGQlFVa3NWVUZCVlN4TlFVRk5PMEZCUTJoQ0xHTkJRVkVzUzBGQlN5eHRSRUZCYlVRN1FVRkRhRVU3UVVGQlFTeEpRVU5LTzBGQlJVRXNVVUZCU1N4TlFVRk5MRkZCUVZFc1MwRkJTeXhIUVVGSE8wRkJRM1JDTEdsQ1FVRlhMRTFCUVUwc1QwRkJUenRCUVVOd1FpeFpRVUZKTEZOQlFWTXNVVUZCVVN4SlFVRkpMRVZCUVVVN1FVRkJRU3hOUVVNdlFqdEJRVUZCTEVsQlEwb3NWMEZCVnl4UFFVRlBPMEZCUTJRc1ZVRkJTU3hUUVVGVExGRkJRVkVzVDBGQlR5eEZRVUZGTzBGQlFVRXNTVUZEYkVNN1FVRkJRU3hGUVVOS08wRkJSMEVzVVVGQlRTeHJRa0ZCYTBJc1VVRkJVU3hKUVVGSkxFTkJRVU1zUTBGQlF5eExRVUZMTEU5QlFVOHNUVUZCVFR0QlFVTndSQ3hWUVVGTkxFOUJRVThzVTBGQlV5eEhRVUZITzBGQlEzcENMRlZCUVUwc1MwRkJTeXhMUVVGTExGZEJRVmNzVTBGQlV5eEpRVU01UWl4UFFVRlBMRkZCUVZFc1YwRkJWeXhMUVVGTExFMUJRVTBzUTBGQlF5eERRVUZETEVsQlFVa3NUMEZCVHl4SlFVTnNSQ3hQUVVGUExGRkJRVkVzVTBGQlV5eEhRVUZITEVkQlFVY3NUMEZCVHp0QlFVVXpReXhYUVVGUExFMUJRVTBzVDBGQlR5eFhRVUZYTEVWQlFVVTdRVUZCUVN4RlFVTnlReXhEUVVGRE8wRkJSMFFzVVVGQlRTeHJRa0ZCYTBJc1UwRkJVeXhKUVVGSkxFTkJRVU1zUTBGQlF5eE5RVUZOTEU5QlFVOHNUVUZCVFR0QlFVTjBSQ3hWUVVGTkxGVkJRVlVzVVVGQlVTeFZRVUZWTEUxQlFVMDdRVUZEY0VNc1ZVRkJTU3hSUVVGUkxFMUJRVTBzVVVGQlVTeEpRVUZKTEVOQlFVTTdRVUZCUVN4SlFVTnVReXhEUVVGRE8wRkJRMFFzVVVGQlNTeFJRVUZSTEUxQlFVMHNVVUZCVVN4SlFVRkpMRU5CUVVNN1FVRkRMMElzVjBGQlR6dEJRVUZCTEVWQlExZ3NRMEZCUXp0QlFVZEVMRTFCUVVrc1owSkJRV2RDTEZOQlFWTXNTMEZCU3l4blFrRkJaMElzVTBGQlV5eEhRVUZITzBGQlF6RkVMR05CUVZVc1RVRkJUVHRCUVVOYUxITkNRVUZuUWl4UlFVRlJMRU5CUVVNc1QwRkJUeXhIUVVGSExFTkJRVU03UVVGRGNFTXNjMEpCUVdkQ0xGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NRMEZCUXp0QlFVRkJMRWxCUTNoRExFTkJRVU03UVVGQlFTeEZRVU5NTzBGQlJVRXNUVUZCU1N4TlFVRk5PMEZCUTFZc1UwRkJUenRCUVVOWU8wRkJSVThzU1VGQlRTeFBRVUZQT3pzN1FVdDBUM0JDTEU5QlFVOUZMR05CUVdFN096dEJRMHR3UWl4SlFVRk5MRTFCUVUwc1QwRkJUeXh0UkVGQmJVUTdRVUZGTDBRc1NVRkJUU3d3UWtGQlowUXNUVUZCVFN4SlFVTTVSQ3hMUVVGTExFTkJRVU5ETEZOQlFWRkJMRXRCUVVrc2RVSkJRWFZDTEVWQlEzcERMRTFCUVUwc1RVRkJUU3hOUVVGTkxFMUJRVTA3T3p0QlJGUTNRanRCUVV0UExFbEJRVTBzVjBGQlRpeE5RVUZOTEcxQ1FVRXdRaXhMUVVGQlF5eFRRVUZSTEZGQlEyNURMRXRCUVVGQkxGTkJRVkVzVTBGWFVpeExRVUZCUVN4VFFVRlJMRmxCV20xQ0xFbEJRV1U3UVVGQlFTeEZRV2RGYkVRc1dVRkJXU3hGUVVGRkxGZEJRVmNzUTBGQlF5eEZRVUZGTEVsQlFYbERMRU5CUVVNc1IwRkJSenRCUVVOeVJTeFZRVUZOTzBGQmVFTldMRk5CUVZFc1owSkJRV2RDTEc5Q1FVRkpMRWxCUVZrN1FVRjVRM0JETEZOQlFVc3NXVUZCV1N4TlFVRk5MRkZCUVZFc1VVRkJVU3hKUVVGSkxGZEJRVmNzUTBGQlF5eFJRVUZSTzBGQlFVRXNSVUZEYmtVN1FVRkJRU3hGUVd4RlFUdEJRVUZCTEZOQlFWRXNUVUZCYlVJN1FVRkJRU3hOUVVOMlFpeFhRVUZYTEVOQlFVTTdRVUZCUVN4TlFVVmFMR1ZCUVdVN1FVRkJRU3hSUVVOWUxHRkJRV0VzUTBGQlEwRXNVMEZCVVN4aFFVRmhRU3hUUVVGUkxGTkJRVk03UVVGQlFTeE5RVU40UkR0QlFVRkJMRTFCUTBFc2FVSkJRV2xDTzBGQlFVRXNVVUZEWWl4aFFVRmhMRU5CUVVOQkxGTkJRVkVzWVVGQllVRXNVMEZCVVN4VFFVRlRPMEZCUVVFc1RVRkRlRVE3UVVGQlFTeEpRVU5LTzBGQlFVRTdRVUZCUVN4RlFVVkJPMEZCUVVFc1UwRkJVU3hOUVVGelFqdEJRVUZCTEUxQlF6RkNMRlZCUVZWQkxGTkJRVkVzVlVGQlZTeFRRVUZUTEZsQlFWa3NTVUZCU1N4SlFVRkpRU3hUUVVGUkxGZEJRVmNzVVVGQlVUdEJRVUZCTEVsQlEzaEdPMEZCUVVFN1FVRkJRU3hGUVVWQkxFOUJRVTg3UVVGRFNDeEpRVUZCUVN4VFFVRlJMR05CUVdNc1NVRkJTVHRCUVVNeFFpdzBRa0ZCZDBJc1NVRkJTVHRCUVVGQkxFVkJRMmhETzBGQlFVRXNSVUZGUVN4UFFVRlBMRWxCUVU4c1YwRkJjVUlzUTBGQlF5eEhRVUZITzBGQlEyNURMRmRCUVU4c1NVRkJTU3hWUVVGVExFVkJRVVVzVTBGQlV5eERRVUZETzBGQlFVRXNSVUZEY0VNN1FVRkJRU3hGUVV0QkxFbEJRVWtzVjBGQlZ6dEJRVU5ZTEZkQlFVOHNRMEZCUXl4SFFVRkhMRXRCUVVzc1UwRkJVenRCUVVGQkxFVkJRemRDTzBGQlFVRXNSVUZGUVN4VFFVRlRMRTlCUVZVc1VVRkJaMElzU1VGQlZUdEJRVU42UXl4UlFVRkpMR2xDUVVGcFFpeFhRVUZWTzBGQlF6TkNMRmxCUVUwc1RVRkJUU3g1UTBGQmVVTTdRVUZCUVN4SlFVTjZSRHRCUVVWQkxGRkJRVWtzVVVGQlVTeEhRVUZITzBGQlExZ3NWMEZCU3l4WlFVRlpPMEZCUVVFc1VVRkRZaXhIUVVGSExFdEJRVXNzVlVGQlZTeE5RVUZOTEVkQlFVY3NTMEZCU3p0QlFVRkJMRkZCUTJoRE8wRkJRVUVzVVVGRFFTeEhRVUZITEV0QlFVc3NWVUZCVlN4TlFVRk5MRXRCUVVzN1FVRkJRU3hOUVVOcVF6dEJRVUZCTEVsQlEwb3NUMEZCVHp0QlFVTklMRmRCUVVzc1ZVRkJWU3hMUVVGTExFdEJRVXM3UVVGRGVrSXNZMEZCVVN4TFFVRkxMRlZCUVZVc1UwRkJVenRCUVVGQkxFbEJRM0JETzBGQlJVRXNVMEZCU3l4TFFVRkxMR1ZCUVdVc1QwRkJUeXhMUVVGTE8wRkJRM0pETEZOQlFVc3NUMEZCVHl4VlFVRlZPMEZCUVVFc1JVRkRNVUk3UVVGQlFTeEZRVVZCTEZOQlFWTXNUMEZCYlVJN1FVRkRlRUlzVjBGQlR5eExRVUZMTEZWQlFWVXNWVUZCVlN4RFFVRkRMRTlCUVU4c1QwRkJUeXhMUVVGTExFbEJRVWs3UVVGQlFTeEZRVU0xUkR0QlFVRkJMRVZCUlVFc1dVRkJXU3hQUVVGblFqdEJRVU40UWl4VlFVRk5MRkZCUVZFc1MwRkJTeXhWUVVGVkxGVkJRVlVzUTBGQlF5eE5RVUZOTEUxQlFVMHNTMEZCU3p0QlFVTjZSQ3hUUVVGTExGVkJRVlVzVDBGQlR5eFBRVUZQTEVOQlFVTTdRVUZGT1VJc1UwRkJTeXhMUVVGTExHbENRVUZwUWl4UFFVRlBMRXRCUVVzN1FVRkRka01zVTBGQlN5eFBRVUZQTEZWQlFWVTdRVUZCUVN4RlFVTXhRanRCUVVGQkxFVkJUMEVzVVVGQlVTeFJRVUZuUWl4VlFVRnhSRHRCUVVONlJTeFZRVUZOTEV0QlFVc3NUVUZCVFN4UlFVRlJMRkZCUVZFc1VVRkJVVHRCUVVONlF5eFRRVUZMTEdOQlFXTXNTVUZCU1N4RlFVRkZPMEZCUTNwQ0xGZEJRVTg3UVVGQlFTeEZRVU5ZTzBGQlFVRXNSVUZGUVN4WFFVRlhMRWxCUVd0Q08wRkJRM3BDTEZWQlFVMHNWMEZCVnl4RlFVRkZPMEZCUTI1Q0xGTkJRVXNzWTBGQll5eFBRVUZQTEVWQlFVVTdRVUZCUVN4RlFVTm9RenRCUVVGQkxFVkJSVUVzVlVGQlZUdEJRVU5PTEZOQlFVc3NTMEZCU3l4VFFVRlRPMEZCUTI1Q0xHVkJRVmNzVFVGQlRTeExRVUZMTEdOQlFXTXNUMEZCVHl4SFFVRkhPMEZCUXpGRExGbEJRVTBzVjBGQlZ5eEZRVUZGTzBGQlFVRXNTVUZEZGtJN1FVRkJRU3hGUVVOS08wRkJRMG83T3p0QlJUVkVUeXhUUVVGVExFbEJRWFZETzBGQlFVRXNSVUZEYmtRN1FVRkJRU3hGUVVOQkxGVkJRVlU3UVVGQlFTeEZRVU5XTzBGQlFVRXNSVUZEUVN4TFFVRkxMRU5CUVVNc1UwRkJaVHRCUVVONlFpeEhRVUV3UXp0QlFVZDBReXhSUVVGTkxHVkJRV1VzVTBGQlV6dEJRVU01UWl4UlFVRk5MRTFCUVUwc2IwSkJRVWtzU1VGQmVVSTdRVUZEZWtNc1VVRkJUU3hYUVVGWExFbEJRVWtzVTBGQllUdEJRVVZzUXl4WFFVRlRReXhSUVVGUExFVkJRVVVzVFVGQlRTeFBRVUZQTEU5QlFVOHNRMEZCUXl4TFFVRkxMRWRCUVVjc1RVRkJUU3hIUVVGWk8wRkJRemRFTEZGQlFVa3NUMEZCVHl4WlFVRlpMRmxCUVZrN1FVRkRMMElzWTBGQlVTeFBRVUZQTEUxQlFVMHNUVUZCVFN4SlFVRkpMRU5CUVVNN1FVRkJRU3hKUVVOd1F5eFhRVUZYTEZsQlFWa3NUVUZCVFR0QlFVTjZRaXhWUVVGSkxHVkJRV1VzUzBGQlN6dEJRVUZCTEVsQlF6VkNPMEZCUTBFc1ZVRkJUU3hSUVVGUk8wRkJRVUVzUlVGRGJFSTdRVUZGUVN4WFFVRlRMRk5CUVZNc1YwRkJNa0k3UVVGRGVrTXNWVUZCVFN4UlFVRlJMRU5CUVVNc1IwRkJSeXhUUVVGVE8wRkJRek5DTEZWQlFVMHNUVUZCVFN4TlFVRk5MRWxCUVVrc1JVRkJSVHRCUVVONFFpeFZRVUZOTEZGQlFWRXNTVUZCU1N4SlFVRkpMRWRCUVVjN1FVRkhla0lzWlVGQlZ5eERRVUZETEV0QlFVc3NTMEZCU3l4TFFVRkxMRWxCUVVrc1VVRkJVU3hIUVVGSE8wRkJSM1JETEdWQlFWTXNXVUZCV1N4TlFVRk5MRXRCUVVzN1FVRkZhRU1zVlVGQlNTeERRVUZETEUxQlFVMHNTVUZCU1N4SFFVRkhMRWRCUVVjN1FVRkRha0lzVVVGQlFVRXNVVUZCVHl4TFFVRkxPMEZCUTFvc1dVRkJTU3hQUVVGUExFZEJRVWM3UVVGQlFTeE5RVU5zUWp0QlFVRkJMRWxCUTBvN1FVRkhRU3hWUVVGTkxFbEJRVWtzUTBGQlF5eE5RVUZOTEUxQlFVMDdRVUZEYmtJc1dVRkJUU3hOUVVGTkxFbEJRVWtzUTBGQlF6dEJRVU5xUWl4VlFVRkpMRWxCUVVrc1NVRkJTU3hIUVVGSExFZEJRVWM3UVVGRFpDeGpRVUZOTzBGQlFVRXNWVUZEUml4UFFVRlBMRU5CUVVNc1JVRkJSU3hSUVVGUk8wRkJRVUVzVlVGRGJFSTdRVUZCUVN4UlFVTktMRWxCUVVrc1NVRkJTU3hKUVVGSkxFZEJRVWM3UVVGRFppeHBRa0ZCVXl4RFFVRkRPMEZCUTFZc1dVRkJTU3hUUVVGVExGTkJRVk1zUzBGQlN5eEhRVUZITzBGQlF6RkNMR3RDUVVGUkxFdEJRVXNzZVVKQlFYbENMRWRCUVVjc1JVRkJSVHRCUVVGQkxGRkJReTlETEU5QlFVODdRVUZEU0N4dFFrRkJVeXhUUVVGVExFdEJRVXM3UVVGQlFTeFJRVU16UWp0QlFVRkJMRTFCUTBvc1QwRkJUenRCUVVOSUxHTkJRVTBzUTBGQlF5eFBRVUZQTEZGQlFWRXNTVUZCU1N4WlFVRlpMRU5CUVVNN1FVRkRka01zWTBGQlRTeFJRVUZSTEVsQlFVa3NUVUZCVFN4WlFVRlpPMEZCUTNCRExHTkJRVTBzVVVGQlVTeE5RVUZOTEVsQlFVa3NUVUZCVFN4UlFVRlJMRTFCUVUwc1MwRkJTeXhEUVVGRE8wRkJRMnhFTEZsQlFVa3NTVUZCU1N4TFFVRkxMRVZCUVVVc1RVRkJUU3hQUVVGUExFOUJRVThzUTBGQlF5eFBRVUZQTEZGQlFWRXNSMEZCUnl4TlFVRk5MRU5CUVVNN1FVRkROMFFzYVVKQlFWTXNVMEZCVXl4TFFVRkxPMEZCUVVFc1RVRkRNMEk3UVVGQlFTeEpRVU5LTEVOQlFVTTdRVUZCUVN4RlFVTk1PMEZCUlVFc1VVRkJUU3hWUVVGVkxFdEJRVXNzVlVGQlZTeE5RVUZOTzBGQlEycERMR0ZCUVZNc1MwRkJTeXhKUVVGSkxFTkJRVU03UVVGQlFTeEZRVU4yUWl4RFFVRkRPMEZCUTBRc1YwRkJVeXhMUVVGTExFbEJRVWtzUTBGQlF6dEJRVVZ1UWl4WlFVRlZMRTFCUVUwN1FVRkRXaXhaUVVGUk8wRkJSVklzWlVGQlZ5eFRRVUZUTEVsQlFVa3NUMEZCVHl4SFFVRkhPMEZCUXpsQ0xFMUJRVUZCTEZGQlFVOHNTMEZCU3p0QlFVRkJMRWxCUTJoQ08wRkJSVUVzVVVGQlNTeE5RVUZOTzBGQlFVRXNSVUZEWkN4RFFVRkRPMEZCUlVRc1UwRkJUenRCUVVOWU96czdRVU42Ums4c1UwRkJVeXhMUVVFclFqdEJRVUZCTEVWQlF6TkRPMEZCUVVFc1JVRkRRU3hWUVVGVk8wRkJRVUVzUlVGRFZqdEJRVU5LTEVkQlFXbERPMEZCUXpkQ0xGRkJRVTBzWlVGQlpTeFRRVUZUTzBGQlF6bENMRkZCUVUwc1YwRkJWeXhKUVVGSkxGTkJRVms3UVVGRmFrTXNUVUZCU1R0QlFVVktMRmRCUVZNc1UwRkJVeXhIUVVGTk8wRkJRM0JDTEdWQlFWY3NVMEZCVXl4VFFVRlRMRlZCUVZVN1FVRkRia01zWlVGQlV5eFpRVUZaTEV0QlFVczdRVUZGTVVJc1ZVRkJTU3hQUVVGUExGbEJRVmtzV1VGQldUdEJRVU12UWl4blFrRkJVU3hMUVVGTE8wRkJRVUVzVFVGRGFrSXNWMEZCVnl4WlFVRlpMRTFCUVUwN1FVRkRla0lzV1VGQlNTeGxRVUZsTEV0QlFVczdRVUZCUVN4TlFVTTFRanRCUVVWQkxGVkJRVWtzVFVGQlR5eFBRVUZOTEZGQlFWRTdRVUZCUVN4SlFVTTNRanRCUVVWQkxGbEJRVkVzU1VGQlNTeE5RVUZOTEZsQlFWazdRVUZET1VJc1ZVRkJUU3hMUVVGTExFMUJRVTBzU1VGQlNTeE5RVUZOTEZGQlFWRXNRMEZCUXl4RFFVRkRPMEZCUTNKRExGRkJRVWtzVDBGQlR5eE5RVUZOTEU5QlFVOHNVMEZCVXl4UFFVRlBMRkZCUVZFc1QwRkJUeXhSUVVGWE8wRkJRemxFTEdWQlFWTXNVMEZCVXl4RlFVRkZPMEZCUVVFc1NVRkRlRUk3UVVGQlFTeEZRVU5LTzBGQlJVRXNVVUZCVFN4VlFVRlZMRTFCUVUwc1ZVRkJWU3hOUVVGTk8wRkJRMnhETEdGQlFWTXNUVUZCVFN4SlFVRkpMRU5CUVVNN1FVRkJRU3hGUVVONFFpeERRVUZETzBGQlEwUXNWMEZCVXl4TlFVRk5MRWxCUVVrc1EwRkJRenRCUVVWd1FpeFpRVUZWTEUxQlFVMDdRVUZEV2l4VlFVRk5MRkZCUVZFN1FVRkRaQ3haUVVGUk8wRkJRVUVzUlVGRFdpeERRVUZETzBGQlJVUXNVMEZCVHp0QlFVTllPenM3UVVOd1FrOHNVMEZCVXl4TFFVRXJRanRCUVVGQkxFVkJRek5ETEUxQlFVMDdRVUZCUVN4RlFVTk9PMEZCUVVFc1JVRkRRVHRCUVVGQkxFVkJRMEVzUjBGQlJ6dEJRVU5RTEVkQlFXbENPMEZCUTJJc1VVRkJUU3hWUVVGVkxFbEJRVWtzVFVGQmEwSTdRVUZGZEVNc1RVRkJTU3hOUVVGUExGTkJRVkVzVFVGQlRTeExRVUZMTzBGQlJUbENMR0ZCUVZjc1EwRkJReXhMUVVGTExFdEJRVXNzUzBGQlN5eFBRVUZQTEZGQlFWRXNTMEZCU3l4SFFVRkhPMEZCUXpsRExGRkJRVWtzVVVGQlVTeFBRVUZQTzBGQlEyWXNWVUZCU1N4cFFrRkJhVUlzVlVGQlZUdEJRVU16UWl4WlFVRkpMRTlCUVU4c1RVRkJUU3hOUVVGTkxFbEJRVWtzUTBGQlF6dEJRVU0xUWl4blFrRkJVU3hMUVVGTExFMUJRVTBzVlVGQlZTeE5RVUZOTEVsQlFVa3NUMEZCVHl4TlFVRk5MRTFCUVUwc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVUZCTEUxQlEzSkZMRmRCUVZjc1QwRkJUeXhWUVVGVkxGVkJRVlU3UVVGRGJFTXNXVUZCU1N4UFFVRlBMRTFCUVUwc1MwRkJTenRCUVVGQkxFMUJRekZDTzBGQlFVRXNTVUZEU2l4WFFVRlhMRkZCUVZFc1UwRkJVenRCUVVONFFpeFZRVUZKTEdsQ1FVRnBRaXhWUVVGVk8wRkJRek5DTEZsQlFVa3NVMEZCVXl4TlFVRk5MRTFCUVUwc1NVRkJTU3hEUVVGRE8wRkJRemxDTEdkQ1FVRlJMRXRCUVVzc1RVRkJUU3hWUVVGVkxFMUJRVTBzU1VGQlNTeFRRVUZUTEUxQlFVMHNUVUZCVFN4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRVUVzVFVGRGRrVXNWMEZCVnl4UFFVRlBMRlZCUVZVc1ZVRkJWVHRCUVVOc1F5eFpRVUZKTEZOQlFWTXNUVUZCVFN4TFFVRkxPMEZCUVVFc1RVRkROVUk3UVVGQlFTeEpRVU5LTEZkQlFWY3NTVUZCU1N4WFFVRlhMRWxCUVVrc1IwRkJSenRCUVVNM1FpeFpRVUZOTEV0QlFVc3NTVUZCU1N4WFFVRlhMRlZCUVZVc1NVRkRPVUlzUzBGQlN5eFJRVUZSTEZkQlFWY3NVMEZCVXl4SlFVRkpMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeExRVUZMTEVsQlEzWkVMRXRCUVVzc1VVRkJVU3hUUVVGVExFbEJRVWtzVFVGQlRTeERRVUZETEVOQlFVTXNSMEZCUnl4TFFVRkxPMEZCUldoRUxHTkJRVkVzUzBGQlN5eE5RVUZOTEV0QlFVc3NWMEZCVnl4RlFVRkZMRU5CUVVNN1FVRkJRU3hKUVVNeFF5eFhRVUZYTEdsQ1FVRnBRaXhWUVVGVk8wRkJRMnhETEZWQlFVa3NUVUZCVFN4TFFVRkxMRTFCUVUwc1NVRkJTU3hEUVVGRE8wRkJRekZDTEdOQlFWRXNTMEZCU3l4TlFVRk5MRlZCUVZVc1RVRkJUU3hKUVVGSkxFMUJRVTBzUzBGQlN5eE5RVUZOTEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkJRU3hKUVVOdVJTeFBRVUZQTzBGQlEwZ3NWVUZCU1N4TlFVRk5MRXRCUVVzc1MwRkJTenRCUVVGQkxFbEJRM2hDTzBGQlFVRXNSVUZEU2p0QlFVVkJMRTFCUVVrc1RVRkJUU3hSUVVGUkxGRkJRVkVzUjBGQlJ6dEJRVU42UWl4bFFVRlhMRTFCUVUwc1ZVRkJWVHRCUVVOMlFpeFZRVUZKTEU5QlFVOHNUVUZCVFN4UFFVRlBMRk5CUVZNc1QwRkJUeXhSUVVGUkxFOUJRVThzVVVGQlZ6dEJRVU01UkN4WlFVRkpMRk5CUVZNc1RVRkJUU3hKUVVGSkxFVkJRVVU3UVVGQlFTeE5RVU0zUWp0QlFVRkJMRWxCUTBvN1FVRkJRU3hGUVVOS0xFOUJRVTg3UVVGRFNDeFZRVUZOTEV0QlFVczdRVUZEV0N4UlFVRkpMRTlCUVU4c1RVRkJUU3hQUVVGUExGTkJRVk1zVDBGQlR5eFJRVUZSTEU5QlFVOHNVVUZCVnp0QlFVTTVSQ3hWUVVGSkxGTkJRVk1zVFVGQlRTeEpRVUZKTEVWQlFVVTdRVUZCUVN4SlFVTTNRanRCUVVGQkxFVkJRMG83UVVGRlFTeE5RVUZKTEZGQlFWRXNVMEZCVXl4SFFVRkhPMEZCUTNCQ0xHTkJRVlVzVFVGQlRTeFJRVUZSTEZGQlFWRXNRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJRVUVzUlVGRGFrUTdRVUZGUVN4VFFVRlBPMEZCUTFnN096dEJRMnBIUVN4UFFVRlBReXhqUVVGaE96czdRVU5FY0VJc1QwRkJUeXhoUVVGaE8wRkJWV0lzU1VGQlRTeFZRVUZWTEZGQlFWRTdRVUZuUTNoQ0xGTkJRVk1zUzBGQlN5eExRVUYzUWp0QlFVTjZReXhUUVVGUExFMUJRVTBzVVVGQlVTeEhRVUZITEVsQlFVa3NVVUZCVVN4UlFVRlJMRTFCUVUwc1IwRkJSeXhKUVVGSkxGRkJRVkVzVVVGQlVTeExRVUZMTEVkQlFVYzdRVUZEY2tZN1FVRkZUeXhUUVVGVExGVkJRVlVzUzBGQmVVTTdRVUZETDBRc1UwRkJUeXhKUVVGSkxGRkJRVkVzUTBGQlF5eFRRVUZUTEZkQlFWYzdRVUZEY0VNc1VVRkJTU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEhRVUZITzBGQlEzQkNMR05CUVZFc1VVRkJVU3haUVVGWkxFdEJRVXNzUTBGQlF5eEhRVUZITEZGQlFWRTdRVUZEZWtNc1dVRkJTVHRCUVVOQkxHdENRVUZSTEZGQlFWRXNVVUZCVVN4dFFrRkJiVUlzUjBGQlJ5eERRVUZETzBGQlFVRXNVVUZEYmtRc1UwRkJVeXhQUVVGUE8wRkJRMW9zYVVKQlFVOHNTMEZCU3p0QlFVRkJMRkZCUTJoQ08wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVEN4UFFVRlBPMEZCUTBnc1kwRkJVU3hSUVVGUkxGZEJRVmNzUzBGQlN5eERRVUZETEVkQlFVY3NVVUZCVVR0QlFVTjRReXhaUVVGSk8wRkJRMEVzYTBKQlFWRXNVVUZCVVN4UlFVRlJMRmxCUVZrc1IwRkJSeXhEUVVGRE8wRkJRVUVzVVVGRE5VTXNVMEZCVXl4UFFVRlBPMEZCUTFvc2FVSkJRVThzUzBGQlN6dEJRVUZCTEZGQlEyaENPMEZCUVVFc1RVRkRTaXhEUVVGRE8wRkJRVUVzU1VGRFREdEJRVUZCTEVWQlEwb3NRMEZCUXp0QlFVTk1PenM3UVVRM1JFOHNTVUZCVFN4UFFVRlBReXhUUVVGUk8wRkJSWEpDTEZOQlFWTXNVMEZCVTBNc1YwRkJhMElzVlVGQmRVSTdRVUZET1VRc1UwRkJUMFFzVTBGQlVTeExRVUZMTEZOQlFWTkRMRmRCUVZVc1RVRkJUU3hMUVVGTExGZEJRVmNzUTBGQlF6dEJRVU5zUlR0QlFUWkNUeXhUUVVGVExGZEJRMW9zVFVGRFFTeE5RVU5CTEZWQlEwRXNWMEZEVnp0QlFVTllMRTFCUVVrc1pVRkJaVHRCUVVOdVFpeE5RVUZKTEZGQlFUWkNPMEZCUTJwRExGRkJRVTBzWTBGQll5eHZRa0ZCU1N4SlFVRm5RanRCUVVWNFF5eFhRVUZUTEZWQlFWVXNWVUZCYTBNN1FVRkRha1FzWVVGQlUwTXNTMEZCU1N4UFFVRlZPMEZCUTI1Q0xGVkJRVWtzVlVGQlZTeGpRVUZqTzBGQlEzaENMSFZDUVVGbE8wRkJRMllzYjBKQlFWa3NVVUZCVVN4RFFVRkRMRTlCUVU4c1IwRkJSeXhEUVVGRE8wRkJRVUVzVFVGRGNFTTdRVUZCUVN4SlFVTktPMEZCUlVFc1VVRkJTU3haUVVGWkxGTkJRVk1zUjBGQlJ6dEJRVU40UWl4alFVRlJMRk5CUVZNc1RVRkJUU3hOUVVGTk8wRkJRM3BDTEZsQlFVa3NUMEZCVHl4aFFVRmhMRmxCUVZrN1FVRkRhRU1zWjBKQlFVMHNVVUZCVVN4VFFVRlRMRmxCUVZrN1FVRkRia01zWTBGQlNTeHBRa0ZCYVVJc1UwRkJVenRCUVVNeFFpeHJRa0ZCVFN4TFFVRkxRU3hKUVVGSE8wRkJRVUVzVlVGRGJFSXNUMEZCVHp0QlFVTklMRmxCUVVGQkxFdEJRVWtzUzBGQlN6dEJRVUZCTEZWQlEySTdRVUZCUVN4UlFVTktMRTlCUVU4N1FVRkRTQ3h2UWtGQlZTeFJRVUZSTEVWQlFVVXNTMEZCU3l4RFFVRkRMRmRCUVZjN1FVRkRha01zV1VGQlFVRXNTMEZCU1N4WlFVRlpMRlZCUVZVc1VVRkJVU3haUVVGWkxFbEJRVXNzVFVGQldUdEJRVUZCTEZWQlEyNUZMRU5CUVVNN1FVRkJRU3hSUVVOTU8wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVER0QlFVVkJMR2RDUVVGWkxFbEJRVWtzVVVGQlVUdEJRVVY0UWl4WFFVRlBMRTFCUVUwN1FVRkRWQ3hyUWtGQldTeFBRVUZQTEZGQlFWRTdRVUZETTBJc1ZVRkJTU3haUVVGWkxGTkJRVk1zUjBGQlJ6dEJRVU40UWl4bFFVRlBMRTlCUVU4N1FVRkRaQ3huUWtGQlVUdEJRVUZCTEUxQlExbzdRVUZCUVN4SlFVTktPMEZCUVVFc1JVRkRTanRCUVVWQkxGTkJRVThzU1VGQlNTeFRRVUZUTEUxQlFVMHNZMEZCWXl4VFFVRlRPMEZCUTNKRU96czdRVVZ3UmtFc1QwRkJUME1zVlVGQlV6dEJRVU5vUWl4UFFVRlBReXhaUVVGWE96czdRVU5HYkVJc1QwRkJUME1zVlVGQlV6dEJRVU5vUWl4UFFVRlBReXhWUVVGVE8wRkJRMmhDTEU5QlFVOURMR05CUVdFN1FVRkpjRUlzU1VGQlRTeGxRVUZsTEVsQlFVbERMRXRCUVVrc1VVRkJVVHRCUVVWeVF5eFRRVUZUTEVsQlFVa3NVVUZCZFVJc1QwRkJkVUlzUjBGQlZ6dEJRVU5zUlN4TlFVRkpMRU5CUVVNc1YwRkJWeXhSUVVGUkxFOUJRVThzUTBGQlF5eEhRVUZITzBGQlF5OUNMRmRCUVU4c1owSkJRV2RDTEdOQlFXTXNUMEZCVHl4UlFVRlJMRXRCUVVzc1EwRkJRenRCUVVGQkxFVkJRemxFTzBGQlEwbzdRVUZGUVN4VFFVRlRMR05CUVdNc1UwRkJlVUlzVVVGQmQwSTdRVUZGY0VVc1UwRkJUenRCUVVOWU8wRkJSVUVzVTBGQlV5eFhRVUZYTEZGQlFYZENMRTlCUVhWQ0xFZEJRVmM3UVVGRk1VVXNUVUZEU1N4cFFrRkJhVUpCTEV0QlFVa3NZMEZEY2tJc2IwSkJRVzlDTEZWQlEzQkNMRTlCUVU4c1QwRkJUeXh0UWtGQmJVSXNXVUZEYmtNN1FVRkRSU3hYUVVGUExHVkJRV1VzUzBGQlN6dEJRVU16UWl4WFFVRlBPMEZCUVVFc1JVRkRXRHRCUVVWQkxFMUJRMGtzYVVKQlFXbENRU3hMUVVGSkxGVkJRM0pDTEd0Q1FVRnJRa0VzUzBGQlNTeFRRVU4wUWl4TlFVRk5MRk5CUVZNc1RVRkRaaXhOUVVGTkxGTkJRVk1zVVVGRFppeFJRVUZSTEV0QlFVc3NUVUZCVFN4VFFVTnlRanRCUVVORkxGZEJRVThzVlVGQlZTeFBRVUZQTEUxQlFVMHNTVUZCU1R0QlFVTnNReXhYUVVGUE8wRkJRVUVzUlVGRFdEdEJRVVZCTEUxQlFVa3NhVUpCUVdsQ1FTeExRVUZKTEZkQlFWY3NhMEpCUVd0Q1FTeExRVUZKTEZsQlFWazdRVUZEYkVVc1YwRkJUeXhaUVVGWkxFdEJRVXM3UVVGRGVFSXNWMEZCVHp0QlFVRkJMRVZCUTFnN1FVRkZRU3hOUVVOSkxHbENRVUZwUWtNc1MwRkJTU3hqUVVOd1FpeHJRa0ZCYTBKRUxFdEJRVWtzWTBGQll5eHJRa0ZCYTBKQkxFdEJRVWtzWTBGRE4wUTdRVUZEUlN4WFFVRlBMR1ZCUVdVc1MwRkJTenRCUVVNelFpeFhRVUZQTzBGQlFVRXNSVUZEV0R0QlFVVkJMRTFCUVVrc2FVSkJRV2xDUXl4TFFVRkpMRmxCUVZrc2EwSkJRV3RDUVN4TFFVRkpMRTFCUVUwN1FVRkJRU3hGUVVWcVJUdEJRVVZCTEUxQlFVa3NhVUpCUVdsQ1JDeExRVUZKTEZWQlFWVXNhMEpCUVd0Q1FTeExRVUZKTEdGQlFXRTdRVUZEYkVVc1YwRkJUeXhYUVVGWExFdEJRVXM3UVVGRGRrSXNWMEZCVHp0QlFVRkJMRVZCUTFnN1FVRkZRU3hOUVVGSkxHbENRVUZwUWtFc1MwRkJTU3hqUVVGakxHdENRVUZyUWtFc1MwRkJTU3hWUVVGVk8wRkJRMjVGTEZkQlFVOHNWMEZCVnl4TFFVRkxPMEZCUTNaQ0xGZEJRVTg3UVVGQlFTeEZRVU5ZTzBGQlJVRXNVMEZCVHp0QlFVTllPMEZCUlVFc1UwRkJVeXhQUVVGUExGRkJRWGRDTEU5QlFYVkNPMEZCUXpORUxFMUJRVWtzWTBGQll5eFJRVUZSTEV0QlFVc3NSVUZCUnp0QlFVVnNReXhOUVVGSkxHdENRVUZyUWtFc1MwRkJTU3hWUVVGVkxHbENRVUZwUWtFc1MwRkJTU3hwUWtGQmFVSTdRVUZEZEVVc1YwRkJUeXhQUVVGUExHdENRVUZyUWl4TFFVRkxPMEZCUVVFc1JVRkRla003UVVGRlFTeE5RVUZKTEdWQlFXVXNWVUZCVlN4UFFVRlBMRTlCUVU4c1lVRkJZU3haUVVGWk8wRkJRMmhGTEZkQlFVOHNUMEZCVHl4VlFVRlZMRWxCUVVrN1FVRkJRU3hGUVVOb1F6dEJRVVZCTEUxQlFVa3NXVUZCV1N4VlFVRlZMRTlCUVU4c1QwRkJUeXhWUVVGVkxGbEJRVms3UVVGRE1VUXNWMEZCVHl4UFFVRlBMRTlCUVU4c1MwRkJTenRCUVVGQkxFVkJRemxDTzBGQlJVRXNVVUZCVFN4TlFVRk5MR2xDUVVGcFFpeExRVUZMTEZOQlFWTXNUVUZCVFN4RlFVRkZPMEZCUTNaRU8wRkJSVUVzU1VGQlRTeEZRVUZGTEZWQlFWVXNhMEpCUVd0Q0xFbEJRVWtzVTBGQlV6dEJRVUZCTEVWQlF6ZERMRTlCUVU4c1VVRkJVU3hMUVVGTE8wRkJRMmhDTEZGQlFVa3NSVUZCUlN4clFrRkJhMEpCTEV0QlFVa3NVMEZCVXp0QlFVTnFReXhoUVVGUExGRkJRVkVzUzBGQlN5eE5RVUZOTEhGQ1FVRnhRaXhOUVVGTkxFVkJRVVVzUTBGQlF6dEJRVUZCTEVsQlF6VkVPMEZCUlVFc1ZVRkJUU3hOUVVGTkxFOUJRVThzYTBKQlFXdENPMEZCUTNKRExGRkJRVWs3UVVGRlNpeFZRVUZOTEZOQlFWTXNRMEZCUTBVc1UwRkJaMEk3UVVGRE5VSXNWVUZCU1N4RFFVRkRRU3hMUVVGSkxGTkJRVk1zUjBGQlJ5eExRVUZMTEVOQlFVTkJMRXRCUVVrc1UwRkJVeXhIUVVGSExFZEJRVWM3UVVGRE1VTXNVVUZCUVVFc1QwRkJUU3hQUVVGUFFTeEpRVUZITzBGQlFVRXNUVUZEY0VJN1FVRkZRU3hWUVVGSkxGTkJRVlVzUzBGQlNTeG5Ra0ZCWjBJc1VVRkJVVHRCUVVVeFF5eHBRa0ZCVnl4SlFVRkpSaXhMUVVGSkxGbEJRVms3UVVGREwwSXNaVUZCVXl4cFFrRkJhVUpGTEVsQlFVYzdRVUZETjBJc1ZVRkJTU3hoUVVGaExGVkJRVlZHTEV0QlFVa3NORUpCUVRSQ08wRkJRVUVzU1VGREwwUTdRVUZGUVN4UlFVRkpMR1ZCUVdVc1ZVRkJWVHRCUVVONlFpeGhRVUZQTEVsQlFVa3NTVUZCU1N4RFFVRkRPMEZCUTJoQ0xGbEJRVTBzVlVGQlZTeEpRVUZKTEZWQlFWVXNUVUZCVFN4UFFVRlBMRWxCUVVrc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRGNrUXNaMEpCUVZVc1QwRkJUenRCUVVGQkxFbEJRM0pDTEU5QlFVODdRVUZEU0N4aFFVRlBMRWRCUVVjN1FVRkJRU3hKUVVOa08wRkJRVUVzUlVGRFNqdEJRVUZCTEVWQlEwRXNVMEZCVXl4UlFVRlJMRmRCUVZjN1FVRkRlRUlzVVVGQlNTeEZRVUZGTEd0Q1FVRnJRa0VzUzBGQlNTeFRRVUZUTzBGQlEycERMR0ZCUVU4c1VVRkJVU3hMUVVGTExFMUJRVTBzTWtKQlFUSkNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wRkJRVUVzU1VGRGJFVTdRVUZGUVN4UlFVRkpMSEZDUVVGeFFpeFZRVUZWTzBGQlF5OUNMR0ZCUVU4c1lVRkJZU3hWUVVGVkxFbEJRVWtzUlVGQlJTeE5RVUZOTEV0QlFVczdRVUZETDBNc1dVRkJUU3hWUVVGVkxGVkJRVlU3UVVGQlFTeFJRVU4wUWl4TlFVRlBMRTlCUVU4c1lVRkJZU3hWUVVGVkxFbEJRVWtzUlVGQlJTeE5RVUZOTEV0QlFVczdRVUZCUVN4TlFVTXhSRHRCUVVOQkxHZENRVUZWTEU5QlFVODdRVUZCUVN4SlFVTnlRaXhQUVVGUE8wRkJRMGdzWVVGQlR5eG5Ra0ZCWjBJc1ZVRkJWU3hOUVVGTkxFdEJRVXNzUTBGQlF6dEJRVUZCTEVsQlEycEVPMEZCUVVFc1JVRkRTanRCUVVGQkxFVkJRMEVzVTBGQlV5eFJRVUZSTEU5QlFVOHNVVUZCVVN4SlFVRkpPMEZCUTJoRExGRkJRVWtzUlVGQlJTeHBRa0ZCYVVKSExGTkJRVkVzVTBGQlV6dEJRVU53UXl4alFVRlJTQ3hMUVVGSkxFMUJRVTBzU1VGQlNTeFBRVUZQTEV0QlFVc3NRMEZCUXp0QlFVRkJMRWxCUTNaRE8wRkJSVUVzVVVGQlNTeFhRVUZYTEZGQlFWRXNUMEZCVHl4TFFVRkxMRVZCUVVjN1FVRkZkRU1zVVVGQlNTeHJRa0ZCYTBJc1ZVRkJWVHRCUVVNMVFpeGhRVUZQTEZOQlFWTXNTMEZCU3p0QlFVTnlRanRCUVVGQkxFbEJRMG83UVVGRlFTeFJRVUZKTEd0Q1FVRnJRa0VzUzBGQlNTeFhRVUZYTzBGQlEycERMRlZCUVVrc2FVSkJRV2xDTEZWQlFWVTdRVUZETTBJc2JVSkJRVmNzVFVGQlRTeE5RVUZOTEZWQlFWVTdRVUZETjBJc1kwRkJTU3hSUVVGUkxFbEJRVWtzUzBGQlN6dEJRVUZCTEZGQlEzcENPMEZCUlVFc1kwRkJUU3hSUVVGUkxHVkJRV1VzUTBGQlF5eEhRVUZITEVsQlFXRkpMRmRCUVd0Q08wRkJRelZFTEdOQlFVa3NSVUZCUlN4alFVRmpSQ3hUUVVGUkxGTkJRVk03UVVGRGFrTXNiMEpCUVZFc1RVRkJUU3hWUVVGVkxHTkJRV01zUlVGQlJTeFBRVUZQTEUxQlFVMHNSVUZCUlN4RFFVRkRPMEZCUTNoRU8wRkJRVUVzVlVGRFNqdEJRVU5CTEcxQ1FVRlRMRkZCUVZFc1NVRkJTVU1zVFVGQlN6dEJRVUZCTEZGQlF6bENMRU5CUVVNN1FVRkZSQ3hqUVVGTkxGRkJRVkVzYVVKQlFXbENMRU5CUVVNc1IwRkJSeXhQUVVGblFqdEJRVU12UXl4alFVRkpMRVZCUVVVc1kwRkJZMFFzVTBGQlVTeFRRVUZUTzBGQlEycERMRzlDUVVGUkxFMUJRVTBzVlVGQlZTeHBRa0ZCYVVJc1JVRkJSU3hUUVVGVExFMUJRVTBzUlVGQlJTeERRVUZETzBGQlF6ZEVPMEZCUVVFc1ZVRkRTanRCUVVOQkxHbENRVUZQTEZGQlFWRXNSVUZCUlR0QlFVRkJMRkZCUTNKQ0xFTkJRVU03UVVGRlJDeHJRa0ZCVlN4TlFVRk5MRTFCUVUwc1VVRkJVU3hEUVVGRE8wRkJReTlDTzBGQlFVRXNUVUZEU2p0QlFVVkJMRlZCUVVrc1VVRkJVU3hQUVVGUExFdEJRVXM3UVVGRGVFSTdRVUZCUVN4SlFVTktPMEZCUlVFc1ZVRkJUU3hOUVVGTkxHTkJRV01zUzBGQlN5eFBRVUZQTEUxQlFVMHNSVUZCUlR0QlFVRkJMRVZCUTJ4RU8wRkJRMG9zUTBGQlF6czdPMEZFZWt0RUxFOUJRVThzVDBGQlR5eHRRa0ZCYlVJN1FVRkJRU3hGUVVNM1FpeExRVUZMUlN4TFFVRkpPMEZCUVVFc1JVRkRWQ3hSUVVGUlFTeExRVUZKTzBGQlFVRXNSVUZEV2l4WFFVRlhRU3hMUVVGSk8wRkJRVUU3UVVGQlFTeEZRVVZtTEdGQlFXRkJMRXRCUVVrN1FVRkJRU3hGUVVOcVFpeFBRVUZQUVN4TFFVRkpPMEZCUVVFc1JVRkRXQ3hQUVVGUFFTeExRVUZKTzBGQlFVRXNSVUZEV0N4UFFVRlBRU3hMUVVGSk8wRkJRVUVzUlVGRFdDeFZRVUZWUVN4TFFVRkpPMEZCUVVFc1JVRkRaQ3haUVVGWlFTeExRVUZKTzBGQlFVRXNSVUZEYUVJc1UwRkJVMEVzUzBGQlNUdEJRVUZCTEVWQlEySXNVMEZCVTBFc1MwRkJTVHRCUVVGQkxFVkJRMklzVlVGQlZVRXNTMEZCU1R0QlFVRkJMRVZCUTJRc1owSkJRV2RDUVN4TFFVRkpPMEZCUVVFc1JVRkRjRUlzVVVGQlVVTXNUMEZCVFR0QlFVRkJMRVZCUTJRc1QwRkJUMFFzUzBGQlNUdEJRVUZCTEVWQlExZ3NVVUZCVVVFc1MwRkJTVHRCUVVGQkxFVkJRMW9zWTBGQlkwRXNTMEZCU1R0QlFVRkJMRVZCUTJ4Q0xGRkJRVkZETEU5QlFVMDdRVUZEYkVJc1EwRkJRenM3TzBGa2FrSkVMRWxCUVUwc1YwRkJWenRCUVVWcVFpeEpRVUZOTEhGQ1FVRk9MRTFCUVhsQ08wRkJRVUVzUlVGaFpDeGpRVUZqTzBGQlEycENMRk5CUVVzc1ZVRkJWU3hoUVVGaExGbEJRVms3UVVGRGVFTXNVMEZCU3l4alFVRmpMR05CUVdNc1MwRkJTeXhUUVVGVExHbENRVUZwUWp0QlFVTm9SU3hUUVVGTExHOUNRVUZ2UWl4alFVRmpMRXRCUVVzc1UwRkJVeXhaUVVGWk8wRkJRMnBGTEZOQlFVc3NhMEpCUVd0Q0xHTkJRV01zUzBGQlN5eFRRVUZUTEZWQlFWVTdRVUZETjBRc1UwRkJTeXhyUWtGQmEwSXNaVUZCWlN4RFFVRkRMRXRCUVVzc2JVSkJRVzFDTEV0QlFVc3NaVUZCWlN4SFFVRkhMRU5CUVVNc1IwRkJSeXhOUVVGTkxFTkJRVU1zVjBGQlZ5eExRVUZMTEU5QlFVOHNRMEZCUXl4SlFVRkpMRzlDUVVGdlFpeGxRVUZsTEVOQlFVTTdRVUZEYWtzc1UwRkJTeXh0UWtGQmJVSXNTMEZCU3l4blFrRkJaMElzUjBGQlJ5eFBRVUZMTEVsQlFVa3NaVUZCWlN4clFrRkJhMElzUzBGQlN5eFJRVUZSTEZsQlFWa3NRMEZCUXl4cFFrRkJhVUlzYTBKQlFXdENMR3RDUVVGclFpeExRVUZMTEZGQlFWRXNZVUZCWVN4RFFVRkRMR05CUVdNN1FVRkZiRTRzVTBGQlN5eFpRVUZaTEVsQlFVa3NTMEZCU3l4WlFVRlpPMEZCUTNSRExGTkJRVXNzV1VGQldTeEpRVUZKTEV0QlFVc3NXVUZCV1R0QlFVVjBReXhUUVVGTExGVkJRVlVzUlVGQlJTeE5RVUZOTEVWQlFVVXNUVUZCVFN4SFFVRkhMRXRCUVVzc1IwRkJSeXhQUVVGUExFVkJRVVVzUjBGQlJ5eE5RVUZOTEVWQlFVVXNUVUZCVFN4SFFVRkhMRXRCUVVzc1IwRkJSeXhQUVVGUExFVkJRVVVzUlVGQlJUdEJRVVV4Uml4VFFVRkxMRmRCUVZjc1YwRkJWeXhGUVVGRkxFdEJRVXNzUjBGQlJ5eExRVUZMTEVWQlFVVXNSMEZCUnl4VlFVRlZMRTFCUVUwN1FVRkRNMFFzVlVGQlNUdEJRVU5CTEdGQlFVc3NaMEpCUVdkQ0xFdEJRVXNzVTBGQlV6dEJRVU51UXl4aFFVRkxMR2RDUVVGblFpeExRVUZMTEZOQlFWTTdRVUZGYmtNc1kwRkJUU3hOUVVGTkxFdEJRVXM3UVVGRmFrSXNZMEZCVFN4UFFVRlBMRXRCUVVzc1VVRkJVVHRCUVVVeFFpeGhRVUZMTEZGQlFWRXNUMEZCVHp0QlFVRkJMRlZCUTJoQ0xFMUJRVTBzU1VGQlNTeFBRVUZQTEV0QlFVczdRVUZCUVN4VlFVTjBRaXhMUVVGTExFbEJRVWtzVFVGQlRTeExRVUZMTzBGQlFVRXNWVUZEY0VJc1QwRkJUeXhKUVVGSkxGRkJRVkVzUzBGQlN6dEJRVUZCTEZGQlF6VkNPMEZCUlVFc1lVRkJTeXhSUVVGUkxFOUJRVTg3UVVGQlFTeFZRVU5vUWl4TlFVRk5MRWxCUVVrN1FVRkJRU3hWUVVOV0xFdEJRVXNzU1VGQlNUdEJRVUZCTEZWQlExUXNUMEZCVHl4SlFVRkpPMEZCUVVFc1VVRkRaanRCUVVWQkxHTkJRVTBzVlVGQlZTeExRVUZMTEZGQlFWRTdRVUZGTjBJc1kwRkJUU3hoUVVGaExGRkJRVkVzVVVGQlVTeEpRVUZKTEV0QlFVc3NUMEZCVVN4UlFVRlJMRTlCUVU4c1VVRkJVU3hQUVVGUExGRkJRVkVzVVVGQlV5eEhRVUZITEVsQlFVazdRVUZETVVjc1kwRkJUU3hoUVVGaExFdEJRVXNzVlVGQlZTeFJRVUZSTEVsQlFVa3NTMEZCU3l4TlFVRlBMRXRCUVVzc1ZVRkJWU3hQUVVGUExFdEJRVXNzVlVGQlZTeFJRVUZUTEVkQlFVY3NTVUZCU1R0QlFVVXZSeXhsUVVGUExFVkJRVVVzUzBGQlN5eExRVUZMTEVsQlFVa3NTMEZCU3l4VlFVRlZMRWRCUVVjc1MwRkJTeXhMUVVGTExFbEJRVWtzUzBGQlN5eFZRVUZWTEVWQlFVVTdRVUZCUVN4TlFVTTFSU3hUUVVGVExFOUJRVTg3UVVGRFdpeG5Ra0ZCVVN4TFFVRkxMSGxEUVVGelF5eExRVUZMTzBGQlEzaEVMR1ZCUVU4c1JVRkJSU3hMUVVGTExFZEJRVWNzUzBGQlN5eEZRVUZGTzBGQlFVRXNUVUZETlVJN1FVRkJRU3hKUVVOS0xFTkJRVU03UVVGQlFTeEZRVU5NTzBGQlFVRXNSVUZGUVN4SlFVRlhMR2RDUVVGblFqdEJRVU4yUWl4WFFVTkpMSEZDUVVGRExGTkJRVWtzV1VGQldTeERRVUZETEdWQlFXVXNSMEZETjBJN1FVRkJRU3d5UWtGQlF5eFRRVUZKTEZsQlFWa3NRMEZCUXl4VlFVRlZMRWRCUTNoQ08wRkJRVUVzTkVKQlFVTXNWMEZCVFN4WlFVRlpMRU5CUVVNc1RVRkJUU3hIUVVGSExFOUJRVThzVlVGQlN6dEJRVUZCTEZGQlEzcERMRzlDUVVGRExGZEJRVTBzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRXRCUVVzc1UwRkJVeXhIUVVGSExFOUJRVXNzUjBGQlJ5eEZRVUZGTEVkQlFVY3NSMEZCUnl4SFFVRkhMRmxCUVZrc1IwRkJSenRCUVVGQkxGTkJRelZHTzBGQlFVRXNUVUZEUVN4eFFrRkJReXhUUVVGSkxGbEJRVmtzUTBGQlF5eGhRVUZoTEVkQlF6TkNPMEZCUVVFc05FSkJRVU1zVjBGQlRTeFpRVUZaTEVOQlFVTXNUVUZCVFN4SFFVRkhMRTlCUVU4c1lVRkJUVHRCUVVGQkxGRkJRekZETEc5Q1FVRkRMRmRCUVUwc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEV0QlFVc3NVMEZCVXl4SFFVRkhMRTlCUVVzc1IwRkJSeXhGUVVGRkxFZEJRVWNzUjBGQlJ5eEhRVUZITEZsQlFWa3NSMEZCUnp0QlFVRkJMRk5CUXpWR08wRkJRVUVzVFVGRFFTeHhRa0ZCUXl4VFFVRkpMRmxCUVZrc1MwRkJTeXhwUWtGQmFVSXNZVUZCWVN4TFFVRkxMR3RDUVVOeVJEdEJRVUZCTERSQ1FVRkRMRmRCUVUwc1dVRkJXU3hEUVVGRExHRkJRV0VzUjBGQlJ5eFZRVUZWTEV0QlFVc3NZVUZCWVR0QlFVRkJMRkZCUTJoRkxHOUNRVUZETEZkQlFVMHNXVUZCV1N4RFFVRkRMRzFDUVVGdFFpeEhRVUZITEU5QlFVOHNTMEZCU3l4clFrRkJhMElzUjBGQlJ5eFBRVUZMTEVkQlFVY3NTMEZCU3l4TlFVRk5MRXRCUVVzc1NVRkJTU3hIUVVGSExFTkJRVU1zU1VGQlNTeEhRVUZITEV0QlFVc3NRMEZCUXl4SFFVRkhMRWRCUVVjN1FVRkJRU3hUUVVOc1NUdEJRVUZCTEU5QlEwbzdRVUZCUVN4RlFVVlNPMEZCUTBvN1FVRkZRU3hKUVVGTkxHZENRVUZuUWl4SlFVRkpPMEZCUXpGQ0xFbEJRVThzZDBKQlFWRTdPenRCWjBJMVJtWXNUMEZCVHl4bFFVRmxPMEZCUlhSQ0xFbEJRVTBzYTBKQlFVNHNUVUZCYzBJN1FVRkJRU3hGUVVsWUxHTkJRV003UVVGTGNrSXNVMEZCVVN4blFrRkJaMElzUTBGQlF5eExRVUZ4UWl4VFFVRTJRanRCUVVOMlJTeFZRVUZKTEZsQlFWa3NTMEZCU3p0QlFVTnlRaXhWUVVGSkxHOUNRVUZ2UWl4WlFVRlpMRXRCUVVzc1YwRkJWenRCUVVWd1JDeFpRVUZOTEU5QlFVOHNTMEZCU3l4UlFVRlJMSGRDUVVGM1FpeE5RVUZOTzBGQlEzQkVMRmxCUVVrc2IwSkJRVzlDTEZsQlFWa3NTMEZCU3l4WFFVRlhPMEZCUVVFc1RVRkRlRVFzUTBGQlF6dEJRVVZFTEZsQlFVMHNUMEZCVHl4TFFVRkxMRkZCUVZFc2MwSkJRWE5DTEUxQlFVMDdRVUZEYkVRc1dVRkJTU3hsUVVGbExFdEJRVXNzVTBGQlV6dEJRVUZCTEUxQlEzSkRMRU5CUVVNN1FVRkZSQ3huUWtGQlZTeE5RVUZOTzBGQlExb3NZVUZCU3l4WFFVRlhMRWxCUVVrN1FVRkRjRUlzWVVGQlN5eFhRVUZYTEVsQlFVazdRVUZCUVN4TlFVTjRRaXhEUVVGRE8wRkJRVUVzU1VGRFREdEJRWEJDU1N4VFFVRkxMRlZCUVZVc1ZVRkJWU3haUVVGWk8wRkJRM0pETEZOQlFVc3NaVUZCWlN4alFVRmpMRXRCUVVzc1UwRkJVeXhQUVVGUE8wRkJRVUVzUlVGRE0wUTdRVUZCUVN4RlFXOUNVU3hUUVVGVExFVkJRVVVzUzBGQlN5eEhRVUZwUXp0QlFVTnlSQ3hYUVVOSk8wRkJRVUVzVFVGQlF6dEJRVUZCTzBGQlFVRXNVVUZEUnl4WlFVRlpMRU5CUVVNc1ZVRkJWVHRCUVVGQkxGRkJRM1pDTEdWQlFXVXNZMEZCWXl4TlFVRk5MR1ZCUVdVN1FVRkJRU3hSUVVOc1JDeEhRVUZITEVOQlFVTXNVMEZCVXl4TFFVRkxMR05CUVdNc1RVRkJUU3hKUVVGSk8wRkJRVUVzVVVGRE1VTXNVVUZCVVN4SlFVRkpMRTFCUVUwN1FVRkJRU3hSUVVOc1FpeFJRVUZSTEVsQlFVa3NUVUZCVFR0QlFVRkJMRkZCUld4Q0xEaENRVUZETEZkQlFVMHNUMEZCVHl4alFVRmpMRTFCUVUwc1QwRkJUeXhIUVVGSE8wRkJRVUU3UVVGQlFTeEpRVU5vUkR0QlFVRkJMRVZCUlZJN1FVRkJRU3hGUVVWQkxFbEJRVmNzWVVGQllUdEJRVU53UWl4WFFVTkpMRzlDUVVGRExGTkJRVWtzV1VGQldTeERRVUZETEZsQlFWa3NSMEZETVVJc09FSkJRVU1zVDBGQlNTeE5RVUZOTEV0QlFVc3NZMEZCWXl4VlFVRlZMRU5CUVVNc1UwRkJVeXhMUVVGTExGTkJRVk1zUlVGQlJTeExRVUZMTEVOQlFVTXNSMEZCUnl4SFFVTXZSVHRCUVVGQkxFVkJSVkk3UVVGRFNqdEJRVVZCTEVsQlFVMHNZVUZCWVN4SlFVRkpPMEZCUlhaQ0xFbEJRVThzY1VKQlFWRTdPenRCUTNSRVppeFBRVUZQTEdkQ1FVRm5RanRCUVVsMlFpeEpRVUZOTEc5Q1FVRnZRanRCUVVGQkxFVkJRM1JDTEZOQlFWTTdRVUZCUVN4RlFVTlVMRkZCUVZFN1FVRkJRU3hGUVVOU0xGTkJRVk03UVVGQlFTeEZRVU5VTEUxQlFVMDdRVUZCUVN4RlFVTk9MRlZCUVZVN1FVRkRaRHRCUVdOQkxFbEJRVTBzWVVGQlRpeE5RVUZwUWp0QlFVRkJMRVZCU1U0c1kwRkJZenRCUVVOcVFpeFRRVUZMTEZGQlFWRXNWMEZCVnl4WlFVRlpPMEZCUTNCRExGTkJRVXNzYjBKQlFXOUNMR05CUVdNc1MwRkJTeXhQUVVGUExGTkJRVk1zUlVGQlJUdEJRVUZCTEUxQlF6RkVMRU5CUVVNc1dVRkJXVHRCUVVOVUxGbEJRVWtzVlVGQmIwTTdRVUZEZUVNc1dVRkJTU3hUUVVGdFF6dEJRVU4yUXl4WlFVRkpMRkZCUVd0RE8wRkJSWFJETEcxQ1FVRlhMRlZCUVZVc1UwRkJVenRCUVVNeFFpeG5Ra0ZCVFN4VFFVRlRMRTlCUVU4c2IwSkJRVzlDTzBGQlF6RkRMR05CUVVrc1YwRkJWeXhYUVVGWExHVkJRV1VzVTBGQlV6dEJRVU01UXl4elFrRkJWVHRCUVVOV08wRkJRVUVzVlVGRFNpeFhRVUZYTEZkQlFWY3NWMEZCVnl4bFFVRmxMRkZCUVZFN1FVRkRjRVFzY1VKQlFWTTdRVUZCUVN4VlFVTmlPMEZCUVVFc1VVRkRTanRCUVVWQkxHZENRVUZSTEZkQlFWYzdRVUZGYmtJc1dVRkJTU3hWUVVGVkxFMUJRVTA3UVVGRGFFSXNaMEpCUVUwc1UwRkJVeXhqUVVGakxFOUJRVThzWjBKQlFXZENPMEZCUTNCRUxHZENRVUZOTEZsQlFWa3NZMEZCWXl4UFFVRlBMRmRCUVZjN1FVRkRiRVFzWjBKQlFVMHNaMEpCUVdkQ0xHTkJRV01zVDBGQlR5eGxRVUZsTzBGQlF6RkVMR2RDUVVGTkxGZEJRVmNzWTBGQll5eFBRVUZQTEZWQlFWVTdRVUZEYUVRc1owSkJRVTBzVlVGQlZTeGpRVUZqTEU5QlFVOHNVMEZCVXp0QlFVVTVReXhwUWtGQlR6dEJRVUZCTEZsQlEwZ3NVVUZCVVR0QlFVRkJMRmxCUTFJc1QwRkJUeXhqUVVGakxFOUJRVThzVDBGQlR6dEJRVUZCTEZsQlEyNURMRkZCUVZFc1kwRkJZeXhQUVVGUExGRkJRVkU3UVVGQlFTeFpRVU55UXl4UFFVRlBMR05CUVdNc1QwRkJUeXhQUVVGUE8wRkJRVUVzV1VGRGJrTXNXVUZCV1N4UFFVRlBMRWRCUVVjc1VVRkJUU3hMUVVGTExHOUNRVUZ2UWl4UFFVRlBMRmRCUVZjc1pVRkJaU3hWUVVGVkxGZEJRVmNzVTBGQlV5eERRVUZETzBGQlFVRXNXVUZEY2tnc1dVRkJXU3hQUVVGUExFZEJRVWNzVVVGQlRTeExRVUZMTEdkQ1FVRm5RaXhGUVVGRkxFTkJRVU03UVVGQlFTeFpRVU53UkN4TlFVRk5MRTFCUVUwN1FVRkRVaXhyUWtGQlNTeFZRVUZWTEVsQlFVa3NSVUZCUnl4UFFVRlBMRXRCUVVzN1FVRkJRU3haUVVOeVF6dEJRVUZCTEZsQlEwRXNWVUZCVlN4TlFVRk5PMEZCUTFvc2EwSkJRVWtzWTBGQll5eEpRVUZKTEVWQlFVY3NUMEZCVHl4VFFVRlRPMEZCUVVFc1dVRkROME03UVVGQlFTeFpRVU5CTEZkQlFWY3NUVUZCVFR0QlFVTmlMR3RDUVVGSkxGTkJRVk1zU1VGQlNTeExRVUZMTEZGQlFWRXNTVUZCU1N4RlFVRkhMRTlCUVU4c1YwRkJWenRCUVVGQkxGbEJRek5FTzBGQlFVRXNWVUZEU2p0QlFVRkJMRkZCUTBvN1FVRkZRU3hsUVVGUE8wRkJRVUVzVlVGRFNDeFJRVUZSTzBGQlFVRXNWVUZEVWl4UFFVRlBPMEZCUVVFc1ZVRkRVQ3hSUVVGUk8wRkJRVUVzVlVGRFVpeFBRVUZQTzBGQlFVRXNWVUZEVUN4WlFVRlpMR3RDUVVGclFqdEJRVUZCTEZWQlF6bENMRmxCUVZrc1MwRkJTeXhuUWtGQlowSXNWMEZCVnl4bFFVRmxMRTlCUVU4N1FVRkJRU3hWUVVOc1JTeE5RVUZOTEUxQlFVMDdRVUZCUVN4VlFVRkZPMEZCUVVFc1ZVRkRaQ3hWUVVGVkxFMUJRVTA3UVVGQlFTeFZRVUZGTzBGQlFVRXNWVUZEYkVJc1YwRkJWeXhOUVVGTk8wRkJRVUVzVlVGQlJUdEJRVUZCTEZGQlEzWkNPMEZCUVVFc1RVRkRTanRCUVVGQkxFbEJRMG83UVVGQlFTeEZRVU5LTzBGQlFVRXNSVUZGVVN4blFrRkJaMElzVVVGQmJVTTdRVUZEZGtRc1dVRkJUeXhSUVVGUk8wRkJRVUVzVFVGRFdDeExRVUZMTEZkQlFWY3NaVUZCWlR0QlFVTXpRaXhsUVVGUE8wRkJRVUVzVFVGRFdDeExRVUZMTEZkQlFWY3NaVUZCWlR0QlFVTXpRaXhsUVVGUE8wRkJRVUVzVFVGRFdEdEJRVU5KTEdWQlFVODdRVUZCUVN4SlFVTm1PMEZCUVVFc1JVRkRTanRCUVVGQkxFVkJSVkVzYjBKQlFXOUNMRkZCUVhOQ08wRkJRemxETEZsQlFVOHNVVUZCVVR0QlFVRkJMRTFCUTFnc1MwRkJTenRCUVVORUxHVkJRVThzYTBKQlFXdENPMEZCUVVFc1RVRkROMElzUzBGQlN6dEJRVU5FTEdWQlFVOHNhMEpCUVd0Q08wRkJRVUVzVFVGRE4wSXNTMEZCU3p0QlFVTkVMR1ZCUVU4c2EwSkJRV3RDTzBGQlFVRXNUVUZETjBJc1MwRkJTenRCUVVORUxHVkJRVThzYTBKQlFXdENPMEZCUVVFc1RVRkROMElzUzBGQlN6dEJRVU5FTEdWQlFVOHNhMEpCUVd0Q08wRkJRVUVzVFVGRE4wSTdRVUZEU1N4bFFVRlBMR3RDUVVGclFqdEJRVUZCTEVsQlEycERPMEZCUVVFc1JVRkRTanRCUVVGQkxFVkJSVUVzU1VGQlZ5eFJRVUZSTzBGQlEyWXNWMEZEU1N4dlFrRkJReXhUUVVORUxEaENRVUZETEZGQlFVc3NUMEZCVHl4TFFVRkxMRzFDUVVOaUxITkNRVUZWTzBGQlExQXNZVUZEU1R0QlFVRkJMRkZCUVVNN1FVRkJRVHRCUVVGQkxGVkJRMGNzYVVKQlFXbENPMEZCUVVFc1ZVRkRha0lzV1VGQldTeERRVUZETEU5QlFVODdRVUZCUVN4VlFVTndRaXhYUVVGWExFOUJRVTg3UVVGQlFTeFZRVU5zUWl4VFFVTkpMRzlDUVVGRExHRkJRMGNzT0VKQlFVTXNVMEZCU1N4WlFVRlpMRU5CUVVNc1kwRkJZeXhIUVVGSExGVkJRVlVzU1VGQlNTeFRRVUZUTEZGQlEzUkVMQ3RDUVVGRExGTkJRVWtzV1VGQldTeERRVUZETEdGQlFXRXNSMEZCUnl4aFFVRmhMRWxCUVVrc1dVRkJXU3hWUVVNelJEdEJRVUZCTEdsRFFVRkRMRk5CUVVrc1dVRkJXU3hEUVVGRExGVkJRVlVzUjBGQlJ5eGhRVUZoTEVsQlFVa3NXVUZCV1N4VlFVTjRSRHRCUVVGQkxHdERRVUZETEZkQlFVMHNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhQUVVGUExFOUJRVThzVDBGQlR5eFhRVUZYTEVkQlFVY3NaVUZCWlN4SlFVRkpMRmxCUVZrc1NVRkJTVHRCUVVGQkxHTkJRM0JITEc5Q1FVRkRMRmRCUVUwc1dVRkJXU3hEUVVGRExGRkJRVkVzUjBGQlJ5eFBRVUZQTEU5QlFVOHNVVUZCVVN4WFFVRlhMRWRCUVVjc1pVRkJaU3hKUVVGSkxGbEJRVmtzU1VGQlNUdEJRVUZCTEdOQlEzUkhMRzlDUVVGRExGZEJRVTBzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRTlCUVU4c1QwRkJUeXhYUVVGWExFZEJRVWNzWlVGQlpTeEpRVUZKTEZsQlFWa3NTVUZCU1R0QlFVRkJMR1ZCUTNoSE8wRkJRVUVzV1VGRFFTeHZRa0ZCUXl4VFFVRkpMRmxCUVZrc1EwRkJReXhYUVVGWExFZEJRVWNzWVVGQllTeEpRVUZKTEZsQlFWa3NWVUZEZWtRc0swSkJRVU1zVTBGQlNTeFpRVUZaTEVOQlFVTXNZVUZCWVN4SFFVRkhMRkZCUVZFc1NVRkJTU3hOUVVGTkxGRkJRMmhFTzBGQlFVRTdRVUZCUVN4blFrRkJRenRCUVVGQk8wRkJRVUVzYTBKQlFVa3NXVUZCV1N4RFFVRkRMRlZCUVZVN1FVRkJRU3hyUWtGQlJ5eFhRVUZYTEU5QlFVODdRVUZCUVN4clFrRkROME1zUjBGRFNTeERRVUZETEZOQlFWTTdRVUZEVGl3d1FrRkJUU3hSUVVGUkxFbEJRVWtzU1VGQlNTeGhRVUZoTEVWQlFVVXNVVUZCVVN4SlFVRkpMR1ZCUVdVc1EwRkJRenRCUVVOcVJTd3dRa0ZCVFN4VlFVRlZMRTFCUVUwc1VVRkJVU3hYUVVGWExFOUJRVThzVVVGQlVUdEJRVU40UkN4NVFrRkJTeXhsUVVGbExFdEJRVXM3UVVGRGVrSXNPRUpCUVZVc1RVRkJTenRCUVVGRExEUkNRVUZOTEZkQlFWY3NUMEZCVHp0QlFVRkJMRzlDUVVGRExFTkJRVU03UVVGQlFTeHJRa0ZET1VNN1FVRkJRU3hyUWtGSFNpdzRRa0ZCUXl4WFFVRk5MRlZCUVZVc1NVRkJTU3hUUVVGVExFOUJRVThzVlVGQlZTeHJRa0ZCYTBJc1ZVRkJWVHRCUVVGQk8wRkJRVUVzWTBGREwwVTdRVUZCUVN4alFVTkJPMEZCUVVFc1owSkJRVU03UVVGQlFUdEJRVUZCTEd0Q1FVRkpMRmxCUVZrc1EwRkJReXhYUVVGWE8wRkJRVUVzYTBKQlFVY3NWMEZCVnl4UFFVRlBPMEZCUVVFc2EwSkJRemxETEVkQlEwa3NRMEZCUXl4VFFVRlRPMEZCUTA0c01FSkJRVTBzVVVGQlVTeEpRVUZKTEVsQlFVa3NZVUZCWVN4RlFVRkZMRkZCUVZFc1NVRkJTU3hsUVVGbExFTkJRVU03UVVGRGFrVXNNRUpCUVUwc1ZVRkJWU3hOUVVGTkxGRkJRVkVzVjBGQlZ5eFBRVUZQTEZOQlFWTTdRVUZEZWtRc2VVSkJRVXNzWlVGQlpTeExRVUZMTzBGQlEzcENMRGhDUVVGVkxFMUJRVXM3UVVGQlF5dzBRa0ZCVFN4WFFVRlhMRTlCUVU4N1FVRkJRU3h2UWtGQlF5eERRVUZETzBGQlFVRXNhMEpCUXpsRE8wRkJRVUVzYTBKQlIwb3NPRUpCUVVNc1YwRkJUU3hWUVVGVkxFbEJRVWtzVTBGQlV5eFBRVUZQTEZWQlFWVXNUMEZCVHl4WlFVRlpPMEZCUVVFN1FVRkJRU3hqUVVOMFJUdEJRVUZCTEdOQlEwRTdRVUZCUVN4blFrRkJRenRCUVVGQk8wRkJRVUVzYTBKQlFVa3NXVUZCV1N4RFFVRkRMRTFCUVUwN1FVRkJRU3hyUWtGQlJ5eFhRVUZYTEU5QlFVODdRVUZCUVN4clFrRkRla01zUjBGRFNTeERRVUZETEZOQlFWTTdRVUZEVGl3d1FrRkJUU3hSUVVGUkxFbEJRVWtzU1VGQlNTeGhRVUZoTEVWQlFVVXNVVUZCVVN4SlFVRkpMR1ZCUVdVc1EwRkJRenRCUVVOcVJTd3dRa0ZCVFN4VlFVRlZMRTFCUVUwc1VVRkJVU3hYUVVGWExFOUJRVThzU1VGQlNUdEJRVU53UkN4NVFrRkJTeXhsUVVGbExFdEJRVXM3UVVGRGVrSXNPRUpCUVZVc1RVRkJTenRCUVVGRExEUkNRVUZOTEZkQlFWY3NUMEZCVHp0QlFVRkJMRzlDUVVGRExFTkJRVU03UVVGQlFTeHJRa0ZET1VNN1FVRkJRU3hyUWtGSFNpdzRRa0ZCUXl4WFFVRk5MRlZCUVZVc1NVRkJTU3hUUVVGVExFOUJRVThzVlVGQlZTeHJRa0ZCYTBJc1RVRkJUVHRCUVVGQk8wRkJRVUVzWTBGRE0wVTdRVUZCUVN4bFFVTktMRWRCUTBvN1FVRkJRU3hoUVVOS0xFZEJRMG9zUjBGRFNqdEJRVUZCTEZWQlJVb3NPRUpCUVVNc1YwRkJUU3hQUVVGUExFOUJRVThzV1VGQldTeFpRVUZaTEVsQlFVYzdRVUZCUVR0QlFVRkJMRTFCUTNCRU8wRkJRVUVzU1VGRlVpeEhRVU5LTEVkQlEwRTdRVUZCUVN4RlFVVlNPMEZCUTBvN1FVRkZRU3hKUVVGTkxGRkJRVkVzU1VGQlNUdEJRVVZzUWl4SlFVRlBMR2RDUVVGUk96czdRVU5zVFdZc1QwRkJUME1zVjBGQlZUdEJRVU5xUWl4UFFVRlBReXhWUVVGVE8wRkJRMmhDTEU5QlFVOURMRmxCUVZjN096dEJRMGxzUWl4VFFVRlRReXhWUVVGVExFdEJRV0U3UVVGRE0wSXNVMEZCVHl4SlFVTkdMRkZCUVZFc2JVSkJRVzFDTEU5QlFVOHNSVUZEYkVNc1YwRkJWeXhMUVVGTExFZEJRVWNzUlVGRGJrSXNXVUZCV1R0QlFVTnlRanRCUVVWQkxHVkJRV1VzVTBGQldVTXNUVUZCT0VKRExGRkJRWFZDTzBGQlF6VkZMRk5CUVU5RUxFdEJRVWtzUzBGQlN5eERRVUZETEUxQlFVMURMRTlCUVUwc1JVRkJSU3hQUVVGUExFTkJRVU1zUlVGQlJTeE5RVUZOTEUxQlFVMHNUVUZCVFR0QlFVTXZSRHRCUVVWQkxGTkJRVk1zVFVGQmQwSXNUMEZCVlN4TlFVRm5RenRCUVVOMlJTeFRRVUZQTEdWQlFXVXNUMEZCVHl4TlFVRk5PMEZCUVVFc1NVRkRMMElzVFVGQlRUdEJRVU5HTEdGQlFVOHNTMEZCU3l4UFFVRlBSaXhWUVVGVExFbEJRVWtzUTBGQlF5eEZRVUZGTEVWQlFVVTdRVUZCUVN4SlFVTjZRenRCUVVGQkxFVkJRMG9zUTBGQlF6dEJRVU5NTzBGQlJVRXNUVUZCVFN4VFFVRlRMRTlCUVU4c1owSkJRV2RDTEVkQlFVY3NRMEZCUXl4RlFVRkZMRTFCUVUwc1dVRkJXU3hOUVVGTk8wRkJRMmhGTEZGQlFVMHNTMEZCU3l4WFFVRlhMRTFCUVUwN1FVRkROVUlzVVVGQlRTeFpRVUZaTEZkQlFWY3NWVUZCVlR0QlFVTjJReXhSUVVGTkxGbEJRVmtzVjBGQlZ5eFpRVUZaTzBGQlF6ZERMRU5CUVVNN1FVRkZSQ3hOUVVGTkxGTkJRVk1zVDBGQlR5eHRRa0ZCYlVJc1IwRkJSeXhEUVVGRExFVkJRVVVzVDBGQlR5eE5RVUZOTzBGQlEzaEVMRkZCUVUwc1QwRkJUeXhYUVVGWExGTkJRVk03UVVGRGNrTXNRMEZCUXp0QlFVVkVMRTFCUVUwc1UwRkJVeXhQUVVGUExIRkNRVUZ4UWl4SFFVRkhMRU5CUVVNc1JVRkJSU3hUUVVGVExGZEJRVmNzVDBGQlR5eE5RVUZOTzBGQlF6bEZMRkZCUVUwc1VVRkJVU3hYUVVGWExFOUJRVTg3UVVGRGFFTXNVVUZCVFN4VlFVRlZMRmRCUVZjc1ZVRkJWVHRCUVVOeVF5eFJRVUZOTEZWQlFWVXNWMEZCVnl4VFFVRlRPMEZCUTNCRExGRkJRVTBzVDBGQlR5eFhRVUZYTEU5QlFVODdRVUZEYmtNc1EwRkJRenRCUVVWRUxFMUJRVTBzVTBGQlV5eFBRVUZQTEc5Q1FVRnZRaXhIUVVGSExFTkJRVU1zUlVGQlJTeFZRVUZCUnl4WFFVRlZMRk5CUVZNc1ZVRkJWU3hOUVVGTk8wRkJReTlGTEZGQlFVMUJMRlZCUVZNc1YwRkJWeXhQUVVGUE8wRkJRMnBETEZGQlFVMUJMRlZCUVZNc1YwRkJWeXhWUVVGVk8wRkJRM0JETEZGQlFVMUJMRlZCUVZNc1YwRkJWeXhaUVVGWk8wRkJRM1JETEZGQlFVMUJMRlZCUVZNc1YwRkJWeXhUUVVGVE8wRkJRMjVETEZGQlFVMHNVVUZCVVN4WFFVRlhMR2RDUVVGblFqdEJRVU42UXl4UlFVRk5MRkZCUVZFc1YwRkJWeXhwUWtGQmFVSTdRVUZETVVNc1VVRkJUU3hWUVVGVkxGZEJRVmNzVTBGQlV6dEJRVU40UXl4RFFVRkRPMEZCUlVRc1RVRkJUU3hUUVVGVExFOUJRVThzYVVKQlFXbENMRWRCUVVjc1EwRkJReXhGUVVGRkxFOUJRVThzVDBGQlR5eE5RVUZOTzBGQlF6ZEVMRkZCUVUwc1RVRkJUU3hYUVVGWExGTkJRVk03UVVGRGFFTXNVVUZCVFN4UFFVRlBMRmRCUVZjc2RVSkJRWFZDTzBGQlF5OURMRkZCUVUwc1QwRkJUeXhYUVVGWExIRkNRVUZ4UWp0QlFVTTNReXhSUVVGTkxFOUJRVThzVjBGQlZ5eHpRa0ZCYzBJN1FVRkRPVU1zVVVGQlRTeFBRVUZQTEZkQlFWY3NiMEpCUVc5Q08wRkJRelZETEZGQlFVMHNUMEZCVHl4WFFVRlhMRlZCUVZVN1FVRkRkRU1zUTBGQlF6dEJRVVZFTEUxQlFVMHNVMEZCVXl4UFFVRlBMRzFDUVVGdFFpeEhRVUZITEVOQlFVTXNSVUZCUlN4TFFVRkxMRTFCUVUwN1FVRkRkRVFzVVVGQlRTeExRVUZMTEZkQlFWY3NaVUZCWlR0QlFVTnlReXhSUVVGTkxFdEJRVXNzVjBGQlZ5eGpRVUZqTzBGQlEzaERMRU5CUVVNN1FVRkZSQ3hOUVVGTkxGTkJRVk1zVDBGQlR5eHJRa0ZCYTBJc1IwRkJSeXhEUVVGRExFVkJRVVVzVVVGQlVTeGhRVUZoTEUxQlFVMDdRVUZEY2tVc1VVRkJUU3hQUVVGUExGZEJRVmNzWlVGQlpUdEJRVU4yUXl4UlFVRk5MR0ZCUVdFc1YwRkJWeXhUUVVGVE8wRkJRek5ETEVOQlFVTTdRVUZGUkN4TlFVRk5MRk5CUVZNc1QwRkJUeXg1UWtGQmVVSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1kwRkJZeXhOUVVGTk8wRkJRM0pGTEZGQlFVMHNZMEZCWXl4WFFVRlhMRk5CUVZNN1FVRkROVU1zUTBGQlF6dEJRVVZFTEUxQlFVMHNVMEZCVXl4UFFVRlBMR05CUVdNc1IwRkJSeXhEUVVGRExFVkJRVVVzU1VGQlFVTXNTMEZCU1N4UFFVRlBMRTFCUVUwc1RVRkJUVHRCUVVNM1JDeFJRVUZOUVN4SlFVRkhMRmRCUVZjc1UwRkJVenRCUVVNM1FpeFJRVUZOTEUxQlFVMHNWMEZCVnl4VFFVRlRPMEZCUTJoRExGRkJRVTBzVFVGQlRTeFhRVUZYTEZkQlFWYzdRVUZEYkVNc1VVRkJUU3hOUVVGTkxGZEJRVmNzWVVGQllUdEJRVU53UXl4UlFVRk5MRTFCUVUwc1YwRkJWeXhWUVVGVk8wRkJRMnBETEZGQlFVMHNUVUZCVFN4WFFVRlhMRk5CUVZNN1FVRkRhRU1zVVVGQlRTeE5RVUZOTEZkQlFWY3NVMEZCVXp0QlFVTm9ReXhSUVVGTkxFMUJRVTBzVjBGQlZ5eFhRVUZYTzBGQlEyeERMRkZCUVUwc1RVRkJUU3hYUVVGWExFOUJRVTg3UVVGRE9VSXNVVUZCVFN4TlFVRk5MRmRCUVZjc1UwRkJVenRCUVVOb1F5eFJRVUZOTEUxQlFVMHNWMEZCVnl4VFFVRlRPMEZCUTNCRExFTkJRVU03UVVGRlJDeE5RVUZOTEZOQlFWTXNUMEZCVHl4blFrRkJaMElzUjBGQlJ5eERRVUZETEVWQlFVVXNTMEZCU3l4TlFVRk5PMEZCUTI1RUxGRkJRVTBzUzBGQlN5eFhRVUZYTEU5QlFVODdRVUZEYWtNc1EwRkJRenM3TzBGRE1VWkVMRk5CUVZNc01rSkJRVEpDTzBGQlEzQkRMRk5CUVZNc1RVRkJUU3h0UWtGQmJVSTdRVUZGYkVNc1QwRkJUeXhSUVVGUk8wRkJRMllzVDBGQlQwTXNZMEZCWVR0QlFYZERZaXhUUVVGVExFMUJRVTBzUzBGQmEwSTdRVUZEY0VNc1UwRkJUeXhKUVVGTExFMUJRVTBzWjBKQlFXZENMRWxCUVVrN1FVRkJRU3hKUVVkc1F5eFBRVUZQTzBGQlEwZ3NUVUZCUVVFc1UwRkJVU3hqUVVGakxFVkJRVVVzVjBGQlZ5eFZRVUZWTEVkQlFVY3NTVUZCVnp0QlFVRkJMRWxCUXk5RU8wRkJRVUVzU1VGRlFTeExRVUZMTEUxQlFUUkNPMEZCUXpkQ0xHRkJRVThzU1VGQlNTeFJRVUZSTEVOQlFVTXNTMEZCU3l4UlFVRlJPMEZCUXpkQ0xGbEJRVWs3UVVGRFFTeG5Ra0ZCVFN4TFFVRkxMRk5CUVZNN1FVRkJRU3d3UWtGRFpDeExRVUZMTEZOQlFWTXNSMEZCUnl4SlFVRkpMRTlCUVU4c1ZVRkJWU3hKUVVGSkxFZEJRVWM3UVVGQlFTeDFRa0ZEYUVRN1FVRkRTQ3hoUVVGSExFVkJRVVVzUlVGQlJTeExRVUZMTEVkQlFVY3NSVUZCUlN4TlFVRk5MRWRCUVVjN1FVRkJRU3hSUVVNNVFpeFRRVUZUTEU5QlFVODdRVUZEV2l4alFVRkpMRXRCUVVzN1FVRkJRU3hSUVVOaU8wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVER0QlFVRkJMRWxCU1VFc2FVSkJRWFZDTzBGQlEyNUNMRmxCUVUwc1pVRkJaVHRCUVVOeVFpeFhRVUZMTEdOQlFXTTdRVUZCUVN4SlFVTjJRanRCUVVGQkxFbEJSVUVzWTBGQll5eExRVUZoTEUxQlFXdERPMEZCUTNwRUxGVkJRVWtzVDBGQlR5eExRVUZMTEcxQ1FVRnRRaXhaUVVGWk8wRkJRek5ETEdGQlFVc3NaVUZCWlN4TFFVRkxMRU5CUVVNc1lVRkJZVHRCUVVOdVF5eGhRVUZITEZkQlFWY3NUVUZCVFN4UFFVRlBMRkZCUVZFc1IwRkJSeXhEUVVGRExFZEJRVWNzVVVGQlVTeEhRVUZITEd0Q1FVRnJRaXhIUVVGSExFTkJRVU03UVVGQlFTeFJRVU12UlN4RFFVRkRPMEZCUVVFc1RVRkRUQ3hQUVVGUE8wRkJRMGdzWTBGQlRTeGpRVUZqTEV0QlFVc3NTVUZCU1R0QlFVRkJMRTFCUTJwRE8wRkJRVUVzU1VGRFNqdEJRVUZCTEVsQlJVRXNWVUZCVlN4UFFVRmxMRkZCUVZFc1QwRkJUenRCUVVOd1F5eFpRVUZOTEZWQlFWVXNUMEZCVHl4TFFVRkxPMEZCUVVFc1NVRkRhRU03UVVGQlFTeEpRVVZCTEV0QlFVc3NUVUZCY1VJN1FVRkRkRUlzV1VGQlRTeExRVUZMTzBGQlExZ3NWMEZCU3l4UlFVRlJMRU5CUVVNN1FVRkJRU3hKUVVOc1FqdEJRVUZCTEVsQlJVRXNUVUZCVFN4RlFVRkZMR2RDUVVGblFpeExRVUZMTEUxQlFVMHNUVUZCUVVNc1QwRkJUU3hSUVVGUkxFOUJRVThzUjBGQlJ5eEpRVUZKTEVsQlFWa3NRMEZCUXl4SFFVRkhPMEZCUXpORkxGbEJRVTBzVFVGQlRUdEJRVVZhTEdsQ1FVRlhMRTFCUVUwN1FVRkRZaXhqUVVGTkxHMUNRVUZ0UWl4SlFVRkpMRmxCUVZrc2JVSkJRVzFDTzBGQlF6VkVMR0ZCUVVzc1EwRkJRenRCUVVGQkxFMUJRMVk3UVVGRlFTeGhRVUZQTEU5QlFVOHNUVUZCVFN4SFFVRkhPMEZCUTNaQ0xEQkNRVUZ2UWl4SlFVRkpMRmxCUVZrN1FVRkZjRU1zVjBGQlN5eHBRa0ZCYVVJN1FVRkRkRUlzVlVGQlNTeFJRVUZSTEZsQlFWa3NUVUZCVFR0QlFVTXhRaXh0UWtGQlZ5eERRVUZETEZsQlFWazdRVUZEY0VJc1pVRkJTeXhqUVVGak8wRkJRMjVDTEZWQlFVRkJMRkZCUVU4c1IwRkJSeXhYUVVGWE8wRkJRVUVzVVVGRGVrSXNRMEZCUXp0QlFVRkJMRTFCUTB3c1EwRkJRenRCUVVWRUxGVkJRVWs3UVVGRFFTeFpRVUZKTEdWQlFXVTdRVUZCUVN4TlFVTjJRaXhSUVVGUk8wRkJRMG9zWlVGQlR5eFBRVUZQTEVOQlFVTXNVVUZCVVN4SFFVRkhMR0ZCUVdFc1NVRkJTU3hqUVVGakxFZEJRVWNzUjBGQlNTeEhRVUZITEZkQlFWYzdRVUZCUVN4TlFVTnNSanRCUVVWQkxGVkJRVWtzU1VGQlN5eE5RVUZMTEZWQlFWVXNTMEZCU3l4TFFVRkxPMEZCUld4RExGVkJRVWtzVFVGQlR5eExRVUZKTEZWQlFWVXNTMEZCU3p0QlFVVTVRaXhsUVVGVE8wRkJRMVFzVlVGQlNTeExRVUZOTEV0QlFVa3NTMEZCU3p0QlFVVnVRaXhWUVVGSkxGTkJRVk1zUTBGQlF5eERRVUZETzBGQlFVRXNTVUZEYmtJN1FVRkJRU3hGUVVOS0xFVkJRVWM3UVVGRFVEczdPMEZHTVVoQlF5eExRVUZKTEV0QlFVczdRVUZKVkVNc1RVRkJTeXhUUVVGVExGbEJRVms3UVVGSk1VSXNUVUZCVFN4UFFVRlBMRzlDUVVGdlFpeEZRVUZGTEV0QlFVc3NRMEZCUXl4RlFVRkZMRk5CUVZNc1NVRkJTU3hOUVVGTkxFbEJRVWtzUzBGQlN5eERRVUZETEVWQlFVVXNUVUZCVFN4TlFVRk5MRTFCUVUwN1FVRkZOVVlzU1VGQlR5eGpRVUZSTEUxQlFVMURMRTlCUVUwc1YwRkJWenM3TzBGSFluUkRMRTlCUVU4c2JVSkJRVzFDTzBGQlJXNUNMRWxCUVUwc1YwRkJUaXhOUVVGbE8wRkJRVUVzUlVGTldDeGpRVUZqTzBGQlEycENMRk5CUVVzc1ZVRkJWU3hqUVVGakxGbEJRVms3UVVGRGVrTXNVMEZCU3l4alFVRmpMR05CUVdNc1MwRkJTeXhUUVVGVExGbEJRVmtzUlVGQlJTeEhRVUZITEVOQlFVTkRMR2RDUVVGbFFTeFpRVUZYTEV0QlFVc3NRMEZCUXl4SFFVRkhMRTFCUVUwc1JVRkJSU3hMUVVGTExFVkJRVVVzUlVGQlJTeERRVUZETzBGQlEzUklMRk5CUVVzc2IwSkJRVzlDTEdOQlFXTXNTMEZCU3l4VFFVRlRMR3RDUVVGclFqdEJRVU4yUlN4VFFVRkxMRmRCUVZjc1kwRkJZeXhMUVVGTExGTkJRVk1zVTBGQlV6dEJRVUZCTEVWQlEzcEVPMEZCUVVFc1JVRkZRU3hKUVVGWExHRkJRV0U3UVVGRGNFSXNWMEZCVHl4TFFVRkxPMEZCUVVFc1JVRkRhRUk3UVVGQlFTeEZRVVZCTEVsQlFWY3NiVUpCUVcxQ08wRkJRekZDTEZkQlFVOHNTMEZCU3p0QlFVRkJMRVZCUTJoQ08wRkJRVUVzUlVGRlFTeEpRVUZYTEZWQlFWVTdRVUZEYWtJc1YwRkJUeXhMUVVGTE8wRkJRVUVzUlVGRGFFSTdRVUZCUVN4RlFVVlBMR2xDUVVGcFFpeFRRVUZ6UWl4aFFVRnZRenRCUVVNNVJTeFZRVUZOTEZkQlFWY3NVVUZCVVN4aFFVRmhPMEZCUTNSRExGRkJRVWNzV1VGQldTeFZRVUZWTEUxQlFVMHNVVUZCVVN4VlFVRlZMRXRCUXpsRExGbEJRVmtzVjBGQlZ5eE5RVUZOTEZOQlFWTXNWVUZEZEVNc1dVRkJXU3hWUVVGVkxFMUJRVTBzVTBGQlV5eFRRVU55UXl4WlFVRlpMRTFCUVUwc1RVRkJUU3hUUVVGVExFdEJRMnBETEZsQlFWa3NUVUZCVFN4TlFVRk5MRk5CUVZNc1IwRkJSenRCUVVOdVF5eGhRVUZQTzBGQlFVRXNTVUZEV0R0QlFVTkJMRmRCUVU4N1FVRkJRU3hGUVVOWU8wRkJRVUVzUlVGRlR5eHRRa0ZCYlVJc1UwRkJjMEk3UVVGRE5VTXNWVUZCVFN4dFFrRkJiVUlzUzBGQlN5eFJRVUZSTEdGQlFXRTdRVUZEYmtRc1YwRkJUeXhwUWtGQmFVSXNTMEZCU3l4cFFrRkJaU3hMUVVGTExHbENRVUZwUWl4VFFVRlRMRmRCUVZjc1EwRkJReXhMUVVGTExHbENRVUZwUWl4RFFVRkRPMEZCUVVFc1JVRkRiRWc3UVVGQlFTeEZRVVZQTEcxQ1FVRnRRaXhUUVVGblF6dEJRVU4wUkN4WFFVRlBPMEZCUVVFc1RVRkRTRHRCUVVGQkxGRkJRMGtzWTBGQll5eFRRVUZUTEdsQ1FVRnBRanRCUVVGQkxGRkJRM2hETEV0QlFVczdRVUZCUVN4TlFVTlVPMEZCUVVFc1RVRkRRU3hEUVVGRExHbENRVUZwUWl4bFFVRmxPMEZCUXpkQ0xHTkJRVTBzTWtKQlFUSkNMRmRCUVZjN1FVRkJRU3hWUVVGUExGbEJReTlETEU5QlFVOHNWVUZCVlN4UFFVRlBMR2RDUVVGblFqdEJRVUZCTEZGQlF6VkRPMEZCUlVFc1pVRkJUeXg1UWtGQmVVSXNWMEZCVnp0QlFVRkJMRTFCUXk5RE8wRkJRVUVzU1VGRFNqdEJRVUZCTEVWQlEwbzdRVUZEU2p0QlFVVkJMRWxCUVUwc2EwSkJRV3RDTEVsQlFVazdRVUZGTlVJc1NVRkJUeXh0UWtGQlVUczdPMEZET1VSbUxFOUJRVTlETEZkQlFWVTdRVUZKYWtJc1NVRkJUVU1zV1VGQlZ6dEJRVVZxUWl4SlFVRk5MR2RDUVVGT0xFMUJRVzlDTzBGQlFVRXNSVUZSVkN4alFVRmpPMEZCVUhKQ0xGTkJRVkVzWjBKQlFXZENPMEZCUTNoQ0xGTkJRVkVzWjBKQlFXZENPMEZCVDNCQ0xFdEJRVU1zUzBGQlN5eGxRVUZsTEV0QlFVc3NaMEpCUVdkQ0xFbEJRVWtzV1VGQldTeEpRVUZKTzBGQlJUbEVMRk5CUVVzc1dVRkJXU3hYUVVGWExFVkJRVVVzVFVGQlRTeEpRVUZKTEUxQlFVMHNSMEZCUnl4SFFVRkhRU3hYUVVGVkxFMUJRVTA3UVVGRGFFVXNXVUZCVFN4TlFVRk5ReXhOUVVGTExGTkJRVk1zWTBGQll6dEJRVU40UXl4aFFVRlBPMEZCUVVFc1VVRkRTQ3hOUVVGTkxFbEJRVWtzVDBGQlR5eExRVUZMTEdGQlFXRTdRVUZCUVN4UlFVTnVReXhOUVVGTkxFbEJRVWtzVDBGQlR5eExRVUZMTEdGQlFXRTdRVUZCUVN4TlFVTjJRenRCUVVGQkxFbEJRMG9zUTBGQlF6dEJRVUZCTEVWQlEwdzdRVUZCUVN4RlFVVkJMRWxCUVZjc1pVRkJaVHRCUVVOMFFpeFhRVUZQTEV0QlFVczdRVUZCUVN4RlFVTm9RanRCUVVGQkxFVkJSVThzWjBKQlFXZENMRk5CUVdkRE8wRkJRMjVFTEZkQlFVODdRVUZCUVN4TlFVTklMRU5CUVVNc1MwRkJTeXhsUVVGbExHbENRVUZuUWl4dFFrRkJiVUlzVDBGQlR5eERRVUZETzBGQlFVRXNUVUZEYUVVc1EwRkJReXhqUVVGakxHVkJRV1VzWjBKQlFXZENPMEZCUVVFc1NVRkRiRVE3UVVGQlFTeEZRVU5LTzBGQlFVRXNSVUZGVHl4eFFrRkJjVUk3UVVGRGVFSXNVMEZCU3l4cFFrRkJhVUlzUTBGQlF5eExRVUZMTEdOQlFXTXNTVUZCU1N4RFFVRkRPMEZCUVVFc1JVRkRia1E3UVVGQlFTeEZRVVZCTEVsQlFWY3NUMEZCVHp0QlFVTmtMRmRCUTBrc2IwSkJRVU1zVjBGQlRTeFpRVUZaTEVOQlFVTXNUVUZCVFN4SFFVRkhMRTlCUVU4c1MwRkJTeXhWUVVGVkxFZEJRVWNzVDBGQlN5eFZRVUZMTEVWQlFVVXNTVUZCU1N4RlFVRkZMRWRCUVVjc1pVRkJaU3hMUVVGTExGVkJRVlVzUjBGQlJ5eFBRVUZMTEdGQlFVMHNSVUZCUlN4SlFVRkpMRVZCUVVVc1IwRkJSenRCUVVGQkxFVkJSVEZKTzBGQlFVRXNSVUZGUVN4SlFVRlhMRzFDUVVGdFFqdEJRVU14UWl4WFFVTkpMSEZDUVVGRExGTkJRVWtzV1VGQldTeERRVUZETEd0Q1FVRnJRaXhIUVVOb1F6dEJRVUZCTERCQ1FVRkRMRWxCUVVrc1ZVRkJTaXhGUVVGaExGbEJRVmtzUTBGQlF5eFZRVUZWTEVkQlFVYzdRVUZCUVN4TlFVTjRReXh4UWtGQlF5eFRRVUZKTEZsQlFWa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1lVRkJZU3hKUVVGSkxGbEJRVmtzVlVGRGVFUTdRVUZCUVN3MFFrRkJReXhYUVVGTkxGbEJRVmtzUTBGQlF5eE5RVUZOTEVkQlFVY3NUMEZCVHl4TFFVRkxMRlZCUVZVc1IwRkJSeXhQUVVGTExFVkJRVVVzU1VGQlNTeEhRVUZITzBGQlFVRXNVVUZEY0VVc2IwSkJRVU1zVjBGQlRTeFpRVUZaTEVOQlFVTXNUVUZCVFN4SFFVRkhMRTlCUVU4c1MwRkJTeXhWUVVGVkxFZEJRVWNzVDBGQlN5eEZRVUZGTEVsQlFVa3NSMEZCUnp0QlFVRkJMRk5CUTNoRk8wRkJRVUVzVDBGRFNqdEJRVUZCTEVWQlJWSTdRVUZEU2p0QlFVVkJMRWxCUVUwc1YwRkJWeXhKUVVGSk8wRkJSWEpDTEVsQlFVOHNiVUpCUVZFN096dEJRMnBGWml4UFFVRlBMRkZCUVZFN1FVRkRaaXhQUVVGUFF5eFhRVUZWTzBGQlNXcENMRWxCUVUwc2IwSkJRVTRzVFVGQmQwSTdRVUZCUVN4RlFVMWlMR05CUVdNN1FVRkdja0lzVTBGQmFVSXNUMEZCWlR0QlFVYzFRaXhUUVVGTExGVkJRVlVzUjBGQlJ5eFpRVUZaTzBGQlF6bENMRk5CUVVzc2FVSkJRV2xDTEdOQlFXTXNTMEZCU3l4VFFVRlRMR2RDUVVGblFqdEJRVU5zUlN4VFFVRkxMRzlDUVVGdlFpeGpRVUZqTEV0QlFVc3NVMEZCVXl4dFFrRkJiVUk3UVVGQlFTeEZRVU0xUlR0QlFVRkJMRVZCUlZFc1lVRkJZU3hMUVVGclFpeEpRVUZaTzBGQlF5OURMRkZCUVVrc1dVRkJXU3hKUVVGSkxGZEJRVmM3UVVGREwwSXNVVUZCUnl4TFFVRkxMRVZCUVVjc1kwRkJZU3hMUVVGTE8wRkJRVUVzVVVGRGVFSXNZMEZCWVN4TFFVRkxPMEZCUTNaQ0xGRkJRVWtzVjBGQlZ5eExRVUZMTEVsQlFVa3NWMEZCVnl4RFFVRkRMRU5CUVVNN1FVRkJRU3hGUVVONlF6dEJRVUZCTEVWQlJWRXNVMEZCVXl4RlFVRkZMRk5CUVZNc1IwRkJkME03UVVGRGFFVXNWMEZEU1N4dlFrRkJReXhUUVVORUxEaENRVUZETEZGQlFVc3NUMEZCVHl4VlFVTlNMRzFDUVVGUE8wRkJRMG9zV1VGQlRTeFBRVUZQTEdOQlFXTXNTMEZCU3l4WlFVRlpPMEZCUXpWRExGbEJRVTBzVTBGQlV5eGpRVUZqTEV0QlFVc3NVVUZCVVN4RlFVRkZMRWRCUVVjc1QwRkJTeXhIUVVGSExFdEJRVXNzVFVGQlRTeEpRVUZKTEVkQlFVY3NRMEZCUXl4SFFVRkhPMEZCUXpkRkxGbEJRVTBzV1VGQldTeEpRVUZKTEVsQlFVa3NZVUZCWVN4RlFVRkZMRkZCUVZFc1NVRkJTU3hsUVVGbExFTkJRVU03UVVGRGNrVXNXVUZCVFN4alFVRmpMRlZCUVZVc1VVRkJVU3hYUVVGWExFMUJRVTBzU1VGQlNTeFRRVUZUTEVOQlFVTXNTVUZCU1N4VFFVRlRMRU5CUVVNc1EwRkJRenRCUVVWd1JpeFpRVUZOTEZOQlFWTXNTVUZCU1N4SlFVRkpMSE5DUVVGelFpeEZRVUZGTEU5QlFVOHNTVUZCU1N3eVFrRkJNa0lzVTBGQlV5eERRVUZETzBGQlF5OUdMRmxCUVUwc1owSkJRV2RDTEU5QlFVOHNVVUZCVVN4VlFVRlZMRU5CUVVNc1YwRkJjME1zU1VGQldTeFBRVUZsTEV0QlFVc3NZVUZCWVN4TFFVRkxMRVZCUVVVc1EwRkJRenRCUVVVelNTeG5Ra0ZCVlN4TlFVRk5PMEZCUTFvc2EwSkJRVlVzVjBGQlZ5eFhRVUZYTzBGQlEyaERMR1ZCUVU4c1YwRkJWeXhoUVVGaE8wRkJRVUVzVFVGRGJrTXNRMEZCUXp0QlFVTkVMR0ZCUTBrN1FVRkJRU3hSUVVGRE8wRkJRVUU3UVVGQlFTeFZRVUZKTEZsQlFWa3NRMEZCUXl4VlFVRlZPMEZCUVVFc1ZVRkRlRUlzUjBGRFNTeERRVUZETEZOQlFWTTdRVUZEVGl4cFFrRkJTeXhsUVVGbExGTkJRVk03UVVGRE4wSXNhVUpCUVVzc1pVRkJaU3hOUVVGTk8wRkJRVUVzVlVGRE9VSTdRVUZCUVN4VlFVZEtPMEZCUVVFc1owTkJRVU1zVjBGQlRTeFpRVUZaTEVOQlFVTXNUVUZCVFN4SFFVRkhMRlZCUVZVc1RVRkJUVHRCUVVGQkxGbEJRemRETEc5Q1FVRkRMRmRCUVUwc1dVRkJXU3hEUVVGRExGRkJRVkVzUjBGQlJ5eFBRVUZQTEZGQlFWRXNXVUZCV1N4SFFVRkhPMEZCUVVFN1FVRkJRVHRCUVVGQkxFMUJRMnBGTzBGQlFVRXNTVUZGVWl4SFFVTktMRWRCUTBFN1FVRkJRU3hGUVVWU08wRkJRVUVzUlVGRlVTeFhRVUZYTEVWQlFVVXNVMEZCVXl4SFFVRjNRenRCUVVOc1JTeFhRVU5KTEc5Q1FVRkRMRk5CUTBjc09FSkJRVU1zVVVGQlN5eFBRVUZQTEZWQlExSXNiVUpCUVU4N1FVRkRTaXhaUVVGTkxFOUJRVThzWTBGQll5eExRVUZMTEZsQlFWazdRVUZETlVNc1dVRkJUU3hUUVVGVExHTkJRV01zUzBGQlN5eFJRVUZSTzBGQlF6RkRMRmxCUVUwc2EwSkJRV3RDTEVsQlFVa3NTVUZCU1N4aFFVRmhMRVZCUVVVc1VVRkJVU3hKUVVGSkxHVkJRV1VzUTBGQlF6dEJRVU16UlN4WlFVRk5MRzlDUVVGdlFpeG5Ra0ZCWjBJc1VVRkJVU3hYUVVGWExFMUJRVTBzU1VGQlNTeFRRVUZUTEVOQlFVTXNTVUZCU1N4VFFVRlRMRU5CUVVNc1EwRkJRenRCUVVWb1J5eFpRVUZOTEZOQlFWTXNTVUZCU1N4SlFVRkpMSE5DUVVGelFpeEZRVUZGTEU5QlFVOHNTVUZCU1N3eVFrRkJNa0lzVTBGQlV5eERRVUZETzBGQlF5OUdMRmxCUVUwc1owSkJRV2RDTEU5QlFVOHNVVUZCVVN4VlFVRlZMRU5CUVVNc1YwRkJjME1zU1VGQldTeFBRVUZsTEV0QlFVc3NZVUZCWVN4TFFVRkxMRVZCUVVVc1EwRkJRenRCUVVVelNTeG5Ra0ZCVlN4TlFVRk5PMEZCUTFvc2QwSkJRV2RDTEZkQlFWY3NhVUpCUVdsQ08wRkJRelZETEdWQlFVOHNWMEZCVnl4aFFVRmhPMEZCUVVFc1RVRkRia01zUTBGQlF6dEJRVVZFTEdGQlEwa3NjVUpCUVVNc1UwRkJTU3haUVVGWkxFTkJRVU1zV1VGQldTeEhRVU14UWp0QlFVRkJMRFJDUVVGRExGZEJRVTBzV1VGQldTeERRVUZETEUxQlFVMHNSMEZCUnl4VlFVRlZMRTFCUVUwc1IwRkJSeXhWUVVGUkxFdEJRVXNzWlVGQlpTeGxRVUZsTEVkQlFVYzdRVUZCUVN4UlFVTTVSaXh2UWtGQlF5eFpRVUZQTEZsQlFWa3NRMEZCUXl4UlFVRlJMRWRCUVVjc1IwRkJSeXhWUVVGUkxFdEJRVXNzWlVGQlpTeE5RVUZOTEVkQlFVY3NUMEZCVHl4UlFVRlJMRTFCUVUwc1MwRkJTeXhMUVVGTExFZEJRVWNzUzBGQlN5eEhRVUZITEdWQlFXVXNRMEZCUXl4RlFVRkZMRTFCUVUwc1RVRkJUU3hKUVVGSkxGZEJRVmNzUzBGQlN5eEhRVUZITzBGQlFVRXNVMEZETTBzN1FVRkJRU3hKUVVWU0xFZEJRMG9zUjBGRFNqdEJRVUZCTEVWQlJWSTdRVUZCUVN4RlFVVlJMRkZCUVZFN1FVRkRXaXhYUVVOSkxHOUNRVUZETEdGQlFWRXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkRla0lzSzBKQlFVTXNVMEZCU1N4aFFVRmhMRWxCUVVrc1dVRkJXU3hWUVVNNVFqdEJRVUZCTERCQ1FVRkRMRmRCUVUwc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEZOQlFWTTdRVUZCUVN4TlFVTTNReXhMUVVGTExGZEJRVmNzUlVGQlJTeFZRVUZWTEV0QlFVc3NaVUZCWlN4RFFVRkRPMEZCUVVFc1RVRkRha1FzUzBGQlN5eFhRVUZYTEVWQlFVVXNWVUZCVlN4TFFVRkxMR3RDUVVGclFpeERRVUZETzBGQlFVRXNUMEZEZWtRc1IwRkRTanRCUVVGQkxFVkJSVkk3UVVGQlFTeEZRVVZCTEVsQlFWY3NaVUZCWlR0QlFVTjBRaXhWUVVGTkxIZENRVUYzUWl4SlFVRkpMRWxCUVVrc1lVRkJZU3hGUVVGRkxGRkJRVkVzU1VGQlNTeHBRa0ZCYVVJc1EwRkJRenRCUVVOdVJpeFZRVUZOTERCQ1FVRXdRaXh6UWtGQmMwSXNVVUZCVVN4WFFVRlhMRTFCUVUxRExFMUJRVXNzZVVKQlFYbENMR0ZCUVdFc1EwRkJRenRCUVVVelNDeGpRVUZWTEUxQlFVMHNjMEpCUVhOQ0xGZEJRVmNzZFVKQlFYVkNMRU5CUVVNN1FVRkZla1VzVjBGRFNTeHhRa0ZCUXl4VFFVRkpMRmxCUVZrc1EwRkJReXhqUVVGakxFZEJRVWNzUjBGQlJ5eFZRVUZSTEV0QlFVc3NaVUZCWlN4eFFrRkJjVUlzUjBGRGJFWTdRVUZCUVN4WFFVRkxMRk5CUVZNc1JVRkJSU3hWUVVGVkxFdEJRVXNzWlVGQlpTeERRVUZETzBGQlFVRXNUVUZEYUVRc2IwSkJRVU1zWjBKQlFWY3NVMEZCVXl4TFFVRkxMRTFCUVUwc1IwRkJhMElzVDBGQlR5eHZRa0ZCUXl4WFFVRk5MRTlCUVU4c1ZVRkJTeXhIUVVGM1FqdEJRVUZCTEU5QlEzaEhPMEZCUVVFc1JVRkZVanRCUVVOS08wRkJSVUVzU1VGQlRTeGxRVUZsTEVsQlFVazdRVUZGZWtJc1NVRkJUeXgxUWtGQlVUczdPMEZEY0VobUxFbEJRVTBzWVVGQlRpeE5RVUZwUWp0QlFVRkJMRVZCU1dJc1kwRkJZenRCUVVOV0xFdEJRVU1zUzBGQlN5eHZRa0ZCYjBJc1MwRkJTeXh4UWtGQmNVSXNTVUZCU1N4WlFVRlpMRXRCUVVzc1kwRkJZenRCUVVGQkxFVkJRek5HTzBGQlFVRXNSVUZGUVN4SlFVRlhMR2xDUVVGcFFqdEJRVU40UWl4UlFVRkpPMEZCUTBFc1dVRkJUU3hUUVVGVExFdEJRVXNzZVVOQlFYbERPMEZCUXpkRUxGbEJRVTBzVTBGQlV5eExRVUZMTEUxQlFVMHNUVUZCVFR0QlFVTm9ReXhoUVVGUExFOUJRVThzVVVGQlVUdEJRVUZCTEVsQlF6RkNMRk5CUVZNc1QwRkJUenRCUVVOYUxHTkJRVkVzUzBGQlN5eHBSRUZCTWtNc1MwRkJTenRCUVVNM1JDeGhRVUZQTzBGQlFVRXNTVUZEV0R0QlFVRkJMRVZCUTBvN1FVRkJRU3hGUVVWUExIRkNRVUZ4UWp0QlFVTjRRaXhUUVVGTExITkNRVUZ6UWl4TFFVRkxMR05CUVdNN1FVRkJRU3hGUVVOc1JEdEJRVUZCTEVWQlJVOHNiVUpCUVcxQ08wRkJRM1JDTEZWQlFVMHNWMEZCVnl4RFFVRkRMRXRCUVVzN1FVRkZka0lzVVVGQlNUdEJRVU5CTEZkQlFVc3NjME5CUVhORExGZEJRVmNzU1VGQlNTeERRVUZETEVWQlFVVTdRVUZETjBRc1YwRkJTeXcyUTBGQk5rTXNWMEZCVnl4SlFVRkpMRU5CUVVNc1JVRkJSVHRCUVVOd1JTeFhRVUZMTEhOQ1FVRnpRaXhSUVVGUk8wRkJRVUVzU1VGRGRrTXNVMEZCVXl4UFFVRlBPMEZCUTFvc1kwRkJVU3hOUVVGTkxHOURRVUU0UWl4TFFVRkxPMEZCUTJwRUxGZEJRVXNzYlVKQlFXMUNPMEZCUVVFc1NVRkROVUk3UVVGQlFTeEZRVU5LTzBGQlFVRXNSVUZGUVN4SlFVRlhMRzlDUVVGdlFqdEJRVU16UWl4WFFVRlBMRXRCUVVzN1FVRkJRU3hGUVVOb1FqdEJRVUZCTEVWQlJVRXNTVUZCVnl4eFFrRkJjVUlzVlVGQmJVSTdRVUZETDBNc1UwRkJTeXh6UWtGQmMwSXNVVUZCVVR0QlFVRkJMRVZCUTNaRE8wRkJRMG83UVVGRlFTeEpRVUZOTEcxQ1FVRnRRaXhKUVVGSk8wRkJSVGRDTEVsQlFVOHNjVUpCUVZFN096dEJRMnBFWml4UFFVRlBMRk5CUVZNN1FVRkRhRUlzVDBGQlR5eGxRVUZsTzBGQlEzUkNMRTlCUVU5RExHTkJRV0U3UVVGTGNFSXNTVUZCVFN4aFFVRmhPMEZCUVVFc1JVRkRaaXhWUVVGVk8wRkJRVUVzUlVGRFZpeE5RVUZOTzBGQlFVRXNSVUZEVGl4WFFVRlhPMEZCUVVFc1JVRkRXQ3hQUVVGUExGVkJRVlVzVFVGQlRUdEJRVUZCTEVWQlEzWkNMR2RDUVVGblFqdEJRVUZCTEVWQlEyaENMR0ZCUVdFN1FVRkJRU3hGUVVOaUxGRkJRVkU3UVVGRFdqdEJRVkZCTEVsQlFVMHNZVUZCVGl4alFVRjVRaXhKUVVGSkxGbEJRVms3UVVGQlFTeEZRVWx5UXl4WlFVRlpMRWRCUVhWQ08wRkJReTlDTEZWQlFVMDdRVUZEVGl4VFFVRkxMRmxCUVZrc1NVRkJTVHRCUVVOeVFpeFRRVUZMTEZsQlFWa3NTVUZCU1R0QlFVTnlRaXhUUVVGTExHbENRVUZwUWl4RlFVRkZMRWRCUVVjc1EwRkJRVU1zVDBGQlN6dEJRVU0xUWl4WlFVRk5MRk5CUVZNc1MwRkJTeXh4UWtGQmNVSTdRVUZEZWtNc1lVRkJUMEVzUjBGQlJTeEpRVUZKTEU5QlFVc3NWVUZCVlN4SlFVRkpMRVZCUVVVN1FVRkJRU3hKUVVOMFF5eERRVUZETzBGQlEwUXNVMEZCU3l4blFrRkJaMElzUzBGQlN5eGxRVUZsTEZWQlFWVXNUVUZCVFN4TFFVRkxMRmRCUVZjc1EwRkJRenRCUVVVeFJTeGpRVUZWTEUxQlFVMHNTMEZCU3l4alFVRmpMRU5CUVVNN1FVRkJRU3hGUVVONFF6dEJRVUZCTEVWQlJWTXNaVUZCWlN4VlFVRTRRanRCUVVOc1JDeFJRVUZKTEVOQlFVTXNTMEZCU3l4WFFVRlhMRVZCUVVjN1FVRkZlRUlzVVVGQlNUdEJRVU5CTEZWQlFVa3NRMEZCUXl4TFFVRkxMRkZCUVZNN1FVRkZia0lzV1VGQlRTeFJRVUZSTEV0QlFVc3NiMEpCUVc5Q08wRkJRM1pETEZsQlFVMHNVMEZCVXl4TFFVRkxMSEZDUVVGeFFqdEJRVVY2UXl4VlFVRkpMRk5CUVZNc1MwRkJTeXhWUVVGVkxFVkJRVWM3UVVGRkwwSXNXVUZCVFN4VFFVRlRMRXRCUVVzc1pVRkJaU3hKUVVGSk8wRkJSWFpETEZWQlFVa3NUMEZCVHl4WFFVRlhMRVZCUVVjN1FVRkZla0lzV1VGQlRTeFhRVUZYTEZOQlFWTXNUMEZCVHl4VFFVRlRPMEZCUXpGRExGbEJRVTBzVVVGQlVTeExRVUZMTEU5QlFVOHNWVUZCVlR0QlFVTndReXhaUVVGTkxGVkJRVlVzU1VGQlNTeEpRVUZKTEZsQlFWazdRVUZEY0VNc1kwRkJVU3hSUVVGUkxFZEJRVWNzVDBGQlR5eERRVUZETEVOQlFVTTdRVUZETlVJc1dVRkJUU3hUUVVGVExFbEJRVWs3UVVGRmJrSXNaVUZCVXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hQUVVGUExGTkJRVk1zUjBGQlJ5eExRVUZMTzBGQlEzaERMR05CUVUwc1QwRkJUeXhKUVVGSkxFdEJRVXM3UVVGRGRFSXNZMEZCVFN4TlFVRk5MRTlCUVU4c1MwRkJTeXhKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEY2tNc1kwRkJUU3hOUVVGTkxFbEJRVWs3UVVGRGFFSXNZMEZCVFN4TlFVRk5MRTlCUVU4c1EwRkJRenRCUVVOd1FpeGpRVUZOTEU5QlFVOHNTVUZCU1N4TFFVRkxPMEZCUTNSQ0xHTkJRVTBzVFVGQlRTeFBRVUZQTEVsQlFVa3NRMEZCUXp0QlFVTjRRaXhqUVVGTkxFOUJRVThzU1VGQlNTeExRVUZMTzBGQlEzUkNMR05CUVUwc1RVRkJUU3hQUVVGUExFdEJRVXNzU1VGQlNTeFBRVUZQTEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVWeVJDeGpRVUZOTEUxQlFVMHNUMEZCVHl4TlFVRk5MRTlCUVU4N1FVRkRhRU1zWTBGQlRTeE5RVUZOTEU5QlFVOHNUVUZCVFN4UFFVRlBPMEZCUTJoRExHTkJRVTBzVFVGQlRTeFBRVUZQTEUxQlFVMHNUMEZCVHp0QlFVTm9ReXhqUVVGTkxFMUJRVTBzVDBGQlR5eE5RVUZOTEU5QlFVODdRVUZGYUVNc1owSkJRVkVzVTBGQlV5eExRVUZMTEV0QlFVc3NTMEZCU3l4TFFVRkxMRXRCUVVzc1IwRkJSenRCUVVGQkxFMUJRMnBFTzBGQlJVRXNZMEZCVVN4UlFVRlJMRTlCUVU4c1RVRkJUVHRCUVVNM1FpeGpRVUZSTEZGQlFWRXNSMEZCUnl4TlFVRk5PMEZCUTNwQ0xHTkJRVkVzVFVGQlRUdEJRVVZrTEdWQlFWTXNXVUZCV1N4UlFVRlJMRkZCUVZFc1IwRkJSeXhKUVVGSkxGTkJRVk1zVTBGQlV5eExRVUZMTzBGQlFVRXNTVUZEZGtVc1UwRkJVeXhQUVVGUE8wRkJRMW9zWTBGQlVTeExRVUZMTERaQ1FVRTJRaXhMUVVGTE8wRkJRVUVzU1VGRGJrUTdRVUZCUVN4RlFVTktPMEZCUTBvN1FVRkZRU3hKUVVGTkxGRkJRVkZETEZOQlFWRXNZMEZCWXl4RlFVRkZMRmRCUVZjc1QwRkJUeXhIUVVGSExGVkJRVlU3UVVGRmNrVXNTVUZCVFN4WlFVRk9MRTFCUVdkQ08wRkJRVUVzUlVGUFRDeGpRVUZqTzBGQlEycENMRXRCUVVNc1MwRkJTeXhyUWtGQmEwSXNTMEZCU3l4dFFrRkJiVUlzU1VGQlNTeFpRVUV5UWl4alFVRnZRanRCUVVWdVJ5eFRRVUZMTEZWQlFWVXNWVUZCVlN4WlFVRlpPMEZCUTNKRExGRkJRVWtzUzBGQlN5eFRRVUZUTzBGQlEyUXNWMEZCU3l4UlFVRlJMR0ZCUVdFc1YwRkJWeXhSUVVGUk8wRkJRemRETEZkQlFVc3NVVUZCVVN4VFFVRlRMRmRCUVZjc1NVRkJTVHRCUVVOeVF5eFhRVUZMTEZGQlFWRXNZMEZCWXl4WFFVRlhMRk5CUVZNN1FVRkRMME1zVjBGQlN5eFJRVUZSTEZWQlFWVXNWMEZCVnl4TFFVRkxPMEZCUTNaRExGZEJRVXNzVVVGQlVTeHZRa0ZCYjBJc1YwRkJWeXhqUVVGak8wRkJRekZFTEZkQlFVc3NVVUZCVVN4WFFVRlhMRmRCUVZjc1RVRkJUVHRCUVVONlF5eFhRVUZMTEZWQlFWVXNZMEZCWXl4TFFVRkxMRk5CUVZNc1VVRkJVU3hGUVVGRkxFZEJRVWNzUTBGQlF5eE5RVUZOTzBGQlF6TkVMRmxCUVVrN1FVRkRRU3huUWtGQlRTeFBRVUZQTEZkQlFWYzdRVUZEZUVJc2FVSkJRVThzUlVGQlJTeEpRVUZKTEU5QlFVc3NTVUZCU1N4SlFVRkpPMEZCUVVFc1VVRkRPVUlzVTBGQlV5eFBRVUZQTzBGQlExb3NhMEpCUVZFc1MwRkJTeXh0UTBGQmJVTXNTMEZCU3p0QlFVTnlSQ3hwUWtGQlR5eERRVUZETzBGQlFVRXNVVUZEV2p0QlFVRkJMRTFCUTBvc1EwRkJRenRCUVVGQkxFbEJRMHdzVDBGRFN6dEJRVU5FTEdOQlFWRXNUVUZCVFN3eVEwRkJjVU03UVVGRGJrUXNWMEZCU3l4VlFVRlZMRmxCUVhOQ0xFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTTdRVUZCUVN4SlFVTTVRenRCUVVGQkxFVkJRMG83UVVGQlFTeEZRVVZQTEdsQ1FVRnBRaXhUUVVGblF6dEJRVU53UkN4WFFVRlBPMEZCUVVFc1RVRkJaU3hEUVVGRExFdEJRVXNzYTBKQlFXdENMR2xDUVVGblFpeHRRa0ZCYlVJc1QwRkJUeXhEUVVGRE8wRkJRVUVzVFVGRGNrWXNRMEZCUXl4SlFVRkpMRTlCUVU4N1FVRkRVaXhuUWtGQlR5eEpRVUZKTzBGQlFVRXNWVUZEVUN4TFFVRkxPMEZCUTBRc2JVSkJRVTg3UVVGQlFTeFZRVU5ZTEV0QlFVczdRVUZEUkN4dFFrRkJUenRCUVVGQkxGVkJRMWdzUzBGQlN6dEJRVU5FTEcxQ1FVRlBPMEZCUVVFc1VVRkRaanRCUVVGQkxFMUJRMG83UVVGQlFTeEpRVU5LTzBGQlFVRXNSVUZEU2p0QlFVRkJMRVZCUlU4c2QwSkJRWGRDTzBGQlF6TkNMRmxCUVU4c1MwRkJTeXhwUWtGQmFVSXNTVUZCU1N4SFFVRkhPMEZCUVVFc1RVRkRhRU1zUzBGQlN6dEJRVU5FTEdGQlFVc3NiMEpCUVc5Q0xHdENRVUYzUWp0QlFVTnFSRHRCUVVGQkxFMUJRMG9zUzBGQlN6dEJRVU5FTEdGQlFVc3NiMEpCUVc5Q0xHZENRVUZ6UWp0QlFVTXZRenRCUVVGQkxFMUJRMG9zUzBGQlN6dEJRVU5FTEdGQlFVc3NiMEpCUVc5Q0xHTkJRVzlDTzBGQlF6ZERPMEZCUVVFc1RVRkRTanRCUVVOSkxHRkJRVXNzYjBKQlFXOUNMR2RDUVVGelFqdEJRVUZCTEVsQlEzWkVPMEZCUVVFc1JVRkRTanRCUVVGQkxFVkJSVUVzU1VGQlZ5eHJRa0ZCYTBJN1FVRkRla0lzVjBGQlR5eExRVUZMTzBGQlFVRXNSVUZEYUVJN1FVRkJRU3hGUVVsUExFdEJRVXNzV1VGQmMwSTdRVUZET1VJc1YwRkRTU3h2UWtGQlF5eFRRVUZKTEZsQlFWa3NRMEZCUXl4SFFVRkhMRmxCUVZrc1RVRkJUU3hIUVVGSExGVkJRVlVzU1VGQlNTeFRRVUZUTEZGQlF6VkVMR05CUVVrc1RVRkJUU3hMUVVGTExFOUJRVThzUjBGRE0wSTdRVUZCUVN4RlFVVlNPMEZCUTBvN1FVRkZRU3hKUVVGTkxFOUJRVThzU1VGQlNUdEJRVVZxUWl4SlFVRlBMR1ZCUVZFN096dEJRemRMWml4UFFVRlBReXhWUVVGVE8wRkJRMmhDTEU5QlFVOURMRmRCUVZVN096dEJRMFpxUWl4UFFVRlBReXhYUVVGVk8wRkJSVllzU1VGQlZUdEJRVUZCTEVOQlFWWXNRMEZCVlVNc1ZVRkJWanRCUVVOSkxFMUJRVXM3UVVGQlRDeEpRVUZMUXl4WlFVRk1PMEZCUTBnc1NVRkJRVUVzVVVGQlFTeFJRVUZMTzBGQlEwd3NTVUZCUVVFc1VVRkJRU3hWUVVGUE8wRkJRMUFzU1VGQlFVRXNVVUZCUVN4VFFVRk5PMEZCUTA0c1NVRkJRVUVzVVVGQlFTeGhRVUZWTzBGQlFVRXNTMEZLUml4VFFVRkJSQ3hOUVVGQkxGZEJRVUZCTEUxQlFVRTdRVUZQVEN4TlFVRkxPMEZCUVV3c1NVRkJTMFVzV1VGQlREdEJRVU5JTEVsQlFVRkJMRkZCUVVFc1lVRkJWVHRCUVVOV0xFbEJRVUZCTEZGQlFVRXNZMEZCVnp0QlFVTllMRWxCUVVGQkxGRkJRVUVzWjBKQlFXRTdRVUZEWWl4SlFVRkJRU3hSUVVGQkxHTkJRVmM3UVVGRFdDeEpRVUZCUVN4UlFVRkJMR05CUVZjN1FVRkJRU3hMUVV4SUxGTkJRVUZHTEUxQlFVRXNWMEZCUVVFc1RVRkJRVHRCUVZGTUxFMUJRVXM3UVVGQlRDeEpRVUZMUnl4dlFrRkJURHRCUVVOSUxFbEJRVUZCTEdkQ1FVRkJMRlZCUVU4N1FVRkRVQ3hKUVVGQlFTeG5Ra0ZCUVN4WlFVRlRPMEZCUTFRc1NVRkJRVUVzWjBKQlFVRXNWVUZCVHp0QlFVTlFMRWxCUVVGQkxHZENRVUZCTEZWQlFVODdRVUZEVUN4SlFVRkJRU3huUWtGQlFTeFhRVUZSTzBGQlExSXNTVUZCUVVFc1owSkJRVUVzVTBGQlRUdEJRVU5PTEVsQlFVRkJMR2RDUVVGQkxGbEJRVk03UVVGRFZDeEpRVUZCUVN4blFrRkJRU3hWUVVGUE8wRkJRMUFzU1VGQlFVRXNaMEpCUVVFc1ZVRkJUenRCUVVOUUxFbEJRVUZCTEdkQ1FVRkJMRlZCUVU4N1FVRkRVQ3hKUVVGQlFTeG5Ra0ZCUVN4WlFVRlRPMEZCUTFRc1NVRkJRVUVzWjBKQlFVRXNVMEZCVFR0QlFVTk9MRWxCUVVGQkxHZENRVUZCTEZsQlFWTTdRVUZCUVN4TFFXSkVMR2xDUVVGQlNDeE5RVUZCTEcxQ1FVRkJRU3hOUVVGQk8wRkJaMEpNTEUxQlFVczdRVUZCVEN4SlFVRkxTU3h0UWtGQlREdEJRVU5JTEVsQlFVRkJMR1ZCUVVFc1dVRkJVenRCUVVOVUxFbEJRVUZCTEdWQlFVRXNVMEZCVFR0QlFVTk9MRWxCUVVGQkxHVkJRVUVzVlVGQlR6dEJRVU5RTEVsQlFVRkJMR1ZCUVVFc1YwRkJVVHRCUVVOU0xFbEJRVUZCTEdWQlFVRXNXVUZCVXp0QlFVTlVMRWxCUVVGQkxHVkJRVUVzWTBGQlZ6dEJRVU5ZTEVsQlFVRkJMR1ZCUVVFc1pVRkJXVHRCUVVOYUxFbEJRVUZCTEdWQlFVRXNhVUpCUVdNN1FVRkRaQ3hKUVVGQlFTeGxRVUZCTEd0Q1FVRmxPMEZCUVVFc1MwRlVVQ3huUWtGQlFVb3NUVUZCUVN4clFrRkJRVUVzVFVGQlFUdEJRVUZCTEVWQk1rSmFMRTFCUVUwc1VVRkJVVHRCUVVGQkxFbEJRMVlzWTBGQll6dEJRVU5XTEUxQlFVRkVMRTFCUVVzc2VVSkJRWGxDTEZsQlFWazdRVUZCUVN4SlFVTTVRenRCUVVGQkxFbEJSVThzWVVGQllVMHNUMEZCWXl4VFFVRXlRenRCUVVONlJTeFZRVUZKTEZWQlFWVXNXVUZCV1VFc1MwRkJTVHRCUVVNNVFpeFZRVUZITEZOQlFWTTdRVUZEVWl4WlFVRkhMRkZCUVZFc1QwRkJVU3haUVVGWExHRkJRV0VzVVVGQlVTeE5RVUZOTzBGQlEzcEVMRmxCUVVjc1VVRkJVU3hQUVVGUkxGbEJRVmNzVDBGQlR5eFJRVUZSTEUxQlFVMDdRVUZEYmtRc1dVRkJSeXhSUVVGUkxGRkJRVk1zV1VGQlZ5eGxRVUZsTEZGQlFWRXNVVUZCVVN4UlFVRlJMRU5CUVVNN1FVRkRka1VzV1VGQlJ5eFJRVUZSTEdkQ1FVRnBRaXhaUVVGWExIVkNRVUYxUWl4UlFVRlJMR1ZCUVdVN1FVRkRja1lzV1VGQlJ5eFJRVUZSTEc5Q1FVRnhRaXhaUVVGWExEQkNRVUV3UWl4UlFVRlJMRzFDUVVGdFFqdEJRVU5vUnl4WlFVRkhMRkZCUVZFc1kwRkJaU3haUVVGWExIRkNRVUZ4UWl4UlFVRlJMR0ZCUVdFN1FVRkRMMFVzV1VGQlJ5eFJRVUZSTEdWQlFXZENMRmxCUVZjc2MwSkJRWE5DTEZGQlFWRXNZMEZCWXp0QlFVTnNSaXhaUVVGSExGRkJRVkVzWlVGQlowSXNXVUZCVnl4elFrRkJjMElzVVVGQlVTeGpRVUZqTzBGQlEyeEdMRmxCUVVjc1VVRkJVU3hsUVVGblFpeFpRVUZYTEhOQ1FVRnpRaXhSUVVGUkxHVkJRV1VzUTBGQlF5eEpRVUZKTEZGQlFWRXNaVUZCWlN4RFFVRkRPMEZCUTJoSUxGbEJRVWNzVVVGQlVTeFJRVUZUTEZsQlFWY3NZMEZCWXl4UlFVRlJMRTlCUVU4N1FVRkJRU3hOUVVOb1JUdEJRVU5CTEUxQlFVRk9MRTFCUVVzc2VVSkJRWGxDTEU5QlFVODdRVUZEY2tNc1lVRkJUenRCUVVGQkxFbEJRMWc3UVVGQlFTeEZRVU5LTzBGQlEwOHNSVUZCVFVNc1RVRkJRU3hWUVVGVkxFbEJRVWs3UVVGQlFTeEhRV3hHWkRzN08wRkVTMnBDTEVsQlFVMHNUMEZCVHl4SFFVRkhUU3hOUVVGTExHRkJRV0VzUTBGQlF6dEJRVU51UXl4SlFVRk5ReXhaUVVGWE8wRkJRMnBDTEVsQlFVMHNhMEpCUVd0Q0xFTkJRVU1zVVVGQlVTeFRRVUZUTEZGQlFWRXNVVUZCVVN4UlFVRlJMRk5CUVZNc1RVRkJUVHRCUVVWcVJpeEpRVUZOTEhsQ1FVRk9MRTFCUVRaQ08wRkJRVUVzUlVGUGVrSXNZMEZCWXp0QlFVTldMRXRCUVVNc1MwRkJTeXhSUVVGUkxFdEJRVXNzVTBGQlV5eEpRVUZKTEZsQlFWa3NRMEZCUXl4RFFVRmhPMEZCUXpGRUxFdEJRVU1zUzBGQlN5eGhRVUZoTEV0QlFVc3NZMEZCWXl4SlFVRkpMRmxCUVZrc1NVRkJTVHRCUVVNeFJDeFRRVUZMTEZWQlFWVXNWMEZCVnl4TlFVRk5RU3hYUVVGVkxFTkJRVU1zVTBGQmEwSXNRMEZCUXl4SlFVRkpPMEZCUTJ4RkxGTkJRVXNzVlVGQlZTeExRVUZMTEdWQlFXVXNTVUZCU1N4RFFVRkRPMEZCUVVFc1JVRkROVU03UVVGQlFTeEZRVVZSTEZsQlFWa3NWVUZCYTBJN1FVRkRiRU1zVlVGQlRTeFpRVUZaTEZOQlFWTXNXVUZCV1N4RlFVRkZMRlZCUVZVc1UwRkJVeXhaUVVGWkxFZEJRVWNzUTBGQlF6dEJRVU0xUlN4WFFVRlBMR2RDUVVGblFpeFRRVUZUTEZOQlFWTXNTVUZCU1N4WlFVRlhPMEZCUVVFc1JVRkROVVE3UVVGQlFTeEZRVVZSTEdWQlFXVXNaVUZCZFVJN1FVRkRNVU1zVVVGQlNUdEJRVU5CTEZsQlFVMHNUMEZCVDBNc1MwRkJTU3hMUVVGTExHRkJRV0VzWVVGQllUdEJRVVZvUkN4VlFVRkpMRU5CUVVNc1MwRkJTeXhoUVVGaExFbEJRVWtzUlVGQlJ5eFJRVUZQTEVOQlFVTTdRVUZGZEVNc1dVRkJUU3hoUVVGaExFdEJRVXNzYlVKQlFXMUNMR2xEUVVGcFEwRXNTMEZCU1N4dFFrRkJiVUlzVFVGQlRTeEpRVUZKTzBGQlJUZEhMRmxCUVUwc1UwRkJiVUlzUTBGQlF6dEJRVU14UWl4VlFVRkpPMEZCUlVvc1kwRkJVU3hYUVVGWExGZEJRVmNzVlVGQlZTeEpRVUZKTEU5QlFVOHNUVUZCVFR0QlFVTnlSQ3haUVVGSkxGTkJRVk1zWTBGQll5eE5RVUZOUVN4TFFVRkpMRk5CUVZNc1UwRkJVenRCUVVOdVJDeG5Ra0ZCVFN4WFFVRlhMRk5CUVZNc1UwRkJVenRCUVVOdVF5eG5Ra0ZCVFN4TlFVRk5MRXRCUVVzc1dVRkJXU3hSUVVGUk8wRkJRM0pETEdOQlFVY3NTVUZCU3l4UlFVRlBMRXRCUVVzc1VVRkJVVHRCUVVGQkxGRkJRMmhETzBGQlFVRXNUVUZEU2p0QlFVVkJMR2xDUVVGWExFMUJRVTBzU1VGQlNUdEJRVU55UWl4aFFVRlBPMEZCUVVFc1NVRkRXQ3hUUVVGVExFOUJRVTg3UVVGRFdpeGpRVUZSTEUxQlFVMHNkME5CUVdkRExHVkJRV1VzUzBGQlN6dEJRVU5zUlN4aFFVRlBMRU5CUVVNN1FVRkJRU3hKUVVOYU8wRkJRVUVzUlVGRFNqdEJRVUZCTEVWQlJVOHNhMEpCUVd0Q0xGbEJRWGxDTzBGQlF6bERMRlZCUVUwc1VVRkJVU3hKUVVGSkxFbEJRVWtzWVVGQllTeEZRVUZGTEZGQlFWRXNTVUZCU1N4bFFVRmxMRU5CUVVNN1FVRkRha1VzVlVGQlRTeFZRVUZWTEUxQlFVMHNVVUZCVVN4WFFVRlhMRTFCUVUwc1MwRkJTeXhsUVVGbExFTkJRVU1zUzBGQlN5eFpRVUZaTEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCUXpOR0xGVkJRVTBzVVVGQlVTeExRVUZMTEZGQlFWRXNWVUZCVlN4TlFVRk5PMEZCUTNaRExGVkJRVWtzUzBGQlN5eFpRVUZaTEVsQlFVa3NSMEZCUnp0QlFVTjRRaXhqUVVGTkxGbEJRVmtzVjBGQlZ5eGpRVUZqTzBGQlF6TkRMRmxCUVVjc1YwRkJWenRCUVVOV0xHZENRVUZOTEZkQlFWY3NTMEZCU3l4UFFVRlBMRWxCUVVrN1FVRkRha01zWjBKQlFVMHNUVUZCVFN4VFFVRlRMRXRCUVVzc1RVRkJUU3hMUVVGTExFOUJRVThzU1VGQlNTeFRRVUZUTEUxQlFVMHNRMEZCUXp0QlFVTm9SU3hsUVVGTExGRkJRVkVzWVVGQllTeEhRVUZITEVsQlFVa3NTVUZCU1N4SFFVRkhMRWxCUVVrc1JVRkJSU3hUUVVGVExGZEJRVmNzWjBKQlFXZENMRXRCUVVzc1pVRkJaU3hMUVVGTExFTkJRVU03UVVGQlFTeFJRVU5vU0N4UFFVRlBPMEZCUTBnc2IwSkJRVlVzZDBKQlFYZENMRmRCUVZjc1owSkJRV2RDTEVOQlFVTXNNRUpCUVhWQ0xGZEJRVmNzWjBKQlFXZENMRU5CUVVNc2QwSkJRWEZDTzBGQlFVRXNVVUZETVVrN1FVRkJRU3hOUVVOS08wRkJRVUVzU1VGRFNpeERRVUZETzBGQlJVUXNZMEZCVlN4TlFVRk5PMEZCUVVVc1dVRkJUU3hYUVVGWExFOUJRVTg3UVVGQlJ5eFpRVUZOTzBGQlFVRXNTVUZCUlN4RFFVRkRPMEZCUTNSRUxGZEJRMGs3UVVGQlFTeE5RVUZETzBGQlFVRTdRVUZCUVN4UlFVTkhMRmxCUVZrc1EwRkJReXh0UWtGQmJVSTdRVUZCUVN4UlFVTm9ReXhoUVVGaExFbEJRVWtzV1VGQldUdEJRVUZCTEZGQlJUZENPMEZCUVVFN1FVRkJRU3haUVVGRE8wRkJRVUU3UVVGQlFTeGpRVU5ITEZsQlFWa3NRMEZCUXl4VlFVRlZPMEZCUVVFc1kwRkRka0lzVDBGQlR6dEJRVUZCTzBGQlFVRXNWVUZEV0R0QlFVRkJMRlZCUTBFN1FVRkJRU3haUVVGRE8wRkJRVUU3UVVGQlFTeGpRVU5ITEZsQlFWa3NRMEZCUXl4VlFVRlZMR05CUVdNN1FVRkJRU3hqUVVOeVF5eFBRVUZQTEV0QlFVc3NXVUZCV1N4SFFVRkhMRkZCUVUwc1YwRkJWeXhMUVVGTExGVkJRVk1zV1VGQldTeEZRVUZGTzBGQlFVRXNZMEZCUnl4SFFVRkhMRlZCUVZFc1MwRkJTeXhsUVVGbExFdEJRVXM3UVVGQlFUdEJRVUZCTEZWQlEyNUlPMEZCUVVFN1FVRkJRVHRCUVVGQkxFbEJRMG83UVVGQlFTeEZRVVZTTzBGQlEwbzdRVUZGUVN4SlFVRk5MRzlDUVVGdlFpeEpRVUZKTzBGQlJUbENMRWxCUVU4c05FSkJRVkU3T3p0QlJYaEdaaXhKUVVGTkxIRkNRVUZPTEUxQlFYbENPMEZCUVVFc1JVRkRaQ3hqUVVGak8wRkJRVUVzUlVGRmNrSTdRVUZCUVN4RlFVVlJMRmxCUVZrc1RVRkJhMElzVlVGQmMwSTdRVUZEZUVRc1ZVRkJUU3hSUVVGUkxFbEJRVWtzU1VGQlNTeGhRVUZoTEVWQlFVVXNVVUZCVVN4SlFVRkpMR1ZCUVdVc1EwRkJRenRCUVVOcVJTeFZRVUZOTEZWQlFWVXNUVUZCVFN4UlFVRlJMRmRCUVZjc1VVRkJVVHRCUVVOcVJDeFRRVUZMTEdWQlFXVXNTMEZCU3p0QlFVTjZRaXhqUVVGVkxFMUJRVTBzVFVGQlRTeFhRVUZYTEU5QlFVOHNRMEZCUXp0QlFVRkJMRVZCUXpkRE8wRkJRVUVzUlVGRlVTeDNRa0ZCZDBJc1IwRkJhMEk3UVVGRE9VTXNXVUZCVHl4SFFVRkhPMEZCUVVFc1RVRkRUanRCUVVOSkxHVkJRVTg3UVVGQlFTeE5RVU5ZTzBGQlEwa3NaVUZCVHp0QlFVRkJMRTFCUTFnN1FVRkRTU3hsUVVGUE8wRkJRVUVzU1VGRFpqdEJRVUZCTEVWQlEwbzdRVUZCUVN4RlFVVkJMRWxCUVZrc01FSkJRVEJDTzBGQlEyeERMRmRCUTBrc2NVSkJRVU1zVTBGQlNTeFpRVUZaTEVOQlFVTXNlVUpCUVhsQ0xFZEJRVWNzWVVGQllTeEpRVUZKTEZsQlFWa3NWVUZEZGtVN1FVRkJRU3d3UWtGQlF5eFhRVUZOTEZsQlFWa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1QwRkJUeXhwUTBGQk1rSTdRVUZCUVN4TlFVTnVSVHRCUVVGQkxGRkJRVU03UVVGQlFUdEJRVUZCTEZWQlEwY3NXVUZCV1N4RFFVRkRMRzlDUVVGdlFpeFJRVUZSTzBGQlFVRXNWVUZEZWtNc1IwRkJSeXhWUVVGUkxFdEJRVXNzV1VGQldTeE5RVUZOTEUxQlFVMHNiVUpCUVdsQ0xHbENRVUZwUWl4RFFVRkRPMEZCUVVFc1ZVRkRNMFVzVDBGQlR5eHRRa0ZCYVVJc2EwSkJRV3RDTEVkQlFVY3NVVUZCVFN4TFFVRkxMRGhDUVVGM1FpeDNRa0ZCYTBJN1FVRkJRU3hWUVVOc1J5eFpRVUZaTzBGQlFVRTdRVUZCUVN4TlFVTm9RanRCUVVGQkxFMUJRMEU3UVVGQlFTeFJRVUZETzBGQlFVRTdRVUZCUVN4VlFVTkhMRmxCUVZrc1EwRkJReXd3UWtGQk1FSXNVVUZCVVR0QlFVRkJMRlZCUXk5RExFZEJRVWNzVlVGQlVTeExRVUZMTEZsQlFWa3NUVUZCVFN4TlFVRk5MR2xDUVVGVExHMUNRVUZ0UWl4RFFVRkRPMEZCUVVFc1ZVRkRja1VzVDBGQlR5eHBRa0ZCVXl4aFFVRmhMRWRCUVVjc1UwRkJUeXhOUVVGTkxIVkRRVUZ2UXl4dlEwRkJhVU03UVVGQlFTeFZRVU5zU0N4WlFVRlpPMEZCUVVFN1FVRkJRU3hOUVVOb1FqdEJRVUZCTEUxQlEwRTdRVUZCUVN4UlFVRkRPMEZCUVVFN1FVRkJRU3hWUVVOSExGbEJRVmtzUTBGQlF5eGpRVUZqTEZGQlFWRTdRVUZCUVN4VlFVTnVReXhIUVVGSExGVkJRVkVzUzBGQlN5eFpRVUZaTEUxQlFVMHNUVUZCVFN4aFFVRkxMSE5DUVVGelFpeERRVUZETzBGQlFVRXNWVUZEY0VVc1QwRkJUeXhoUVVGTExHZENRVUZuUWl4SFFVRkhMRkZCUVUwc1MwRkJTeXgzUWtGQmQwSXNSVUZCUlN4RFFVRkRPMEZCUVVFc1ZVRkRja1VzV1VGQldUdEJRVUZCTzBGQlFVRXNUVUZEYUVJN1FVRkJRU3hQUVVOS08wRkJRVUVzUlVGRlVqdEJRVUZCTEVWQlJWRXNjVUpCUVhGQ0xGbEJRWGxDTzBGQlEyeEVMRmRCUTBrc2IwSkJRVU1zWVVGRFJ5dzRRa0ZCUXl4VFFVRkpMRmxCUVZrc1EwRkJReXh6UWtGQmMwSXNSMEZEY0VNc0swSkJRVU1zVTBGQlNTeGhRVUZoTEVsQlFVa3NXVUZCV1N4VlFVTTNRanRCUVVGQkxGZEJRVXM3UVVGQlFTeE5RVU5NTERCQ1FVRnJRaXhyUWtGQmEwSXNWVUZCVlR0QlFVRkJMRTlCUTI1RUxFZEJRMG9zUjBGRFNqdEJRVUZCTEVWQlJWSTdRVUZCUVN4RlFVVlBMR05CUVdNc1dVRkJlVUk3UVVGRE1VTXNWMEZEU1N4dlFrRkJReXhuUWtGQlZ5eFpRVUZaTEVOQlFVTXNaVUZCWlN4SFFVRkhMRk5CUVZNc1MwRkJTeXh4UWtGQmNVSXNWVUZCVlN4SFFVTndSaXc0UWtGQlF5eFhRVUZOTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1QwRkJUeXhoUVVGTkxFZEJReTlETzBGQlFVRXNSVUZGVWp0QlFVTktPMEZCUlVFc1NVRkJUU3huUWtGQlowSXNTVUZCU1R0QlFVVXhRaXhKUVVGUExIZENRVUZST3pzN1FVTXpSV1lzU1VGQlRTeHJRa0ZCVGl4TlFVRnpRanRCUVVGQkxFVkJSVmdzWTBGQll6dEJRVVJ5UWl4VFFVRnBRaXhuUWtGQmQwSTdRVUZCUVN4RlFVZDZRenRCUVVGQkxFVkJSVkVzVlVGQlZTeEZRVUZGTEZkQlFWY3NZMEZCWXl4TlFVRk5MRWRCUVdsRk8wRkJRMmhJTEZWQlFVMHNVVUZCVVN4SlFVRkpMRWxCUVVrc1lVRkJZVHRCUVVOdVF5eFZRVUZOTEdGQlFXRXNUVUZCVFN4UlFVRlJMRmRCUVZjc1RVRkJUVHRCUVVGRkxGVkJRVWNzYVVKQlFXZENMR2xDUVVGcFFpeEpRVUZKTEVWQlFVVXNUMEZCVHl4TlFVRk5MRlZCUVZVc1QwRkJUeXhGUVVGSExGZEJRVlVzVFVGQlRUdEJRVUZCTEVsQlFVVXNRMEZCUXp0QlFVTnNTaXhqUVVGVkxFMUJRVTA3UVVGQlJTeFZRVUZKTEZkQlFWa3NUMEZCVFN4WFFVRlhMRlZCUVZVN1FVRkJRU3hKUVVGRkxFTkJRVU03UVVGRmFFVXNWMEZEU1R0QlFVRkJMRTFCUVVNN1FVRkJRVHRCUVVGQkxGRkJRMGNzUjBGQlJ5eFZRVUZSTEV0QlFVc3NaVUZCWlN4TFFVRkxPMEZCUVVFc1VVRkRjRU1zV1VGQldTeHBRa0ZCWjBJc2FVSkJRV2xDTEVkQlFVY3NZVUZCVnl4RFFVRkRMR0ZCUVdFc1ZVRkJWU3hQUVVGUExFMUJRVTBzVVVGQlVTeFBRVUZQTEVsQlFVa3NWMEZCVnl4VlFVRlZMRU5CUVVNN1FVRkJRU3hSUVVONlNTeFBRVUZQTEVkQlFVY3NWVUZCVlN4UFFVRlBMRU5CUVVNN1FVRkJRU3hSUVVGSkxGbEJRVms3UVVGQlFTeFJRVUZITEdWQlFXVTdRVUZCUVN4UlFVRkhMRkZCUVZFc1NVRkJTU3hOUVVGTk8wRkJRVUVzVVVGQlVTeFJRVUZSTEVsQlFVa3NUVUZCVFR0QlFVRkJPMEZCUVVFc1NVRkRha2c3UVVGQlFTeEZRVVZTTzBGQlFVRXNSVUZGVVN4alFVRmpMRmRCUVc5RE8wRkJRM1JFTEZWQlFVMHNVVUZCVVN4SlFVRkpMRWxCUVVrc1lVRkJZVHRCUVVOdVF5eFZRVUZOTEZWQlFWVXNUVUZCVFN4UlFVRlJMRmRCUVZjc1RVRkJUVHRCUVVNelF5eFZRVUZKTEZWQlFWVXNUMEZCVHl4TlFVRk5MR2xDUVVGblFpeHBRa0ZCYVVJc1NVRkJTU3hGUVVGRkxFOUJRVThzUlVGQlJ5eFhRVUZWTEUxQlFVMDdRVUZCUVN4SlFVTm9SeXhEUVVGRE8wRkJSVVFzWTBGQlZTeE5RVUZOTzBGQlFVVXNWVUZCU1N4TlFVRlBMRTlCUVUwc1YwRkJWeXhQUVVGUE8wRkJRVUVzU1VGQlJTeERRVUZETzBGQlEzaEVMRmRCUTBrN1FVRkJRU3hOUVVGRE8wRkJRVUU3UVVGQlFTeFJRVU5ITEVkQlFVY3NRMEZCUXl4VFFVRlRMRXRCUVVzc1pVRkJaU3hMUVVGTE8wRkJRVUVzVVVGRGRFTXNXVUZCV1N4bFFVRmxMRU5CUVVNc2FVSkJRV2RDTEd0Q1FVRnJRaXhqUVVGakxGZEJRVmNzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRTlCUVU4c1EwRkJReXhoUVVGaExFOUJRVThzVTBGQlV5eFBRVUZQTEVsQlFVa3NWMEZCVnl4VlFVRlZMRU5CUVVNN1FVRkJRU3hSUVVNdlN5eFBRVUZQTEZWQlFWVXNUMEZCVHl4RlFVRkZMRk5CUVZNN1FVRkJRU3hSUVVOdVF5eFpRVUZaTzBGQlFVRXNVVUZEV2l4bFFVRmxPMEZCUVVFc1VVRkRaaXhSUVVGUkxFbEJRVWtzVFVGQlRUdEJRVUZCTEZGQlEyeENMRkZCUVZFc1NVRkJTU3hOUVVGTk8wRkJRVUU3UVVGQlFTeEpRVU4wUWp0QlFVRkJMRVZCUlZJN1FVRkJRU3hGUVVWUkxHbENRVUZwUWl4RlFVRkZMRkZCUVZFc1IwRkJjVVE3UVVGRGNFWXNWMEZEU1N4dlFrRkJReXhoUVVGUkxGbEJRVmtzUTBGQlF5eHJRa0ZCYTBJc1IwRkRjRU1zT0VKQlFVTXNTVUZCU1N4VFFVRktMRVZCUVZrc2IwSkJRVzlDTEVkQlF6ZENMRGhDUVVGRExFOUJRVWtzVFVGQlRTeFRRVUZUTEZWQlFWVXNWVUZCVVN4TFFVRkxMRlZCUVZVc1JVRkJSU3hYUVVGWExFMUJRVTBzWVVGQllTeExRVUZMTEVOQlFVTXNSMEZCUnl4SFFVTnNSeXhIUVVOS08wRkJRVUVzUlVGRlVqdEJRVUZCTEVWQlJWRXNjVUpCUVhGQ0xFVkJRVVVzVVVGQlVTeEhRVUZ4UkR0QlFVTjRSaXhYUVVOSkxHOUNRVUZETEdkQ1FVRlhMRmxCUVZrc1EwRkJReXh6UWtGQmMwSXNSMEZCUnl4WFFVRlhMRkZCUVZFc1IwRkJSeXhSUVVGTkxFZEJRVWNzVTBGQlV5eERRVUZETEVkQlFVY3NVMEZCVXl4TFFVRkxMR2xDUVVGcFFpeEZRVUZGTEZGQlFXbENMRU5CUVVNc1IwRkROMGtzT0VKQlFVTXNWMEZCVFN4UFFVRlBMR0ZCUVUwc1IwRkRlRUk3UVVGQlFTeEZRVVZTTzBGQlFVRXNSVUZGVHl4WFFVRlhMRVZCUVVVc1VVRkJVU3hIUVVGMVF6dEJRVU12UkN4VlFVRk5MRzlDUVVGdlFpeHBRa0ZCWjBJc1YwRkJWeXhIUVVGSExGRkJRVTA3UVVGRE1VUXNXVUZCVFN4WFFVRlhMRWRCUVVjc1QwRkJUeXhEUVVGRExHTkJRV01zVlVGQlZTeFpRVUZaTEUxQlFVMHNUMEZCVHp0QlFVTTNSU3hoUVVGUE8wRkJRVUVzVVVGRFNDeE5RVUZOTEZOQlFWTXNUVUZCVFN4SFFVRkhMRXRCUVVzc1lVRkJZVHRCUVVGQkxGRkJRekZETEZOQlFWTXNVMEZCVXl4TlFVRk5MRXRCUVVzc1lVRkJZVHRCUVVGQkxFMUJRemxETzBGQlFVRXNTVUZEU2l4RFFVRkRPMEZCUlVRc1YwRkRTU3h4UWtGQlF5eFRRVUZKTEZsQlFWa3NRMEZCUXl4WlFVRlpMRWRCUXpGQ08wRkJRVUVzTUVKQlFVTXNVMEZEUnl3NFFrRkJReXhQUVVGSkxFMUJRVTBzYTBKQlFXdENMRWRCUVVjc1VVRkJUU3hIUVVGSExFbEJRVWtzUjBGQlJ5eFZRVUZWTEVOQlFVTXNUVUZCSzBJc1MwRkJTeXhqUVVGakxFTkJRVU1zUjBGQlJ5eEhRVU55U0R0QlFVRkJMRTFCUTBNc1MwRkJTeXh4UWtGQmNVSXNSVUZCUlN4VFFVRlRMR3RDUVVGclFpeEhRVUZITEVOQlFVTXNSVUZCUlN4UlFVRlJMRTFCUVUwc1QwRkJUeXhGUVVGRkxFTkJRVU03UVVGQlFTeFBRVU14Ump0QlFVRkJMRVZCUlZJN1FVRkRTanRCUVVWQkxFbEJRVTBzWVVGQllTeEpRVUZKTzBGQlJYWkNMRWxCUVU4c2NVSkJRVkU3T3p0QlEzcEZRU3hUUVVGU0xFbEJRWEZDTEVWQlFVVXNWMEZCVnl4SFFVRm5RenRCUVVOeVJTeFJRVUZOTEVWQlFVVXNTMEZCU3l4TlFVRk5MRTFCUVUwc1NVRkJTU3hOUVVGTk8wRkJRMjVETEZGQlFVMHNZMEZCWXl4cFFrRkJaMElzYlVKQlFXMUNMRlZCUVZVN1FVRkZha1VzVTBGRFNUdEJRVUZCTEVsQlFVTTdRVUZCUVR0QlFVRkJMRTFCUTBjc1YwRkJWVHRCUVVGQkxFMUJRMVlzV1VGQldTeERRVUZETEV0QlFVczdRVUZCUVN4TlFVTnNRaXhUUVVGUE8wRkJRVUVzVFVGRFVDeGhRVUZoTEUxQlFVMHNXVUZCV1R0QlFVRkJMRTFCUXk5Q0xFOUJRVThzVFVGQlRTeE5RVUZOTzBGQlFVRXNUVUZEYmtJN1FVRkJRU3hOUVVOQkxGRkJRVkVzVFVGQlRTeFJRVUZSTzBGQlFVRXNUVUZEZEVJc1lVRkJZVHRCUVVGQkxFMUJRMklzUjBGQlJ5eERRVUZETEZOQlFWTXNWVUZCVlN4TlFVRk5MRXRCUVVzc1VVRkJVU3hEUVVGRE8wRkJRVUVzVFVGRk0wTXNLMEpCUVVNc1UwRkJTU3haUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEZGQlFWRXNTVUZCU1N4TlFVRk5MRTFCUVUwc1lVRkJWeXhOUVVONlJEdEJRVUZCTERSQ1FVRkRMRk5CUVVrc1VVRkJVU3hKUVVGSkxFMUJRVTBzVDBGRGJFSXNOa0pCUVZjc1dVRkRhRUk3UVVGQlFTeFJRVU5CTEhGQ1FVRkRMRk5CUVVrc1VVRkJVU3hKUVVGSkxFMUJRVTBzVVVGRGJFSTdRVUZCUVN4M1FrRkJUVHRCUVVGQkxGVkJRMDRzYlVKQlFWY3NWMEZCVnl4RlFVRkZMRk5CUVZNc1dVRkJXU3hEUVVGRE8wRkJRVUVzVjBGRGJrUTdRVUZCUVN4UlFVTkJMSEZDUVVGRExGTkJRVWtzVVVGQlVTeEpRVUZKTEUxQlFVMHNTMEZEYkVJN1FVRkJRU3d5UWtGQlV6dEJRVUZCTEZWQlExUXNjVUpCUVdFN1FVRkJRU3hWUVVOaUxITkNRVUZqTzBGQlFVRXNWVUZEWkN4elFrRkJZeXhqUVVGakxGVkJRVlU3UVVGQlFTeFhRVU16UXp0QlFVRkJMRk5CUTBvN1FVRkJRVHRCUVVGQkxFVkJRMG83UVVGRlVqczdPMEZEZGtObExGTkJRVklzV1VGQk5rSXNSVUZCUlN4WFFVRlhMRWRCUVdkRE8wRkJRemRGTEZGQlFVMHNSVUZCUlN4TlFVRk5MRTlCUVU4c1QwRkJUeXhKUVVGSkxFMUJRVTA3UVVGRGRFTXNVVUZCVFN4alFVRmpMR2xDUVVGblFpeHRRa0ZCYlVJc1ZVRkJWVHRCUVVWcVJTeFRRVU5KTzBGQlFVRXNTVUZCUXp0QlFVRkJPMEZCUVVFc1RVRkRSeXhYUVVGVk8wRkJRVUVzVFVGRFZpeFBRVUZQTEUxQlFVMHNUVUZCVFR0QlFVRkJMRTFCUTI1Q08wRkJRVUVzVFVGRFFTeFJRVUZSTEZGQlFWRXNUMEZCVHp0QlFVRkJMRTFCUTNaQ0xGTkJRVk1zWVVGQlN5eHBRa0ZCYVVJc1YwRkJWenRCUVVGQkxFMUJRekZETEdGQlFXRTdRVUZCUVN4TlFVTmlMRWRCUVVjc1EwRkJReXhUUVVGVExGVkJRVlVzVFVGQlRTeExRVUZMTEZGQlFWRXNRMEZCUXp0QlFVRkJMRTFCUlRORExEaENRVUZETEZOQlFVa3NVVUZCVVN4SlFVRkpMRTFCUVUwc1RVRkJUU3hSUVVGUkxFbEJRVWtzVFVGQlRTeExRVUZMTEdWQlFXVXNTMEZCU3l4TlFVRk5MRmRCUVZjc1lVRkJZU3hGUVVGRkxGTkJRVk1zU1VGQlJ5eEhRVU12Unl4MVFrRkJTeXhMUVVGTExFTkJRVU1zWVVGQllTeERRVUZETEVkQlF6bENPMEZCUVVFN1FVRkJRU3hGUVVOS08wRkJSVkk3T3p0QlEyNUNaU3hUUVVGU0xFbEJRWEZDTEVWQlFVVXNWMEZCVnl4SFFVRm5RenRCUVVOeVJTeFJRVUZOTEVWQlFVVXNTMEZCU3l4TlFVRk5MRTlCUVU4c1QwRkJUeXhKUVVGSkxFMUJRVTA3UVVGRE0wTXNVVUZCVFN4alFVRmpMR2xDUVVGblFpeHRRa0ZCYlVJc1ZVRkJWVHRCUVVWcVJTeFRRVU5KTzBGQlFVRXNTVUZCUXp0QlFVRkJPMEZCUVVFc1RVRkRSeXhYUVVGVk8wRkJRVUVzVFVGRFZpeFBRVUZQTEUxQlFVMHNUVUZCVFR0QlFVRkJMRTFCUTI1Q08wRkJRVUVzVFVGRFFTeFJRVUZSTEUxQlFVMDdRVUZCUVN4TlFVTmtMRk5CUVZNc2FVSkJRVk1zWjBKQlFXZENMRmRCUVZjN1FVRkJRU3hOUVVNM1F5eGhRVUZoTzBGQlFVRXNUVUZEWWl4SFFVRkhMRU5CUVVNc1UwRkJVeXhWUVVGVkxFMUJRVTBzUzBGQlN5eFJRVUZSTEVOQlFVTTdRVUZCUVN4TlFVVXpReXc0UWtGQlF5eFRRVUZKTEZGQlFWRXNTVUZCU1N4TlFVRk5MRXRCUVVzc1VVRkJVU3hKUVVGSkxFMUJRVTBzVDBGQlR5eFZRVUZWTEdsQ1FVRlRMR3RDUVVGclFqdEJRVUZCTzBGQlFVRXNSVUZET1VZN1FVRkZVanM3TzBGRGJrSkJMRk5CUVZNc1RVRkJUU3hGUVVGRkxFMUJRVTBzVDBGQlR5eEhRVUZ4UXp0QlFVTXZSQ3hUUVVOSkxIRkNRVUZETEZOQlFVa3NXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhWUVVGVkxFbEJRVWtzVTBGQlV5eFJRVUZSTEdGQlFWY3NUVUZEYkVVN1FVRkJRU3gzUWtGQlF5eFhRVUZOTEZsQlFWa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1QwRkJUeXhOUVVGTk8wRkJRVUVzU1VGRE1VTXNiMEpCUVVNc1YwRkJUU3haUVVGWkxFTkJRVU1zVVVGQlVTeEhRVUZITEU5QlFVOHNVVUZCVVR0QlFVRkJMRXRCUTJ4RU8wRkJSVkk3UVVGRlpTeFRRVUZTTEZkQlFUUkNMRVZCUVVVc1YwRkJWeXhIUVVGblF6dEJRVVUxUlN4VFFVTkpPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGRFJ5eE5RVUZMTzBGQlFVRXNUVUZEVEN4UFFVRlBMRTFCUVUwc1RVRkJUVHRCUVVGQkxFMUJRMjVDTzBGQlFVRXNUVUZEUVN4aFFVRmhPMEZCUVVFc1RVRkRZaXhIUVVGSExFTkJRVU1zVTBGQlV5eFZRVUZWTEUxQlFVMHNTMEZCU3l4UlFVRlJMRU5CUVVNN1FVRkJRU3hOUVVVelF5d3JRa0ZCUXl4VFFVRkpMRmxCUVZrc1EwRkJReXhaUVVGWkxFZEJRVWNzWVVGQllTeEpRVUZKTEZsQlFWa3NWVUZETVVRN1FVRkJRU3cwUWtGQlF5eFhRVUZOTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1QwRkJUeXhqUVVGak8wRkJRVUVzVVVGRGJrUXNjVUpCUVVNc1UwRkJTU3haUVVGWkxFTkJRVU1zVFVGQlRTeEhRVUZITEdGQlFWY3NUVUZEYkVNN1FVRkJRU3dyUWtGQlF5eFRRVUZKTEZsQlFWa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1lVRkJZU3hKUVVGSkxGbEJRVmtzVlVGRGRrUTdRVUZCUVN4blEwRkJReXhYUVVGTkxGbEJRVmtzUTBGQlF5eFZRVUZWTEVkQlFVY3NUMEZCVHl4NVFrRkJjMEk3UVVGQlFTeFpRVU01UkN4eFFrRkJReXhUUVVGSkxHRkJRV0VzU1VGQlNTeFpRVUZaTEZWQlF6bENPMEZCUVVFc2EwTkJRVU1zVTBGQlRTeE5RVUZMTEdGQlFWa3NVVUZCVHl4cFFrRkJaMEk3UVVGQlFTeGpRVU12UXl4dlFrRkJReXhUUVVGTkxFMUJRVXNzWVVGQldTeFJRVUZQTEcxQ1FVRnJRanRCUVVGQkxHTkJRMnBFTEc5Q1FVRkRMRk5CUVUwc1RVRkJTeXhoUVVGWkxGRkJRVThzYTBKQlFXbENPMEZCUVVFc1kwRkRhRVFzYjBKQlFVTXNVMEZCVFN4TlFVRkxMR0ZCUVZrc1VVRkJUeXgzUWtGQmIwSTdRVUZCUVN4alFVTnVSQ3h2UWtGQlF5eFRRVUZOTEUxQlFVc3NZVUZCV1N4UlFVRlBMSE5DUVVGeFFqdEJRVUZCTEdOQlEzQkVMRzlDUVVGRExGTkJRVTBzVFVGQlN5eHJRa0ZCV1N4UlFVRlBMR2REUVVFclFqdEJRVUZCTEdOQlF6bEVMRzlDUVVGRExGTkJRVTBzVFVGQlN5eHJRa0ZCV1N4UlFVRlBMR2xEUVVGblF6dEJRVUZCTEdOQlF5OUVMRzlDUVVGRExGTkJRVTBzVFVGQlN5eHJRa0ZCV1N4UlFVRlBMSGREUVVGdlF6dEJRVUZCTEdOQlEyNUZMRzlDUVVGRExGTkJRVTBzVFVGQlN5eHJRa0ZCV1N4UlFVRlBMSFZEUVVGdFF6dEJRVUZCTEdWQlEzUkZPMEZCUVVFc1lVRkRTanRCUVVGQkxGVkJRMEVzY1VKQlFVTXNVMEZCU1N4WlFVRlpMRU5CUVVNc1UwRkJVeXhIUVVGSExHRkJRV0VzU1VGQlNTeFpRVUZaTEZWQlEzWkVPMEZCUVVFc1owTkJRVU1zVjBGQlRTeFpRVUZaTEVOQlFVTXNWVUZCVlN4SFFVRkhMRTlCUVU4c01rSkJRWGRDTzBGQlFVRXNXVUZEYUVVc2NVSkJRVU1zVTBGQlNTeGhRVUZoTEVsQlFVa3NXVUZCV1N4VlFVTTVRanRCUVVGQkxHdERRVUZETEZOQlFVMHNUVUZCU3l4NVFrRkJiVUlzVVVGQlR5eHRRMEZCSzBJN1FVRkJRU3hqUVVOeVJTeHZRa0ZCUXl4VFFVRk5MRTFCUVVzc2VVSkJRVzFDTEZGQlFVOHNhME5CUVRoQ08wRkJRVUVzWTBGRGNFVXNiMEpCUVVNc1UwRkJUU3hOUVVGTExHbERRVUV5UWl4UlFVRlBMSE5EUVVGclF6dEJRVUZCTEdOQlEyaEdMRzlDUVVGRExGTkJRVTBzVFVGQlN5eHBRMEZCTWtJc1VVRkJUeXh4UTBGQmFVTTdRVUZCUVN4alFVTXZSU3h2UWtGQlF5eFRRVUZOTEUxQlFVc3NZVUZCV1N4UlFVRlBMRGhDUVVFMlFqdEJRVUZCTEdOQlF6VkVMRzlDUVVGRExGTkJRVTBzVFVGQlN5eHhRa0ZCYjBJc1VVRkJUeXhwUTBGQlowTTdRVUZCUVN4bFFVTXpSVHRCUVVGQkxHRkJRMG83UVVGQlFTeFhRVU5LTzBGQlFVRXNVVUZEUVN4eFFrRkJReXhUUVVGSkxGbEJRVmtzUTBGQlF5eE5RVUZOTEVkQlFVY3NZVUZCVnl4TlFVTnNRenRCUVVGQkxDdENRVUZETEZOQlFVa3NXVUZCV1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhoUVVGaExFbEJRVWtzV1VGQldTeFZRVU4yUkR0QlFVRkJMR2REUVVGRExGZEJRVTBzV1VGQldTeERRVUZETEZWQlFWVXNSMEZCUnl4UFFVRlBMSFZDUVVGdlFqdEJRVUZCTEZsQlF6VkVMSEZDUVVGRExGTkJRVWtzWVVGQllTeEpRVUZKTEZsQlFWa3NWVUZET1VJN1FVRkJRU3hyUTBGQlF5eFRRVUZOTEUxQlFVc3NhVUpCUVdkQ0xGRkJRVThzV1VGQlZ6dEJRVUZCTEdOQlF6bERMRzlDUVVGRExGTkJRVTBzVFVGQlN5eGhRVUZaTEZGQlFVOHNPRUpCUVRCQ08wRkJRVUVzWTBGRGVrUXNiMEpCUVVNc1UwRkJUU3hOUVVGTExHRkJRVmtzVVVGQlR5eHBRMEZCWjBNN1FVRkJRU3hqUVVNdlJDeHZRa0ZCUXl4VFFVRk5MRTFCUVVzc1lVRkJXU3hSUVVGUExIRkNRVUZ2UWp0QlFVRkJMR05CUTI1RUxHOUNRVUZETEZOQlFVMHNUVUZCU3l4aFFVRlpMRkZCUVU4c01rSkJRVEJDTzBGQlFVRXNZMEZEZWtRc2IwSkJRVU1zVTBGQlRTeE5RVUZMTEdWQlFXTXNVVUZCVHl4M1FrRkJkVUk3UVVGQlFTeGxRVU0xUkR0QlFVRkJMR0ZCUTBvN1FVRkJRU3hWUVVOQkxIRkNRVUZETEZOQlFVa3NXVUZCV1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhoUVVGaExFbEJRVWtzV1VGQldTeFZRVU4yUkR0QlFVRkJMR2REUVVGRExGZEJRVTBzV1VGQldTeERRVUZETEZWQlFWVXNSMEZCUnl4UFFVRlBMRlZCUVZVN1FVRkJRU3haUVVOc1JDeHhRa0ZCUXl4VFFVRkpMR0ZCUVdFc1NVRkJTU3haUVVGWkxGVkJRemxDTzBGQlFVRXNhME5CUVVNc1UwRkJUU3hOUVVGTExGTkJRVkVzVVVGQlR5eHBRa0ZCWjBJN1FVRkJRU3hqUVVNelF5eHZRa0ZCUXl4VFFVRk5MRTFCUVVzc2FVSkJRV2RDTEZGQlFVOHNjMEpCUVd0Q08wRkJRVUVzWTBGRGNrUXNiMEpCUVVNc1UwRkJUU3hOUVVGTExHRkJRVmtzVVVGQlR5eHZRa0ZCWjBJN1FVRkJRU3hqUVVNdlF5eHZRa0ZCUXl4VFFVRk5MRTFCUVVzc1lVRkJXU3hSUVVGUExHMUNRVUZyUWp0QlFVRkJMR1ZCUTNKRU8wRkJRVUVzWVVGRFNqdEJRVUZCTEZkQlEwbzdRVUZCUVN4VFFVTktPMEZCUVVFN1FVRkJRU3hGUVVOS08wRkJSVkk3T3p0QlEyNUZRU3hUUVVGVExFOUJRVTg3UVVGRFdpeFJRVUZOTEZkQlFWY3NZMEZCWXl4aFFVRkxMRlZCUVZVN1FVRkRPVU1zVTBGRFNTeHZRa0ZCUXl4UFFVRkpMRTFCUVUwc1ZVRkRUaXgxUWtGRFJ5eHhRa0ZCUXl4UlFVRkxMRTFCUVUwc1lVRkRVanRCUVVGQkxIZENRVUZETEU5QlFVa3NXVUZCV1N4VFFVRlRPMEZCUVVFc1NVRkRNVUlzYjBKQlFVTXNaVUZCV1N4WlFVRlpMRk5CUVZNN1FVRkJRU3hKUVVOc1F5eHZRa0ZCUXl4UFFVRkpMRmxCUVZrc1UwRkJVenRCUVVGQkxFbEJRekZDTEc5Q1FVRkRMR05CUVZjc1dVRkJXU3hUUVVGVE8wRkJRVUVzUzBGRGNrTXNSMEZGVWp0QlFVVlNPMEZCUlVFc1dVRkJTU3hOUVVGTkxFVkJRVVVzUzBGQlN5eG5Ra0ZCVHl4TFFVRlhMRU5CUVVNN0lpd0tJQ0FpYm1GdFpYTWlPaUJiSWtkUFltcGxZM1FpTENBaWMyVjBJaXdnSWtkUFltcGxZM1FpTENBaWEyVjVJaXdnSW05aWFtVmpkQ0lzSUNKSFQySnFaV04wSWl3Z0ltMXZaQ0lzSUNKSFQySnFaV04wSWl3Z0luSmxiVzkyWlNJc0lDSkJjM1JoYkVsUElpd2dJa0Z6ZEdGc1NVOGlMQ0FpYVc1MFpYSjJZV3dpTENBaWMyVjBJaXdnSWtkMGF5SXNJQ0pCYzNSaGJDSXNJQ0pIZEdzaUxDQWlSMmx2SWl3Z0lrZFBZbXBsWTNRaUxDQWlSM1JySWl3Z0lrZHBieUlzSUNKamMzTWlMQ0FpUjA5aWFtVmpkQ0lzSUNKcGJtUmxlQ0lzSUNKSGRHc2lMQ0FpUVhOMFlXd2lMQ0FpUjB4cFlpSXNJQ0pIZEdzaUxDQWlRWE4wWVd3aUxDQWljMjVoYTJWcFpua2lMQ0FpYlc5a0lpd2dJbkJoZEdOb0lpd2dJa2g1Y0hKc1lXNWtJaXdnSWxkd0lpd2dJa2RQWW1wbFkzUWlMQ0FpYldGcGJpSXNJQ0pIZEdzaUxDQWlSMHhwWWlJc0lDSkJjM1JoYkNJc0lDSjNiM0pyYzNCaFkyVnpJaXdnSWtkTWFXSWlMQ0FpY0c5c2JGUnBiV1VpTENBaVIweHBZaUlzSUNKSFRHbGlJaXdnSWtkTWFXSWlMQ0FpUjA5aWFtVmpkQ0lzSUNKMklpd2dJa2RQWW1wbFkzUWlMQ0FpUjJsdklpd2dJa2RNYVdJaUxDQWlSMHhwWWlJc0lDSlRkM2QzSWl3Z0lsSmxjMmw2WlNJc0lDSkdhV3gwWlhJaUxDQWlWSEpoYm5OcGRHbHZibFI1Y0dVaUxDQWlWSEpoYm5OcGRHbHZibEJ2Y3lJc0lDSndZWFJvSWl3Z0lrZE1hV0lpTENBaWNHOXNiRlJwYldVaUxDQWlSMmx2SWwwS2ZRbz0K
EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@