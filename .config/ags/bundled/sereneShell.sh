#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gc2-ags.js"

cat <<EOF | base64 --decode > $file
// sass:/home/itiro/.config/ags/styles/index.scss
var styles_default = '/* Catppuccin mocha colors */\n.ControlCenter, .Media, .Workspaces, .AudioControl, .CpuUsage, .Battery, .MemoryUsage, .DateTimeCalendar {\n  background: none;\n  padding: 4px;\n  margin: 2px;\n  border: none;\n  border-radius: 18px;\n}\n.ControlCenter *, .Media *, .Workspaces *, .AudioControl *, .CpuUsage *, .Battery *, .MemoryUsage *, .DateTimeCalendar * {\n  margin: 0px 2px;\n}\n\n.TrayItem, .Workspaces .Workspace, .Workspaces .MoreWorkspacesButton, .Mixer .MixerEntry .Icon {\n  border-radius: 100%;\n  min-width: 24px;\n  min-height: 24px;\n}\n\n.Mixer .MixerEntry .Slider {\n  border-radius: 20px;\n  min-width: 160px;\n  min-height: 20px;\n}\n\n.DateTimeCalendar {\n  font-weight: bold;\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar header {\n  padding: 4px;\n  border-radius: 6px;\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.DateTimeCalendar .Calendar button {\n  margin: 2px;\n  border-radius: 100%;\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar .Calendar button * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar button:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar .Calendar button:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid {\n  padding: 6px;\n  border-radius: 8px;\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.7);\n}\n.DateTimeCalendar .Calendar grid label.other-month {\n  opacity: 0.5;\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.other-month:hover {\n  background: #f5e0dc;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.day-number {\n  border-radius: 100%;\n  margin: 1px;\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.day-number:hover {\n  background: #cba6f7;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.today {\n  color: #1e1e2e;\n  background-color: #b4befe;\n}\n\n.MemoryUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.MemoryUsage * {\n  color: #fab387;\n}\n.MemoryUsage:hover {\n  background: #fab387;\n}\n.MemoryUsage:hover * {\n  color: #1e1e2e;\n}\n.MemoryUsage .Icon {\n  font-size: 20px;\n}\n\n.Battery {\n  border-radius: 20px;\n  transition: all 0.25s ease-in-out;\n}\n\n.BatteryNormal {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryNormal * {\n  color: #b4befe;\n}\n.BatteryNormal:hover {\n  background: #b4befe;\n}\n.BatteryNormal:hover * {\n  color: #11111b;\n}\n\n.BatteryCritical {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryCritical * {\n  color: #f38ba8;\n}\n.BatteryCritical:hover {\n  background: #f38ba8;\n}\n.BatteryCritical:hover * {\n  color: #11111b;\n}\n\n.BatteryPopover {\n  background-color: rgba(49, 50, 68, 0.8);\n  padding: 2px;\n  border-radius: 16px;\n}\n.BatteryPopover .Title, .BatteryPopover .BatteryLife, .BatteryPopover .ToggleButton {\n  margin: 2px;\n}\n.BatteryPopover .Title {\n  color: #cdd6f4;\n  font-weight: bold;\n}\n.BatteryPopover .BatteryLife {\n  color: #cdd6f4;\n}\n.BatteryPopover .ToggleButton {\n  margin: 2px 4px;\n  padding: 2px;\n  border-radius: 10px;\n  background: rgba(137, 180, 250, 0.75);\n  color: rgba(30, 30, 46, 0.75);\n  transition: all 0.3s ease;\n}\n.BatteryPopover .ToggleButton:hover {\n  background: rgba(30, 30, 46, 0.75);\n  color: rgba(137, 180, 250, 0.75);\n}\n\n.CpuUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.CpuUsage * {\n  color: #a6e3a1;\n}\n.CpuUsage:hover {\n  background: #a6e3a1;\n}\n.CpuUsage:hover * {\n  color: #1e1e2e;\n}\n.CpuUsage .Icon {\n  font-size: 20px;\n}\n\n.AudioControl {\n  transition: all 0.3s ease;\n  background: none;\n}\n.AudioControl * {\n  color: #cdd6f4;\n}\n.AudioControl:hover {\n  background: #89b4fa;\n}\n.AudioControl:hover * {\n  color: #1e1e2e;\n}\n\n.Mixer {\n  padding: 6px;\n  border-radius: 16px;\n  background-color: rgba(49, 50, 68, 0.8);\n  border: none;\n}\n.Mixer .Label {\n  font-weight: bold;\n  font-size: 24px;\n  margin: 6px;\n  color: #cdd6f4;\n}\n.Mixer .MixerEntry {\n  background-color: #45475a;\n  padding: 2px;\n  margin: 2px;\n  border: none;\n  border-radius: 16px;\n}\n.Mixer .MixerEntry .Icon {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.Mixer .MixerEntry .Icon:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n.Mixer .MixerEntry .Slider {\n  background-color: #585b70;\n}\n.Mixer .MixerEntry .Slider highlight {\n  background-color: #89b4fa;\n}\n\n.Workspaces {\n  background-color: rgba(49, 50, 68, 0.8);\n  border-radius: 18px;\n}\n.Workspaces .Workspace, .Workspaces .MoreWorkspacesButton {\n  font-weight: bold;\n  background-color: rgba(17, 17, 27, 0.8);\n  border: none;\n  margin: 2px;\n  transition: all 0.2s ease;\n}\n.Workspaces .MoreWorkspacesButton {\n  transition: all 0.3s ease;\n  background: none;\n}\n.Workspaces .MoreWorkspacesButton * {\n  color: #cdd6f4;\n}\n.Workspaces .MoreWorkspacesButton:hover {\n  background: #89b4fa;\n}\n.Workspaces .MoreWorkspacesButton:hover * {\n  color: #1e1e2e;\n}\n.Workspaces .Active {\n  background-color: rgba(137, 180, 250, 0.9);\n  color: #11111b;\n}\n.Workspaces .Inactive {\n  transition: all 0.2s ease;\n}\n.Workspaces .Inactive:hover {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.Workspaces .WorkspacePopover {\n  border-radius: 16px;\n  padding: 6px;\n  background-color: rgba(49, 50, 68, 0.9);\n  margin: 2px;\n}\n\n.TrayItem {\n  margin: 2px;\n  -gtk-icon-size: 24px;\n  transition: all 0.25s ease;\n}\n.TrayItem:hover {\n  background-color: rgba(137, 180, 250, 0.8);\n  color: #11111b;\n}\n.TrayItem:active {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.TrayItem popover.menu {\n  margin: 10px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n.TrayItem popover.menu modelbutton {\n  padding: 2px;\n  border-radius: 4px;\n  margin: 0 2px;\n}\n.TrayItem popover.menu modelbutton:hover {\n  background: rgba(69, 71, 90, 0.2);\n}\n.TrayItem popover.menu modelbutton:active {\n  background: rgba(69, 71, 90, 0.4);\n}\n\n.Media {\n  margin: 2px;\n  border-radius: 20px;\n  transition: all 0.3s ease;\n  background: none;\n}\n.Media * {\n  color: #cdd6f4;\n}\n.Media:hover {\n  background: #89b4fa;\n}\n.Media:hover * {\n  color: #11111b;\n}\n.Media .MprisPopover {\n  background-color: rgba(24, 24, 37, 0.8);\n}\n.Media .MprisPopover .MprisPlayer {\n  padding: 16px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata {\n  margin-left: 12px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Title {\n  font-size: 20px;\n  color: #cdd6f4;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Artist {\n  font-size: 16px;\n  color: rgba(205, 214, 244, 0.7);\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Album {\n  font-size: 14px;\n  color: rgba(205, 214, 244, 0.5);\n  font-style: italic;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart {\n  margin-top: 12px;\n  padding: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider {\n  padding: 4px;\n  background-color: rgba(30, 30, 46, 0.6);\n  border: none;\n  border-radius: 14px;\n  margin: 5px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider {\n  min-width: 160px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider highlight {\n  background: #74c7ec;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .TimeLabel {\n  color: #cdd6f4;\n  margin-left: 10px;\n  font-size: 14px;\n  opacity: 0.8;\n  min-width: 40px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next {\n  margin: 4px;\n  border: none;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  background: #1e1e2e;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next image {\n  margin: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next * {\n  color: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover {\n  background: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover * {\n  color: #1e1e2e;\n}\n.Media .MprisPopover .Cava, .Media .MprisPopover .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.Cava, .Cava > *, .CavaOverlay, .CavaOverlay > * {\n  margin: 0;\n  padding: 0;\n}\n\n.Cava, .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.CavaOverlay {\n  border: none;\n  border-radius: 40px 40px 0px 0px;\n  background: none;\n  color: rgba(137, 180, 250, 0.6);\n  transition: all 0.3s ease;\n}\n.CavaOverlay:hover {\n  background: rgba(137, 180, 250, 0.6);\n  color: #1e1e2e;\n}\n\ntooltip {\n  padding: 6px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n\n.ControlCenter {\n  transition: all 0.3s ease;\n}\n.ControlCenter .Label {\n  font-size: 20px;\n}\n.ControlCenter:hover {\n  background-color: #89b4fa;\n}\n.ControlCenter:hover .Label {\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover {\n  padding: 5px;\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.ControlCenter .ControlCenterPopover .Subtitle {\n  font-size: 20px;\n  margin: 4px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option {\n  padding: 2px;\n  margin: 2px;\n  border-radius: 10px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleAnimations {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleAnimations:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleCava {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleCava:hover {\n  background: #b4befe;\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem {\n  margin: 0px 4px;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem .Wallpapers {\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 10px;\n  padding: 10px;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem .Wallpapers .Wallpaper {\n  opacity: 0.8;\n  border: 2px solid #b4befe;\n  border-radius: 10px;\n  transition: all 0.3s ease;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem .Wallpapers .Wallpaper:hover {\n  opacity: 1;\n  border-color: #89b4fa;\n}\n\n.SelectorIndicator {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.SelectorIndicator .Option {\n  padding: 2px;\n  margin: 2px;\n  border-radius: 10px;\n}\n.SelectorIndicator .ToggleActive {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.SelectorIndicator .ToggleActive:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n\n.Cheatsheet {\n  padding: 10px;\n  border: 2px solid #89b4fa;\n  border-radius: 20px;\n  background-color: rgba(30, 30, 46, 0.8);\n}\n.Cheatsheet .Title {\n  font-weight: bolder;\n  font-size: 80px;\n}\n.Cheatsheet .Subtitle {\n  font-weight: bold;\n  font-size: 40px;\n}\n.Cheatsheet .Section {\n  margin: 4px;\n  padding: 4px;\n}\n.Cheatsheet .Entry {\n  margin: 3px;\n  border-radius: 6px;\n}\n.Cheatsheet .Entry .Bind, .Cheatsheet .Entry .Action {\n  padding: 2px;\n}\n.Cheatsheet .Entry .Bind {\n  transition: all 0.2s ease;\n  font-weight: bold;\n  color: #89b4fa;\n  background-color: #313244;\n}\n.Cheatsheet .Entry .Action {\n  transition: all 0.2s ease;\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Bind {\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Action {\n  color: #89b4fa;\n  background-color: #313244;\n}\n\n/* Resetting every decoration applied earlier */\n* {\n  font-family: "Monospace";\n  font-size: 16px;\n  -gtk-icon-size: 24px;\n  color: #cdd6f4;\n  background: none;\n  border: none;\n  box-shadow: none;\n  outline: none;\n  margin: 0;\n  padding: 0;\n}\n\n.Bar {\n  background: #1e1e2e;\n  border-radius: 28px;\n  margin: 4px 6px;\n}';

// ../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// modules/SystemMonitor.tsx
import AstalBattery from "gi://AstalBattery";
import GTop from "gi://GTop?version=2.0";

// services/TimeFormatter.ts
function formatTimeVerbose(seconds) {
  if (seconds >= 3600) {
    return `${Math.floor(seconds / 3600)}h${Math.floor(seconds % 3600 / 60)}m`;
  }
  return `${Math.floor(seconds / 60)}m`;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject2 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject from "gi://GObject";
import Gio from "gi://Gio";
import GLib from "gi://GLib";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputed(deps, transform) {
  let dispose;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const value = dep.get();
          if (cache[i] !== value) {
            cache[i] = dep.get();
            Array.from(subscribers).forEach((cb) => cb());
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  return new Accessor(get, subscribe);
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject2.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject3.Object, _b = GObject3.signals, _a = GObject3.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function callback(v) {
    for (const child of fragment.children) {
      fragment.removeChild(child);
      if (typeof cleanup === "function") {
        cleanup(child);
      } else if (cleanup !== null) {
        env.defaultCleanup(child);
      }
      if (scope) scope.dispose();
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    scope.dispose();
    dispose();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
function This({
  this: self,
  children,
  $type,
  ...props
}) {
  const cleanup = new Array();
  if ($type) setType(self, $type);
  for (const [key, value] of Object.entries(props)) {
    if (key === "css") {
      if (value instanceof Accessor) {
        env.setCss(self, value.get());
        cleanup.push(value.subscribe(() => env.setCss(self, value.get())));
      } else if (typeof value === "string") {
        env.setCss(self, value);
      }
    } else if (key === "class") {
      if (value instanceof Accessor) {
        env.setClass(self, value.get());
        cleanup.push(value.subscribe(() => env.setClass(self, value.get())));
      } else if (typeof value === "string") {
        env.setClass(self, value);
      }
    } else if (key.startsWith("on")) {
      const id = key.startsWith("onNotify") ? self.connect(`notify::${kebabify(key.slice(8))}`, value) : self.connect(kebabify(key.slice(2)), value);
      cleanup.push(() => self.disconnect(id));
    } else if (value instanceof Accessor) {
      set(self, key, value.get());
      cleanup.push(value.subscribe(() => set(self, key, value.get())));
    } else {
      set(self, key, value);
    }
  }
  if (Array.isArray(children)) {
    for (const ch of children) {
      if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
        env.addChild(self, ch, -1);
      }
    }
  } else {
    const ch = children;
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      env.addChild(self, ch, -1);
    }
  }
  if (cleanup.length > 0) {
    onCleanup(() => cleanup.forEach((cb) => cb()));
  }
  return self;
}

// ../../../../usr/share/ags/js/lib/time.ts
import AstalIO2 from "gi://AstalIO";

// ../../../../usr/share/ags/js/lib/process.ts
import AstalIO from "gi://AstalIO";
var Process = AstalIO.Process;
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// ../../../../usr/share/ags/js/lib/time.ts
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk2 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject4 from "gi://GObject";
var dummyBuilder = new Gtk2.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk2.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk2.Widget && parent instanceof Gtk2.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk2.Popover && parent instanceof Gtk2.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk2.MenuButton || parent instanceof Gtk2.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk2.Window && parent instanceof Gtk2.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk2.TextBuffer && parent instanceof Gtk2.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if (parent instanceof Gtk2.Widget && child instanceof Gtk2.EventController) {
    return parent.remove_controller(child);
  }
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk2.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk2.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject4.Object)) {
      child = Gtk2.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk2.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk3.Box,
  button: Gtk3.Button,
  centerbox: Gtk3.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk3.DrawingArea,
  entry: Gtk3.Entry,
  image: Gtk3.Image,
  label: Gtk3.Label,
  levelbar: Gtk3.LevelBar,
  menubutton: Gtk3.MenuButton,
  overlay: Gtk3.Overlay,
  popover: Gtk3.Popover,
  revealer: Gtk3.Revealer,
  scrolledwindow: Gtk3.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk3.Stack,
  switch: Gtk3.Switch,
  togglebutton: Gtk3.ToggleButton,
  window: Astal2.Window
});

// modules/SystemMonitor.tsx
var pollTime = 3e3;
var SystemMonitorClass = class {
  constructor() {
    this.battery = AstalBattery.get_default();
    this.batteryIcon = createBinding(this.battery, "batteryIconName");
    this.batteryPercentage = createBinding(this.battery, "percentage");
    this.batteryCharging = createBinding(this.battery, "charging");
    this.batteryCritical = createComputed([this.batteryPercentage, this.batteryCharging], (p, c) => ["Battery", p <= 0.3 && !c ? "BatteryCritical" : "BatteryNormal"]);
    this.batteryLifeLabel = this.batteryCharging.as((c) => c ? `Carregando: ${formatTimeVerbose(this.battery.time_to_full)} restante(s)` : `Descarregando: ${formatTimeVerbose(this.battery.time_to_empty)} restante(s)`);
    this.cpuSource = new GTop.glibtop_cpu();
    this.memSource = new GTop.glibtop_mem();
    this.cpuData = { prev: { user: 0, sys: 0, total: 0 }, diff: { user: 0, sys: 0, total: 0 } };
    this._metrics = createPoll({ cpu: 0, mem: 0 }, pollTime, () => {
      try {
        GTop.glibtop_get_cpu(this.cpuSource);
        GTop.glibtop_get_mem(this.memSource);
        const cpu = this.cpuSource;
        const prev = this.cpuData.prev;
        this.cpuData.diff = {
          user: cpu.user - prev.user,
          sys: cpu.sys - prev.sys,
          total: cpu.total - prev.total
        };
        this.cpuData.prev = {
          user: cpu.user,
          sys: cpu.sys,
          total: cpu.total
        };
        const cpuDiff = this.cpuData.diff;
        const cpuPercent = cpuDiff.total > 0 ? Math.round((cpuDiff.user + cpuDiff.sys) / cpuDiff.total * 100) : 0;
        const memPercent = this.memSource.total > 0 ? Math.round(this.memSource.user / this.memSource.total * 100) : 0;
        return { cpu: Math.min(100, cpuPercent), mem: Math.min(100, memPercent) };
      } catch (error) {
        console.warn("Erro ao obter m\xE9tricas do sistema:", error);
        return { cpu: 0, mem: 0 };
      }
    });
  }
  get SystemMonitor() {
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["SystemMonitor"], children: [
      /* @__PURE__ */ jsxs("box", { cssClasses: ["CpuUsage"], children: [
        /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\uEC19" }),
        /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.cpu}%`), widthChars: 4 })
      ] }),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["MemoryUsage"], children: [
        /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\u{F061A}" }),
        /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.mem}%`), widthChars: 4 })
      ] }),
      /* @__PURE__ */ jsxs("box", { cssClasses: this.batteryCritical, tooltipText: this.batteryLifeLabel, children: [
        /* @__PURE__ */ jsx("image", { cssClasses: ["BatteryIcon"], iconName: this.batteryIcon }),
        /* @__PURE__ */ jsx("label", { cssClasses: ["BatteryUsageLabel"], label: this.batteryPercentage.as((p) => `${Math.round(Math.min(1, p) * 100) ?? 0}%`) })
      ] })
    ] });
  }
};
var systemMonitor = new SystemMonitorClass();
var SystemMonitor_default = systemMonitor;

// modules/SystemTray.tsx
import AstalTray from "gi://AstalTray?version=0.1";
var SystemTrayClass = class {
  constructor() {
    this.setupTrayItem = (btn, item) => {
      btn.menuModel = item.menuModel;
      btn.insert_action_group("dbusmenu", item.actionGroup);
      const agId = item.connect("notify::action-group", () => {
        btn.insert_action_group("dbusmenu", item.actionGroup);
      });
      const mmId = item.connect("notify::menu-model", () => {
        btn.set_menu_model(item.menuModel);
      });
      onCleanup(() => {
        item.disconnect(agId);
        item.disconnect(mmId);
      });
    };
    this.default = AstalTray.get_default();
    this.itemsBinding = createBinding(this.default, "items");
  }
  TrayItem({ item }) {
    return /* @__PURE__ */ jsx(
      "menubutton",
      {
        cssClasses: ["TrayItem"],
        tooltipMarkup: createBinding(item, "tooltipMarkup"),
        $: (self) => this.setupTrayItem(self, item),
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER,
        children: /* @__PURE__ */ jsx("image", { gicon: createBinding(item, "gicon") })
      }
    );
  }
  get SystemTray() {
    return /* @__PURE__ */ jsx("box", { cssClasses: ["SystemTray"], children: /* @__PURE__ */ jsx(For, { each: this.itemsBinding, children: (item) => this.TrayItem({ item }) }) });
  }
};
var systemTray = new SystemTrayClass();
var SystemTray_default = systemTray;

// modules/Media.tsx
import AstalMpris from "gi://AstalMpris?version=0.1";
var PlayerButtonIcons = {
  playing: "media-playback-start-symbolic",
  paused: "media-playback-pause-symbolic",
  stopped: "media-playback-stop-symbolic",
  next: "media-skip-forward-symbolic",
  previous: "media-skip-backward-symbolic"
};
var MediaClass = class {
  constructor() {
    this.mpris = AstalMpris.get_default();
    this._activePlayerData = createBinding(this.mpris, "players").as(
      (players) => {
        let playing = null;
        let paused = null;
        let final = null;
        for (const player of players) {
          const status = player.get_playback_status();
          if (status === AstalMpris.PlaybackStatus.PLAYING) {
            playing = player;
            break;
          } else if (status === AstalMpris.PlaybackStatus.PAUSED) {
            paused = player;
          }
        }
        final = playing || paused;
        if (final !== null) {
          const status = createBinding(final, "playbackStatus");
          const canGoNext = createBinding(final, "canGoNext");
          const canGoPrevious = createBinding(final, "canGoPrevious");
          const canPause = createBinding(final, "canPause");
          const canPlay = createBinding(final, "canPlay");
          return {
            active: true,
            title: createBinding(final, "title"),
            artist: createBinding(final, "artist"),
            album: createBinding(final, "album"),
            statusIcon: status.as((st) => this.getPlayerStatusIcon(st === AstalMpris.PlaybackStatus.PLAYING ? "paused" : "playing")),
            statusText: status.as((st) => this.getPlayerStatus(st)),
            next: () => {
              if (canGoNext.get()) final.next();
            },
            previous: () => {
              if (canGoPrevious.get()) final.previous();
            },
            playPause: () => {
              if (canPause.get() || canPlay.get()) final.play_pause();
            }
          };
        }
        return {
          active: false,
          title: "Nenhum player ativo",
          artist: "",
          album: "",
          statusIcon: PlayerButtonIcons.stopped,
          statusText: this.getPlayerStatus(AstalMpris.PlaybackStatus.STOPPED),
          next: () => {
          },
          previous: () => {
          },
          playPause: () => {
          }
        };
      }
    );
  }
  getPlayerStatus(status) {
    switch (status) {
      case AstalMpris.PlaybackStatus.PLAYING:
        return "Tocando";
      case AstalMpris.PlaybackStatus.PAUSED:
        return "Pausado";
      default:
        return "Nada tocando";
    }
  }
  getPlayerStatusIcon(status) {
    switch (status) {
      case "previous":
        return PlayerButtonIcons.previous;
      case "playing":
        return PlayerButtonIcons.playing;
      case "paused":
        return PlayerButtonIcons.paused;
      case "stopped":
        return PlayerButtonIcons.stopped;
      case "next":
        return PlayerButtonIcons.next;
      default:
        return PlayerButtonIcons.stopped;
    }
  }
  get Media() {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: this._activePlayerData, children: (player) => {
      return /* @__PURE__ */ jsx(
        "menubutton",
        {
          alwaysShowArrow: false,
          cssClasses: ["Media"],
          sensitive: player.active,
          popover: /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { cssClasses: ["MprisPopover"], overflow: Gtk.Overflow.HIDDEN, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["MprisPlayer"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Metadata"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: player.title, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Artist"], label: player.artist, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Album"], label: player.album, ellipsize: 3, maxWidthChars: 15, widthChars: 30 })
            ] }),
            /* @__PURE__ */ jsx("box", { cssClasses: ["LowerPart"], orientation: Gtk.Orientation.VERTICAL, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Controllers"], halign: Gtk.Align.CENTER, children: [
              /* @__PURE__ */ jsx(
                "box",
                {
                  cssClasses: ["Previous"],
                  sensitive: player.active,
                  $: (self) => {
                    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
                    const handler = click.connect("pressed", player.previous);
                    self.add_controller(click);
                    onCleanup(() => {
                      click.disconnect(handler);
                    });
                  },
                  children: /* @__PURE__ */ jsx("image", { iconSize: Gtk.IconSize.LARGE, iconName: PlayerButtonIcons.previous })
                }
              ),
              /* @__PURE__ */ jsx(
                "box",
                {
                  cssClasses: ["PlayPause"],
                  sensitive: player.active,
                  $: (self) => {
                    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
                    const handler = click.connect("pressed", player.playPause);
                    self.add_controller(click);
                    onCleanup(() => {
                      click.disconnect(handler);
                    });
                  },
                  children: /* @__PURE__ */ jsx("image", { iconSize: Gtk.IconSize.LARGE, iconName: player.statusIcon })
                }
              ),
              /* @__PURE__ */ jsx(
                "box",
                {
                  cssClasses: ["Next"],
                  sensitive: player.active,
                  $: (self) => {
                    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
                    const handler = click.connect("pressed", player.next);
                    self.add_controller(click);
                    onCleanup(() => {
                      click.disconnect(handler);
                    });
                  },
                  children: /* @__PURE__ */ jsx("image", { iconSize: Gtk.IconSize.LARGE, iconName: PlayerButtonIcons.next })
                }
              )
            ] }) })
          ] }) }) }),
          children: /* @__PURE__ */ jsx("label", { label: player.statusText, widthChars: 12 })
        }
      );
    } }) });
  }
};
var media = new MediaClass();
var Media_default = media;

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib2 from "gi://GLib?version=2.0";
import Gtk4 from "gi://Gtk?version=4.0";
import Astal3 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/lib/overrides.ts
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify2(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland: Hyprland2, Monitor, Workspace }) => {
  patch(Hyprland2.prototype, "binds");
  patch(Hyprland2.prototype, "monitors");
  patch(Hyprland2.prototype, "workspaces");
  patch(Hyprland2.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp: Wp2, Audio, Video }) => {
  patch(Wp2.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../usr/share/ags/js/lib/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";
import IO from "gi://AstalIO";
import GObject5 from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject5.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main: main2, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main2?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk4.init();
GLib2.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal3.Application);

// modules/DateTime.tsx
import GLib3 from "gi://GLib?version=2.0";
var pollTime2 = 6e4;
var DateTimeClass = class {
  constructor() {
    this.formatterTime = "%H:%M";
    this.formatterDate = "Hoje \xE9: %A, %d de %B de %Y";
    this._dateTime = createPoll({ date: "", time: "" }, pollTime2, () => {
      const now = GLib3.DateTime.new_now_local();
      return {
        date: now.format(this.formatterDate),
        time: now.format(this.formatterTime)
      };
    });
  }
  get DateTimePopover() {
    return /* @__PURE__ */ jsx(Gtk.Popover, { children: /* @__PURE__ */ jsx(Gtk.Calendar, { cssClasses: ["Calendar"] }) });
  }
  get DateTime() {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["DateTimeCalendar"], popover: this.DateTimePopover, children: /* @__PURE__ */ jsx("label", { cssClasses: ["Time"], label: this._dateTime.as((t) => `\uF017 ${t.time}`), tooltipMarkup: this._dateTime.as((d) => `\u{F00ED} ${d.date}`) }) });
  }
};
var dateTime = new DateTimeClass();
var DateTime_default = dateTime;

// services/Hyprland.ts
import AstalHyprland from "gi://AstalHyprland?version=0.1";
var Hyprland = class {
  constructor() {
    this.default = AstalHyprland.get_default();
    this._workspaces = createBinding(this.default, "workspaces").as((workspaces2) => workspaces2.sort((a, b) => a.id - b.id));
    this._focusedWorkspace = createBinding(this.default, "focusedWorkspace");
    this._clients = createBinding(this.default, "clients");
  }
  get workspaces() {
    return this._workspaces;
  }
  get focusedWorkspace() {
    return this._focusedWorkspace;
  }
  get clients() {
    return this._clients;
  }
  areMonitorsEqual(monitor, hyprMonitor) {
    const geometry = monitor.get_geometry();
    if (hyprMonitor.get_model() === monitor.get_model() && hyprMonitor.get_height() === geometry.height && hyprMonitor.get_width() === geometry.width && hyprMonitor.get_x() === geometry.x && hyprMonitor.get_y() === geometry.y) {
      return true;
    }
    return false;
  }
  getHyprlandMonitor(monitor) {
    const hyprlandMonitors = this.default.get_monitors();
    return hyprlandMonitors.find((hyprMonitor) => this.areMonitorsEqual(monitor, hyprMonitor)) || hyprlandMonitors[0];
  }
  visibilityAccessor(monitor) {
    return createComputed(
      [
        createBinding(monitor, "activeWorkspace"),
        this._clients
      ],
      (activeWorkspace, allClients) => {
        const clientsInActiveWorkspace = allClients.filter(
          (client) => client.workspace.id === activeWorkspace.id
        );
        return clientsInActiveWorkspace.length === 0;
      }
    );
  }
};
var hyprlandService = new Hyprland();
var Hyprland_default = hyprlandService;

// modules/AudioControl.tsx
import Wp from "gi://AstalWp";
import GLib4 from "gi://GLib?version=2.0";
var AudioControlClass = class {
  constructor() {
    this.step = 0.02;
    this.default = Wp.get_default();
    this.defaultSpeaker = createBinding(this.default, "defaultSpeaker");
    this.defaultMicrophone = createBinding(this.default, "defaultMicrophone");
  }
  handleScroll(edp, dy) {
    let newVolume = edp.get_volume();
    if (dy < 0) newVolume += this.step;
    else newVolume -= this.step;
    edp.set_volume(Math.min(newVolume, 1));
  }
  Endpoint({ endpoint }) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume").as((a) => `${Math.round(a * 100)}%`);
      const leftClick = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
      const leftHandler = leftClick.connect("pressed", () => edp.set_mute(!edp.get_mute()));
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => {
        leftClick.disconnect(leftHandler);
        scroll.disconnect(scrollHandler);
      });
      return /* @__PURE__ */ jsxs(
        "box",
        {
          cssClasses: ["Endpoint"],
          $: (self) => {
            self.add_controller(leftClick);
            self.add_controller(scroll);
          },
          children: [
            /* @__PURE__ */ jsx("image", { cssClasses: ["Icon"], iconName: icon }),
            /* @__PURE__ */ jsx("label", { cssClasses: ["Volume"], label: volume, widthChars: 4 })
          ]
        }
      );
    } }) });
  }
  MixerEntry({ endpoint }) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume");
      const toggleMuteClick = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
      const toggleMuteHandler = toggleMuteClick.connect("pressed", () => edp.set_mute(!edp.get_mute()));
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => {
        toggleMuteClick.disconnect(toggleMuteHandler);
        scroll.disconnect(scrollHandler);
      });
      return /* @__PURE__ */ jsxs("box", { cssClasses: ["MixerEntry"], children: [
        /* @__PURE__ */ jsx("image", { cssClasses: ["Icon"], iconName: icon, $: (self) => self.add_controller(toggleMuteClick) }),
        /* @__PURE__ */ jsx("slider", { cssClasses: ["Slider"], $: (self) => self.add_controller(scroll), value: volume, step: 0.1, min: 0, max: 1, onChangeValue: ({ value }) => edp.set_volume(value) })
      ] });
    } }) });
  }
  Mixer() {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["Mixer"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "Mixer" }),
      this.MixerEntry({ endpoint: this.defaultSpeaker }),
      this.MixerEntry({ endpoint: this.defaultMicrophone })
    ] }) });
  }
  get AudioControl() {
    const spawnPavucontrolClick = new Gtk.GestureClick({ button: Gdk.BUTTON_SECONDARY });
    const spawnPavucontrolHandler = spawnPavucontrolClick.connect("pressed", () => GLib4.spawn_command_line_async("pavucontrol"));
    onCleanup(() => spawnPavucontrolClick.disconnect(spawnPavucontrolHandler));
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["AudioControl"], $: (self) => self.add_controller(spawnPavucontrolClick), children: [
      this.Endpoint({ endpoint: this.defaultSpeaker }),
      /* @__PURE__ */ jsx("menubutton", { popover: this.Mixer(), child: /* @__PURE__ */ jsx("label", { label: "\uEAF8" }) })
    ] });
  }
};
var audioControl = new AudioControlClass();
var AudioControl_default = audioControl;

// services/Settings.ts
import GLib5 from "gi://GLib?version=2.0";

// ../../../../usr/share/ags/js/lib/file.ts
import Astal4 from "gi://AstalIO";
function readFile(path3) {
  return Astal4.read_file(path3) || "";
}
function writeFile(path3, content) {
  Astal4.write_file(path3, content);
}

// services/Settings.ts
var optionsFallback = {
  animationsEnabled: true,
  cavaVisible: 0 /* ALWAYS */,
  wallpaperSelectorActive: true
};
var path = GLib5.get_home_dir() + "/.config/ags/options/options.json";
var SettingsClass = class {
  constructor() {
    const fileStr = readFile(path);
    try {
      const parsed = JSON.parse(fileStr);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(parsed.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(parsed.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(parsed.wallpaperSelectorActive);
    } catch (err) {
      console.error("Erro ao ler options.json: " + err);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(optionsFallback.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(optionsFallback.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(optionsFallback.wallpaperSelectorActive);
    }
  }
  saveOptions() {
    const options = {
      animationsEnabled: this._animationsEnabled.get(),
      cavaVisible: this._cavaVisible.get(),
      wallpaperSelectorActive: this._wallpaperSelectorActive.get()
    };
    writeFile(path, JSON.stringify(options, null, 2));
  }
  toggleCavaVisibilityState() {
    switch (this._cavaVisible.get()) {
      case 0 /* ALWAYS */:
        this._setCavaVisible(1 /* NO_CLIENTS */);
        break;
      case 1 /* NO_CLIENTS */:
        this._setCavaVisible(2 /* DISABLED */);
        break;
      case 2 /* DISABLED */:
        this._setCavaVisible(0 /* ALWAYS */);
        break;
      default:
        this._setCavaVisible(2 /* DISABLED */);
    }
  }
  get animationsEnabled() {
    return this._animationsEnabled;
  }
  get cavaVisible() {
    return this._cavaVisible;
  }
  get wallpaperSelectorActive() {
    return this._wallpaperSelectorActive;
  }
  set setWallpaperSelectorActive(newState) {
    if (this._wallpaperSelectorActive.get() !== newState) this._setWallpaperSelectorActive(newState);
  }
  set setAnimationsEnabled(newState) {
    if (this._animationsEnabled.get() !== newState) this._setAnimationsEnabled(newState);
  }
  set setCavaVisible(newState) {
    if (this._cavaVisible.get() !== newState) this._setCavaVisible(newState);
  }
};
var settingsService = new SettingsClass();
var Settings_default = settingsService;

// modules/WallpaperSelector.tsx
import Gio3 from "gi://Gio?version=2.0";
import GLib7 from "gi://GLib?version=2.0";

// utils/Swww.ts
import GLib6 from "gi://GLib?version=2.0";
var Swww;
((Swww2) => {
  let Resize;
  ((Resize2) => {
    Resize2["NO"] = "no";
    Resize2["CROP"] = "crop";
    Resize2["FIT"] = "fit";
    Resize2["STRETCH"] = "stretch";
  })(Resize = Swww2.Resize || (Swww2.Resize = {}));
  let Filter;
  ((Filter2) => {
    Filter2["NEAREST"] = "Nearest";
    Filter2["BILINEAR"] = "Bilinear";
    Filter2["CATMULLROM"] = "CatmullRom";
    Filter2["MITCHELL"] = "Mitchell";
    Filter2["LANCZOS3"] = "Lanczos3";
  })(Filter = Swww2.Filter || (Swww2.Filter = {}));
  let TransitionType;
  ((TransitionType2) => {
    TransitionType2["NONE"] = "none";
    TransitionType2["SIMPLE"] = "simple";
    TransitionType2["FADE"] = "fade";
    TransitionType2["LEFT"] = "left";
    TransitionType2["RIGHT"] = "right";
    TransitionType2["TOP"] = "top";
    TransitionType2["BOTTOM"] = "bottom";
    TransitionType2["WIPE"] = "wipe";
    TransitionType2["WAVE"] = "wave";
    TransitionType2["GROW"] = "grow";
    TransitionType2["CENTER"] = "center";
    TransitionType2["ANY"] = "any";
    TransitionType2["RANDOM"] = "random";
  })(TransitionType = Swww2.TransitionType || (Swww2.TransitionType = {}));
  let TransitionPos;
  ((TransitionPos2) => {
    TransitionPos2["CENTER"] = "center";
    TransitionPos2["TOP"] = "top";
    TransitionPos2["LEFT"] = "left";
    TransitionPos2["RIGHT"] = "right";
    TransitionPos2["BOTTOM"] = "bottom";
    TransitionPos2["TOP_LEFT"] = "top-left";
    TransitionPos2["TOP_RIGHT"] = "top-right";
    TransitionPos2["BOTTOM_LEFT"] = "bottom-left";
    TransitionPos2["BOTTOM_RIGHT"] = "bottom-right";
  })(TransitionPos = Swww2.TransitionPos || (Swww2.TransitionPos = {}));
  class Manager {
    constructor() {
      GLib6.spawn_command_line_async("swww clear");
    }
    setWallpaper(path3, options) {
      let command = `swww img ${path3}`;
      if (options) {
        if (options.resize) command += ` --resize ${options.resize}`;
        if (options.filter) command += ` -f ${options.filter}`;
        if (options.invertY) command += ` --invert-y ${options.invertY.valueOf()}`;
        if (options.transitionAngle) command += ` --transition-angle ${options.transitionAngle}`;
        if (options.transitionDurantion) command += ` --transition-duration ${options.transitionDurantion}`;
        if (options.transitionPos) command += ` --transition-pos ${options.transitionPos}`;
        if (options.transitionStep) command += ` --transition-step ${options.transitionStep}`;
        if (options.transitionType) command += ` --transition-type ${options.transitionType}`;
        if (options.transitionWave) command += ` --transition-wave ${options.transitionWave.x},${options.transitionWave.y}`;
        if (options.outputs) command += ` --outputs ${options.outputs}`;
      }
      GLib6.spawn_command_line_async(command);
      return true;
    }
  }
  Swww2.manager = new Manager();
})(Swww || (Swww = {}));

// modules/WallpaperSelector.tsx
var path2 = GLib7.get_home_dir() + "/.config/ags/wallpapers";
var pollTime3 = 24e4;
var imageExtensions = [".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp", ".svg"];
var WallpaperSelectorClass = class _WallpaperSelectorClass {
  static {
    this.widgetCount = 0;
  }
  constructor() {
    [this.images, this.setImages] = createState([]);
    [this._timerActive, this._setTimerActive] = createState(Settings_default.wallpaperSelectorActive.get());
    this.polling = createPoll(true, pollTime3, (prev) => !prev);
    this.unsub = Settings_default.wallpaperSelectorActive.subscribe(() => this._setTimerActive(Settings_default.wallpaperSelectorActive.get()));
    this.setImages(this.readImageFiles(path2));
  }
  isImageFile(filename) {
    const extension = filename.toLowerCase().substring(filename.lastIndexOf("."));
    return imageExtensions.includes(extension) ? extension : null;
  }
  readImageFiles(directoryPath) {
    try {
      const file = Gio3.File.new_for_path(directoryPath);
      if (!file.query_exists(null)) return [];
      const enumerator = file.enumerate_children("standard::name,standard::type", Gio3.FileQueryInfoFlags.NONE, null);
      const images = [];
      let fileInfo;
      while ((fileInfo = enumerator.next_file(null)) !== null) {
        if (fileInfo.get_file_type() === Gio3.FileType.REGULAR) {
          const fileName = fileInfo.get_name();
          const ext = this.isImageFile(fileName);
          if (ext) images.push(fileName);
        }
      }
      enumerator.close(null);
      return images;
    } catch (error) {
      console.error("\u274C Erro Gio ao ler diret\xF3rio:", directoryPath, error);
      return [];
    }
  }
  get timerActive() {
    return this._timerActive;
  }
  SelectorIndicator(gdkmonitor) {
    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
    const handler = click.connect("pressed", () => this._setTimerActive(!this._timerActive.get()));
    const unsub = this.polling.subscribe(() => {
      if (this._timerActive.get()) {
        const connector = gdkmonitor.get_connector();
        if (connector) {
          const imgArray = this.images.get();
          const img = imgArray[Math.floor(Math.random() * imgArray.length)];
          Swww.manager.setWallpaper(`${path2}/${img}`, { outputs: connector, transitionType: Swww.TransitionType.GROW });
        } else {
          execAsync(`notify-send "Monitor ${gdkmonitor.get_description()} n\xE3o tem conector" "${gdkmonitor.get_description()} n\xE3o tem conector."`);
        }
      }
    });
    return /* @__PURE__ */ jsxs(
      "box",
      {
        cssClasses: ["SelectorIndicator"],
        orientation: Gtk.Orientation.VERTICAL,
        $: () => _WallpaperSelectorClass.widgetCount += 1,
        onDestroy: () => {
          _WallpaperSelectorClass.widgetCount -= 1;
          if (_WallpaperSelectorClass.widgetCount <= 0) this.unsub();
          click.disconnect(handler);
          unsub();
        },
        children: [
          /* @__PURE__ */ jsx(
            "label",
            {
              cssClasses: ["Subtitle"],
              label: "Seletor de Pap\xE9is de Parede"
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              cssClasses: ["Option", "ToggleActive"],
              label: this._timerActive.as((ta) => `Estado: ${ta ? "Ativo" : "Desativado"}`),
              $: (self) => self.add_controller(click)
            }
          )
        ]
      }
    );
  }
};
var wallpaperSelector = new WallpaperSelectorClass();
var WallpaperSelector_default = wallpaperSelector;

// modules/ControlCenter.tsx
var ControlCenterClass = class {
  constructor() {
  }
  setupButton(self, callback) {
    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
    const handler = click.connect("pressed", callback);
    self.add_controller(click);
    onCleanup(() => click.disconnect(handler));
  }
  formatCavaVisiblityText(i) {
    switch (i) {
      case 0 /* ALWAYS */:
        return "Cava sempre ativo";
      case 2 /* DISABLED */:
        return "Cava desativado";
      case 1 /* NO_CLIENTS */:
        return "Cava condicional";
    }
  }
  get ToggleVisibleComponents() {
    onCleanup(() => Settings_default.saveOptions());
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleVisibleComponents"], orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Anima\xE7\xF5es e componentes" }),
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["ToggleAnimations", "Option"],
          $: (self) => this.setupButton(self, () => Settings_default.setAnimationsEnabled = !Settings_default.animationsEnabled.get()),
          label: Settings_default.animationsEnabled.as((ae) => ae ? "Desativar anima\xE7\xF5es" : "Ativar anima\xE7\xF5es"),
          widthChars: 30
        }
      ),
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["ToggleCava", "Option"],
          $: (self) => this.setupButton(self, () => Settings_default.toggleCavaVisibilityState()),
          label: Settings_default.cavaVisible.as((vs) => this.formatCavaVisiblityText(vs)),
          widthChars: 30
        }
      )
    ] });
  }
  ControlCenterPopover(gdkmonitor) {
    return /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { cssClasses: ["ControlCenterPopover"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      this.ToggleVisibleComponents,
      WallpaperSelector_default.SelectorIndicator(gdkmonitor)
    ] }) }) });
  }
  ControlCenter(gdkmonitor) {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["ControlCenter"], popover: this.ControlCenterPopover(gdkmonitor), children: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "\u{F08C7}" }) });
  }
};
var controlCenter = new ControlCenterClass();
var ControlCenter_default = controlCenter;

// modules/Workspaces.tsx
var WorkspacesClass = class {
  constructor() {
    this.maxWorkspaces = 10;
  }
  Workspace({ workspace, isInPopover = false }) {
    const click = new Gtk.GestureClick();
    const handler_id = click.connect("pressed", () => {
      if (Hyprland_default.focusedWorkspace.get().get_id() !== workspace.get_id()) workspace.focus();
    });
    onCleanup(() => {
      if (handler_id) click.disconnect(handler_id);
    });
    return /* @__PURE__ */ jsx(
      "label",
      {
        $: (self) => self.add_controller(click),
        cssClasses: Hyprland_default.focusedWorkspace.as((focused) => ["Workspace", workspace.get_id() === focused.get_id() ? "Active" : "Inactive"]),
        label: `${workspace.get_id()}`,
        widthChars: 3,
        maxWidthChars: 3,
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER
      }
    );
  }
  MainWorkspace(workspace) {
    const click = new Gtk.GestureClick();
    const handler = click.connect("pressed", () => {
      if (workspace.get_id() !== Hyprland_default.focusedWorkspace.get().get_id()) workspace.focus();
    });
    onCleanup(() => {
      if (click) click.disconnect(handler);
    });
    return /* @__PURE__ */ jsx(
      "label",
      {
        $: (self) => self.add_controller(click),
        cssClasses: createComputed([Hyprland_default.focusedWorkspace, createBinding(workspace, "id")], (focused, id) => ["Workspace", id === focused?.get_id() ? "Active" : "Inactive"]),
        label: workspace.get_id().toString(),
        widthChars: 1,
        maxWidthChars: 1,
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER
      }
    );
  }
  WorkspacePopover({ theRest }) {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["WorkspacePopover"], children: /* @__PURE__ */ jsx(Gtk.FlowBox, { maxChildrenPerLine: 4, children: /* @__PURE__ */ jsx(For, { each: theRest, children: (item) => this.Workspace({ workspace: item, isInPopover: true }) }) }) });
  }
  MoreWorkspacesButton({ theRest }) {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["MoreWorkspacesButton"], sensitive: theRest.as((tr) => tr.length > 0), popover: this.WorkspacePopover({ theRest }), children: /* @__PURE__ */ jsx("label", { label: "\u{F054F}" }) });
  }
  Workspaces({ monitor }) {
    const monitorWorkspaces = Hyprland_default.workspaces.as((ws) => {
      const filtered = ws.filter((workspace) => workspace.get_monitor() === monitor);
      return {
        main: filtered.slice(0, this.maxWorkspaces),
        theRest: filtered.slice(this.maxWorkspaces)
      };
    });
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["Workspaces"], children: [
      /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(For, { each: monitorWorkspaces.as((mw) => mw.main), children: (w) => this.MainWorkspace(w) }) }),
      this.MoreWorkspacesButton({ theRest: monitorWorkspaces.as(({ theRest }) => theRest) })
    ] });
  }
};
var workspaces = new WorkspacesClass();
var Workspaces_default = workspaces;

// widget/Bar.tsx
function Bar({ gdkmonitor }) {
  const { TOP, LEFT, RIGHT } = Astal.WindowAnchor;
  const hyprMonitor = Hyprland_default.getHyprlandMonitor(gdkmonitor);
  return /* @__PURE__ */ jsx(
    "window",
    {
      namespace: "Bar",
      cssClasses: ["Bar"],
      visible: true,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: TOP | RIGHT | LEFT,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Bar"], halign: Gtk.Align.FILL, homogeneous: true, children: [
        /* @__PURE__ */ jsx("box", { halign: Gtk.Align.START, children: SystemTray_default.SystemTray }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.CENTER, children: [
          Media_default.Media,
          Workspaces_default.Workspaces({ monitor: hyprMonitor })
        ] }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.END, children: [
          DateTime_default.DateTime,
          AudioControl_default.AudioControl,
          SystemMonitor_default.SystemMonitor,
          ControlCenter_default.ControlCenter(gdkmonitor)
        ] })
      ] })
    }
  );
}

// modules/Cava.tsx
import Gsk from "gi://Gsk";
import AstalCava from "gi://AstalCava?version=0.1";
import GObject6 from "gi://GObject";
var CavaConfig = {
  autosens: true,
  bars: 25,
  framerate: 60,
  input: AstalCava.Input.PIPEWIRE,
  noiseReduction: 0.77,
  sensitivity: 0.75,
  stereo: false
};
var CavaWidget = class extends Gtk.DrawingArea {
  constructor(v) {
    super();
    this.set_hexpand(true);
    this.set_vexpand(true);
    this.valuesAccessor = v.as((v2) => {
      const height = this.get_allocated_height();
      return v2.map((i) => height * (1 - i));
    });
    this.unsubAccessor = this.valuesAccessor.subscribe(() => this.queue_draw());
    onCleanup(() => this.unsubAccessor());
  }
  vfunc_snapshot(snapshot) {
    if (!this.get_mapped()) return;
    try {
      if (!this.visible) return;
      const width = this.get_allocated_width();
      const height = this.get_allocated_height();
      if (width <= 0 || height <= 0) return;
      const values = this.valuesAccessor.get();
      if (values.length === 0) return;
      const barWidth = width / (values.length - 1);
      const color = this.parent.get_color();
      const builder = new Gsk.PathBuilder();
      builder.move_to(0, values[0]);
      const invSix = 1 / 6;
      for (let i = 0; i < values.length - 1; i++) {
        const p0x = (i - 1) * barWidth;
        const p0y = values[Math.max(0, i - 1)];
        const p1x = i * barWidth;
        const p1y = values[i];
        const p2x = (i + 1) * barWidth;
        const p2y = values[i + 1];
        const p3x = (i + 2) * barWidth;
        const p3y = values[Math.min(values.length - 1, i + 2)];
        const c1x = p1x + (p2x - p0x) * invSix;
        const c1y = p1y + (p2y - p0y) * invSix;
        const c2x = p2x - (p3x - p1x) * invSix;
        const c2y = p2y - (p3y - p1y) * invSix;
        builder.cubic_to(c1x, c1y, c2x, c2y, p2x, p2y);
      }
      builder.line_to(width, height);
      builder.line_to(0, height);
      builder.close();
      snapshot.append_fill(builder.to_path(), Gsk.FillRule.WINDING, color);
    } catch (error) {
      console.warn("Erro no snapshot do Cava:", error);
    }
  }
};
var _cava = GObject6.registerClass({ GTypeName: "Cava" }, CavaWidget);
var CavaClass = class _CavaClass {
  static {
    this.widgetCount = 0;
  }
  constructor() {
    [this._visibilityState, this._setVisibilityState] = createState(Settings_default.cavaVisible.get());
    this.unsub = Settings_default.cavaVisible.subscribe(() => this._setVisibilityState(Settings_default.cavaVisible.get()));
    this.default = AstalCava.get_default();
    if (this.default) {
      this.default.set_autosens(CavaConfig.autosens);
      this.default.set_bars(CavaConfig.bars);
      this.default.set_framerate(CavaConfig.framerate);
      this.default.set_input(CavaConfig.input);
      this.default.set_noise_reduction(CavaConfig.noiseReduction);
      this.default.set_stereo(CavaConfig.stereo);
      this._values = createBinding(this.default, "values").as((v) => {
        try {
          const sens = CavaConfig.sensitivity;
          return v.map((i) => i * sens);
        } catch (error) {
          console.warn("Erro no handler global do Cava:", error);
          return [];
        }
      });
    } else {
      console.error("N\xE3o foi poss\xEDvel inicializar o Cava");
      this._values = createState([])[0];
    }
  }
  shouldCavaAppear(monitor) {
    return createComputed(
      [this._visibilityState, Hyprland_default.visibilityAccessor(monitor)],
      (vs, va) => {
        switch (vs) {
          case 2 /* DISABLED */:
            return false;
          case 0 /* ALWAYS */:
            return true;
          case 1 /* NO_CLIENTS */:
            return va;
        }
      }
    );
  }
  get visibilityState() {
    return this._visibilityState;
  }
  Cava(cssClasses) {
    return /* @__PURE__ */ jsx(
      "box",
      {
        cssClasses: [...cssClasses, "Cava"],
        overflow: Gtk.Overflow.HIDDEN,
        $: () => _CavaClass.widgetCount += 1,
        onDestroy: () => {
          _CavaClass.widgetCount -= 1;
          if (_CavaClass.widgetCount <= 0) this.unsub();
        },
        children: new _cava(this._values)
      }
    );
  }
};
var cava = new CavaClass();
var Cava_default = cava;

// widget/CavaOverlay.tsx
function CavaOverlay({ gdkmonitor }) {
  const { LEFT, RIGHT, BOTTOM } = Astal.WindowAnchor;
  const hyprMonitor = Hyprland_default.getHyprlandMonitor(gdkmonitor);
  return /* @__PURE__ */ jsx(
    "window",
    {
      namespace: "CavaOverlay",
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: RIGHT | LEFT | BOTTOM,
      visible: Cava_default.shouldCavaAppear(hyprMonitor),
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsx("box", { halign: Gtk.Align.FILL, valign: Gtk.Align.END, heightRequest: Math.floor(gdkmonitor.get_geometry().height * 0.25), children: Cava_default.Cava(["CavaOverlay"]) })
    }
  );
}

// widget/Cheatsheet.tsx
function Entry({ bind, action }) {
  return /* @__PURE__ */ jsxs("box", { cssClasses: ["Entry"], overflow: Gtk.Overflow.HIDDEN, homogeneous: true, children: [
    /* @__PURE__ */ jsx("label", { cssClasses: ["Bind"], label: bind }),
    /* @__PURE__ */ jsx("label", { cssClasses: ["Action"], label: action })
  ] });
}
function Cheatsheet({ gdkmonitor }) {
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "Cheatsheet",
      layer: Astal.Layer.OVERLAY,
      gdkmonitor,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Cheatsheet"], orientation: Gtk.Orientation.VERTICAL, children: [
        /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: "Cheatsheet" }),
        /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Gest\xE3o de Clientes" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + P", action: "Fixar cliente" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Q", action: "Fechar programa" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + V", action: "Flutuar a tela" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + F", action: "For\xE7ar tela cheia" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + J", action: "Dividir em Dwindle" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF062", action: "Mover foco para janela acima" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF063", action: "Mover foco para janela abaixo" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF060", action: "Mover foco para janela \xE0 esquerda" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF061", action: "Mover foco para janela \xE0 direita" })
            ] })
          ] }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Gest\xE3o de Workspaces" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF060", action: "Ir para Workspace \xE0 esquerda" }),
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF061", action: "Ir para Workspace \xE0 direita" }),
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF060", action: "Mover para Workspace \xE0 esquerda" }),
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF061", action: "Mover para Workspace \xE0 direita" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + S", action: "Ir para Workspace especial" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + SHIFT + S", action: "Mover para workspace especial" })
            ] })
          ] })
        ] }),
        /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Programas padr\xE3o" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Enter", action: "Terminal" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + R", action: "Lan\xE7ador de aplicativos" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + E", action: "Abrir Gerenciador de Arquivos" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + D", action: "Abrir/Fechar Dock" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + C", action: "Abrir/Fechar Cheatsheet" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + ESC", action: "Abrir/fechar Wlogout" })
            ] })
          ] }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Outros" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "PRINT", action: "Capturar tela" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + PRINT", action: "Capturar regi\xE3o" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + M", action: "Fechar sess\xE3o" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + L", action: "Bloquear a tela" })
            ] })
          ] })
        ] })
      ] })
    }
  );
}

// app.tsx
function main() {
  const monitors = createBinding(app_default, "monitors");
  return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsxs(This, { this: app_default, children: [
    /* @__PURE__ */ jsx(Bar, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(CavaOverlay, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(Cheatsheet, { gdkmonitor: monitor })
  ] }) });
}
app_default.start({ css: styles_default, main });
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic2FzczovaG9tZS9pdGlyby8uY29uZmlnL2Fncy9zdHlsZXMvaW5kZXguc2NzcyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzIiwgIm1vZHVsZXMvU3lzdGVtTW9uaXRvci50c3giLCAic2VydmljZXMvVGltZUZvcm1hdHRlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvZW52LnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ25vbWUvc2lnbmFsVHJhY2tlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L0Zvci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L1dpdGgudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9UaGlzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3RpbWUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIm1vZHVsZXMvU3lzdGVtVHJheS50c3giLCAibW9kdWxlcy9NZWRpYS50c3giLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMiLCAibW9kdWxlcy9EYXRlVGltZS50c3giLCAic2VydmljZXMvSHlwcmxhbmQudHMiLCAibW9kdWxlcy9BdWRpb0NvbnRyb2wudHN4IiwgInNlcnZpY2VzL1NldHRpbmdzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2ZpbGUudHMiLCAibW9kdWxlcy9XYWxscGFwZXJTZWxlY3Rvci50c3giLCAidXRpbHMvU3d3dy50cyIsICJtb2R1bGVzL0NvbnRyb2xDZW50ZXIudHN4IiwgIm1vZHVsZXMvV29ya3NwYWNlcy50c3giLCAid2lkZ2V0L0Jhci50c3giLCAibW9kdWxlcy9DYXZhLnRzeCIsICJ3aWRnZXQvQ2F2YU92ZXJsYXkudHN4IiwgIndpZGdldC9DaGVhdHNoZWV0LnRzeCIsICJhcHAudHN4Il0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKiBDYXRwcHVjY2luIG1vY2hhIGNvbG9ycyAqL1xuLkNvbnRyb2xDZW50ZXIsIC5NZWRpYSwgLldvcmtzcGFjZXMsIC5BdWRpb0NvbnRyb2wsIC5DcHVVc2FnZSwgLkJhdHRlcnksIC5NZW1vcnlVc2FnZSwgLkRhdGVUaW1lQ2FsZW5kYXIge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBwYWRkaW5nOiA0cHg7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7XG59XG4uQ29udHJvbENlbnRlciAqLCAuTWVkaWEgKiwgLldvcmtzcGFjZXMgKiwgLkF1ZGlvQ29udHJvbCAqLCAuQ3B1VXNhZ2UgKiwgLkJhdHRlcnkgKiwgLk1lbW9yeVVzYWdlICosIC5EYXRlVGltZUNhbGVuZGFyICoge1xuICBtYXJnaW46IDBweCAycHg7XG59XG5cbi5UcmF5SXRlbSwgLldvcmtzcGFjZXMgLldvcmtzcGFjZSwgLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uLCAuTWl4ZXIgLk1peGVyRW50cnkgLkljb24ge1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBtaW4td2lkdGg6IDI0cHg7XG4gIG1pbi1oZWlnaHQ6IDI0cHg7XG59XG5cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIHtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgbWluLXdpZHRoOiAxNjBweDtcbiAgbWluLWhlaWdodDogMjBweDtcbn1cblxuLkRhdGVUaW1lQ2FsZW5kYXIge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5EYXRlVGltZUNhbGVuZGFyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciAqIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgaGVhZGVyIHtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC44KTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b24ge1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b24gKiB7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgYnV0dG9uOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIHtcbiAgcGFkZGluZzogNnB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG1hcmdpbjogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDY5LCA3MSwgOTAsIDAuNyk7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5vdGhlci1tb250aCB7XG4gIG9wYWNpdHk6IDAuNTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5vdGhlci1tb250aDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmNWUwZGM7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGdyaWQgbGFiZWwuZGF5LW51bWJlciB7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIG1hcmdpbjogMXB4O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLmRheS1udW1iZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjY2JhNmY3O1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLnRvZGF5IHtcbiAgY29sb3I6ICMxZTFlMmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiNGJlZmU7XG59XG5cbi5NZW1vcnlVc2FnZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uTWVtb3J5VXNhZ2UgKiB7XG4gIGNvbG9yOiAjZmFiMzg3O1xufVxuLk1lbW9yeVVzYWdlOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2ZhYjM4Nztcbn1cbi5NZW1vcnlVc2FnZTpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uTWVtb3J5VXNhZ2UgLkljb24ge1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5CYXR0ZXJ5IHtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2UtaW4tb3V0O1xufVxuXG4uQmF0dGVyeU5vcm1hbCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uQmF0dGVyeU5vcm1hbCAqIHtcbiAgY29sb3I6ICNiNGJlZmU7XG59XG4uQmF0dGVyeU5vcm1hbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNiNGJlZmU7XG59XG4uQmF0dGVyeU5vcm1hbDpob3ZlciAqIHtcbiAgY29sb3I6ICMxMTExMWI7XG59XG5cbi5CYXR0ZXJ5Q3JpdGljYWwge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLkJhdHRlcnlDcml0aWNhbCAqIHtcbiAgY29sb3I6ICNmMzhiYTg7XG59XG4uQmF0dGVyeUNyaXRpY2FsOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2YzOGJhODtcbn1cbi5CYXR0ZXJ5Q3JpdGljYWw6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuXG4uQmF0dGVyeVBvcG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ5LCA1MCwgNjgsIDAuOCk7XG4gIHBhZGRpbmc6IDJweDtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuVGl0bGUsIC5CYXR0ZXJ5UG9wb3ZlciAuQmF0dGVyeUxpZmUsIC5CYXR0ZXJ5UG9wb3ZlciAuVG9nZ2xlQnV0dG9uIHtcbiAgbWFyZ2luOiAycHg7XG59XG4uQmF0dGVyeVBvcG92ZXIgLlRpdGxlIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLkJhdHRlcnlQb3BvdmVyIC5CYXR0ZXJ5TGlmZSB7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLkJhdHRlcnlQb3BvdmVyIC5Ub2dnbGVCdXR0b24ge1xuICBtYXJnaW46IDJweCA0cHg7XG4gIHBhZGRpbmc6IDJweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZDogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjc1KTtcbiAgY29sb3I6IHJnYmEoMzAsIDMwLCA0NiwgMC43NSk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uQmF0dGVyeVBvcG92ZXIgLlRvZ2dsZUJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMzAsIDMwLCA0NiwgMC43NSk7XG4gIGNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNzUpO1xufVxuXG4uQ3B1VXNhZ2Uge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLkNwdVVzYWdlICoge1xuICBjb2xvcjogI2E2ZTNhMTtcbn1cbi5DcHVVc2FnZTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNhNmUzYTE7XG59XG4uQ3B1VXNhZ2U6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLkNwdVVzYWdlIC5JY29uIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uQXVkaW9Db250cm9sIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5BdWRpb0NvbnRyb2wgKiB7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLkF1ZGlvQ29udHJvbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uQXVkaW9Db250cm9sOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxuLk1peGVyIHtcbiAgcGFkZGluZzogNnB4O1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ5LCA1MCwgNjgsIDAuOCk7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5NaXhlciAuTGFiZWwge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBtYXJnaW46IDZweDtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uTWl4ZXIgLk1peGVyRW50cnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDU0NzVhO1xuICBwYWRkaW5nOiAycHg7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG59XG4uTWl4ZXIgLk1peGVyRW50cnkgLkljb24ge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuSWNvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLk1peGVyIC5NaXhlckVudHJ5IC5TbGlkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTg1YjcwO1xufVxuLk1peGVyIC5NaXhlckVudHJ5IC5TbGlkZXIgaGlnaGxpZ2h0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbn1cblxuLldvcmtzcGFjZXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ5LCA1MCwgNjgsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7XG59XG4uV29ya3NwYWNlcyAuV29ya3NwYWNlLCAuV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b24ge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNywgMTcsIDI3LCAwLjgpO1xuICBib3JkZXI6IG5vbmU7XG4gIG1hcmdpbjogMnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbiAqIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5Xb3Jrc3BhY2VzIC5BY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuOSk7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLldvcmtzcGFjZXMgLkluYWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5Xb3Jrc3BhY2VzIC5JbmFjdGl2ZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uV29ya3NwYWNlcyAuV29ya3NwYWNlUG9wb3ZlciB7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIHBhZGRpbmc6IDZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjkpO1xuICBtYXJnaW46IDJweDtcbn1cblxuLlRyYXlJdGVtIHtcbiAgbWFyZ2luOiAycHg7XG4gIC1ndGstaWNvbi1zaXplOiAyNHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZTtcbn1cbi5UcmF5SXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC44KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uVHJheUl0ZW06YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjYpO1xuICBjb2xvcjogIzExMTExYjtcbn1cbi5UcmF5SXRlbSBwb3BvdmVyLm1lbnUge1xuICBtYXJnaW46IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IG1vZGVsYnV0dG9uIHtcbiAgcGFkZGluZzogMnB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIG1hcmdpbjogMCAycHg7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IG1vZGVsYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSg2OSwgNzEsIDkwLCAwLjIpO1xufVxuLlRyYXlJdGVtIHBvcG92ZXIubWVudSBtb2RlbGJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDY5LCA3MSwgOTAsIDAuNCk7XG59XG5cbi5NZWRpYSB7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLk1lZGlhICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5NZWRpYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uTWVkaWE6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0LCAyNCwgMzcsIDAuOCk7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSB7XG4gIG1hcmdpbi1sZWZ0OiAxMnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuVGl0bGUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuQXJ0aXN0IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogcmdiYSgyMDUsIDIxNCwgMjQ0LCAwLjcpO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5NZXRhZGF0YSAuQWxidW0ge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiByZ2JhKDIwNSwgMjE0LCAyNDQsIDAuNSk7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IHtcbiAgbWFyZ2luLXRvcDogMTJweDtcbiAgcGFkZGluZzogMTJweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIge1xuICBwYWRkaW5nOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzAsIDMwLCA0NiwgMC42KTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxNHB4O1xuICBtYXJnaW46IDVweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIgLlNsaWRlciB7XG4gIG1pbi13aWR0aDogMTYwcHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuUGxheWVyU2xpZGVyIC5TbGlkZXIgaGlnaGxpZ2h0IHtcbiAgYmFja2dyb3VuZDogIzc0YzdlYztcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5QbGF5ZXJTbGlkZXIgLlRpbWVMYWJlbCB7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBvcGFjaXR5OiAwLjg7XG4gIG1pbi13aWR0aDogNDBweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXMsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQge1xuICBtYXJnaW46IDRweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6ICMxZTFlMmU7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzIGltYWdlLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZSBpbWFnZSwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0IGltYWdlIHtcbiAgbWFyZ2luOiAxMnB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91cyAqLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZSAqLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQgKiB7XG4gIGNvbG9yOiAjODliNGZhO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91czpob3ZlciwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2U6aG92ZXIsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzOmhvdmVyICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlOmhvdmVyICosIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dDpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuQ2F2YSwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLkNhdmEgPiAqIHtcbiAgY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC41KTtcbn1cblxuLkNhdmEsIC5DYXZhID4gKiwgLkNhdmFPdmVybGF5LCAuQ2F2YU92ZXJsYXkgPiAqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uQ2F2YSwgLkNhdmEgPiAqIHtcbiAgY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC41KTtcbn1cblxuLkNhdmFPdmVybGF5IHtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA0MHB4IDQwcHggMHB4IDBweDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5DYXZhT3ZlcmxheTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG5cbnRvb2x0aXAge1xuICBwYWRkaW5nOiA2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5Db250cm9sQ2VudGVyIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5Db250cm9sQ2VudGVyIC5MYWJlbCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5Db250cm9sQ2VudGVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbn1cbi5Db250cm9sQ2VudGVyOmhvdmVyIC5MYWJlbCB7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIHtcbiAgcGFkZGluZzogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ5LCA1MCwgNjgsIDAuOCk7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlN1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBtYXJnaW46IDRweDtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMge1xuICBtYXJnaW46IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OSwgNzEsIDkwLCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIC5PcHRpb24ge1xuICBwYWRkaW5nOiAycHg7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyAuVG9nZ2xlQW5pbWF0aW9ucyB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyAuVG9nZ2xlQW5pbWF0aW9uczpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4OWI0ZmE7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyAuVG9nZ2xlQ2F2YSB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyAuVG9nZ2xlQ2F2YTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNiNGJlZmU7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5XYWxscGFwZXJTeXN0ZW0ge1xuICBtYXJnaW46IDBweCA0cHg7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLldhbGxwYXBlclN5c3RlbSAuV2FsbHBhcGVycyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDcxLCA5MCwgMC44KTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgcGFkZGluZzogMTBweDtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuV2FsbHBhcGVyU3lzdGVtIC5XYWxscGFwZXJzIC5XYWxscGFwZXIge1xuICBvcGFjaXR5OiAwLjg7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNiNGJlZmU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLldhbGxwYXBlclN5c3RlbSAuV2FsbHBhcGVycyAuV2FsbHBhcGVyOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbiAgYm9yZGVyLWNvbG9yOiAjODliNGZhO1xufVxuXG4uU2VsZWN0b3JJbmRpY2F0b3Ige1xuICBtYXJnaW46IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OSwgNzEsIDkwLCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uU2VsZWN0b3JJbmRpY2F0b3IgLk9wdGlvbiB7XG4gIHBhZGRpbmc6IDJweDtcbiAgbWFyZ2luOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4uU2VsZWN0b3JJbmRpY2F0b3IgLlRvZ2dsZUFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLlNlbGVjdG9ySW5kaWNhdG9yIC5Ub2dnbGVBY3RpdmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cblxuLkNoZWF0c2hlZXQge1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjODliNGZhO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMwLCAzMCwgNDYsIDAuOCk7XG59XG4uQ2hlYXRzaGVldCAuVGl0bGUge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDgwcHg7XG59XG4uQ2hlYXRzaGVldCAuU3VidGl0bGUge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiA0MHB4O1xufVxuLkNoZWF0c2hlZXQgLlNlY3Rpb24ge1xuICBtYXJnaW46IDRweDtcbiAgcGFkZGluZzogNHB4O1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5IHtcbiAgbWFyZ2luOiAzcHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeSAuQmluZCwgLkNoZWF0c2hlZXQgLkVudHJ5IC5BY3Rpb24ge1xuICBwYWRkaW5nOiAycHg7XG59XG4uQ2hlYXRzaGVldCAuRW50cnkgLkJpbmQge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICM4OWI0ZmE7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMyNDQ7XG59XG4uQ2hlYXRzaGVldCAuRW50cnkgLkFjdGlvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIGNvbG9yOiAjMzEzMjQ0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5OmhvdmVyIC5CaW5kIHtcbiAgY29sb3I6ICMzMTMyNDQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG59XG4uQ2hlYXRzaGVldCAuRW50cnk6aG92ZXIgLkFjdGlvbiB7XG4gIGNvbG9yOiAjODliNGZhO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMjQ0O1xufVxuXG4vKiBSZXNldHRpbmcgZXZlcnkgZGVjb3JhdGlvbiBhcHBsaWVkIGVhcmxpZXIgKi9cbioge1xuICBmb250LWZhbWlseTogXCJNb25vc3BhY2VcIjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICAtZ3RrLWljb24tc2l6ZTogMjRweDtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uQmFyIHtcbiAgYmFja2dyb3VuZDogIzFlMWUyZTtcbiAgYm9yZGVyLXJhZGl1czogMjhweDtcbiAgbWFyZ2luOiA0cHggNnB4O1xufSIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuZXhwb3J0IHsgQXN0YWwsIEd0aywgR2RrIH1cbiIsICJpbXBvcnQgQXN0YWxCYXR0ZXJ5IGZyb20gXCJnaTovL0FzdGFsQmF0dGVyeVwiXG5pbXBvcnQgR1RvcCBmcm9tIFwiZ2k6Ly9HVG9wP3ZlcnNpb249Mi4wXCI7XG5pbXBvcnQgeyBmb3JtYXRUaW1lVmVyYm9zZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9UaW1lRm9ybWF0dGVyXCI7XG5pbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgY3JlYXRlQ29tcHV0ZWQgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCI7XG5cbnR5cGUgTWV0cmljcyA9IHtcbiAgICBjcHU6IG51bWJlcixcbiAgICBtZW06IG51bWJlclxufVxuXG5jb25zdCBwb2xsVGltZSA9IDMwMDA7XG5cbmNsYXNzIFN5c3RlbU1vbml0b3JDbGFzcyB7XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5OiBBc3RhbEJhdHRlcnkuRGV2aWNlO1xuICAgIHByaXZhdGUgYmF0dGVyeVBlcmNlbnRhZ2U6IEFjY2Vzc29yPG51bWJlcj47XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5Q2hhcmdpbmc6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgYmF0dGVyeUNyaXRpY2FsOiBBY2Nlc3NvcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBiYXR0ZXJ5TGlmZUxhYmVsOiBBY2Nlc3NvcjxzdHJpbmc+O1xuICAgIHByaXZhdGUgYmF0dGVyeUljb246IEFjY2Vzc29yPHN0cmluZz47XG5cbiAgICBwcml2YXRlIGNwdVNvdXJjZTogR1RvcC5nbGlidG9wX2NwdTtcbiAgICBwcml2YXRlIGNwdURhdGE6IHsgcHJldjogeyB1c2VyOiBudW1iZXIsIHN5czogbnVtYmVyLCB0b3RhbDogbnVtYmVyIH0sIGRpZmY6IHsgdXNlcjogbnVtYmVyLCBzeXM6IG51bWJlciwgdG90YWw6IG51bWJlciB9IH07XG4gICAgcHJpdmF0ZSBtZW1Tb3VyY2U6IEdUb3AuZ2xpYnRvcF9tZW07XG4gICAgcHJpdmF0ZSBfbWV0cmljczogQWNjZXNzb3I8TWV0cmljcz47XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYmF0dGVyeSA9IEFzdGFsQmF0dGVyeS5nZXRfZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLmJhdHRlcnlJY29uID0gY3JlYXRlQmluZGluZyh0aGlzLmJhdHRlcnksIFwiYmF0dGVyeUljb25OYW1lXCIpO1xuICAgICAgICB0aGlzLmJhdHRlcnlQZXJjZW50YWdlID0gY3JlYXRlQmluZGluZyh0aGlzLmJhdHRlcnksIFwicGVyY2VudGFnZVwiKTtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5Q2hhcmdpbmcgPSBjcmVhdGVCaW5kaW5nKHRoaXMuYmF0dGVyeSwgXCJjaGFyZ2luZ1wiKTtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5Q3JpdGljYWwgPSBjcmVhdGVDb21wdXRlZChbdGhpcy5iYXR0ZXJ5UGVyY2VudGFnZSwgdGhpcy5iYXR0ZXJ5Q2hhcmdpbmddLCAocCwgYykgPT4gW1wiQmF0dGVyeVwiLCBwIDw9IDAuMyAmJiAhYyA/IFwiQmF0dGVyeUNyaXRpY2FsXCIgOiBcIkJhdHRlcnlOb3JtYWxcIl0pO1xuICAgICAgICB0aGlzLmJhdHRlcnlMaWZlTGFiZWwgPSB0aGlzLmJhdHRlcnlDaGFyZ2luZy5hcyhjID0+IGMgPyBgQ2FycmVnYW5kbzogJHtmb3JtYXRUaW1lVmVyYm9zZSh0aGlzLmJhdHRlcnkudGltZV90b19mdWxsKX0gcmVzdGFudGUocylgIDogYERlc2NhcnJlZ2FuZG86ICR7Zm9ybWF0VGltZVZlcmJvc2UodGhpcy5iYXR0ZXJ5LnRpbWVfdG9fZW1wdHkpfSByZXN0YW50ZShzKWApO1xuXG4gICAgICAgIHRoaXMuY3B1U291cmNlID0gbmV3IEdUb3AuZ2xpYnRvcF9jcHUoKTtcbiAgICAgICAgdGhpcy5tZW1Tb3VyY2UgPSBuZXcgR1RvcC5nbGlidG9wX21lbSgpO1xuXG4gICAgICAgIHRoaXMuY3B1RGF0YSA9IHsgcHJldjogeyB1c2VyOiAwLCBzeXM6IDAsIHRvdGFsOiAwIH0sIGRpZmY6IHsgdXNlcjogMCwgc3lzOiAwLCB0b3RhbDogMCB9IH07XG5cbiAgICAgICAgdGhpcy5fbWV0cmljcyA9IGNyZWF0ZVBvbGwoeyBjcHU6IDAsIG1lbTogMCB9LCBwb2xsVGltZSwgKCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBHVG9wLmdsaWJ0b3BfZ2V0X2NwdSh0aGlzLmNwdVNvdXJjZSk7XG4gICAgICAgICAgICAgICAgR1RvcC5nbGlidG9wX2dldF9tZW0odGhpcy5tZW1Tb3VyY2UpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgY3B1ID0gdGhpcy5jcHVTb3VyY2U7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBwcmV2ID0gdGhpcy5jcHVEYXRhLnByZXY7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmNwdURhdGEuZGlmZiA9IHtcbiAgICAgICAgICAgICAgICAgICAgdXNlcjogY3B1LnVzZXIgLSBwcmV2LnVzZXIsXG4gICAgICAgICAgICAgICAgICAgIHN5czogY3B1LnN5cyAtIHByZXYuc3lzLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbDogY3B1LnRvdGFsIC0gcHJldi50b3RhbFxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuY3B1RGF0YS5wcmV2ID0ge1xuICAgICAgICAgICAgICAgICAgICB1c2VyOiBjcHUudXNlcixcbiAgICAgICAgICAgICAgICAgICAgc3lzOiBjcHUuc3lzLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbDogY3B1LnRvdGFsXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgY3B1RGlmZiA9IHRoaXMuY3B1RGF0YS5kaWZmO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgY3B1UGVyY2VudCA9IGNwdURpZmYudG90YWwgPiAwID8gTWF0aC5yb3VuZCgoKGNwdURpZmYudXNlciArIGNwdURpZmYuc3lzKSAvIGNwdURpZmYudG90YWwpICogMTAwKSA6IDA7XG4gICAgICAgICAgICAgICAgY29uc3QgbWVtUGVyY2VudCA9IHRoaXMubWVtU291cmNlLnRvdGFsID4gMCA/IE1hdGgucm91bmQoKHRoaXMubWVtU291cmNlLnVzZXIgLyB0aGlzLm1lbVNvdXJjZS50b3RhbCkgKiAxMDApIDogMDtcblxuICAgICAgICAgICAgICAgIHJldHVybiB7IGNwdTogTWF0aC5taW4oMTAwLCBjcHVQZXJjZW50KSwgbWVtOiBNYXRoLm1pbigxMDAsIG1lbVBlcmNlbnQpIH07XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm8gYW8gb2J0ZXIgbVx1MDBFOXRyaWNhcyBkbyBzaXN0ZW1hOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY3B1OiAwLCBtZW06IDAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBTeXN0ZW1Nb25pdG9yKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJTeXN0ZW1Nb25pdG9yXCJdfT5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkNwdVVzYWdlXCJdfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snSWNvbiddfSBsYWJlbD17J1x1RUMxOSd9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0xhYmVsJ119IGxhYmVsPXt0aGlzLl9tZXRyaWNzLmFzKG0gPT4gYCR7bS5jcHV9JWApfSB3aWR0aENoYXJzPXs0fSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTWVtb3J5VXNhZ2VcIl19PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17WydJY29uJ119IGxhYmVsPXsnXHVEQjgxXHVERTFBJ30gLz5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snTGFiZWwnXX0gbGFiZWw9e3RoaXMuX21ldHJpY3MuYXMobSA9PiBgJHttLm1lbX0lYCl9IHdpZHRoQ2hhcnM9ezR9IC8+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXt0aGlzLmJhdHRlcnlDcml0aWNhbH0gdG9vbHRpcFRleHQ9e3RoaXMuYmF0dGVyeUxpZmVMYWJlbH0+XG4gICAgICAgICAgICAgICAgICAgIDxpbWFnZSBjc3NDbGFzc2VzPXtbXCJCYXR0ZXJ5SWNvblwiXX0gaWNvbk5hbWU9e3RoaXMuYmF0dGVyeUljb259IC8+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJCYXR0ZXJ5VXNhZ2VMYWJlbFwiXX0gbGFiZWw9e3RoaXMuYmF0dGVyeVBlcmNlbnRhZ2UuYXMocCA9PiBgJHtNYXRoLnJvdW5kKE1hdGgubWluKDEsIHApICogMTAwKSA/PyAwfSVgKX0gLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgc3lzdGVtTW9uaXRvciA9IG5ldyBTeXN0ZW1Nb25pdG9yQ2xhc3M7XG5leHBvcnQgZGVmYXVsdCBzeXN0ZW1Nb25pdG9yO1xuIiwgImV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUaW1lKHNlY29uZHM6IG51bWJlcik6IHN0cmluZyB7XG4gICAgaWYgKCFzZWNvbmRzIHx8IHNlY29uZHMgPCAwKSByZXR1cm4gXCIwOjAwXCI7XG5cbiAgICBjb25zdCBob3VycyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAvIDM2MDApO1xuICAgIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKChzZWNvbmRzICUgMzYwMCkgLyA2MCk7XG4gICAgY29uc3QgcmVtYWluaW5nU2Vjb25kcyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAlIDYwKTtcblxuICAgIGlmIChob3VycyA+IDApIHtcbiAgICAgICAgcmV0dXJuIGAke2hvdXJzfToke21pbnV0ZXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfToke3JlbWFpbmluZ1NlY29uZHMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGAke21pbnV0ZXN9OiR7cmVtYWluaW5nU2Vjb25kcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9YDtcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUaW1lVmVyYm9zZShzZWNvbmRzOiBudW1iZXIpOiBzdHJpbmcge1xuICAgIGlmKHNlY29uZHMgPj0gMzYwMCkge1xuICAgICAgICByZXR1cm4gYCR7TWF0aC5mbG9vcihzZWNvbmRzIC8gMzYwMCl9aCR7TWF0aC5mbG9vcigoc2Vjb25kcyAlIDM2MDApIC8gNjApfW1gO1xuICAgIH1cblxuICAgIHJldHVybiBgJHtNYXRoLmZsb29yKHNlY29uZHMgLyA2MCl9bWA7XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgdHlwZSBDQywgdHlwZSBGQywgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGtlYmFiaWZ5LCB0eXBlIFBhc2NhbGlmeSwgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG4vKipcbiAqIFJlcHJlc2VudHMgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCBjYW4gYmUgcGFzc2VkIGFzIGEgY2hpbGQgdG8gY2xhc3MgY29tcG9uZW50cy5cbiAqL1xuZXhwb3J0IHR5cGUgTm9kZSA9XG4gICAgfCBBcnJheTxHT2JqZWN0Lk9iamVjdD5cbiAgICB8IEdPYmplY3QuT2JqZWN0XG4gICAgfCBudW1iZXJcbiAgICB8IHN0cmluZ1xuICAgIHwgYm9vbGVhblxuICAgIHwgbnVsbFxuICAgIHwgdW5kZWZpbmVkXG5cbmV4cG9ydCBjb25zdCBndGtUeXBlID0gU3ltYm9sKFwiZ3RrIGJ1aWxkZXIgdHlwZVwiKVxuXG4vKipcbiAqIEdldCB0aGUgdHlwZSBvZiB0aGUgb2JqZWN0IHNwZWNpZmllZCB0aHJvdWdoIHRoZSBgJHR5cGVgIHByb3BlcnR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlKG9iamVjdDogR09iamVjdC5PYmplY3QpIHtcbiAgICByZXR1cm4gZ3RrVHlwZSBpbiBvYmplY3QgPyAob2JqZWN0W2d0a1R5cGVdIGFzIHN0cmluZykgOiBudWxsXG59XG5cbi8qKlxuICogRnVuY3Rpb24gQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgRkNQcm9wczxTZWxmLCBQcm9wcz4gPSBQcm9wcyAmIHtcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvblxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG59XG5cbi8qKlxuICogQ2xhc3MgQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgQ0NQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFByb3BzPiA9IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWwgY2hpbGRyZW4gZWxlbWVudHNcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBBcnJheTxOb2RlPiB8IE5vZGVcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogZnVuY3Rpb24gdG8gdXNlIGFzIGEgY29uc3RydWN0b3IsXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICRjb25zdHJ1Y3Rvcj8ocHJvcHM6IFBhcnRpYWw8UHJvcHM+KTogU2VsZlxuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxuICAgIC8qKlxuICAgICAqIENTUyBjbGFzcyBuYW1lc1xuICAgICAqL1xuICAgIGNsYXNzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICAgIC8qKlxuICAgICAqIGlubGluZSBDU1NcbiAgICAgKi9cbiAgICBjc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFByb3BzXTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8UHJvcHNbS10+PiB8IFByb3BzW0tdXG59ICYge1xuICAgIFtTIGluIGtleW9mIFNlbGZbXCIkc2lnbmFsc1wiXSBhcyBTIGV4dGVuZHMgYG5vdGlmeTo6JHtpbmZlciBQfWBcbiAgICAgICAgPyBgb25Ob3RpZnkke1Bhc2NhbGlmeTxQPn1gXG4gICAgICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8Uz59YFxuICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFR5cGUob2JqZWN0OiBvYmplY3QsIHR5cGU6IHN0cmluZykge1xuICAgIGlmIChndGtUeXBlIGluIG9iamVjdCAmJiBvYmplY3RbZ3RrVHlwZV0gIT09IFwiXCIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApXG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgUGFyYW1ldGVyczxUPlswXT4sXG4pOiBSZXR1cm5UeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIG5ldyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIENvbnN0cnVjdG9yUGFyYW1ldGVyczxUPlswXT4sXG4pOiBJbnN0YW5jZVR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IGtleW9mICh0eXBlb2YgZW52KVtcImludHJpbnNpY0VsZW1lbnRzXCJdIHwgKG5ldyAocHJvcHM6IGFueSkgPT4gVCkgfCAoKHByb3BzOiBhbnkpID0+IFQpLFxuICAgIGlucHJvcHM6IGFueSxcbiAgICAvLyBrZXkgaXMgYSBzcGVjaWFsIHByb3AgaW4ganN4IHdoaWNoIGlzIHBhc3NlZCBhcyBhIHRoaXJkIGFyZ3VtZW50IGFuZCBub3QgaW4gcHJvcHNcbiAgICBrZXk/OiBzdHJpbmcsXG4pOiBUIHtcbiAgICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuLCAuLi5yZXN0IH0gPSBpbnByb3BzIGFzIENDUHJvcHM8VCwgYW55PlxuICAgIGNvbnN0IHByb3BzID0gcmVzdCBhcyBSZWNvcmQ8c3RyaW5nLCBhbnk+XG5cbiAgICBpZiAoa2V5KSBPYmplY3QuYXNzaWduKHByb3BzLCB7IGtleSB9KVxuICAgIGVudi5pbml0UHJvcHMocHJvcHMpXG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBjdG9yID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChjdG9yIGluIGVudi5pbnRyaW5zaWNFbGVtZW50cykge1xuICAgICAgICAgICAgY3RvciA9IGVudi5pbnRyaW5zaWNFbGVtZW50c1tjdG9yXSBhcyBGQzxUPiB8IENDPFQ+XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgdW5rbm93biBpbnRyaW5zaWMgZWxlbWVudCBcIiR7Y3Rvcn1cImApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaXNGdW5jdGlvbkN0b3IoY3RvcikpIHtcbiAgICAgICAgY29uc3Qgb2JqZWN0ID0gY3Rvcih7IGNoaWxkcmVuLCAuLi5wcm9wcyB9KVxuICAgICAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSlcbiAgICAgICAgJD8uKG9iamVjdClcbiAgICAgICAgcmV0dXJuIG9iamVjdFxuICAgIH1cblxuICAgIC8vIGNvbGxlY3QgY3NzIGFuZCBjbGFzc05hbWVcbiAgICBjb25zdCB7IGNzcywgY2xhc3M6IGNsYXNzTmFtZSB9ID0gcHJvcHNcbiAgICBkZWxldGUgcHJvcHMuY3NzXG4gICAgZGVsZXRlIHByb3BzLmNsYXNzXG5cbiAgICBjb25zdCBzaWduYWxzOiBBcnJheTxbc3RyaW5nLCAoLi4ucHJvcHM6IHVua25vd25bXSkgPT4gdW5rbm93bl0+ID0gW11cbiAgICBjb25zdCBiaW5kaW5nczogQXJyYXk8W3N0cmluZywgQWNjZXNzb3I8dW5rbm93bj5dPiA9IFtdXG5cbiAgICAvLyBjb2xsZWN0IHNpZ25hbHMgYW5kIGJpbmRpbmdzXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBzaWduYWxzLnB1c2goW2tleS5zbGljZSgyKSwgdmFsdWUgYXMgKCkgPT4gdW5rbm93bl0pXG4gICAgICAgICAgICBkZWxldGUgcHJvcHNba2V5XVxuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBiaW5kaW5ncy5wdXNoKFtrZXksIHZhbHVlXSlcbiAgICAgICAgICAgIHByb3BzW2tleV0gPSB2YWx1ZS5nZXQoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gY29uc3RydWN0XG4gICAgY29uc3Qgb2JqZWN0ID0gJGNvbnN0cnVjdG9yID8gJGNvbnN0cnVjdG9yKHByb3BzKSA6IG5ldyAoY3RvciBhcyBDQzxUPikocHJvcHMpXG4gICAgaWYgKCRjb25zdHJ1Y3RvcikgT2JqZWN0LmFzc2lnbihvYmplY3QsIHByb3BzKVxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuXG4gICAgaWYgKGNzcykgZW52LnNldENzcyhvYmplY3QsIGNzcylcbiAgICBpZiAoY2xhc3NOYW1lKSBlbnYuc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpXG5cbiAgICAvLyBhZGQgY2hpbGRyZW5cbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7XG4gICAgICAgIGlmIChjaGlsZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiVHJ5aW5nIHRvIGFkZCBib29sZWFuIHZhbHVlIG9mIGB0cnVlYCBhcyBhIGNoaWxkLlwiKVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkge1xuICAgICAgICAgICAgICAgIGVudi5hZGRDaGlsZChvYmplY3QsIGNoLCAtMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2hpbGQsIC0xKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGFuZGxlIHNpZ25hbHNcbiAgICBjb25zdCBkaXNwb3NlSGFuZGxlcnMgPSBzaWduYWxzLm1hcCgoW3NpZywgaGFuZGxlcl0pID0+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGtlYmFiaWZ5KHNpZylcbiAgICAgICAgY29uc3QgaWQgPSBuYW1lLnN0YXJ0c1dpdGgoXCJub3RpZnktXCIpXG4gICAgICAgICAgICA/IG9iamVjdC5jb25uZWN0KGBub3RpZnk6OiR7bmFtZS5zbGljZSg3KX1gLCBoYW5kbGVyKVxuICAgICAgICAgICAgOiBvYmplY3QuY29ubmVjdChrZWJhYmlmeShzaWcpLCBoYW5kbGVyKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9KVxuXG4gICAgLy8gaGFuZGxlIGJpbmRpbmdzXG4gICAgY29uc3QgZGlzcG9zZUJpbmRpbmdzID0gYmluZGluZ3MubWFwKChbcHJvcCwgYmluZGluZ10pID0+IHtcbiAgICAgICAgY29uc3QgZGlzcG9zZSA9IGJpbmRpbmcuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpXG4gICAgICAgIH0pXG4gICAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpXG4gICAgICAgIHJldHVybiBkaXNwb3NlXG4gICAgfSlcblxuICAgIC8vIGNsZWFudXBcbiAgICBpZiAoZGlzcG9zZUJpbmRpbmdzLmxlbmd0aCA+IDAgfHwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgICAgIGRpc3Bvc2VIYW5kbGVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIGRpc3Bvc2VCaW5kaW5ncy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAkPy4ob2JqZWN0KVxuICAgIHJldHVybiBvYmplY3Rcbn1cblxuZXhwb3J0IGNvbnN0IGpzeHMgPSBqc3hcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG4gICAgbmFtZXNwYWNlIEpTWCB7XG4gICAgICAgIHR5cGUgRWxlbWVudFR5cGUgPSBrZXlvZiBJbnRyaW5zaWNFbGVtZW50cyB8IEZDIHwgQ0NcbiAgICAgICAgdHlwZSBFbGVtZW50ID0gR09iamVjdC5PYmplY3RcbiAgICAgICAgdHlwZSBFbGVtZW50Q2xhc3MgPSBHT2JqZWN0Lk9iamVjdFxuXG4gICAgICAgIHR5cGUgTGlicmFyeU1hbmFnZWRBdHRyaWJ1dGVzPEMsIFByb3BzPiA9IEpzeFByb3BzPEMsIFByb3BzPiAmIHtcbiAgICAgICAgICAgIC8vIEZJWE1FOiB3aHkgZG9lcyBhbiBpbnRyaW5zaWMgZWxlbWVudCBhbHdheXMgcmVzb2x2ZSBhcyBGQz9cbiAgICAgICAgICAgIC8vIF9fdHlwZT86IEMgZXh0ZW5kcyBDQyA/IFwiQ0NcIiA6IEMgZXh0ZW5kcyBGQyA/IFwiRkNcIiA6IG5ldmVyXG4gICAgICAgIH1cblxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICAgICAgICAvLyBjYzogQ0NQcm9wczxHdGsuQm94LCBHdGsuQm94LkNvbnN0cnVjdG9yUHJvcHMsIEd0ay5Cb3guU2lnbmFsU2lnbmF0dXJlcz5cbiAgICAgICAgICAgIC8vIGZjOiBGQ1Byb3BzPEd0ay5XaWRnZXQsIEZuUHJvcHM+XG4gICAgICAgIH1cblxuICAgICAgICBpbnRlcmZhY2UgRWxlbWVudENoaWxkcmVuQXR0cmlidXRlIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgICAgIGNoaWxkcmVuOiB7fVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyB0eXBlIFBhc2NhbGlmeSwgY2FtZWxpZnksIGtlYmFiaWZ5IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHR5cGUgeyBEZWVwSW5mZXIsIFJlY3Vyc2l2ZUluZmVyIH0gZnJvbSBcIi4uL3ZhcmlhbnQuanNcIlxuXG50eXBlIFN1YnNjcmliZUNhbGxiYWNrID0gKCkgPT4gdm9pZFxudHlwZSBEaXNwb3NlRnVuY3Rpb24gPSAoKSA9PiB2b2lkXG50eXBlIFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrOiBTdWJzY3JpYmVDYWxsYmFjaykgPT4gRGlzcG9zZUZ1bmN0aW9uXG5cbmV4cG9ydCB0eXBlIEFjY2Vzc2VkPFQ+ID0gVCBleHRlbmRzIEFjY2Vzc29yPGluZmVyIFY+ID8gViA6IG5ldmVyXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWRlY2xhcmF0aW9uLW1lcmdpbmdcbmV4cG9ydCBjbGFzcyBBY2Nlc3NvcjxUID0gdW5rbm93bj4gZXh0ZW5kcyBGdW5jdGlvbiB7XG4gICAgc3RhdGljICRndHlwZSA9IEdPYmplY3QuVFlQRV9KU09CSkVDVCBhcyB1bmtub3duIGFzIEdPYmplY3QuR1R5cGU8QWNjZXNzb3I+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICAvLyBUT0RPOiBhdXRvIHVuc3ViIHdoZW4gYSBzY29wZSBpcyBhdmFpbGFibGU/XG4gICAgICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgdmFsdWUuXG4gICAgICovXG4gICAgZ2V0KCk6IFQge1xuICAgICAgICByZXR1cm4gdGhpcy4jZ2V0KClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgYXM8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHRyYW5zZm9ybSh0aGlzLiNnZXQoKSksIHRoaXMuI3N1YnNjcmliZSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2NhbGw8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hcyh0cmFuc2Zvcm0pXG4gICAgfVxuXG4gICAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIGBBY2Nlc3Nvcjwke3RoaXMuZ2V0KCl9PmBcbiAgICB9XG5cbiAgICBbU3ltYm9sLnRvUHJpbWl0aXZlXSgpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiQWNjZXNzb3IgaW1wbGljaXRseSBjb252ZXJ0ZWQgdG8gYSBwcmltaXRpdmUgdmFsdWUuXCIpXG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKClcbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWNjZXNzb3I8VD4ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICA8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj5cbn1cblxuZXhwb3J0IHR5cGUgU2V0dGVyPFQ+ID0ge1xuICAgICh2YWx1ZTogVCk6IHZvaWRcbiAgICAodmFsdWU6IChwcmV2OiBUKSA9PiBUKTogdm9pZFxufVxuXG5leHBvcnQgdHlwZSBTdGF0ZTxUPiA9IFtBY2Nlc3NvcjxUPiwgU2V0dGVyPFQ+XVxuXG4vKipcbiAqIENyZWF0ZSBhIHdyaXRhYmxlIHNpZ25hbC5cbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW50aWFsIHZhbHVlIG9mIHRoZSBzaWduYWxcbiAqIEByZXR1cm5zIEFuIGBBY2Nlc3NvcmAgYW5kIGEgc2V0dGVyIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdGF0ZTxUPihpbml0OiBUKTogU3RhdGU8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcbiAgICAgICAgcmV0dXJuICgpID0+IHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICBjb25zdCBzZXQgPSAobmV3VmFsdWU6IHVua25vd24pID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWU6IFQgPSB0eXBlb2YgbmV3VmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IG5ld1ZhbHVlKGN1cnJlbnRWYWx1ZSkgOiBuZXdWYWx1ZVxuICAgICAgICBpZiAoY3VycmVudFZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgIC8vIHJ1bm5pbmcgY2FsbGJhY2tzIG1pZ2h0IG11dGF0ZSBzdWJzY3JpYmVyc1xuICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gW25ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSksIHNldCBhcyBTZXR0ZXI8VD5dXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggaXMgY29tcHV0ZWQgZnJvbSBhIGxpc3Qgb2YgYEFjY2Vzc29yYHMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogbGV0IGE6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGxldCBiOiBBY2Nlc3NvcjxzdHJpbmc+XG4gKiBjb25zdCBjOiBBY2Nlc3NvcjxbbnVtYmVyLCBzdHJpbmddPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSlcbiAqIGNvbnN0IGQ6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0sIChhOiBudW1iZXIsIGI6IHN0cmluZykgPT4gYCR7YX0gJHtifWApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gZGVwcyBMaXN0IG9mIGBBY2Nlc3NvcnNgLlxuICogQHBhcmFtIHRyYW5zZm9ybSBBbiBvcHRpb25hbCB0cmFuc2Zvcm0gZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgY29tcHV0ZWQgYEFjY2Vzc29yYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkPFxuICAgIGNvbnN0IERlcHMgZXh0ZW5kcyBBcnJheTxBY2Nlc3Nvcjxhbnk+PixcbiAgICBBcmdzIGV4dGVuZHMgeyBbSyBpbiBrZXlvZiBEZXBzXTogQWNjZXNzZWQ8RGVwc1tLXT4gfSxcbiAgICBWID0gQXJncyxcbj4oZGVwczogRGVwcywgdHJhbnNmb3JtPzogKC4uLmFyZ3M6IEFyZ3MpID0+IFYpOiBBY2Nlc3NvcjxWPiB7XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBjYWNoZSA9IG5ldyBBcnJheTx1bmtub3duPihkZXBzLmxlbmd0aClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PlxuICAgICAgICAgICAgICAgIGRlcC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVbaV0gIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICAgICAgY2FjaGUubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFYgPT4ge1xuICAgICAgICBjb25zdCBhcmdzID0gZGVwcy5tYXAoKGRlcCwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFjYWNoZVtpXSkge1xuICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjYWNoZVtpXVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oLi4uKGFyZ3MgYXMgQXJncykpIDogKGFyZ3MgYXMgVilcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdPYmplY3QuT2JqZWN0YCdzIGBwcm9wZXJ0eWAuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdPYmplY3QuT2JqZWN0YCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0gcHJvcGVydHkgT25lIG9mIGl0cyByZWdpc3RlcmVkIHByb3BlcnRpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUCBleHRlbmRzIGtleW9mIFQ+KFxuICAgIG9iamVjdDogVCxcbiAgICBwcm9wZXJ0eTogRXh0cmFjdDxQLCBzdHJpbmc+LFxuKTogQWNjZXNzb3I8VFtQXT5cblxuLy8gVE9ETzogc3VwcG9ydCBuZXN0ZWQgYmluZGluZ3Ncbi8vIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFxuLy8gICAgIFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbi8vICAgICBQMSBleHRlbmRzIGtleW9mIFQsXG4vLyAgICAgUDIgZXh0ZW5kcyBrZXlvZiBOb25OdWxsYWJsZTxUW1AxXT4sXG4vLyA+KFxuLy8gICAgIG9iamVjdDogVCxcbi8vICAgICBwcm9wZXJ0eTE6IEV4dHJhY3Q8UDEsIHN0cmluZz4sXG4vLyAgICAgcHJvcGVydHkyOiBFeHRyYWN0PFAyLCBzdHJpbmc+LFxuLy8gKTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8VFtQMV0+W1AyXT5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHaW8uU2V0dGluZ3NgJ3MgYGtleWAuXG4gKiBWYWx1ZXMgYXJlIHJlY3Vyc2l2ZWx5IHVucGFja2VkLlxuICpcbiAqIEBkZXByZWNhdGVkIHByZWZlciB1c2luZyB7QGxpbmsgY3JlYXRlU2V0dGluZ3N9LlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdpby5TZXR0aW5nc2AgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIGtleSBUaGUgc2V0dGluZ3Mga2V5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4ob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCB8IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPiB7XG4gICAgY29uc3QgcHJvcCA9IGtlYmFiaWZ5KGtleSkgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBjb25zdCBzaWcgPSBvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MgPyBcImNoYW5nZWRcIiA6IFwibm90aWZ5XCJcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChgJHtzaWd9Ojoke3Byb3B9YCwgKCkgPT4gY2FsbGJhY2soKSlcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncykge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSBhcyBUXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7cHJvcC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICAgICAgICAgIGlmIChnZXR0ZXIgaW4gb2JqZWN0ICYmIHR5cGVvZiBvYmplY3RbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChvYmplY3RbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpIGFzIFRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3AgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W3Byb3BdIGFzIFRcbiAgICAgICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W2tleSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XSBhcyBUXG5cbiAgICAgICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ2V0IHByb3BlcnR5ICR7a2V5fWApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG50eXBlIENvbm5lY3Rpb25IYW5kbGVyPFxuICAgIE8gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTIGV4dGVuZHMga2V5b2YgT1tcIiRzaWduYWxzXCJdLFxuICAgIFQsXG4+ID0gT1tcIiRzaWduYWxzXCJdW1NdIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBpbmZlciBSXG4gICAgPyB2b2lkIGV4dGVuZHMgUlxuICAgICAgICA/ICguLi5hcmdzOiBbLi4uUGFyYW1ldGVyczxPW1wiJHNpZ25hbHNcIl1bU10+LCBjdXJyZW50VmFsdWU6IFRdKSA9PiBUXG4gICAgICAgIDogbmV2ZXJcbiAgICA6IG5ldmVyXG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggc2V0cyB1cCBhIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCBzaWduYWwgY29ubmVjdGlvbnMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogY29uc3QgdmFsdWU6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb25uZWN0aW9uKFxuICogICBcImluaXRpYWwgdmFsdWVcIixcbiAqICAgW29iajEsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdLFxuICogICBbb2JqMiwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl1cbiAqIClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gc2lnbmFscyBBIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCwgc2lnbmFsIG5hbWUgYW5kIGNhbGxiYWNrIHBhaXJzIHRvIGNvbm5lY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uPFxuICAgIFQsXG4gICAgTzEgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMSBleHRlbmRzIGtleW9mIE8xW1wiJHNpZ25hbHNcIl0sXG4gICAgTzIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMiBleHRlbmRzIGtleW9mIE8yW1wiJHNpZ25hbHNcIl0sXG4gICAgTzMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMyBleHRlbmRzIGtleW9mIE8zW1wiJHNpZ25hbHNcIl0sXG4gICAgTzQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNCBleHRlbmRzIGtleW9mIE80W1wiJHNpZ25hbHNcIl0sXG4gICAgTzUgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNSBleHRlbmRzIGtleW9mIE81W1wiJHNpZ25hbHNcIl0sXG4gICAgTzYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNiBleHRlbmRzIGtleW9mIE82W1wiJHNpZ25hbHNcIl0sXG4gICAgTzcgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNyBleHRlbmRzIGtleW9mIE83W1wiJHNpZ25hbHNcIl0sXG4gICAgTzggZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOCBleHRlbmRzIGtleW9mIE84W1wiJHNpZ25hbHNcIl0sXG4gICAgTzkgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOSBleHRlbmRzIGtleW9mIE85W1wiJHNpZ25hbHNcIl0sXG4+KFxuICAgIGluaXQ6IFQsXG4gICAgaDE6IFtPMSwgUzEsIENvbm5lY3Rpb25IYW5kbGVyPE8xLCBTMSwgVD5dLFxuICAgIGgyPzogW08yLCBTMiwgQ29ubmVjdGlvbkhhbmRsZXI8TzIsIFMyLCBUPl0sXG4gICAgaDM/OiBbTzMsIFMzLCBDb25uZWN0aW9uSGFuZGxlcjxPMywgUzMsIFQ+XSxcbiAgICBoND86IFtPNCwgUzQsIENvbm5lY3Rpb25IYW5kbGVyPE80LCBTNCwgVD5dLFxuICAgIGg1PzogW081LCBTNSwgQ29ubmVjdGlvbkhhbmRsZXI8TzUsIFM1LCBUPl0sXG4gICAgaDY/OiBbTzYsIFM2LCBDb25uZWN0aW9uSGFuZGxlcjxPNiwgUzYsIFQ+XSxcbiAgICBoNz86IFtPNywgUzcsIENvbm5lY3Rpb25IYW5kbGVyPE83LCBTNywgVD5dLFxuICAgIGg4PzogW084LCBTOCwgQ29ubmVjdGlvbkhhbmRsZXI8TzgsIFM4LCBUPl0sXG4gICAgaDk/OiBbTzksIFM5LCBDb25uZWN0aW9uSGFuZGxlcjxPOSwgUzksIFQ+XSxcbikge1xuICAgIGxldCB2YWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IHNpZ25hbHMgPSBbaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIGg4LCBoOV0uZmlsdGVyKChoKSA9PiBoICE9PSB1bmRlZmluZWQpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gc2lnbmFscy5tYXAoKFtvYmplY3QsIHNpZ25hbCwgY2FsbGJhY2tdKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuY29ubmVjdC5jYWxsKFxuICAgICAgICAgICAgICAgICAgICBvYmplY3QsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbCBhcyBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIChfLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNhbGxiYWNrKC4uLmFyZ3MsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmRpc2Nvbm5lY3QuY2FsbChvYmplY3QsIGlkKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2lnbmFsIGZyb20gYSBwcm92aWVyIGZ1bmN0aW9uLlxuICogVGhlIHByb3ZpZGVyIGlzIGNhbGxlZCB3aGVuIHRoZSBmaXJzdCBzdWJzY3JpYmVyIGFwcGVhcnMgYW5kIHRoZSByZXR1cm5lZCBkaXNwb3NlXG4gKiBmdW5jdGlvbiBmcm9tIHRoZSBwcm92aWRlciB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBudW1iZXIgb2Ygc3Vic2NyaWJlcnMgZHJvcCB0byB6ZXJvLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHZhbHVlID0gY3JlYXRlRXh0ZXJuYWwoMCwgKHNldCkgPT4ge1xuICogICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHNldCgodikgPT4gdiArIDEpKVxuICogICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBzaG91bGQgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZXJuYWw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBwcm9kdWNlcjogKHNldDogU2V0dGVyPFQ+KSA9PiBEaXNwb3NlRnVuY3Rpb24sXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogRGlzcG9zZUZ1bmN0aW9uXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gcHJvZHVjZXIoKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZTogVCA9IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KGN1cnJlbnRWYWx1ZSkgOiB2XG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG50eXBlIFNldHRpbmdzPFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+PiA9IHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIFVuY2FwaXRhbGl6ZTxQYXNjYWxpZnk8Sz4+XTogQWNjZXNzb3I8UmVjdXJzaXZlSW5mZXI8VFtLXT4+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFQgYXMgYHNldCR7UGFzY2FsaWZ5PEs+fWBdOiBTZXR0ZXI8RGVlcEluZmVyPFRbS10+PlxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqXG4gKiBXcmFwIGEge0BsaW5rIEdpby5TZXR0aW5nc30gaW50byBhIGNvbGxlY3Rpb24gb2Ygc2V0dGVycyBhbmQgYWNjZXNzb3JzLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHMgPSBjcmVhdGVTZXR0aW5ncyhzZXR0aW5ncywge1xuICogICBcImNvbXBsZXgta2V5XCI6IFwiYXtzYXtzc319XCIsXG4gKiAgIFwic2ltcGxlLWtleVwiOiBcInNcIixcbiAqIH0pXG4gKlxuICogcy5jb21wbGV4S2V5LnN1YnNjcmliZSgoKSA9PiB7XG4gKiAgIHByaW50KHMuY29tcGxleEtleS5nZXQoKSlcbiAqIH0pXG4gKlxuICogcy5zZXRDb21wbGV4S2V5KChwcmV2KSA9PiAoe1xuICogICAuLi5wcmV2LFxuICogICBrZXk6IHsgbmVzdGVkOiBcIlwiIH0sXG4gKiB9KSlcbiAqIGBgYFxuICovXG4vLyBUT0RPOiBjb21lIHVwIHdpdGggYW4gQVBJXG4vLyAtIHRvIG1hbnVhbGx5IGFubm90YXRlIFZhcmlhbnQgdHlwZWQgc2V0dGVycy9nZXR0ZXJzXG4vLyAtIHRvIHNldCByZWN1cnNpdmUgdnMgZGVlcCB1bnBhY2sgcGVyIGtleVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNldHRpbmdzPGNvbnN0IFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+PihcbiAgICBzZXR0aW5nczogR2lvLlNldHRpbmdzLFxuICAgIGtleXM6IFQsXG4pOiBTZXR0aW5nczxUPiB7XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoa2V5cykuZmxhdE1hcCgoW2tleSwgdHlwZV0pID0+IFtcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBjYW1lbGlmeShrZXkpLFxuICAgICAgICAgICAgICAgIG5ldyBBY2Nlc3NvcihcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4gc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKCksXG4gICAgICAgICAgICAgICAgICAgIChjYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWQgPSBzZXR0aW5ncy5jb25uZWN0KGBjaGFuZ2VkOjoke2tleX1gLCBjYWxsYmFjaylcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBzZXR0aW5ncy5kaXNjb25uZWN0KGlkKVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGBzZXQke2tleVswXS50b1VwcGVyQ2FzZSgpICsgY2FtZWxpZnkoa2V5KS5zbGljZSgxKX1gLFxuICAgICAgICAgICAgICAgICh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLnNldF92YWx1ZShcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5kZWVwVW5wYWNrKCkpIDogdixcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgXSksXG4gICAgKVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbmV4cG9ydCBmdW5jdGlvbiBrZWJhYmlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCJfXCIsIFwiLVwiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbWVsaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bLV9dKC4pL2csIChfLCBjaGFyKSA9PiBjaGFyLnRvVXBwZXJDYXNlKCkpXG59XG5cbmV4cG9ydCB0eXBlIFBhc2NhbGlmeTxTPiA9IFMgZXh0ZW5kcyBgJHtpbmZlciBIZWFkfSR7XCItXCIgfCBcIl9cIn0ke2luZmVyIFRhaWx9YFxuICAgID8gYCR7Q2FwaXRhbGl6ZTxIZWFkPn0ke1Bhc2NhbGlmeTxUYWlsPn1gXG4gICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICA/IENhcGl0YWxpemU8Uz5cbiAgICAgIDogbmV2ZXJcblxuZXhwb3J0IHR5cGUgWG1sTm9kZSA9IHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBhdHRyaWJ1dGVzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPlxuICAgIGNoaWxkcmVuPzogQXJyYXk8WG1sTm9kZT5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHhtbCh7IG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuIH06IFhtbE5vZGUpIHtcbiAgICBsZXQgYnVpbGRlciA9IGA8JHtuYW1lfWBcblxuICAgIGNvbnN0IGF0dHJzID0gT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcyA/PyBbXSlcblxuICAgIGlmIChhdHRycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGF0dHJzKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IGAgJHtrZXl9PVwiJHt2YWx1ZX1cImBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCI+XCJcbiAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIGNoaWxkcmVuKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IHhtbChub2RlKVxuICAgICAgICB9XG4gICAgICAgIGJ1aWxkZXIgKz0gYDwvJHtuYW1lfT5gXG4gICAgfSBlbHNlIHtcbiAgICAgICAgYnVpbGRlciArPSBcIiAvPlwiXG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1aWxkZXJcbn1cblxuLy8gQmluZGluZ3Mgd29yayBvdmVyIHByb3BlcnRpZXMgaW4ga2ViYWItY2FzZSBiZWNhdXNlIHRoYXRzIHRoZSBjb252ZW50aW9uIG9mIGdvYmplY3Rcbi8vIGhvd2V2ZXIgaW4ganMgaXRzIGVpdGhlciBzbmFrZV9jYXNlIG9yIGNhbWVsQ2FzZVxuLy8gYWxzbyBvbiBEQnVzIGludGVyZmFjZXMgaXRzIFBhc2NhbENhc2UgYnkgY29udmVudGlvblxuLy8gc28gYXMgYSB3b3JrYXJvdW5kIHdlIHVzZSBnZXRfcHJvcGVydHlfbmFtZSBhbmQgb25seSB1c2UgdGhlIHByb3BlcnR5IGZpZWxkIGFzIGEgZmFsbGJhY2tcbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eUdldHRlcjxUIGV4dGVuZHMgb2JqZWN0PihvYmplY3Q6IFQsIHByb3A6IEV4dHJhY3Q8a2V5b2YgVCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIGBnZXRfJHtrZWJhYmlmeShwcm9wKS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogKCkgPT4gb2JqZWN0W3Byb3BdLFxuICAgIH0pXG59XG5cbi8vIGF0dGVtcHQgc2V0dGluZyBhIHByb3BlcnR5IG9mIEdPYmplY3QuT2JqZWN0XG5leHBvcnQgZnVuY3Rpb24gc2V0KG9iajogR09iamVjdC5PYmplY3QsIHByb3A6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgIGNvbnN0IGtleSA9IHNuYWtlaWZ5KHByb3ApXG4gICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcbiAgICBjb25zdCBzZXR0ZXIgPSBgc2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuXG4gICAgbGV0IGN1cnJlbnQ6IHVua25vd25cblxuICAgIGlmIChnZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGN1cnJlbnQgPSAob2JqW2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgPSBvYmpbcHJvcCBhcyBrZXlvZiB0eXBlb2Ygb2JqXVxuICAgIH1cblxuICAgIGlmIChjdXJyZW50ICE9PSB2YWx1ZSkge1xuICAgICAgICBpZiAoc2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW3NldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgOyhvYmpbc2V0dGVyXSBhcyAodjogYW55KSA9PiB2b2lkKSh2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm9wXTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgdHlwZSBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcblxudHlwZSBHT2JqID0gR09iamVjdC5PYmplY3RcbmV4cG9ydCB0eXBlIENDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSB7IG5ldyAocHJvcHM6IGFueSk6IFQgfVxuZXhwb3J0IHR5cGUgRkM8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IChwcm9wczogYW55KSA9PiBUXG5cbnR5cGUgQ3NzU2V0dGVyID0gKG9iamVjdDogR09iaiwgY3NzOiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+KSA9PiB2b2lkXG50eXBlIENoaWxkRm4gPSAocGFyZW50OiBHT2JqLCBjaGlsZDogR09iaiB8IG51bWJlciB8IHN0cmluZywgaW5kZXg/OiBudW1iZXIpID0+IHZvaWRcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VlKGNvbmY6IFBhcnRpYWw8SnN4RW52Pikge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKGVudiwgY29uZilcbn1cblxudHlwZSBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IFJlY29yZDxzdHJpbmcsIENDIHwgRkM+XG4gICAgYWRkQ2hpbGQ6IENoaWxkRm5cbiAgICBzZXRDc3M6IENzc1NldHRlclxuICAgIHNldENsYXNzOiBDc3NTZXR0ZXJcbiAgICBpbml0UHJvcHM6IChwcm9wczogYW55KSA9PiB2b2lkXG4gICAgZGVmYXVsdENsZWFudXA6IChvYmplY3Q6IEdPYmopID0+IHZvaWRcbn1cblxuZnVuY3Rpb24gbWlzc2luZ0ltcGwoKSB7XG4gICAgdGhyb3cgRXJyb3IoXCJtaXNzaW5nIGltcGxcIilcbn1cblxuZXhwb3J0IGNvbnN0IGVudjogSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiB7fSxcbiAgICBhZGRDaGlsZDogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q3NzOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDbGFzczogbWlzc2luZ0ltcGwsXG4gICAgaW5pdFByb3BzOiAoKSA9PiB2b2lkIDAsXG4gICAgZGVmYXVsdENsZWFudXA6ICgpID0+IHZvaWQgMCxcbn1cbiIsICJleHBvcnQgY2xhc3MgU2NvcGUge1xuICAgIHN0YXRpYyBjdXJyZW50PzogU2NvcGUgfCBudWxsXG5cbiAgICBwYXJlbnQ/OiBTY29wZSB8IG51bGxcbiAgICBjb250ZXh0cyA9IG5ldyBNYXA8Q29udGV4dCwgdW5rbm93bj4oKVxuXG4gICAgcHJpdmF0ZSBjbGVhbnVwcyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudGVkID0gZmFsc2VcblxuICAgIGNvbnN0cnVjdG9yKHBhcmVudD86IFNjb3BlIHwgbnVsbCkge1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudFxuICAgIH1cblxuICAgIG9uQ2xlYW51cChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzPy5hZGQoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgb25Nb3VudChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICBpZiAodGhpcy5wYXJlbnQgJiYgIXRoaXMucGFyZW50Lm1vdW50ZWQpIHtcbiAgICAgICAgICAgIHRoaXMucGFyZW50Lm9uTW91bnQoY2FsbGJhY2spXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5hZGQoY2FsbGJhY2spXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBydW48VD4oZm46ICgpID0+IFQpIHtcbiAgICAgICAgY29uc3QgcHJldiA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgU2NvcGUuY3VycmVudCA9IHRoaXNcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGZuKClcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgdGhpcy5tb3VudHMuY2xlYXIoKVxuICAgICAgICAgICAgdGhpcy5tb3VudGVkID0gdHJ1ZVxuICAgICAgICAgICAgU2NvcGUuY3VycmVudCA9IHByZXZcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIHRoaXMuY2xlYW51cHMuY2xlYXIoKVxuICAgICAgICB0aGlzLmNvbnRleHRzLmNsZWFyKClcbiAgICAgICAgZGVsZXRlIHRoaXMucGFyZW50XG4gICAgfVxufVxuXG5leHBvcnQgdHlwZSBDb250ZXh0PFQgPSBhbnk+ID0ge1xuICAgIHVzZSgpOiBUXG4gICAgcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSXG4gICAgKHByb3BzOiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSk6IEpTWC5FbGVtZW50XG59XG5cbi8qKlxuICogRXhhbXBsZSBVc2FnZTpcbiAqIGBgYHRzeFxuICogY29uc3QgTXlDb250ZXh0ID0gY3JlYXRlQ29udGV4dChcImZhbGxiYWNrLXZhbHVlXCIpXG4gKlxuICogZnVuY3Rpb24gQ29uc3VtZXJDb21wb25lbnQoKSB7XG4gKiAgIGNvbnN0IHZhbHVlID0gTXlDb250ZXh0LnVzZSgpXG4gKlxuICogICByZXR1cm4gPEd0ay5MYWJlbCBsYWJlbD17dmFsdWV9IC8+XG4gKiB9XG4gKlxuICogZnVuY3Rpb24gUHJvdmlkZXJDb21wb25lbnQoKSB7XG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICA8TXlDb250ZXh0IHZhbHVlPVwibXktdmFsdWVcIj5cbiAqICAgICAgICAgeygpID0+IDxDb25zdW1lckNvbXBvbmVudCAvPn1cbiAqICAgICAgIDwvTXlDb250ZXh0PlxuICogICAgIDwvR3RrLkJveD5cbiAqICAgKVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0PFQ+KGRlZmF1bHRWYWx1ZTogVCk6IENvbnRleHQ8VD4ge1xuICAgIGxldCBjdHg6IENvbnRleHQ8VD5cblxuICAgIGZ1bmN0aW9uIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUiB7XG4gICAgICAgIGNvbnN0IHNjb3BlID0gZ2V0U2NvcGUoKVxuICAgICAgICBzY29wZS5jb250ZXh0cy5zZXQoY3R4LCB2YWx1ZSlcbiAgICAgICAgcmV0dXJuIHNjb3BlLnJ1bihmbilcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1c2UoKTogVCB7XG4gICAgICAgIGxldCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgd2hpbGUgKHNjb3BlKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHNjb3BlLmNvbnRleHRzLmdldChjdHgpXG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkgcmV0dXJuIHZhbHVlIGFzIFRcbiAgICAgICAgICAgIHNjb3BlID0gc2NvcGUucGFyZW50XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnRleHQoeyB2YWx1ZSwgY2hpbGRyZW4gfTogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pIHtcbiAgICAgICAgcmV0dXJuIHByb3ZpZGUodmFsdWUsIGNoaWxkcmVuKVxuICAgIH1cblxuICAgIHJldHVybiAoY3R4ID0gT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgICAgIHByb3ZpZGUsXG4gICAgICAgIHVzZSxcbiAgICB9KSlcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBzY29wZSB0aGF0IG93bnMgdGhlIGN1cnJlbnRseSBydW5uaW5nIGNvZGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAqIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICAvLyBUaGlzIGNhbGxiYWNrIGdldHMgcnVuIHdpdGhvdXQgYW4gb3duZXIgc2NvcGUuXG4gKiAgIC8vIFJlc3RvcmUgb3duZXIgdmlhIHNjb3BlLnJ1bjpcbiAqICAgc2NvcGUucnVuKCgpID0+IHtcbiAqICAgICBjb25zdCBmb28gPSBGb29Db250ZXh0LnVzZSgpXG4gKiAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAqICAgICAgIHByaW50KFwic29tZSBjbGVhbnVwXCIpXG4gKiAgICAgfSlcbiAqICAgfSlcbiAqIH0sIDEwMDApXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNjb3BlKCk6IFNjb3BlIHtcbiAgICBjb25zdCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICBpZiAoIXNjb3BlKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiY2Fubm90IGdldCBzY29wZTogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIilcbiAgICB9XG5cbiAgICByZXR1cm4gc2NvcGVcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjbGVhbnVwIGNhbGxiYWNrIHRvIHRoZSBjdXJyZW50IHtAbGluayBTY29wZX0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbkNsZWFudXAoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwib3V0IG9mIHRyYWNraW5nIGNvbnRleHQ6IHdpbGwgbm90IGJlIGFibGUgdG8gY2xlYW51cFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbkNsZWFudXAoY2xlYW51cClcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjYWxsYmFjayB0byBydW4gd2hlbiB0aGUgY3VycmVudGx5IHJ1bm5pbmcge0BsaW5rIFNjb3BlfSByZXR1cm5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25Nb3VudChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJjYW5ub3QgYXR0YWNoIG9uTW91bnQ6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uTW91bnQoY2xlYW51cClcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcm9vdCB7QGxpbmsgU2NvcGV9IHRoYXQgd2hlbiBkaXNwb3NlZCB3aWxsIHJlbW92ZVxuICogYW55IGNoaWxkIHNpZ25hbCBoYW5kbGVyIG9yIHN0YXRlIHN1YnNjcmliZXIuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzeFxuICogY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICogICBsZXQgcm9vdDogR3RrLldpbmRvd1xuICpcbiAqICAgY29uc3QgW3N0YXRlXSA9IGNyZWF0ZVN0YXRlKFwidmFsdWVcIilcbiAqXG4gKiAgIGNvbnN0IHJlbW92ZSA9ICgpID0+IHtcbiAqICAgICByb290LmRlc3Ryb3koKVxuICogICAgIGRpc3Bvc2UoKVxuICogICB9XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuV2luZG93ICQ9eyhzZWxmKSA9PiAocm9vdCA9IHNlbGYpfT5cbiAqICAgICAgIDxHdGsuQm94PlxuICogICAgICAgICA8R3RrLkxhYmVsIGxhYmVsPXtzdGF0ZX0gLz5cbiAqICAgICAgICAgPEd0ay5CdXR0b24gJGNsaWNrZWQ9e3JlbW92ZX0gLz5cbiAqICAgICAgIDwvR3RrLkJveD5cbiAqICAgICA8L0d0ay5XaW5kb3c+XG4gKiAgIClcbiAqIH0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3Q8VD4oZm46IChkaXNwb3NlOiAoKSA9PiB2b2lkKSA9PiBUKSB7XG4gICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUobnVsbClcbiAgICByZXR1cm4gc2NvcGUucnVuKCgpID0+IGZuKCgpID0+IHNjb3BlLmRpc3Bvc2UoKSkpXG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSB9IGZyb20gXCIuLi9nbm9tZS9zaWduYWxUcmFja2VyLmpzXCJcblxuLy8gVE9ETzogRnJhZ21lbnQgc2hvdWxkIGltcGxlbWVudCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBjbGFzcyBGcmFnbWVudDxUID0gYW55PiBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBzdGF0aWMgW0dPYmplY3Quc2lnbmFsc10gPSB7XG4gICAgICAgIFwiZGVzdHJveVwiOiB7fSxcblxuICAgICAgICBcImNoaWxkLWFkZGVkXCI6IHtcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVCwgR09iamVjdC5UWVBFX1VJTlRdLFxuICAgICAgICB9LFxuICAgICAgICBcImNoaWxkLXJlbW92ZWRcIjoge1xuICAgICAgICAgICAgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNULCBHT2JqZWN0LlRZUEVfVUlOVF0sXG4gICAgICAgIH0sXG4gICAgfVxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnByb3BlcnRpZXNdID0ge1xuICAgICAgICBjaGlsZHJlbjogR09iamVjdC5QYXJhbVNwZWMuanNvYmplY3QoXCJjaGlsZHJlblwiLCBcIlwiLCBcIlwiLCBHT2JqZWN0LlBhcmFtRmxhZ3MuUkVBREFCTEUpLFxuICAgIH1cblxuICAgIHN0YXRpYyB7XG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh0aGlzKVxuICAgICAgICByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSh0aGlzKVxuICAgIH1cblxuICAgIHN0YXRpYyBuZXc8VD4oY2hpbGRyZW46IEFycmF5PFQ+ID0gW10pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGcmFnbWVudCh7IGNoaWxkcmVuIH0pXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb25uZWN0aW9uSWRzID0gbmV3IFNldDxudW1iZXI+KClcbiAgICBwcml2YXRlIF9jaGlsZHJlbjogQXJyYXk8VD5cblxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFsuLi50aGlzLl9jaGlsZHJlbl1cbiAgICB9XG5cbiAgICBhZGRDaGlsZChjaGlsZDogVCwgaW5kZXg6IG51bWJlciA9IC0xKTogdm9pZCB7XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbmRleCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX2NoaWxkcmVuID0gW1xuICAgICAgICAgICAgICAgIC4uLnRoaXMuX2NoaWxkcmVuLnNsaWNlKDAsIGluZGV4KSxcbiAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZShpbmRleCksXG4gICAgICAgICAgICBdXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZHJlbi5wdXNoKGNoaWxkKVxuICAgICAgICAgICAgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5sZW5ndGggLSAxXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmVtaXQoXCJjaGlsZC1hZGRlZFwiLCBjaGlsZCwgaW5kZXgpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBoYXNDaGlsZChjaGlsZDogVCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChjaCkgPT4gY2ggPT09IGNoaWxkKSA+IC0xXG4gICAgfVxuXG4gICAgcmVtb3ZlQ2hpbGQoY2hpbGQ6IFQpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5maW5kSW5kZXgoKGkpID0+IGkgPT09IGNoaWxkKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpXG5cbiAgICAgICAgdGhpcy5lbWl0KFwiY2hpbGQtcmVtb3ZlZFwiLCBjaGlsZCwgaW5kZXgpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfTogUGFydGlhbDx7IGNoaWxkcmVuOiBBcnJheTxUPiB8IFQgfT4gPSB7fSkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBjb25uZWN0KHNpZ25hbDogc3RyaW5nLCBjYWxsYmFjazogKF86IHRoaXMsIC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogbnVtYmVyIHtcbiAgICAgICAgY29uc3QgaWQgPSBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgICAgIHRoaXMuY29ubmVjdGlvbklkcy5hZGQoaWQpXG4gICAgICAgIHJldHVybiBpZFxuICAgIH1cblxuICAgIGRpc2Nvbm5lY3QoaWQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBzdXBlci5kaXNjb25uZWN0KGlkKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25JZHMuZGVsZXRlKGlkKVxuICAgIH1cblxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZW1pdChcImRlc3Ryb3lcIilcbiAgICAgICAgZm9yIChjb25zdCBpZCBvZiB0aGlzLmNvbm5lY3Rpb25JZHMudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHN1cGVyLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxudHlwZSBUeXBlID0geyBuZXcgKC4uLmFyZ3M6IGFueVtdKTogR09iamVjdC5PYmplY3QgfVxuXG4vLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgdHlwZXNcbmNvbnN0IG1vZCA9IGltcG9ydChcInJlc291cmNlOi8vL29yZy9nbm9tZS9zaGVsbC9taXNjL3NpZ25hbFRyYWNrZXIuanNcIilcblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlOiAodHlwZTogVHlwZSkgPT4gdm9pZCA9IGF3YWl0IG1vZFxuICAgIC50aGVuKChtb2QpID0+IG1vZC5yZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSlcbiAgICAuY2F0Y2goKCkgPT4gKCkgPT4gdm9pZCAwKVxuIiwgImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IsIHR5cGUgU3RhdGUsIGNyZWF0ZVN0YXRlIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG5pbnRlcmZhY2UgRm9yUHJvcHM8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5PiB7XG4gICAgZWFjaDogQWNjZXNzb3I8SXRlcmFibGU8SXRlbT4+XG4gICAgY2hpbGRyZW46IChpdGVtOiBJdGVtLCBpbmRleDogQWNjZXNzb3I8bnVtYmVyPikgPT4gRWxcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjogR3RrLldpZGdldC5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqIC0gKipHbm9tZSoqOiBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95XG4gICAgICovXG4gICAgY2xlYW51cD86IG51bGwgfCAoKGVsZW1lbnQ6IEVsLCBpdGVtOiBJdGVtLCBpbmRleDogbnVtYmVyKSA9PiB2b2lkKVxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdGhhdCBnZW5lcmF0ZXMgdGhlIGtleSBmb3IgZWFjaCBpdGVtLlxuICAgICAqXG4gICAgICogQnkgZGVmYXVsdCBpdGVtcyBhcmUgbWFwcGVkIGJ5OlxuICAgICAqIC0gdmFsdWUgaW4gY2FzZSBvZiBwcmltaXRpdmUgdmFsdWVzXG4gICAgICogLSByZWZlcmVuY2Ugb3RoZXJ3aXNlXG4gICAgICovXG4gICAgaWQ/OiAoaXRlbTogSXRlbSkgPT4gS2V5IHwgSXRlbVxufVxuXG4vLyBUT0RPOiBzdXBwb3J0IEdpby5MaXN0TW9kZWxcblxuZXhwb3J0IGZ1bmN0aW9uIEZvcjxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+KHtcbiAgICBlYWNoLFxuICAgIGNoaWxkcmVuOiBta0NoaWxkLFxuICAgIGNsZWFudXAsXG4gICAgaWQgPSAoaXRlbTogSXRlbSkgPT4gaXRlbSxcbn06IEZvclByb3BzPEl0ZW0sIEVsLCBLZXk+KTogRnJhZ21lbnQ8RWw+IHtcbiAgICB0eXBlIE1hcEl0ZW0gPSB7IGl0ZW06IEl0ZW07IGNoaWxkOiBFbDsgaW5kZXg6IFN0YXRlPG51bWJlcj47IHNjb3BlOiBTY29wZSB9XG5cbiAgICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpXG4gICAgY29uc3QgbWFwID0gbmV3IE1hcDxJdGVtIHwgS2V5LCBNYXBJdGVtPigpXG4gICAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQ8RWw+KClcblxuICAgIGZ1bmN0aW9uIHJlbW92ZSh7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4XSwgc2NvcGUgfTogTWFwSXRlbSkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY2xlYW51cChjaGlsZCwgaXRlbSwgaW5kZXguZ2V0KCkpXG4gICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICB9XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKGl0YXJlYWJsZTogSXRlcmFibGU8SXRlbT4pIHtcbiAgICAgICAgY29uc3QgaXRlbXMgPSBbLi4uaXRhcmVhYmxlXVxuICAgICAgICBjb25zdCBpZHMgPSBpdGVtcy5tYXAoaWQpXG4gICAgICAgIGNvbnN0IGlkU2V0ID0gbmV3IFNldChpZHMpXG5cbiAgICAgICAgLy8gY2xlYW51cCBjaGlsZHJlbiBtaXNzaW5nIGZyb20gYXJyXG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIG1hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIC8vIHRoZXJlIGlzIG5vIGdlbmVyaWMgd2F5IHRvIGluc2VydCBjaGlsZCBhdCBpbmRleFxuICAgICAgICAgICAgLy8gc28gd2Ugc29ydCBieSByZW1vdmluZyBldmVyeSBjaGlsZCBhbmQgcmVhcHBlbmRpbmcgaW4gb3JkZXJcbiAgICAgICAgICAgIGZyYWdtZW50LnJlbW92ZUNoaWxkKHZhbHVlLmNoaWxkKVxuXG4gICAgICAgICAgICBpZiAoIWlkU2V0LmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICAgICAgICAgIG1hcC5kZWxldGUoa2V5KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIGluZGV4IGFuZCBhZGQgbmV3IGl0ZW1zXG4gICAgICAgIGl0ZW1zLm1hcCgoaXRlbSwgaSkgPT4ge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gaWRzW2ldXG4gICAgICAgICAgICBpZiAobWFwLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgICAgICAgICBpbmRleDogWywgc2V0SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICB9ID0gbWFwLmdldChrZXkpIVxuICAgICAgICAgICAgICAgIHNldEluZGV4KGkpXG4gICAgICAgICAgICAgICAgaWYgKGZyYWdtZW50Lmhhc0NoaWxkKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYGR1cGxpY2F0ZSBrZXlzIGZvdW5kOiAke2tleX1gKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZyYWdtZW50LmFkZENoaWxkKGNoaWxkKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW2luZGV4LCBzZXRJbmRleF0gPSBjcmVhdGVTdGF0ZShpKVxuICAgICAgICAgICAgICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKGN1cnJlbnRTY29wZSlcbiAgICAgICAgICAgICAgICBjb25zdCBjaGlsZCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKGl0ZW0sIGluZGV4KSlcbiAgICAgICAgICAgICAgICBtYXAuc2V0KGtleSwgeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleCwgc2V0SW5kZXhdLCBzY29wZSB9KVxuICAgICAgICAgICAgICAgIGZyYWdtZW50LmFkZENoaWxkKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3Bvc2UgPSBlYWNoLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuXG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgZGlzcG9zZSgpXG5cbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiBtYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgfVxuXG4gICAgICAgIG1hcC5jbGVhcigpXG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0U2NvcGUsIG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbmludGVyZmFjZSBXaXRoUHJvcHM8VCwgRSBleHRlbmRzIEpTWC5FbGVtZW50PiB7XG4gICAgdmFsdWU6IEFjY2Vzc29yPFQ+XG4gICAgY2hpbGRyZW46ICh2YWx1ZTogVCkgPT4gRSB8IFwiXCIgfCBmYWxzZSB8IG51bGwgfCB1bmRlZmluZWRcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjogR3RrLldpZGdldC5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqIC0gKipHbm9tZSoqOiBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95XG4gICAgICovXG4gICAgY2xlYW51cD86IG51bGwgfCAoKGVsZW1lbnQ6IEUpID0+IHZvaWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBXaXRoPFQsIEUgZXh0ZW5kcyBKU1guRWxlbWVudD4oe1xuICAgIHZhbHVlLFxuICAgIGNoaWxkcmVuOiBta0NoaWxkLFxuICAgIGNsZWFudXAsXG59OiBXaXRoUHJvcHM8VCwgRT4pOiBGcmFnbWVudDxFPiB7XG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEU+KClcblxuICAgIGxldCBzY29wZTogU2NvcGVcblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKHY6IFQpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBmcmFnbWVudC5jaGlsZHJlbikge1xuICAgICAgICAgICAgZnJhZ21lbnQucmVtb3ZlQ2hpbGQoY2hpbGQpXG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgY2xlYW51cChjaGlsZClcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHNjb3BlKSBzY29wZS5kaXNwb3NlKClcbiAgICAgICAgfVxuXG4gICAgICAgIHNjb3BlID0gbmV3IFNjb3BlKGN1cnJlbnRTY29wZSlcbiAgICAgICAgY29uc3QgY2ggPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZCh2KSlcbiAgICAgICAgaWYgKGNoICE9PSBcIlwiICYmIGNoICE9PSBmYWxzZSAmJiBjaCAhPT0gbnVsbCAmJiBjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3Bvc2UgPSB2YWx1ZS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayh2YWx1ZS5nZXQoKSlcbiAgICB9KVxuICAgIGNhbGxiYWNrKHZhbHVlLmdldCgpKVxuXG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgc2NvcGUuZGlzcG9zZSgpXG4gICAgICAgIGRpc3Bvc2UoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGtlYmFiaWZ5LCB0eXBlIFBhc2NhbGlmeSwgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuaW1wb3J0IHsgc2V0VHlwZSB9IGZyb20gXCIuL2pzeC5qc1wiXG5cbnR5cGUgRWxlbWVudCA9IEpTWC5FbGVtZW50IHwgXCJcIiB8IGZhbHNlIHwgbnVsbCB8IHVuZGVmaW5lZFxuXG50eXBlIFRoaXNQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+ID0ge1xuICAgIHRoaXM6IFNlbGZcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG5cbiAgICBjaGlsZHJlbj86IEVsZW1lbnQgfCBBcnJheTxFbGVtZW50PlxuICAgIC8qKlxuICAgICAqIENTUyBjbGFzcyBuYW1lc1xuICAgICAqL1xuICAgIGNsYXNzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICAgIC8qKlxuICAgICAqIGlubGluZSBDU1NcbiAgICAgKi9cbiAgICBjc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFNlbGZdPzogU2VsZltLXSB8IEFjY2Vzc29yPE5vbk51bGxhYmxlPFNlbGZbS10+PlxufSAmIHtcbiAgICBbUyBpbiBrZXlvZiBTZWxmW1wiJHNpZ25hbHNcIl0gYXMgUyBleHRlbmRzIGBub3RpZnk6OiR7aW5mZXIgUH1gXG4gICAgICAgID8gYG9uTm90aWZ5JHtQYXNjYWxpZnk8UD59YFxuICAgICAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PFM+fWBcbiAgICAgICAgICA6IG5ldmVyXT86IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8U2VsZiwgU2VsZltcIiRzaWduYWxzXCJdW1NdPlxufVxuXG4vLyBUT0RPOlxuLy8gY29uc2lkZXIgbWFraW5nIHRoaXMgY29tcG9uZW50IGEgcG90ZW50aWFsIHN1YnN0aXR1dGUgZm9yIGBjcmVhdGVSb290KClgXG4vLyBkaXNwb3NpbmcgdGhlIHNjb3BlIHVzaW5nIGEgZGVzdHJveSBzaWduYWxcblxuLyoqIEBleHBlcmltZW50YWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBUaGlzPFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4oe1xuICAgIHRoaXM6IHNlbGYsXG4gICAgY2hpbGRyZW4sXG4gICAgJHR5cGUsXG4gICAgLi4ucHJvcHNcbn06IFRoaXNQcm9wczxUPikge1xuICAgIGNvbnN0IGNsZWFudXAgPSBuZXcgQXJyYXk8KCkgPT4gdm9pZD4oKVxuXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKHNlbGYsICR0eXBlKVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmIChrZXkgPT09IFwiY3NzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENzcyhzZWxmLCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgICAgICBjbGVhbnVwLnB1c2godmFsdWUuc3Vic2NyaWJlKCgpID0+IGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpKSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IFwiY2xhc3NcIikge1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUuZ2V0KCkpKSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIGNvbnN0IGlkID0ga2V5LnN0YXJ0c1dpdGgoXCJvbk5vdGlmeVwiKVxuICAgICAgICAgICAgICAgID8gc2VsZi5jb25uZWN0KGBub3RpZnk6OiR7a2ViYWJpZnkoa2V5LnNsaWNlKDgpKX1gLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICA6IHNlbGYuY29ubmVjdChrZWJhYmlmeShrZXkuc2xpY2UoMikpLCB2YWx1ZSlcblxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKCgpID0+IHNlbGYuZGlzY29ubmVjdChpZCkpXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICBjbGVhbnVwLnB1c2godmFsdWUuc3Vic2NyaWJlKCgpID0+IHNldChzZWxmLCBrZXksIHZhbHVlLmdldCgpKSkpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXQoc2VsZiwga2V5LCB2YWx1ZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkcmVuKSB7XG4gICAgICAgICAgICBpZiAoY2ggIT09IFwiXCIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBlbnYuYWRkQ2hpbGQoc2VsZiwgY2gsIC0xKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgY2ggPSBjaGlsZHJlblxuICAgICAgICBpZiAoY2ggIT09IFwiXCIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGVudi5hZGRDaGlsZChzZWxmLCBjaCwgLTEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2xlYW51cC5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjbGVhbnVwLmZvckVhY2goKGNiKSA9PiBjYigpKSlcbiAgICB9XG5cbiAgICByZXR1cm4gc2VsZlxufVxuIiwgImltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcImduaW1cIlxuaW1wb3J0IEFzdGFsSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiLi9wcm9jZXNzLmpzXCJcblxuZXhwb3J0IHR5cGUgVGltZSA9IEFzdGFsSU8uVGltZVxuZXhwb3J0IGNvbnN0IFRpbWUgPSBBc3RhbElPLlRpbWVcblxuZXhwb3J0IGZ1bmN0aW9uIGludGVydmFsKGludGVydmFsOiBudW1iZXIsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUuaW50ZXJ2YWwoaW50ZXJ2YWwsICgpID0+IHZvaWQgY2FsbGJhY2s/LigpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdGltZW91dCh0aW1lb3V0OiBudW1iZXIsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUudGltZW91dCh0aW1lb3V0LCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlkbGUoY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIEFzdGFsSU8uVGltZS5pZGxlKCgpID0+IHZvaWQgY2FsbGJhY2s/LigpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbChcbiAgICBpbml0OiBzdHJpbmcsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbik6IEFjY2Vzc29yPHN0cmluZz5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybTogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIGZuOiAocHJldjogVCkgPT4gVCB8IFByb21pc2U8VD4sXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGl2YWw6IG51bWJlcixcbiAgICBleGVjT3JGbjogc3RyaW5nIHwgc3RyaW5nW10gfCAoKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+KSxcbiAgICB0cmFuc2Zvcm0/OiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgdGltZXI6IEFzdGFsSU8uVGltZSB8IG51bGwgPSBudWxsXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcblxuICAgIGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6ICgpID0+IHZvaWQge1xuICAgICAgICBmdW5jdGlvbiBzZXQodmFsdWU6IFQpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICB0aW1lciA9IGludGVydmFsKGl2YWwsICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGV4ZWNPckZuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBleGVjT3JGbihjdXJyZW50VmFsdWUpXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlLnRoZW4oc2V0KVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0KHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0FzeW5jKGV4ZWNPckZuKS50aGVuKChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldCh0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogKHN0ZG91dCBhcyBUKSlcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRpbWVyPy5jYW5jZWwoKVxuICAgICAgICAgICAgICAgIHRpbWVyID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICJpbXBvcnQgQXN0YWxJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcImduaW1cIlxuXG50eXBlIEFyZ3MgPSB7XG4gICAgY21kOiBzdHJpbmcgfCBzdHJpbmdbXVxuICAgIG91dD86IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZFxuICAgIGVycj86IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZFxufVxuXG5leHBvcnQgdHlwZSBQcm9jZXNzID0gQXN0YWxJTy5Qcm9jZXNzXG5leHBvcnQgY29uc3QgUHJvY2VzcyA9IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhhcmdzOiBBcmdzKTogQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgb25PdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQsXG4gICAgb25FcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWQsXG4pOiBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoXG4gICAgYXJnc09yQ21kOiBBcmdzIHwgc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgb25PdXQ6IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZCA9IHByaW50LFxuICAgIG9uRXJyOiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWQgPSBwcmludGVycixcbikge1xuICAgIGNvbnN0IGFyZ3MgPSBBcnJheS5pc0FycmF5KGFyZ3NPckNtZCkgfHwgdHlwZW9mIGFyZ3NPckNtZCA9PT0gXCJzdHJpbmdcIlxuICAgIGNvbnN0IHsgY21kLCBlcnIsIG91dCB9ID0ge1xuICAgICAgICBjbWQ6IGFyZ3MgPyBhcmdzT3JDbWQgOiBhcmdzT3JDbWQuY21kLFxuICAgICAgICBlcnI6IGFyZ3MgPyBvbkVyciA6IGFyZ3NPckNtZC5lcnIgfHwgb25FcnIsXG4gICAgICAgIG91dDogYXJncyA/IG9uT3V0IDogYXJnc09yQ21kLm91dCB8fCBvbk91dCxcbiAgICB9XG5cbiAgICBjb25zdCBwcm9jID0gQXJyYXkuaXNBcnJheShjbWQpXG4gICAgICAgID8gQXN0YWxJTy5Qcm9jZXNzLnN1YnByb2Nlc3N2KGNtZClcbiAgICAgICAgOiBBc3RhbElPLlByb2Nlc3Muc3VicHJvY2VzcyhjbWQpXG5cbiAgICBwcm9jLmNvbm5lY3QoXCJzdGRvdXRcIiwgKF8sIHN0ZG91dDogc3RyaW5nKSA9PiBvdXQoc3Rkb3V0KSlcbiAgICBwcm9jLmNvbm5lY3QoXCJzdGRlcnJcIiwgKF8sIHN0ZGVycjogc3RyaW5nKSA9PiBlcnIoc3RkZXJyKSlcbiAgICByZXR1cm4gcHJvY1xufVxuXG4vKiogQHRocm93cyB7R0xpYi5FcnJvcn0gVGhyb3dzIHN0ZGVyciAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4ZWMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGNtZCkgPyBBc3RhbElPLlByb2Nlc3MuZXhlY3YoY21kKSA6IEFzdGFsSU8uUHJvY2Vzcy5leGVjKGNtZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4ZWNBc3luYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjbWQpKSB7XG4gICAgICAgICAgICBBc3RhbElPLlByb2Nlc3MuZXhlY19hc3luY3YoY21kLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbElPLlByb2Nlc3MuZXhlY19hc3luY3ZfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBBc3RhbElPLlByb2Nlc3MuZXhlY19hc3luYyhjbWQsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsSU8uUHJvY2Vzcy5leGVjX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3MoaW5pdDogc3RyaW5nLCBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSk6IEFjY2Vzc29yPHN0cmluZz5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3M8VD4oXG4gICAgaW5pdDogVCxcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHByb2M6IEFzdGFsSU8uUHJvY2VzcyB8IG51bGwgPSBudWxsXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcblxuICAgIGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6ICgpID0+IHZvaWQge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgcHJvYyA9IHN1YnByb2Nlc3MoZXhlYywgKHN0ZG91dCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVClcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHByb2M/LmtpbGwoKVxuICAgICAgICAgICAgICAgIHByb2MgPSBudWxsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuIiwgIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2UgKi9cbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgeyBDQ1Byb3BzIH0gZnJvbSBcImduaW1cIlxuaW1wb3J0IHsgaW50cmluc2ljRWxlbWVudHMgfSBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcblxudHlwZSBQcm9wczxUIGV4dGVuZHMgR3RrLldpZGdldCwgUHJvcHM+ID0gQ0NQcm9wczxULCBQYXJ0aWFsPFByb3BzPj5cblxuT2JqZWN0LmFzc2lnbihpbnRyaW5zaWNFbGVtZW50cywge1xuICAgIGJveDogR3RrLkJveCxcbiAgICBidXR0b246IEd0ay5CdXR0b24sXG4gICAgY2VudGVyYm94OiBHdGsuQ2VudGVyQm94LFxuICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsXG4gICAgZHJhd2luZ2FyZWE6IEd0ay5EcmF3aW5nQXJlYSxcbiAgICBlbnRyeTogR3RrLkVudHJ5LFxuICAgIGltYWdlOiBHdGsuSW1hZ2UsXG4gICAgbGFiZWw6IEd0ay5MYWJlbCxcbiAgICBsZXZlbGJhcjogR3RrLkxldmVsQmFyLFxuICAgIG1lbnVidXR0b246IEd0ay5NZW51QnV0dG9uLFxuICAgIG92ZXJsYXk6IEd0ay5PdmVybGF5LFxuICAgIHBvcG92ZXI6IEd0ay5Qb3BvdmVyLFxuICAgIHJldmVhbGVyOiBHdGsuUmV2ZWFsZXIsXG4gICAgc2Nyb2xsZWR3aW5kb3c6IEd0ay5TY3JvbGxlZFdpbmRvdyxcbiAgICBzbGlkZXI6IEFzdGFsLlNsaWRlcixcbiAgICBzdGFjazogR3RrLlN0YWNrLFxuICAgIHN3aXRjaDogR3RrLlN3aXRjaCxcbiAgICB0b2dnbGVidXR0b246IEd0ay5Ub2dnbGVCdXR0b24sXG4gICAgd2luZG93OiBBc3RhbC5XaW5kb3csXG59KVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgbmFtZXNwYWNlIEpTWCB7XG4gICAgICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICAgICAgICBib3g6IFByb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGJ1dHRvbjogUHJvcHM8R3RrLkJ1dHRvbiwgR3RrLkJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgY2VudGVyYm94OiBQcm9wczxHdGsuQ2VudGVyQm94LCBHdGsuQ2VudGVyQm94LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBQcm9wczxBc3RhbC5DaXJjdWxhclByb2dyZXNzLCBBc3RhbC5DaXJjdWxhclByb2dyZXNzLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBkcmF3aW5nYXJlYTogUHJvcHM8R3RrLkRyYXdpbmdBcmVhLCBHdGsuRHJhd2luZ0FyZWEuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGVudHJ5OiBQcm9wczxHdGsuRW50cnksIEd0ay5FbnRyeS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgaW1hZ2U6IFByb3BzPEd0ay5JbWFnZSwgR3RrLkltYWdlLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBsYWJlbDogUHJvcHM8R3RrLkxhYmVsLCBHdGsuTGFiZWwuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxldmVsYmFyOiBQcm9wczxHdGsuTGV2ZWxCYXIsIEd0ay5MZXZlbEJhci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbWVudWJ1dHRvbjogUHJvcHM8R3RrLk1lbnVCdXR0b24sIEd0ay5NZW51QnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBvdmVybGF5OiBQcm9wczxHdGsuT3ZlcmxheSwgR3RrLk92ZXJsYXkuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHBvcG92ZXI6IFByb3BzPEd0ay5Qb3BvdmVyLCBHdGsuUG9wb3Zlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcmV2ZWFsZXI6IFByb3BzPEd0ay5SZXZlYWxlciwgR3RrLlJldmVhbGVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzY3JvbGxlZHdpbmRvdzogUHJvcHM8R3RrLlNjcm9sbGVkV2luZG93LCBHdGsuU2Nyb2xsZWRXaW5kb3cuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNsaWRlcjogUHJvcHM8QXN0YWwuU2xpZGVyLCBBc3RhbC5TbGlkZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHN0YWNrOiBQcm9wczxHdGsuU3RhY2ssIEd0ay5TdGFjay5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3dpdGNoOiBQcm9wczxHdGsuU3dpdGNoLCBHdGsuU3dpdGNoLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICB0b2dnbGVidXR0b246IFByb3BzPEd0ay5Ub2dnbGVCdXR0b24sIEd0ay5Ub2dnbGVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHdpbmRvdzogUHJvcHM8QXN0YWwuV2luZG93LCBBc3RhbC5XaW5kb3cuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0ICogZnJvbSBcImduaW0vZ3RrNC9qc3gtcnVudGltZVwiXG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBnZXRUeXBlLCBvbkNsZWFudXAsIEFjY2Vzc29yLCBGcmFnbWVudCB9IGZyb20gXCIuLi9pbmRleC5qc1wiXG5pbXBvcnQgeyBjb25maWd1ZSB9IGZyb20gXCIuLi9qc3gvZW52LmpzXCJcblxuY29uc3QgZHVtbXlCdWlsZGVyID0gbmV3IEd0ay5CdWlsZGVyKClcblxuZnVuY3Rpb24gYWRkKHBhcmVudDogR3RrLkJ1aWxkYWJsZSwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCBfOiBudW1iZXIpIHtcbiAgICBpZiAoIXNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgXykpIHtcbiAgICAgICAgcGFyZW50LnZmdW5jX2FkZF9jaGlsZChkdW1teUJ1aWxkZXIsIGNoaWxkLCBnZXRUeXBlKGNoaWxkKSlcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNwZWNpYWxSZW1vdmUoX3BhcmVudDogR09iamVjdC5PYmplY3QsIF9jaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICAvLyBUT0RPOiBhZGQgYW55IHNwZWNpYWwgY2FzZVxuICAgIHJldHVybiBmYWxzZVxufVxuXG5mdW5jdGlvbiBzcGVjaWFsQWRkKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCwgXzogbnVtYmVyKSB7XG4gICAgLy8gVE9ETzogYWRkIGFueSBvdGhlciBzcGVjaWFsIGNhc2VcbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLkFkanVzdG1lbnQgJiZcbiAgICAgICAgXCJzZXRfYWRqdXN0bWVudFwiIGluIHBhcmVudCAmJlxuICAgICAgICB0eXBlb2YgcGFyZW50LnNldF9hZGp1c3RtZW50ID09PSBcImZ1bmN0aW9uXCJcbiAgICApIHtcbiAgICAgICAgcGFyZW50LnNldF9hZGp1c3RtZW50KGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmXG4gICAgICAgIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5TdGFjayAmJlxuICAgICAgICBjaGlsZC5uYW1lICE9PSBcIlwiICYmXG4gICAgICAgIGNoaWxkLm5hbWUgIT09IG51bGwgJiZcbiAgICAgICAgZ2V0VHlwZShjaGlsZCkgPT09IFwibmFtZWRcIlxuICAgICkge1xuICAgICAgICBwYXJlbnQuYWRkX25hbWVkKGNoaWxkLCBjaGlsZC5uYW1lKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uKSB7XG4gICAgICAgIHBhcmVudC5zZXRfcG9wb3ZlcihjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR2lvLk1lbnVNb2RlbCAmJlxuICAgICAgICAocGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrLlBvcG92ZXJNZW51KVxuICAgICkge1xuICAgICAgICBwYXJlbnQuc2V0X21lbnVfbW9kZWwoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR2lvLk1lbnVJdGVtICYmIHBhcmVudCBpbnN0YW5jZW9mIEdpby5NZW51KSB7XG4gICAgICAgIC8vIFRPRE86XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLldpbmRvdyAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQXBwbGljYXRpb24pIHtcbiAgICAgICAgcGFyZW50LmFkZF93aW5kb3coY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlRleHRCdWZmZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLlRleHRWaWV3KSB7XG4gICAgICAgIHBhcmVudC5zZXRfYnVmZmVyKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxufVxuXG5mdW5jdGlvbiByZW1vdmUocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgaWYgKHNwZWNpYWxSZW1vdmUocGFyZW50LCBjaGlsZCkpIHJldHVyblxuXG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiYgY2hpbGQgaW5zdGFuY2VvZiBHdGsuRXZlbnRDb250cm9sbGVyKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlX2NvbnRyb2xsZXIoY2hpbGQpXG4gICAgfVxuXG4gICAgaWYgKFwic2V0X2NoaWxkXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2NoaWxkID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gcGFyZW50LnNldF9jaGlsZChudWxsKVxuICAgIH1cblxuICAgIGlmIChcInJlbW92ZVwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnJlbW92ZSA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5yZW1vdmUoY2hpbGQpXG4gICAgfVxuXG4gICAgdGhyb3cgRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaGlsZH0gZnJvbSAke3BhcmVudH1gKVxufVxuXG5jb25zdCB7IGFkZENoaWxkLCBpbnRyaW5zaWNFbGVtZW50cyB9ID0gY29uZmlndWUoe1xuICAgIHNldENzcyhvYmplY3QsIGNzcykge1xuICAgICAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjc3Mgb24gJHtvYmplY3R9YCkpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKVxuICAgICAgICBsZXQgcHJvdmlkZXI6IEd0ay5Dc3NQcm92aWRlclxuXG4gICAgICAgIGNvbnN0IHNldHRlciA9IChjc3M6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgaWYgKCFjc3MuaW5jbHVkZXMoXCJ7XCIpIHx8ICFjc3MuaW5jbHVkZXMoXCJ9XCIpKSB7XG4gICAgICAgICAgICAgICAgY3NzID0gYCogeyAke2Nzc30gfWBcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyKSBjdHgucmVtb3ZlX3Byb3ZpZGVyKHByb3ZpZGVyKVxuXG4gICAgICAgICAgICBwcm92aWRlciA9IG5ldyBHdGsuQ3NzUHJvdmlkZXIoKVxuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhjc3MpXG4gICAgICAgICAgICBjdHguYWRkX3Byb3ZpZGVyKHByb3ZpZGVyLCBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUilcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjc3MgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgc2V0dGVyKGNzcy5nZXQoKSlcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjc3Muc3Vic2NyaWJlKCgpID0+IHNldHRlcihjc3MuZ2V0KCkpKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBzZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSkge1xuICAgICAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjbGFzc05hbWUgb24gJHtvYmplY3R9YCkpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2xhc3NOYW1lIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLylcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjbGFzc05hbWUuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICgpID0+IChvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pKSxcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgb2JqZWN0LnNldF9jc3NfY2xhc3NlcyhjbGFzc05hbWUuc3BsaXQoL1xccysvKSlcbiAgICAgICAgfVxuICAgIH0sXG4gICAgYWRkQ2hpbGQocGFyZW50LCBjaGlsZCwgaW5kZXggPSAtMSkge1xuICAgICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgY2hpbGQgPSBHdGsuTGFiZWwubmV3KFN0cmluZyhjaGlsZCkpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3BlY2lhbEFkZChwYXJlbnQsIGNoaWxkLCBpbmRleCkpIHJldHVyblxuXG4gICAgICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgcGFyZW50LmFkZENoaWxkKGNoaWxkKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLkJ1aWxkYWJsZSkge1xuICAgICAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZChwYXJlbnQsIGNoLCBpbmRleClcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjaGlsZC5jb25uZWN0KFwiY2hpbGQtYWRkZWRcIiwgKF8sIGNoOiB1bmtub3duLCBpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IGFkZCAke2NofSB0byAke3BhcmVudH1gKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGFkZENoaWxkKHBhcmVudCwgY2gsIGluZGV4KVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICBjaGlsZC5jb25uZWN0KFwiY2hpbGQtcmVtb3ZlZFwiLCAoXywgY2g6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2h9IGZyb20gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZW1vdmUocGFyZW50LCBjaClcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgb25DbGVhbnVwKCgpID0+IGNoaWxkLmRlc3Ryb3koKSlcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYWRkKHBhcmVudCwgY2hpbGQsIGluZGV4KVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKVxuICAgIH0sXG59KVxuXG5leHBvcnQgeyBGcmFnbWVudCwgaW50cmluc2ljRWxlbWVudHMgfVxuZXhwb3J0IHsganN4LCBqc3hzIH0gZnJvbSBcIi4uL2pzeC9qc3guanNcIlxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVCaW5kaW5nLCBGb3IsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IEFzdGFsVHJheSBmcm9tIFwiZ2k6Ly9Bc3RhbFRyYXk/dmVyc2lvbj0wLjFcIjtcblxuY2xhc3MgU3lzdGVtVHJheUNsYXNzIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IEFzdGFsVHJheS5UcmF5O1xuICAgIHByaXZhdGUgaXRlbXNCaW5kaW5nOiBBY2Nlc3NvcjxBc3RhbFRyYXkuVHJheUl0ZW1bXT47XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdCA9IEFzdGFsVHJheS5nZXRfZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLml0ZW1zQmluZGluZyA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCBcIml0ZW1zXCIpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2V0dXBUcmF5SXRlbSA9IChidG46IEd0ay5NZW51QnV0dG9uLCBpdGVtOiBBc3RhbFRyYXkuVHJheUl0ZW0pID0+IHtcbiAgICAgICAgYnRuLm1lbnVNb2RlbCA9IGl0ZW0ubWVudU1vZGVsO1xuICAgICAgICBidG4uaW5zZXJ0X2FjdGlvbl9ncm91cChcImRidXNtZW51XCIsIGl0ZW0uYWN0aW9uR3JvdXApO1xuXG4gICAgICAgIGNvbnN0IGFnSWQgPSBpdGVtLmNvbm5lY3QoXCJub3RpZnk6OmFjdGlvbi1ncm91cFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBidG4uaW5zZXJ0X2FjdGlvbl9ncm91cChcImRidXNtZW51XCIsIGl0ZW0uYWN0aW9uR3JvdXApO1xuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBtbUlkID0gaXRlbS5jb25uZWN0KFwibm90aWZ5OjptZW51LW1vZGVsXCIsICgpID0+IHtcbiAgICAgICAgICAgIGJ0bi5zZXRfbWVudV9tb2RlbChpdGVtLm1lbnVNb2RlbCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBpdGVtLmRpc2Nvbm5lY3QoYWdJZCk7XG4gICAgICAgICAgICBpdGVtLmRpc2Nvbm5lY3QobW1JZCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBwcml2YXRlIFRyYXlJdGVtKHsgaXRlbSB9OiB7IGl0ZW06IEFzdGFsVHJheS5UcmF5SXRlbSB9KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bWVudWJ1dHRvblxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlRyYXlJdGVtXCJdfVxuICAgICAgICAgICAgICAgIHRvb2x0aXBNYXJrdXA9e2NyZWF0ZUJpbmRpbmcoaXRlbSwgXCJ0b29sdGlwTWFya3VwXCIpfVxuICAgICAgICAgICAgICAgICQ9eyhzZWxmKSA9PiB0aGlzLnNldHVwVHJheUl0ZW0oc2VsZiwgaXRlbSl9XG4gICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8aW1hZ2UgZ2ljb249e2NyZWF0ZUJpbmRpbmcoaXRlbSwgXCJnaWNvblwiKX0gLz5cbiAgICAgICAgICAgIDwvbWVudWJ1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IFN5c3RlbVRyYXkoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIlN5c3RlbVRyYXlcIl19PlxuICAgICAgICAgICAgICAgIDxGb3IgZWFjaD17dGhpcy5pdGVtc0JpbmRpbmd9IGNoaWxkcmVuPXsoaXRlbSkgPT4gdGhpcy5UcmF5SXRlbSh7IGl0ZW0gfSl9IC8+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IHN5c3RlbVRyYXkgPSBuZXcgU3lzdGVtVHJheUNsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBzeXN0ZW1UcmF5O1xuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVCaW5kaW5nLCBvbkNsZWFudXAsIFdpdGggfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IEFzdGFsTXByaXMgZnJvbSBcImdpOi8vQXN0YWxNcHJpcz92ZXJzaW9uPTAuMVwiO1xuXG50eXBlIFBsYXllckJ1dHRvbiA9ICdwcmV2aW91cycgfCAnbmV4dCcgfCAncGxheWluZycgfCAncGF1c2VkJyB8ICdzdG9wcGVkJztcblxuY29uc3QgUGxheWVyQnV0dG9uSWNvbnMgPSB7XG4gICAgcGxheWluZzogXCJtZWRpYS1wbGF5YmFjay1zdGFydC1zeW1ib2xpY1wiLFxuICAgIHBhdXNlZDogXCJtZWRpYS1wbGF5YmFjay1wYXVzZS1zeW1ib2xpY1wiLFxuICAgIHN0b3BwZWQ6IFwibWVkaWEtcGxheWJhY2stc3RvcC1zeW1ib2xpY1wiLFxuICAgIG5leHQ6IFwibWVkaWEtc2tpcC1mb3J3YXJkLXN5bWJvbGljXCIsXG4gICAgcHJldmlvdXM6IFwibWVkaWEtc2tpcC1iYWNrd2FyZC1zeW1ib2xpY1wiXG59XG5cbnR5cGUgUGxheWVyRGF0YSA9IHtcbiAgICBhY3RpdmU6IGJvb2xlYW4sXG4gICAgdGl0bGU6IEFjY2Vzc29yPHN0cmluZz4gfCBzdHJpbmcsXG4gICAgYXJ0aXN0OiBBY2Nlc3NvcjxzdHJpbmc+IHwgc3RyaW5nLFxuICAgIGFsYnVtOiBBY2Nlc3NvcjxzdHJpbmc+IHwgc3RyaW5nLFxuICAgIHN0YXR1c0ljb246IEFjY2Vzc29yPHN0cmluZz4gfCBzdHJpbmcsXG4gICAgc3RhdHVzVGV4dDogQWNjZXNzb3I8c3RyaW5nPiB8IHN0cmluZyxcbiAgICBuZXh0OiAoKSA9PiB2b2lkLFxuICAgIHByZXZpb3VzOiAoKSA9PiB2b2lkLFxuICAgIHBsYXlQYXVzZTogKCkgPT4gdm9pZFxufVxuXG5jbGFzcyBNZWRpYUNsYXNzIHtcbiAgICBwcml2YXRlIG1wcmlzOiBBc3RhbE1wcmlzLk1wcmlzO1xuICAgIHByaXZhdGUgX2FjdGl2ZVBsYXllckRhdGE6IEFjY2Vzc29yPFBsYXllckRhdGE+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm1wcmlzID0gQXN0YWxNcHJpcy5nZXRfZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLl9hY3RpdmVQbGF5ZXJEYXRhID0gY3JlYXRlQmluZGluZyh0aGlzLm1wcmlzLCBcInBsYXllcnNcIikuYXMoXG4gICAgICAgICAgICAocGxheWVycykgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBwbGF5aW5nOiBBc3RhbE1wcmlzLlBsYXllciB8IG51bGwgPSBudWxsO1xuICAgICAgICAgICAgICAgIGxldCBwYXVzZWQ6IEFzdGFsTXByaXMuUGxheWVyIHwgbnVsbCA9IG51bGw7XG4gICAgICAgICAgICAgICAgbGV0IGZpbmFsOiBBc3RhbE1wcmlzLlBsYXllciB8IG51bGwgPSBudWxsO1xuXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBwbGF5ZXIgb2YgcGxheWVycykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBwbGF5ZXIuZ2V0X3BsYXliYWNrX3N0YXR1cygpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBMQVlJTkcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXlpbmcgPSBwbGF5ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzdGF0dXMgPT09IEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMuUEFVU0VEKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXVzZWQgPSBwbGF5ZXI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmaW5hbCA9IHBsYXlpbmcgfHwgcGF1c2VkO1xuXG4gICAgICAgICAgICAgICAgaWYgKGZpbmFsICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdwbGF5YmFja1N0YXR1cycpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYW5Hb05leHQgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAnY2FuR29OZXh0Jyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhbkdvUHJldmlvdXMgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAnY2FuR29QcmV2aW91cycpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYW5QYXVzZSA9IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdjYW5QYXVzZScpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYW5QbGF5ID0gY3JlYXRlQmluZGluZyhmaW5hbCwgJ2NhblBsYXknKTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGNyZWF0ZUJpbmRpbmcoZmluYWwsICd0aXRsZScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXJ0aXN0OiBjcmVhdGVCaW5kaW5nKGZpbmFsLCAnYXJ0aXN0JyksXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGJ1bTogY3JlYXRlQmluZGluZyhmaW5hbCwgJ2FsYnVtJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNJY29uOiBzdGF0dXMuYXMoc3QgPT4gdGhpcy5nZXRQbGF5ZXJTdGF0dXNJY29uKHN0ID09PSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBMQVlJTkcgPyAncGF1c2VkJyA6ICdwbGF5aW5nJykpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dDogc3RhdHVzLmFzKHN0ID0+IHRoaXMuZ2V0UGxheWVyU3RhdHVzKHN0KSksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0OiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhbkdvTmV4dC5nZXQoKSkgZmluYWwhLm5leHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91czogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYW5Hb1ByZXZpb3VzLmdldCgpKSBmaW5hbCEucHJldmlvdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5UGF1c2U6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FuUGF1c2UuZ2V0KCkgfHwgY2FuUGxheS5nZXQoKSkgZmluYWwhLnBsYXlfcGF1c2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ05lbmh1bSBwbGF5ZXIgYXRpdm8nLFxuICAgICAgICAgICAgICAgICAgICBhcnRpc3Q6ICcnLFxuICAgICAgICAgICAgICAgICAgICBhbGJ1bTogJycsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1c0ljb246IFBsYXllckJ1dHRvbkljb25zLnN0b3BwZWQsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6IHRoaXMuZ2V0UGxheWVyU3RhdHVzKEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMuU1RPUFBFRCksXG4gICAgICAgICAgICAgICAgICAgIG5leHQ6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICAgICAgcHJldmlvdXM6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICAgICAgcGxheVBhdXNlOiAoKSA9PiB7IH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0UGxheWVyU3RhdHVzKHN0YXR1czogQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cykge1xuICAgICAgICBzd2l0Y2goc3RhdHVzKSB7XG4gICAgICAgICAgICBjYXNlIEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMuUExBWUlORzpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ1RvY2FuZG8nO1xuICAgICAgICAgICAgY2FzZSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBBVVNFRDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ1BhdXNhZG8nO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ05hZGEgdG9jYW5kbyc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFBsYXllclN0YXR1c0ljb24oc3RhdHVzOiBQbGF5ZXJCdXR0b24pIHtcbiAgICAgICAgc3dpdGNoKHN0YXR1cykge1xuICAgICAgICAgICAgY2FzZSAncHJldmlvdXMnOlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5wcmV2aW91cztcbiAgICAgICAgICAgIGNhc2UgJ3BsYXlpbmcnOlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5wbGF5aW5nO1xuICAgICAgICAgICAgY2FzZSAncGF1c2VkJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMucGF1c2VkO1xuICAgICAgICAgICAgY2FzZSAnc3RvcHBlZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLnN0b3BwZWQ7XG4gICAgICAgICAgICBjYXNlICduZXh0JzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMubmV4dDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLnN0b3BwZWQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IE1lZGlhKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgIDxXaXRoIHZhbHVlPXt0aGlzLl9hY3RpdmVQbGF5ZXJEYXRhfT5cbiAgICAgICAgICAgICAgICB7cGxheWVyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxtZW51YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx3YXlzU2hvd0Fycm93PXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJNZWRpYVwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW5zaXRpdmU9e3BsYXllci5hY3RpdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9wb3Zlcj17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwb3BvdmVyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNcHJpc1BvcG92ZXJcIl19IG92ZXJmbG93PXtHdGsuT3ZlcmZsb3cuSElEREVOfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIk1wcmlzUGxheWVyXCJdfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNZXRhZGF0YVwiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiVGl0bGVcIl19IGxhYmVsPXtwbGF5ZXIudGl0bGV9IGVsbGlwc2l6ZT17M30gbWF4V2lkdGhDaGFycz17MTV9IHdpZHRoQ2hhcnM9ezMwfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkFydGlzdFwiXX0gbGFiZWw9e3BsYXllci5hcnRpc3R9IGVsbGlwc2l6ZT17M30gbWF4V2lkdGhDaGFycz17MTV9IHdpZHRoQ2hhcnM9ezMwfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkFsYnVtXCJdfSBsYWJlbD17cGxheWVyLmFsYnVtfSBlbGxpcHNpemU9ezN9IG1heFdpZHRoQ2hhcnM9ezE1fSB3aWR0aENoYXJzPXszMH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTG93ZXJQYXJ0XCJdfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiQ29udHJvbGxlcnNcIl19IGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJQcmV2aW91c1wiXX0gc2Vuc2l0aXZlPXtwbGF5ZXIuYWN0aXZlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzZWxmKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9QUklNQVJZIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRsZXIgPSBjbGljay5jb25uZWN0KFwicHJlc3NlZFwiLCBwbGF5ZXIucHJldmlvdXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoY2xpY2spO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PntjbGljay5kaXNjb25uZWN0KGhhbmRsZXIpfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSBpY29uU2l6ZT17R3RrLkljb25TaXplLkxBUkdFfSBpY29uTmFtZT17UGxheWVyQnV0dG9uSWNvbnMucHJldmlvdXN9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJQbGF5UGF1c2VcIl19IHNlbnNpdGl2ZT17cGxheWVyLmFjdGl2ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fUFJJTUFSWSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gY2xpY2suY29ubmVjdChcInByZXNzZWRcIiwgcGxheWVyLnBsYXlQYXVzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5hZGRfY29udHJvbGxlcihjbGljayk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGVhbnVwKCgpID0+e2NsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcil9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltYWdlIGljb25TaXplPXtHdGsuSWNvblNpemUuTEFSR0V9IGljb25OYW1lPXtwbGF5ZXIuc3RhdHVzSWNvbn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIk5leHRcIl19IHNlbnNpdGl2ZT17cGxheWVyLmFjdGl2ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fUFJJTUFSWSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gY2xpY2suY29ubmVjdChcInByZXNzZWRcIiwgcGxheWVyLm5leHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoY2xpY2spO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PntjbGljay5kaXNjb25uZWN0KGhhbmRsZXIpfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSBpY29uU2l6ZT17R3RrLkljb25TaXplLkxBUkdFfSBpY29uTmFtZT17UGxheWVyQnV0dG9uSWNvbnMubmV4dH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BvcG92ZXI+IGFzIEd0ay5Qb3BvdmVyfVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17cGxheWVyLnN0YXR1c1RleHR9IHdpZHRoQ2hhcnM9ezEyfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgbWVkaWEgPSBuZXcgTWVkaWFDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgbWVkaWE7XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgbWtBcHAgfSBmcm9tIFwiLi4vX2FwcC5qc1wiXG5cbkd0ay5pbml0KClcblxuLy8gc3RvcCB0aGlzIGZyb20gbGVha2luZyBpbnRvIHN1YnByb2Nlc3Nlc1xuLy8gYW5kIGdpbyBsYXVuY2ggaW52b2NhdGlvbnNcbkdMaWIudW5zZXRlbnYoXCJMRF9QUkVMT0FEXCIpXG5cbi8vIHVzZXJzIG1pZ2h0IHdhbnQgdG8gdXNlIEFkd2FpdGEgaW4gd2hpY2ggY2FzZSBpdCBoYXMgdG8gYmUgaW5pdGlhbGl6ZWRcbi8vIGl0IG1pZ2h0IGJlIGNvbW1vbiBwaXRmYWxsIHRvIGZvcmdldCBpdCBiZWNhdXNlIGBBcHBgIGlzIG5vdCBgQWR3LkFwcGxpY2F0aW9uYFxuYXdhaXQgaW1wb3J0KFwiZ2k6Ly9BZHc/dmVyc2lvbj0xXCIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMClcblxuZXhwb3J0IGRlZmF1bHQgbWtBcHAoQXN0YWwuQXBwbGljYXRpb24pXG4iLCAiLyoqXG4gKiBXb3JrYXJvdW5kIGZvciBcIkNhbid0IGNvbnZlcnQgbm9uLW51bGwgcG9pbnRlciB0byBKUyB2YWx1ZSBcIlxuICovXG5cbmV4cG9ydCB7fVxuXG5mdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDFfJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5hc3luYyBmdW5jdGlvbiBzdXBwcmVzczxUPihtb2Q6IFByb21pc2U8eyBkZWZhdWx0OiBUIH0+LCBwYXRjaDogKG06IFQpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gbW9kLnRoZW4oKG0pID0+IHBhdGNoKG0uZGVmYXVsdCkpLmNhdGNoKCgpID0+IHZvaWQgMClcbn1cblxuZnVuY3Rpb24gcGF0Y2g8UCBleHRlbmRzIG9iamVjdD4ocHJvdG86IFAsIHByb3A6IEV4dHJhY3Q8a2V5b2YgUCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90bywgcHJvcCwge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1tgZ2V0XyR7c25ha2VpZnkocHJvcCl9YF0oKVxuICAgICAgICB9LFxuICAgIH0pXG59XG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxBcHBzXCIpLCAoeyBBcHBzLCBBcHBsaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goQXBwcy5wcm90b3R5cGUsIFwibGlzdFwiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJrZXl3b3Jkc1wiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJjYXRlZ29yaWVzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmF0dGVyeVwiKSwgKHsgVVBvd2VyIH0pID0+IHtcbiAgICBwYXRjaChVUG93ZXIucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCbHVldG9vdGhcIiksICh7IEFkYXB0ZXIsIEJsdWV0b290aCwgRGV2aWNlIH0pID0+IHtcbiAgICBwYXRjaChBZGFwdGVyLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiYWRhcHRlcnNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChEZXZpY2UucHJvdG90eXBlLCBcInV1aWRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsSHlwcmxhbmRcIiksICh7IEh5cHJsYW5kLCBNb25pdG9yLCBXb3Jrc3BhY2UgfSkgPT4ge1xuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJiaW5kc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJtb25pdG9yc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJ3b3Jrc3BhY2VzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImNsaWVudHNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVNb2Rlc1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZV9tb2Rlc1wiKVxuICAgIHBhdGNoKFdvcmtzcGFjZS5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE1wcmlzXCIpLCAoeyBNcHJpcywgUGxheWVyIH0pID0+IHtcbiAgICBwYXRjaChNcHJpcy5wcm90b3R5cGUsIFwicGxheWVyc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX3VyaV9zY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRVcmlTY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfbWltZV90eXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkTWltZVR5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJjb21tZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIiksICh7IFdpZmkgfSkgPT4ge1xuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc19wb2ludHNcIilcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NQb2ludHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOb3RpZmRcIiksICh7IE5vdGlmZCwgTm90aWZpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChOb3RpZmQucHJvdG90eXBlLCBcIm5vdGlmaWNhdGlvbnNcIilcbiAgICBwYXRjaChOb3RpZmljYXRpb24ucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxQb3dlclByb2ZpbGVzXCIpLCAoeyBQb3dlclByb2ZpbGVzIH0pID0+IHtcbiAgICBwYXRjaChQb3dlclByb2ZpbGVzLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsV3BcIiksICh7IFdwLCBBdWRpbywgVmlkZW8gfSkgPT4ge1xuICAgIHBhdGNoKFdwLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcIm1pY3JvcGhvbmVzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInNwZWFrZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic2lua3NcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic291cmNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsVHJheVwiKSwgKHsgVHJheSB9KSA9PiB7XG4gICAgcGF0Y2goVHJheS5wcm90b3R5cGUsIFwiaXRlbXNcIilcbn0pXG4iLCAiaW1wb3J0IFwiLi9vdmVycmlkZXMuanNcIlxuaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gXCJjb25zb2xlXCJcbmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSBcInN5c3RlbVwiXG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSBcImduaW1cIlxuaW1wb3J0IElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgdHlwZSBBc3RhbDMgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj0zLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWw0IGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcblxudHlwZSBDb25maWcgPSBQYXJ0aWFsPHtcbiAgICBpbnN0YW5jZU5hbWU6IHN0cmluZ1xuICAgIGNzczogc3RyaW5nXG4gICAgaWNvbnM6IHN0cmluZ1xuICAgIGd0a1RoZW1lOiBzdHJpbmdcbiAgICBpY29uVGhlbWU6IHN0cmluZ1xuICAgIGN1cnNvclRoZW1lOiBzdHJpbmdcbiAgICBob2xkOiBib29sZWFuXG4gICAgcmVxdWVzdEhhbmRsZXIocmVxdWVzdDogc3RyaW5nLCByZXM6IChyZXNwb25zZTogYW55KSA9PiB2b2lkKTogdm9pZFxuICAgIG1haW4oLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG4gICAgY2xpZW50KG1lc3NhZ2U6IChtc2c6IHN0cmluZykgPT4gc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IHZvaWRcbn0+XG5cbmludGVyZmFjZSBBc3RhbDNKUyBleHRlbmRzIEFzdGFsMy5BcHBsaWNhdGlvbiB7XG4gICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT5cbiAgICByZXF1ZXN0SGFuZGxlcjogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cbiAgICBhcHBseV9jc3Moc3R5bGU6IHN0cmluZywgcmVzZXQ/OiBib29sZWFuKTogdm9pZFxuICAgIHF1aXQoY29kZT86IG51bWJlcik6IHZvaWRcbiAgICBzdGFydChjb25maWc/OiBDb25maWcpOiB2b2lkXG59XG5cbmludGVyZmFjZSBBc3RhbDRKUyBleHRlbmRzIEFzdGFsNC5BcHBsaWNhdGlvbiB7XG4gICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT5cbiAgICByZXF1ZXN0SGFuZGxlcj86IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG50eXBlIEFwcDMgPSB0eXBlb2YgQXN0YWwzLkFwcGxpY2F0aW9uXG50eXBlIEFwcDQgPSB0eXBlb2YgQXN0YWw0LkFwcGxpY2F0aW9uXG5cbmV4cG9ydCBmdW5jdGlvbiBta0FwcDxBcHAgZXh0ZW5kcyBBcHAzPihBcHA6IEFwcCk6IEFzdGFsM0pTXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwND4oQXBwOiBBcHApOiBBc3RhbDRKU1xuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHAoQXBwOiBBcHAzIHwgQXBwNCkge1xuICAgIHJldHVybiBuZXcgKGNsYXNzIEFzdGFsSlMgZXh0ZW5kcyBBcHAge1xuICAgICAgICBwcml2YXRlIGRpc3Bvc2VSb290PzogKCkgPT4gdm9pZFxuXG4gICAgICAgIHN0YXRpYyB7XG4gICAgICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6IFwiQXN0YWxKU1wiIH0sIHRoaXMgYXMgYW55KVxuICAgICAgICB9XG5cbiAgICAgICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZuID0gRnVuY3Rpb24oYHJldHVybiAoYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAke2JvZHkuaW5jbHVkZXMoXCI7XCIpID8gYm9keSA6IGByZXR1cm4gJHtib2R5fTtgfVxuICAgICAgICAgICAgICAgICAgICB9KWApXG4gICAgICAgICAgICAgICAgICAgIGZuKCkoKS50aGVuKHJlcykuY2F0Y2gocmVqKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlaihlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuXG4gICAgICAgIHZmdW5jX3NodXRkb3duKCk6IHZvaWQge1xuICAgICAgICAgICAgc3VwZXIudmZ1bmNfc2h1dGRvd24oKVxuICAgICAgICAgICAgdGhpcy5kaXNwb3NlUm9vdD8uKClcbiAgICAgICAgfVxuXG4gICAgICAgIHZmdW5jX3JlcXVlc3QobXNnOiBzdHJpbmcsIGNvbm46IEdpby5Tb2NrZXRDb25uZWN0aW9uKTogdm9pZCB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucmVxdWVzdEhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIobXNnLCAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgSU8ud3JpdGVfc29jayhjb25uLCBTdHJpbmcocmVzcG9uc2UpLCAoXywgcmVzKSA9PiBJTy53cml0ZV9zb2NrX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN1cGVyLnZmdW5jX3JlcXVlc3QobXNnLCBjb25uKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0ID0gZmFsc2UpIHtcbiAgICAgICAgICAgIHN1cGVyLmFwcGx5X2NzcyhzdHlsZSwgcmVzZXQpXG4gICAgICAgIH1cblxuICAgICAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnF1aXQoKVxuICAgICAgICAgICAgZXhpdChjb2RlID8/IDApXG4gICAgICAgIH1cblxuICAgICAgICBzdGFydCh7IHJlcXVlc3RIYW5kbGVyLCBjc3MsIGhvbGQsIG1haW4sIGNsaWVudCwgaWNvbnMsIC4uLmNmZyB9OiBDb25maWcgPSB7fSkge1xuICAgICAgICAgICAgY29uc3QgYXBwID0gdGhpcyBhcyB1bmtub3duIGFzIEluc3RhbmNlVHlwZTxBcHAzIHwgQXBwND5cblxuICAgICAgICAgICAgY2xpZW50ID8/PSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJpbnQoYEFzdGFsIGluc3RhbmNlIFwiJHthcHAuaW5zdGFuY2VOYW1lfVwiIGFscmVhZHkgcnVubmluZ2ApXG4gICAgICAgICAgICAgICAgZXhpdCgxKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNmZylcbiAgICAgICAgICAgIHNldENvbnNvbGVMb2dEb21haW4oYXBwLmluc3RhbmNlTmFtZSlcblxuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0SGFuZGxlciA9IHJlcXVlc3RIYW5kbGVyXG4gICAgICAgICAgICBhcHAuY29ubmVjdChcImFjdGl2YXRlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3QgPSBkaXNwb3NlXG4gICAgICAgICAgICAgICAgICAgIG1haW4/LiguLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhcHAuYWNxdWlyZV9zb2NrZXQoKVxuICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsaWVudCgobXNnKSA9PiBJTy5zZW5kX3JlcXVlc3QoYXBwLmluc3RhbmNlTmFtZSwgbXNnKSEsIC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY3NzKSB0aGlzLmFwcGx5X2Nzcyhjc3MsIGZhbHNlKVxuXG4gICAgICAgICAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpXG5cbiAgICAgICAgICAgIGhvbGQgPz89IHRydWVcbiAgICAgICAgICAgIGlmIChob2xkKSBhcHAuaG9sZCgpXG5cbiAgICAgICAgICAgIGFwcC5ydW5Bc3luYyhbXSlcbiAgICAgICAgfVxuICAgIH0pKClcbn1cbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuXG5jb25zdCBwb2xsVGltZSA9IDYwMDAwO1xuXG5jbGFzcyBEYXRlVGltZUNsYXNzIHtcbiAgICBwcml2YXRlIGZvcm1hdHRlclRpbWUgPSBcIiVIOiVNXCI7XG4gICAgcHJpdmF0ZSBmb3JtYXR0ZXJEYXRlID0gXCJIb2plIFx1MDBFOTogJUEsICVkIGRlICVCIGRlICVZXCI7XG4gICAgcHJpdmF0ZSBfZGF0ZVRpbWU6IEFjY2Vzc29yPHsgZGF0ZTogc3RyaW5nLCB0aW1lOiBzdHJpbmcgfT47XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2RhdGVUaW1lID0gY3JlYXRlUG9sbCh7IGRhdGU6IFwiXCIsIHRpbWU6IFwiXCIgfSwgcG9sbFRpbWUsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IEdMaWIuRGF0ZVRpbWUubmV3X25vd19sb2NhbCgpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBkYXRlOiBub3cuZm9ybWF0KHRoaXMuZm9ybWF0dGVyRGF0ZSkhLFxuICAgICAgICAgICAgICAgIHRpbWU6IG5vdy5mb3JtYXQodGhpcy5mb3JtYXR0ZXJUaW1lKSFcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0IERhdGVUaW1lUG9wb3ZlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxHdGsuUG9wb3Zlcj5cbiAgICAgICAgICAgICAgICA8R3RrLkNhbGVuZGFyIGNzc0NsYXNzZXM9e1tcIkNhbGVuZGFyXCJdfSAvPlxuICAgICAgICAgICAgPC9HdGsuUG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IERhdGVUaW1lKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b24gY3NzQ2xhc3Nlcz17W1wiRGF0ZVRpbWVDYWxlbmRhclwiXX0gcG9wb3Zlcj17dGhpcy5EYXRlVGltZVBvcG92ZXIgYXMgR3RrLlBvcG92ZXJ9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJUaW1lXCJdfSBsYWJlbD17dGhpcy5fZGF0ZVRpbWUuYXModCA9PiBgXHVGMDE3ICR7dC50aW1lfWApfSB0b29sdGlwTWFya3VwPXt0aGlzLl9kYXRlVGltZS5hcyhkID0+IGBcdURCODBcdURDRUQgJHtkLmRhdGV9YCl9IC8+XG4gICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBkYXRlVGltZSA9IG5ldyBEYXRlVGltZUNsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBkYXRlVGltZTtcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgY3JlYXRlQ29tcHV0ZWQgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCBBc3RhbEh5cHJsYW5kIGZyb20gXCJnaTovL0FzdGFsSHlwcmxhbmQ/dmVyc2lvbj0wLjFcIjtcblxuZXhwb3J0IGNsYXNzIEh5cHJsYW5kIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IEFzdGFsSHlwcmxhbmQuSHlwcmxhbmQ7XG4gICAgcHJpdmF0ZSBfd29ya3NwYWNlczogQWNjZXNzb3I8QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2VbXT47XG4gICAgcHJpdmF0ZSBfZm9jdXNlZFdvcmtzcGFjZTogQWNjZXNzb3I8QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2U+O1xuICAgIHByaXZhdGUgX2NsaWVudHM6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuQ2xpZW50W10+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHQgPSBBc3RhbEh5cHJsYW5kLmdldF9kZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuX3dvcmtzcGFjZXMgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJ3b3Jrc3BhY2VzXCIpLmFzKCh3b3Jrc3BhY2VzKSA9PiB3b3Jrc3BhY2VzLnNvcnQoKGEsIGIpID0+IGEuaWQgLSBiLmlkKSk7XG4gICAgICAgIHRoaXMuX2ZvY3VzZWRXb3Jrc3BhY2UgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJmb2N1c2VkV29ya3NwYWNlXCIpO1xuICAgICAgICB0aGlzLl9jbGllbnRzID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwiY2xpZW50c1wiKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHdvcmtzcGFjZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl93b3Jrc3BhY2VzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZm9jdXNlZFdvcmtzcGFjZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZvY3VzZWRXb3Jrc3BhY2U7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBjbGllbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50cztcbiAgICB9XG5cbiAgICBwdWJsaWMgYXJlTW9uaXRvcnNFcXVhbChtb25pdG9yOiBHZGsuTW9uaXRvciwgaHlwck1vbml0b3I6IEFzdGFsSHlwcmxhbmQuTW9uaXRvcikge1xuICAgICAgICBjb25zdCBnZW9tZXRyeSA9IG1vbml0b3IuZ2V0X2dlb21ldHJ5KCk7XG4gICAgICAgIGlmKGh5cHJNb25pdG9yLmdldF9tb2RlbCgpID09PSBtb25pdG9yLmdldF9tb2RlbCgpXG4gICAgICAgICYmIGh5cHJNb25pdG9yLmdldF9oZWlnaHQoKSA9PT0gZ2VvbWV0cnkuaGVpZ2h0XG4gICAgICAgICYmIGh5cHJNb25pdG9yLmdldF93aWR0aCgpID09PSBnZW9tZXRyeS53aWR0aFxuICAgICAgICAmJiBoeXByTW9uaXRvci5nZXRfeCgpID09PSBnZW9tZXRyeS54XG4gICAgICAgICYmIGh5cHJNb25pdG9yLmdldF95KCkgPT09IGdlb21ldHJ5LnkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0SHlwcmxhbmRNb25pdG9yKG1vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gICAgICAgIGNvbnN0IGh5cHJsYW5kTW9uaXRvcnMgPSB0aGlzLmRlZmF1bHQuZ2V0X21vbml0b3JzKCk7XG4gICAgICAgIHJldHVybiBoeXBybGFuZE1vbml0b3JzLmZpbmQoaHlwck1vbml0b3IgPT4gdGhpcy5hcmVNb25pdG9yc0VxdWFsKG1vbml0b3IsIGh5cHJNb25pdG9yKSkgfHwgaHlwcmxhbmRNb25pdG9yc1swXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaWJpbGl0eUFjY2Vzc29yKG1vbml0b3I6IEFzdGFsSHlwcmxhbmQuTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWQoXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY3JlYXRlQmluZGluZyhtb25pdG9yLCAnYWN0aXZlV29ya3NwYWNlJyksXG4gICAgICAgICAgICAgICAgdGhpcy5fY2xpZW50cyxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAoYWN0aXZlV29ya3NwYWNlLCBhbGxDbGllbnRzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2xpZW50c0luQWN0aXZlV29ya3NwYWNlID0gYWxsQ2xpZW50cy5maWx0ZXIoY2xpZW50ID0+XG4gICAgICAgICAgICAgICAgICAgIGNsaWVudC53b3Jrc3BhY2UuaWQgPT09IGFjdGl2ZVdvcmtzcGFjZS5pZFxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gY2xpZW50c0luQWN0aXZlV29ya3NwYWNlLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IGh5cHJsYW5kU2VydmljZSA9IG5ldyBIeXBybGFuZDtcblxuZXhwb3J0IGRlZmF1bHQgaHlwcmxhbmRTZXJ2aWNlO1xuIiwgImltcG9ydCBXcCBmcm9tIFwiZ2k6Ly9Bc3RhbFdwXCI7XG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCI7XG5pbXBvcnQgeyBHdGssIEdkayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIG9uQ2xlYW51cCwgV2l0aCB9IGZyb20gXCJhZ3NcIjtcblxuY2xhc3MgQXVkaW9Db250cm9sQ2xhc3Mge1xuICAgIHByaXZhdGUgZGVmYXVsdDogV3AuV3A7XG4gICAgcHJpdmF0ZSBkZWZhdWx0U3BlYWtlcjogQWNjZXNzb3I8V3AuRW5kcG9pbnQ+O1xuICAgIHByaXZhdGUgZGVmYXVsdE1pY3JvcGhvbmU6IEFjY2Vzc29yPFdwLkVuZHBvaW50PjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHN0ZXA6IG51bWJlciA9IDAuMDI7XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdCA9IFdwLmdldF9kZWZhdWx0KCkhO1xuICAgICAgICB0aGlzLmRlZmF1bHRTcGVha2VyID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsICdkZWZhdWx0U3BlYWtlcicpO1xuICAgICAgICB0aGlzLmRlZmF1bHRNaWNyb3Bob25lID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsICdkZWZhdWx0TWljcm9waG9uZScpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaGFuZGxlU2Nyb2xsKGVkcDogV3AuRW5kcG9pbnQsIGR5OiBudW1iZXIpIHtcbiAgICAgICAgbGV0IG5ld1ZvbHVtZSA9IGVkcC5nZXRfdm9sdW1lKCk7XG4gICAgICAgIGlmKGR5IDwgMCkgbmV3Vm9sdW1lICs9IHRoaXMuc3RlcDtcbiAgICAgICAgZWxzZSBuZXdWb2x1bWUgLT0gdGhpcy5zdGVwO1xuICAgICAgICBlZHAuc2V0X3ZvbHVtZShNYXRoLm1pbihuZXdWb2x1bWUsIDEpKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIEVuZHBvaW50KHsgZW5kcG9pbnQgfTogeyBlbmRwb2ludDogQWNjZXNzb3I8V3AuRW5kcG9pbnQ+IH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICA8V2l0aCB2YWx1ZT17ZW5kcG9pbnR9PlxuICAgICAgICAgICAgICAgIHtlZHAgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpY29uID0gY3JlYXRlQmluZGluZyhlZHAsICd2b2x1bWVJY29uJyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZvbHVtZSA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAndm9sdW1lJykuYXMoYSA9PiBgJHtNYXRoLnJvdW5kKGEgKiAxMDApfSVgKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGVmdENsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fUFJJTUFSWSB9KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGVmdEhhbmRsZXIgPSBsZWZ0Q2xpY2suY29ubmVjdCgncHJlc3NlZCcsICgpID0+IGVkcC5zZXRfbXV0ZSghZWRwLmdldF9tdXRlKCkpKTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGwgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbCh7IGZsYWdzOiBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsRmxhZ3MuVkVSVElDQUwgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbEhhbmRsZXIgPSBzY3JvbGwuY29ubmVjdCgnc2Nyb2xsJywgKGNvbnRyb2xlcjogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbCwgZHg6IG51bWJlciwgZHk6IG51bWJlcikgPT4gdGhpcy5oYW5kbGVTY3JvbGwoZWRwLCBkeSkpO1xuXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0Q2xpY2suZGlzY29ubmVjdChsZWZ0SGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGwuZGlzY29ubmVjdChzY3JvbGxIYW5kbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkVuZHBvaW50XCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQ9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5hZGRfY29udHJvbGxlcihsZWZ0Q2xpY2spO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5hZGRfY29udHJvbGxlcihzY3JvbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSBjc3NDbGFzc2VzPXtbXCJJY29uXCJdfSBpY29uTmFtZT17aWNvbn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiVm9sdW1lXCJdfSBsYWJlbD17dm9sdW1lfSB3aWR0aENoYXJzPXs0fSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgTWl4ZXJFbnRyeSh7IGVuZHBvaW50IH06IHsgZW5kcG9pbnQ6IEFjY2Vzc29yPFdwLkVuZHBvaW50PiB9KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgIDxXaXRoIHZhbHVlPXtlbmRwb2ludH0+XG4gICAgICAgICAgICAgICAgICAgIHtlZHAgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWNvbiA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAndm9sdW1lSWNvbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgdm9sdW1lID0gY3JlYXRlQmluZGluZyhlZHAsICd2b2x1bWUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvZ2dsZU11dGVDbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1BSSU1BUlkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2dnbGVNdXRlSGFuZGxlciA9IHRvZ2dsZU11dGVDbGljay5jb25uZWN0KCdwcmVzc2VkJywgKCkgPT4gZWRwLnNldF9tdXRlKCFlZHAuZ2V0X211dGUoKSkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGwgPSBuZXcgR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbCh7IGZsYWdzOiBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsRmxhZ3MuVkVSVElDQUwgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxIYW5kbGVyID0gc2Nyb2xsLmNvbm5lY3QoJ3Njcm9sbCcsIChjb250cm9sZXI6IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwsIGR4OiBudW1iZXIsIGR5OiBudW1iZXIpID0+IHRoaXMuaGFuZGxlU2Nyb2xsKGVkcCwgZHkpKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVNdXRlQ2xpY2suZGlzY29ubmVjdCh0b2dnbGVNdXRlSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsLmRpc2Nvbm5lY3Qoc2Nyb2xsSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIk1peGVyRW50cnlcIl19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1hZ2UgY3NzQ2xhc3Nlcz17W1wiSWNvblwiXX0gaWNvbk5hbWU9e2ljb259ICQ9e3NlbGYgPT4gc2VsZi5hZGRfY29udHJvbGxlcih0b2dnbGVNdXRlQ2xpY2spfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2xpZGVyIGNzc0NsYXNzZXM9e1tcIlNsaWRlclwiXX0gJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKHNjcm9sbCl9IHZhbHVlPXt2b2x1bWV9IHN0ZXA9ezAuMX0gbWluPXswfSBtYXg9ezF9IG9uQ2hhbmdlVmFsdWU9eyh7IHZhbHVlIH0pID0+IGVkcC5zZXRfdm9sdW1lKHZhbHVlKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPC9XaXRoPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBNaXhlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxwb3BvdmVyIGNzc0NsYXNzZXM9e1tcIk1peGVyXCJdfT5cbiAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiTGFiZWxcIl19IGxhYmVsPXtcIk1peGVyXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLk1peGVyRW50cnkoeyBlbmRwb2ludDogdGhpcy5kZWZhdWx0U3BlYWtlciB9KX1cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuTWl4ZXJFbnRyeSh7IGVuZHBvaW50OiB0aGlzLmRlZmF1bHRNaWNyb3Bob25lIH0pfVxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9wb3BvdmVyPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgQXVkaW9Db250cm9sKCkge1xuICAgICAgICBjb25zdCBzcGF3blBhdnVjb250cm9sQ2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9TRUNPTkRBUlkgfSk7XG4gICAgICAgIGNvbnN0IHNwYXduUGF2dWNvbnRyb2xIYW5kbGVyID0gc3Bhd25QYXZ1Y29udHJvbENsaWNrLmNvbm5lY3QoJ3ByZXNzZWQnLCAoKSA9PiBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9hc3luYygncGF2dWNvbnRyb2wnKSk7XG5cbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHNwYXduUGF2dWNvbnRyb2xDbGljay5kaXNjb25uZWN0KHNwYXduUGF2dWNvbnRyb2xIYW5kbGVyKSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiQXVkaW9Db250cm9sXCJdfSAkPXtzZWxmID0+IHNlbGYuYWRkX2NvbnRyb2xsZXIoc3Bhd25QYXZ1Y29udHJvbENsaWNrKX0+XG4gICAgICAgICAgICAgICAge3RoaXMuRW5kcG9pbnQoeyBlbmRwb2ludDogdGhpcy5kZWZhdWx0U3BlYWtlciB9KX1cbiAgICAgICAgICAgICAgICA8bWVudWJ1dHRvbiBwb3BvdmVyPXt0aGlzLk1peGVyKCkgYXMgR3RrLlBvcG92ZXJ9IGNoaWxkPXs8bGFiZWwgbGFiZWw9eydcdUVBRjgnfT48L2xhYmVsPiBhcyBHdGsuV2lkZ2V0fSAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBhdWRpb0NvbnRyb2wgPSBuZXcgQXVkaW9Db250cm9sQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IGF1ZGlvQ29udHJvbDtcbiIsICJpbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCI7XG5pbXBvcnQgeyBDYXZhVmlzaWJsaXR5IH0gZnJvbSBcIi4uL3V0aWxzL0NhdmFFbnVtXCI7XG5pbXBvcnQgeyByZWFkRmlsZSwgd3JpdGVGaWxlIH0gZnJvbSBcImFncy9maWxlXCI7XG5pbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlU3RhdGUsIFNldHRlciB9IGZyb20gXCJhZ3NcIjtcblxuaW50ZXJmYWNlIE9wdGlvbnMge1xuICAgIGFuaW1hdGlvbnNFbmFibGVkOiBib29sZWFuO1xuICAgIGNhdmFWaXNpYmxlOiBDYXZhVmlzaWJsaXR5O1xuICAgIHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiBib29sZWFuO1xufVxuXG5jb25zdCBvcHRpb25zRmFsbGJhY2s6IE9wdGlvbnMgPSB7XG4gICAgYW5pbWF0aW9uc0VuYWJsZWQ6IHRydWUsXG4gICAgY2F2YVZpc2libGU6IENhdmFWaXNpYmxpdHkuQUxXQVlTLFxuICAgIHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiB0cnVlXG59XG5cbmNvbnN0IHBhdGggPSBHTGliLmdldF9ob21lX2RpcigpICsgJy8uY29uZmlnL2Fncy9vcHRpb25zL29wdGlvbnMuanNvbic7XG5cbmNsYXNzIFNldHRpbmdzQ2xhc3Mge1xuICAgIHByaXZhdGUgX2FuaW1hdGlvbnNFbmFibGVkOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRBbmltYXRpb25zRW5hYmxlZDogU2V0dGVyPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX2NhdmFWaXNpYmxlOiBBY2Nlc3NvcjxDYXZhVmlzaWJsaXR5PjtcbiAgICBwcml2YXRlIF9zZXRDYXZhVmlzaWJsZTogU2V0dGVyPENhdmFWaXNpYmxpdHk+O1xuICAgIHByaXZhdGUgX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZTogU2V0dGVyPGJvb2xlYW4+O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IGZpbGVTdHIgPSByZWFkRmlsZShwYXRoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2UoZmlsZVN0cikgYXMgT3B0aW9ucztcbiAgICAgICAgICAgIFt0aGlzLl9hbmltYXRpb25zRW5hYmxlZCwgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWRdID0gY3JlYXRlU3RhdGUocGFyc2VkLmFuaW1hdGlvbnNFbmFibGVkKTtcbiAgICAgICAgICAgIFt0aGlzLl9jYXZhVmlzaWJsZSwgdGhpcy5fc2V0Q2F2YVZpc2libGVdID0gY3JlYXRlU3RhdGUocGFyc2VkLmNhdmFWaXNpYmxlIGFzIENhdmFWaXNpYmxpdHkpO1xuICAgICAgICAgICAgW3RoaXMuX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlLCB0aGlzLl9zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZV0gPSBjcmVhdGVTdGF0ZShwYXJzZWQud2FsbHBhcGVyU2VsZWN0b3JBY3RpdmUpO1xuXG4gICAgICAgIH0gY2F0Y2goZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGxlciBvcHRpb25zLmpzb246ICcgKyBlcnIpO1xuICAgICAgICAgICAgW3RoaXMuX2FuaW1hdGlvbnNFbmFibGVkLCB0aGlzLl9zZXRBbmltYXRpb25zRW5hYmxlZF0gPSBjcmVhdGVTdGF0ZShvcHRpb25zRmFsbGJhY2suYW5pbWF0aW9uc0VuYWJsZWQpO1xuICAgICAgICAgICAgW3RoaXMuX2NhdmFWaXNpYmxlLCB0aGlzLl9zZXRDYXZhVmlzaWJsZV0gPSBjcmVhdGVTdGF0ZShvcHRpb25zRmFsbGJhY2suY2F2YVZpc2libGUpO1xuICAgICAgICAgICAgW3RoaXMuX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlLCB0aGlzLl9zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZV0gPSBjcmVhdGVTdGF0ZShvcHRpb25zRmFsbGJhY2sud2FsbHBhcGVyU2VsZWN0b3JBY3RpdmUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHNhdmVPcHRpb25zKCkge1xuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgYW5pbWF0aW9uc0VuYWJsZWQ6IHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkLmdldCgpLFxuICAgICAgICAgICAgY2F2YVZpc2libGU6IHRoaXMuX2NhdmFWaXNpYmxlLmdldCgpLFxuICAgICAgICAgICAgd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmU6IHRoaXMuX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlLmdldCgpXG4gICAgICAgIH1cbiAgICAgICAgd3JpdGVGaWxlKHBhdGgsIEpTT04uc3RyaW5naWZ5KG9wdGlvbnMsIG51bGwsIDIpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdG9nZ2xlQ2F2YVZpc2liaWxpdHlTdGF0ZSgpIHtcbiAgICAgICAgc3dpdGNoKHRoaXMuX2NhdmFWaXNpYmxlLmdldCgpKSB7XG4gICAgICAgICAgICBjYXNlIENhdmFWaXNpYmxpdHkuQUxXQVlTOlxuICAgICAgICAgICAgICAgIHRoaXMuX3NldENhdmFWaXNpYmxlKENhdmFWaXNpYmxpdHkuTk9fQ0xJRU5UUyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIENhdmFWaXNpYmxpdHkuTk9fQ0xJRU5UUzpcbiAgICAgICAgICAgICAgICB0aGlzLl9zZXRDYXZhVmlzaWJsZShDYXZhVmlzaWJsaXR5LkRJU0FCTEVEKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQ2F2YVZpc2libGl0eS5ESVNBQkxFRDpcbiAgICAgICAgICAgICAgICB0aGlzLl9zZXRDYXZhVmlzaWJsZShDYXZhVmlzaWJsaXR5LkFMV0FZUyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRoaXMuX3NldENhdmFWaXNpYmxlKENhdmFWaXNpYmxpdHkuRElTQUJMRUQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBhbmltYXRpb25zRW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY2F2YVZpc2libGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jYXZhVmlzaWJsZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBzZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZShuZXdTdGF0ZTogYm9vbGVhbikge1xuICAgICAgICBpZih0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5nZXQoKSAhPT0gbmV3U3RhdGUpIHRoaXMuX3NldFdhbGxwYXBlclNlbGVjdG9yQWN0aXZlKG5ld1N0YXRlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHNldEFuaW1hdGlvbnNFbmFibGVkKG5ld1N0YXRlOiBib29sZWFuKSB7XG4gICAgICAgIGlmKHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkLmdldCgpICE9PSBuZXdTdGF0ZSkgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWQobmV3U3RhdGUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgc2V0Q2F2YVZpc2libGUobmV3U3RhdGU6IENhdmFWaXNpYmxpdHkpIHtcbiAgICAgICAgaWYodGhpcy5fY2F2YVZpc2libGUuZ2V0KCkgIT09IG5ld1N0YXRlKSB0aGlzLl9zZXRDYXZhVmlzaWJsZShuZXdTdGF0ZSk7XG4gICAgfVxufVxuXG5jb25zdCBzZXR0aW5nc1NlcnZpY2UgPSBuZXcgU2V0dGluZ3NDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgc2V0dGluZ3NTZXJ2aWNlO1xuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKHBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIEFzdGFsLnJlYWRfZmlsZShwYXRoKSB8fCBcIlwiXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZUFzeW5jKHBhdGg6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgQXN0YWwucmVhZF9maWxlX2FzeW5jKHBhdGgsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbC5yZWFkX2ZpbGVfZmluaXNoKHJlcykgfHwgXCJcIilcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGUocGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBBc3RhbC53cml0ZV9maWxlKHBhdGgsIGNvbnRlbnQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVBc3luYyhwYXRoOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIEFzdGFsLndyaXRlX2ZpbGVfYXN5bmMocGF0aCwgY29udGVudCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsLndyaXRlX2ZpbGVfZmluaXNoKHJlcykpXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbW9uaXRvckZpbGUoXG4gICAgcGF0aDogc3RyaW5nLFxuICAgIGNhbGxiYWNrOiAoZmlsZTogc3RyaW5nLCBldmVudDogR2lvLkZpbGVNb25pdG9yRXZlbnQpID0+IHZvaWQsXG4pOiBHaW8uRmlsZU1vbml0b3Ige1xuICAgIHJldHVybiBBc3RhbC5tb25pdG9yX2ZpbGUocGF0aCwgKGZpbGU6IHN0cmluZywgZXZlbnQ6IEdpby5GaWxlTW9uaXRvckV2ZW50KSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGZpbGUsIGV2ZW50KVxuICAgIH0pIVxufVxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgU3d3dyB9IGZyb20gXCIuLi91dGlscy9Td3d3XCI7XG5pbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgc2V0dGluZ3NTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9TZXR0aW5nc1wiO1xuXG5jb25zdCBwYXRoID0gR0xpYi5nZXRfaG9tZV9kaXIoKSArICcvLmNvbmZpZy9hZ3Mvd2FsbHBhcGVycyc7XG5jb25zdCBwb2xsVGltZSA9IDI0MDAwMDtcbmNvbnN0IGltYWdlRXh0ZW5zaW9ucyA9IFsnLmpwZycsICcuanBlZycsICcucG5nJywgJy5naWYnLCAnLmJtcCcsICcud2VicCcsICcuc3ZnJ107XG5cbmNsYXNzIFdhbGxwYXBlclNlbGVjdG9yQ2xhc3Mge1xuICAgIHByaXZhdGUgaW1hZ2VzOiBBY2Nlc3NvcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBzZXRJbWFnZXM6IFNldHRlcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBfdGltZXJBY3RpdmU6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX3NldFRpbWVyQWN0aXZlOiBTZXR0ZXI8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBwb2xsaW5nOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIHN0YXRpYyB3aWRnZXRDb3VudDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIHVuc3ViOiAoKSA9PiB2b2lkO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIFt0aGlzLmltYWdlcywgdGhpcy5zZXRJbWFnZXNdID0gY3JlYXRlU3RhdGUoW10gYXMgc3RyaW5nW10pO1xuICAgICAgICBbdGhpcy5fdGltZXJBY3RpdmUsIHRoaXMuX3NldFRpbWVyQWN0aXZlXSA9IGNyZWF0ZVN0YXRlKHNldHRpbmdzU2VydmljZS53YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5nZXQoKSk7XG4gICAgICAgIHRoaXMucG9sbGluZyA9IGNyZWF0ZVBvbGwodHJ1ZSwgcG9sbFRpbWUsIChwcmV2OiBib29sZWFuKSA9PiAhcHJldik7XG5cbiAgICAgICAgdGhpcy51bnN1YiA9IHNldHRpbmdzU2VydmljZS53YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5fc2V0VGltZXJBY3RpdmUoc2V0dGluZ3NTZXJ2aWNlLndhbGxwYXBlclNlbGVjdG9yQWN0aXZlLmdldCgpKSk7XG4gICAgICAgIHRoaXMuc2V0SW1hZ2VzKHRoaXMucmVhZEltYWdlRmlsZXMocGF0aCkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaXNJbWFnZUZpbGUoZmlsZW5hbWU6IHN0cmluZykge1xuICAgICAgICBjb25zdCBleHRlbnNpb24gPSBmaWxlbmFtZS50b0xvd2VyQ2FzZSgpLnN1YnN0cmluZyhmaWxlbmFtZS5sYXN0SW5kZXhPZignLicpKTtcbiAgICAgICAgcmV0dXJuIGltYWdlRXh0ZW5zaW9ucy5pbmNsdWRlcyhleHRlbnNpb24pID8gZXh0ZW5zaW9uOiBudWxsO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVhZEltYWdlRmlsZXMoZGlyZWN0b3J5UGF0aDogc3RyaW5nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBmaWxlID0gR2lvLkZpbGUubmV3X2Zvcl9wYXRoKGRpcmVjdG9yeVBhdGgpO1xuXG4gICAgICAgICAgICBpZiAoIWZpbGUucXVlcnlfZXhpc3RzKG51bGwpKSByZXR1cm4gW107XG5cbiAgICAgICAgICAgIGNvbnN0IGVudW1lcmF0b3IgPSBmaWxlLmVudW1lcmF0ZV9jaGlsZHJlbignc3RhbmRhcmQ6Om5hbWUsc3RhbmRhcmQ6OnR5cGUnLCBHaW8uRmlsZVF1ZXJ5SW5mb0ZsYWdzLk5PTkUsIG51bGwpO1xuXG4gICAgICAgICAgICBjb25zdCBpbWFnZXM6IHN0cmluZ1tdID0gW107XG4gICAgICAgICAgICBsZXQgZmlsZUluZm87XG5cbiAgICAgICAgICAgIHdoaWxlICgoZmlsZUluZm8gPSBlbnVtZXJhdG9yLm5leHRfZmlsZShudWxsKSkgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpZiAoZmlsZUluZm8uZ2V0X2ZpbGVfdHlwZSgpID09PSBHaW8uRmlsZVR5cGUuUkVHVUxBUikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWxlTmFtZSA9IGZpbGVJbmZvLmdldF9uYW1lKCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4dCA9IHRoaXMuaXNJbWFnZUZpbGUoZmlsZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBpZihleHQpIGltYWdlcy5wdXNoKGZpbGVOYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGVudW1lcmF0b3IuY2xvc2UobnVsbCk7XG4gICAgICAgICAgICByZXR1cm4gaW1hZ2VzO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignXHUyNzRDIEVycm8gR2lvIGFvIGxlciBkaXJldFx1MDBGM3JpbzonLCBkaXJlY3RvcnlQYXRoLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHRpbWVyQWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdGltZXJBY3RpdmU7XG4gICAgfVxuXG4gICAgcHVibGljIFNlbGVjdG9ySW5kaWNhdG9yKGdka21vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gICAgICAgIGNvbnN0IGNsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fUFJJTUFSWSB9KTtcbiAgICAgICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoJ3ByZXNzZWQnLCAoKSA9PiB0aGlzLl9zZXRUaW1lckFjdGl2ZSghdGhpcy5fdGltZXJBY3RpdmUuZ2V0KCkpKTtcbiAgICAgICAgY29uc3QgdW5zdWIgPSB0aGlzLnBvbGxpbmcuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLl90aW1lckFjdGl2ZS5nZXQoKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbm5lY3RvciA9IGdka21vbml0b3IuZ2V0X2Nvbm5lY3RvcigpO1xuICAgICAgICAgICAgICAgIGlmKGNvbm5lY3Rvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWdBcnJheSA9IHRoaXMuaW1hZ2VzLmdldCgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWcgPSBpbWdBcnJheVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbWdBcnJheS5sZW5ndGgpXTtcbiAgICAgICAgICAgICAgICAgICAgU3d3dy5tYW5hZ2VyLnNldFdhbGxwYXBlcihgJHtwYXRofS8ke2ltZ31gLCB7IG91dHB1dHM6IGNvbm5lY3RvciwgdHJhbnNpdGlvblR5cGU6IFN3d3cuVHJhbnNpdGlvblR5cGUuR1JPVyB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBleGVjQXN5bmMoYG5vdGlmeS1zZW5kIFwiTW9uaXRvciAke2dka21vbml0b3IuZ2V0X2Rlc2NyaXB0aW9uKCl9IG5cdTAwRTNvIHRlbSBjb25lY3RvclwiIFwiJHtnZGttb25pdG9yLmdldF9kZXNjcmlwdGlvbigpfSBuXHUwMEUzbyB0ZW0gY29uZWN0b3IuXCJgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1snU2VsZWN0b3JJbmRpY2F0b3InXX1cbiAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgICAgICQ9eygpID0+IFdhbGxwYXBlclNlbGVjdG9yQ2xhc3Mud2lkZ2V0Q291bnQgKz0gMX1cbiAgICAgICAgICAgICAgICBvbkRlc3Ryb3k9e1xuICAgICAgICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBXYWxscGFwZXJTZWxlY3RvckNsYXNzLndpZGdldENvdW50IC09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChXYWxscGFwZXJTZWxlY3RvckNsYXNzLndpZGdldENvdW50IDw9IDApIHRoaXMudW5zdWIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bnN1YigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9eydTZWxldG9yIGRlIFBhcFx1MDBFOWlzIGRlIFBhcmVkZSd9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiT3B0aW9uXCIsIFwiVG9nZ2xlQWN0aXZlXCJdfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17dGhpcy5fdGltZXJBY3RpdmUuYXModGEgPT4gYEVzdGFkbzogJHt0YSA/ICdBdGl2byc6ICdEZXNhdGl2YWRvJ31gKX0gJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKSB9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgd2FsbHBhcGVyU2VsZWN0b3IgPSBuZXcgV2FsbHBhcGVyU2VsZWN0b3JDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgd2FsbHBhcGVyU2VsZWN0b3I7XG4iLCAiaW1wb3J0IHsgZXhlYywgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgU3d3dyB7XG4gICAgZXhwb3J0IGVudW0gUmVzaXplIHtcbiAgICAgICAgTk8gPSAnbm8nLFxuICAgICAgICBDUk9QID0gJ2Nyb3AnLFxuICAgICAgICBGSVQgPSAnZml0JyxcbiAgICAgICAgU1RSRVRDSCA9ICdzdHJldGNoJ1xuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIEZpbHRlciB7XG4gICAgICAgIE5FQVJFU1QgPSAnTmVhcmVzdCcsXG4gICAgICAgIEJJTElORUFSID0gJ0JpbGluZWFyJyxcbiAgICAgICAgQ0FUTVVMTFJPTSA9ICdDYXRtdWxsUm9tJyxcbiAgICAgICAgTUlUQ0hFTEwgPSAnTWl0Y2hlbGwnLFxuICAgICAgICBMQU5DWk9TMyA9ICdMYW5jem9zMydcbiAgICB9XG5cbiAgICBleHBvcnQgZW51bSBUcmFuc2l0aW9uVHlwZSB7XG4gICAgICAgIE5PTkUgPSAnbm9uZScsXG4gICAgICAgIFNJTVBMRSA9ICdzaW1wbGUnLFxuICAgICAgICBGQURFID0gJ2ZhZGUnLFxuICAgICAgICBMRUZUID0gJ2xlZnQnLFxuICAgICAgICBSSUdIVCA9ICdyaWdodCcsXG4gICAgICAgIFRPUCA9ICd0b3AnLFxuICAgICAgICBCT1RUT00gPSAnYm90dG9tJyxcbiAgICAgICAgV0lQRSA9ICd3aXBlJyxcbiAgICAgICAgV0FWRSA9ICd3YXZlJyxcbiAgICAgICAgR1JPVyA9ICdncm93JyxcbiAgICAgICAgQ0VOVEVSID0gJ2NlbnRlcicsXG4gICAgICAgIEFOWSA9ICdhbnknLFxuICAgICAgICBSQU5ET00gPSAncmFuZG9tJ1xuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIFRyYW5zaXRpb25Qb3Mge1xuICAgICAgICBDRU5URVIgPSAnY2VudGVyJyxcbiAgICAgICAgVE9QID0gJ3RvcCcsXG4gICAgICAgIExFRlQgPSAnbGVmdCcsXG4gICAgICAgIFJJR0hUID0gJ3JpZ2h0JyxcbiAgICAgICAgQk9UVE9NID0gJ2JvdHRvbScsXG4gICAgICAgIFRPUF9MRUZUID0gJ3RvcC1sZWZ0JyxcbiAgICAgICAgVE9QX1JJR0hUID0gJ3RvcC1yaWdodCcsXG4gICAgICAgIEJPVFRPTV9MRUZUID0gJ2JvdHRvbS1sZWZ0JyxcbiAgICAgICAgQk9UVE9NX1JJR0hUID0gJ2JvdHRvbS1yaWdodCdcbiAgICB9XG5cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgUGFyc2VyT3B0aW9ucyB7XG4gICAgICAgIHJlc2l6ZTogUmVzaXplO1xuICAgICAgICBmaWx0ZXI6IEZpbHRlcjtcbiAgICAgICAgdHJhbnNpdGlvblR5cGU6IFRyYW5zaXRpb25UeXBlO1xuICAgICAgICB0cmFuc2l0aW9uUG9zOiBUcmFuc2l0aW9uUG9zO1xuICAgICAgICBvdXRwdXRzOiBzdHJpbmc7XG4gICAgICAgIHRyYW5zaXRpb25TdGVwOiBudW1iZXI7XG4gICAgICAgIHRyYW5zaXRpb25EdXJhbnRpb246IG51bWJlcjtcbiAgICAgICAgdHJhbnNpdGlvbkFuZ2xlOiBudW1iZXI7XG4gICAgICAgIGludmVydFk6IGJvb2xlYW47XG4gICAgICAgIHRyYW5zaXRpb25XYXZlOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH07XG4gICAgfVxuXG5cbiAgICBjbGFzcyBNYW5hZ2VyIHtcbiAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9hc3luYygnc3d3dyBjbGVhcicpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIHNldFdhbGxwYXBlcihwYXRoOiBzdHJpbmcsIG9wdGlvbnM/OiBQYXJ0aWFsPFBhcnNlck9wdGlvbnM+KTogYm9vbGVhbiB7XG4gICAgICAgICAgICBsZXQgY29tbWFuZCA9IGBzd3d3IGltZyAke3BhdGh9YDtcbiAgICAgICAgICAgIGlmKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnJlc2l6ZSkgY29tbWFuZCArPSBgIC0tcmVzaXplICR7b3B0aW9ucy5yZXNpemV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLmZpbHRlcikgY29tbWFuZCArPSBgIC1mICR7b3B0aW9ucy5maWx0ZXJ9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLmludmVydFkpIGNvbW1hbmQgKz0gYCAtLWludmVydC15ICR7b3B0aW9ucy5pbnZlcnRZLnZhbHVlT2YoKX1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvbkFuZ2xlKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLWFuZ2xlICR7b3B0aW9ucy50cmFuc2l0aW9uQW5nbGV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25EdXJhbnRpb24pIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tZHVyYXRpb24gJHtvcHRpb25zLnRyYW5zaXRpb25EdXJhbnRpb259YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25Qb3MpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tcG9zICR7b3B0aW9ucy50cmFuc2l0aW9uUG9zfWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy50cmFuc2l0aW9uU3RlcCkgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi1zdGVwICR7b3B0aW9ucy50cmFuc2l0aW9uU3RlcH1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvblR5cGUpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tdHlwZSAke29wdGlvbnMudHJhbnNpdGlvblR5cGV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25XYXZlKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLXdhdmUgJHtvcHRpb25zLnRyYW5zaXRpb25XYXZlLnh9LCR7b3B0aW9ucy50cmFuc2l0aW9uV2F2ZS55fWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy5vdXRwdXRzKSBjb21tYW5kICs9IGAgLS1vdXRwdXRzICR7b3B0aW9ucy5vdXRwdXRzfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9hc3luYyhjb21tYW5kKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGV4cG9ydCBjb25zdCBtYW5hZ2VyID0gbmV3IE1hbmFnZXI7XG59XG4iLCAiaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IENhdmFWaXNpYmxpdHkgfSBmcm9tIFwiLi4vdXRpbHMvQ2F2YUVudW1cIjtcbmltcG9ydCBzZXR0aW5nc1NlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL1NldHRpbmdzXCI7XG5pbXBvcnQgd2FsbHBhcGVyU2VsZWN0b3IgZnJvbSBcIi4vV2FsbHBhcGVyU2VsZWN0b3JcIjtcblxuY2xhc3MgQ29udHJvbENlbnRlckNsYXNzIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZXR1cEJ1dHRvbihzZWxmOiBHdGsuV2lkZ2V0LCBjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCBjbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1BSSU1BUlkgfSk7XG4gICAgICAgIGNvbnN0IGhhbmRsZXIgPSBjbGljay5jb25uZWN0KCdwcmVzc2VkJywgY2FsbGJhY2spO1xuICAgICAgICBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKTtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IGNsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcikpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZm9ybWF0Q2F2YVZpc2libGl0eVRleHQoaTogQ2F2YVZpc2libGl0eSkge1xuICAgICAgICBzd2l0Y2goaSkge1xuICAgICAgICAgICAgY2FzZSBDYXZhVmlzaWJsaXR5LkFMV0FZUzpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ0NhdmEgc2VtcHJlIGF0aXZvJztcbiAgICAgICAgICAgIGNhc2UgQ2F2YVZpc2libGl0eS5ESVNBQkxFRDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ0NhdmEgZGVzYXRpdmFkbydcbiAgICAgICAgICAgIGNhc2UgQ2F2YVZpc2libGl0eS5OT19DTElFTlRTOlxuICAgICAgICAgICAgICAgIHJldHVybiAnQ2F2YSBjb25kaWNpb25hbCdcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0IFRvZ2dsZVZpc2libGVDb21wb25lbnRzKCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gc2V0dGluZ3NTZXJ2aWNlLnNhdmVPcHRpb25zKCkpO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJUb2dnbGVWaXNpYmxlQ29tcG9uZW50c1wiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfSBsYWJlbD17J0FuaW1hXHUwMEU3XHUwMEY1ZXMgZSBjb21wb25lbnRlcyd9IC8+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlRvZ2dsZUFuaW1hdGlvbnNcIiwgXCJPcHRpb25cIl19XG4gICAgICAgICAgICAgICAgICAgICQ9e3NlbGYgPT4gdGhpcy5zZXR1cEJ1dHRvbihzZWxmLCAoKSA9PiBzZXR0aW5nc1NlcnZpY2Uuc2V0QW5pbWF0aW9uc0VuYWJsZWQgPSAhc2V0dGluZ3NTZXJ2aWNlLmFuaW1hdGlvbnNFbmFibGVkLmdldCgpKX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3NldHRpbmdzU2VydmljZS5hbmltYXRpb25zRW5hYmxlZC5hcyhhZSA9PiBhZSA/IFwiRGVzYXRpdmFyIGFuaW1hXHUwMEU3XHUwMEY1ZXNcIiA6IFwiQXRpdmFyIGFuaW1hXHUwMEU3XHUwMEY1ZXNcIil9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlRvZ2dsZUNhdmFcIiwgXCJPcHRpb25cIl19XG4gICAgICAgICAgICAgICAgICAgICQ9e3NlbGYgPT4gdGhpcy5zZXR1cEJ1dHRvbihzZWxmLCAoKSA9PiBzZXR0aW5nc1NlcnZpY2UudG9nZ2xlQ2F2YVZpc2liaWxpdHlTdGF0ZSgpKX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3NldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5hcyh2cyA9PiB0aGlzLmZvcm1hdENhdmFWaXNpYmxpdHlUZXh0KHZzKSl9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIENvbnRyb2xDZW50ZXJQb3BvdmVyKGdka21vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8cG9wb3Zlcj5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkNvbnRyb2xDZW50ZXJQb3BvdmVyXCJdfT5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLlRvZ2dsZVZpc2libGVDb21wb25lbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAge3dhbGxwYXBlclNlbGVjdG9yLlNlbGVjdG9ySW5kaWNhdG9yKGdka21vbml0b3IpfVxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgQ29udHJvbENlbnRlcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b24gY3NzQ2xhc3Nlcz17W1wiQ29udHJvbENlbnRlclwiXX0gcG9wb3Zlcj17dGhpcy5Db250cm9sQ2VudGVyUG9wb3ZlcihnZGttb25pdG9yKSBhcyBHdGsuUG9wb3Zlcn0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snTGFiZWwnXX0gbGFiZWw9eydcdURCODJcdURDQzcnfSAvPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgY29udHJvbENlbnRlciA9IG5ldyBDb250cm9sQ2VudGVyQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRyb2xDZW50ZXI7XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kP3ZlcnNpb249MC4xXCI7XG5pbXBvcnQgaHlwcmxhbmRTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9IeXBybGFuZFwiO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkLCBGb3IsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcblxuY2xhc3MgV29ya3NwYWNlc0NsYXNzIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IG1heFdvcmtzcGFjZXM6IG51bWJlciA9IDEwO1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcblxuICAgIH1cblxuICAgIHByaXZhdGUgV29ya3NwYWNlKHsgd29ya3NwYWNlLCBpc0luUG9wb3ZlciA9IGZhbHNlIH06IHsgd29ya3NwYWNlOiBBc3RhbEh5cHJsYW5kLldvcmtzcGFjZSwgaXNJblBvcG92ZXI6IGJvb2xlYW4gfSkge1xuICAgICAgICBjb25zdCBjbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKCk7XG4gICAgICAgIGNvbnN0IGhhbmRsZXJfaWQgPSBjbGljay5jb25uZWN0KFwicHJlc3NlZFwiLCAoKSA9PiB7IGlmKGh5cHJsYW5kU2VydmljZS5mb2N1c2VkV29ya3NwYWNlLmdldCgpLmdldF9pZCgpICE9PSB3b3Jrc3BhY2UuZ2V0X2lkKCkpIHdvcmtzcGFjZS5mb2N1cygpIH0pO1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4geyBpZiAoaGFuZGxlcl9pZCkgY2xpY2suZGlzY29ubmVjdChoYW5kbGVyX2lkKSB9KTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKX1cbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtoeXBybGFuZFNlcnZpY2UuZm9jdXNlZFdvcmtzcGFjZS5hcyhmb2N1c2VkID0+IFtcIldvcmtzcGFjZVwiLCB3b3Jrc3BhY2UuZ2V0X2lkKCkgPT09IGZvY3VzZWQuZ2V0X2lkKCkgPyBcIkFjdGl2ZVwiIDogXCJJbmFjdGl2ZVwiXSl9XG4gICAgICAgICAgICAgICAgbGFiZWw9e2Ake3dvcmtzcGFjZS5nZXRfaWQoKX1gfSB3aWR0aENoYXJzPXszfSBtYXhXaWR0aENoYXJzPXszfSBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9IHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBNYWluV29ya3NwYWNlKHdvcmtzcGFjZTogQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2UpIHtcbiAgICAgICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljaygpO1xuICAgICAgICBjb25zdCBoYW5kbGVyID0gY2xpY2suY29ubmVjdChcInByZXNzZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHdvcmtzcGFjZS5nZXRfaWQoKSAhPT0gaHlwcmxhbmRTZXJ2aWNlLmZvY3VzZWRXb3Jrc3BhY2UuZ2V0KCkuZ2V0X2lkKCkpIHdvcmtzcGFjZS5mb2N1cygpO1xuICAgICAgICB9KTtcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4geyBpZiAoY2xpY2spIGNsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcikgfSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAkPXsoc2VsZikgPT4gc2VsZi5hZGRfY29udHJvbGxlcihjbGljayl9XG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Y3JlYXRlQ29tcHV0ZWQoW2h5cHJsYW5kU2VydmljZS5mb2N1c2VkV29ya3NwYWNlLCBjcmVhdGVCaW5kaW5nKHdvcmtzcGFjZSwgXCJpZFwiKV0sIChmb2N1c2VkLCBpZCkgPT4gW1wiV29ya3NwYWNlXCIsIGlkID09PSBmb2N1c2VkPy5nZXRfaWQoKSA/IFwiQWN0aXZlXCIgOiBcIkluYWN0aXZlXCJdKX1cbiAgICAgICAgICAgICAgICBsYWJlbD17d29ya3NwYWNlLmdldF9pZCgpLnRvU3RyaW5nKCl9XG4gICAgICAgICAgICAgICAgd2lkdGhDaGFycz17MX1cbiAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXsxfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgV29ya3NwYWNlUG9wb3Zlcih7IHRoZVJlc3QgfTogeyB0aGVSZXN0OiBBY2Nlc3NvcjxBc3RhbEh5cHJsYW5kLldvcmtzcGFjZVtdPiB9KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8cG9wb3ZlciBjc3NDbGFzc2VzPXtbXCJXb3Jrc3BhY2VQb3BvdmVyXCJdfT5cbiAgICAgICAgICAgICAgICA8R3RrLkZsb3dCb3ggbWF4Q2hpbGRyZW5QZXJMaW5lPXs0fT5cbiAgICAgICAgICAgICAgICAgICAgPEZvciBlYWNoPXt0aGVSZXN0fSBjaGlsZHJlbj17aXRlbSA9PiB0aGlzLldvcmtzcGFjZSh7IHdvcmtzcGFjZTogaXRlbSwgaXNJblBvcG92ZXI6IHRydWUgfSl9IC8+XG4gICAgICAgICAgICAgICAgPC9HdGsuRmxvd0JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIE1vcmVXb3Jrc3BhY2VzQnV0dG9uKHsgdGhlUmVzdCB9OiB7IHRoZVJlc3Q6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlW10+IH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxtZW51YnV0dG9uIGNzc0NsYXNzZXM9e1tcIk1vcmVXb3Jrc3BhY2VzQnV0dG9uXCJdfSBzZW5zaXRpdmU9e3RoZVJlc3QuYXModHIgPT4gdHIubGVuZ3RoID4gMCl9IHBvcG92ZXI9e3RoaXMuV29ya3NwYWNlUG9wb3Zlcih7IHRoZVJlc3Q6IHRoZVJlc3QgfSkgYXMgR3RrLlBvcG92ZXJ9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17J1x1REI4MVx1REQ0Rid9IC8+XG4gICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIFdvcmtzcGFjZXMoeyBtb25pdG9yIH06IHsgbW9uaXRvcjogQXN0YWxIeXBybGFuZC5Nb25pdG9yIH0pIHtcbiAgICAgICAgY29uc3QgbW9uaXRvcldvcmtzcGFjZXMgPSBoeXBybGFuZFNlcnZpY2Uud29ya3NwYWNlcy5hcyh3cyA9PiB7XG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IHdzLmZpbHRlcigod29ya3NwYWNlKSA9PiB3b3Jrc3BhY2UuZ2V0X21vbml0b3IoKSA9PT0gbW9uaXRvcik7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1haW46IGZpbHRlcmVkLnNsaWNlKDAsIHRoaXMubWF4V29ya3NwYWNlcyksXG4gICAgICAgICAgICAgICAgdGhlUmVzdDogZmlsdGVyZWQuc2xpY2UodGhpcy5tYXhXb3Jrc3BhY2VzKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiV29ya3NwYWNlc1wiXX0+XG4gICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgICAgPEZvciBlYWNoPXttb25pdG9yV29ya3NwYWNlcy5hcyhtdyA9PiBtdy5tYWluKX0gY2hpbGRyZW49eyh3OiBBc3RhbEh5cHJsYW5kLldvcmtzcGFjZSkgPT4gdGhpcy5NYWluV29ya3NwYWNlKHcpfSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIHt0aGlzLk1vcmVXb3Jrc3BhY2VzQnV0dG9uKHsgdGhlUmVzdDogbW9uaXRvcldvcmtzcGFjZXMuYXMoKHsgdGhlUmVzdCB9KSA9PiB0aGVSZXN0KSB9KX1cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgd29ya3NwYWNlcyA9IG5ldyBXb3Jrc3BhY2VzQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IHdvcmtzcGFjZXM7XG4iLCAiaW1wb3J0IHsgQXN0YWwsIEd0aywgR2RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgc3lzdGVtTW9uaXRvciBmcm9tIFwiLi4vbW9kdWxlcy9TeXN0ZW1Nb25pdG9yXCI7XG5pbXBvcnQgc3lzdGVtVHJheSBmcm9tIFwiLi4vbW9kdWxlcy9TeXN0ZW1UcmF5XCI7XG5pbXBvcnQgbWVkaWEgZnJvbSBcIi4uL21vZHVsZXMvTWVkaWFcIjtcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IGRhdGVUaW1lIGZyb20gXCIuLi9tb2R1bGVzL0RhdGVUaW1lXCI7XG5pbXBvcnQgaHlwcmxhbmRTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9IeXBybGFuZFwiO1xuaW1wb3J0IGF1ZGlvQ29udHJvbCBmcm9tIFwiLi4vbW9kdWxlcy9BdWRpb0NvbnRyb2xcIjtcbmltcG9ydCBjb250cm9sQ2VudGVyIGZyb20gXCIuLi9tb2R1bGVzL0NvbnRyb2xDZW50ZXJcIjtcbmltcG9ydCB3b3Jrc3BhY2VzIGZyb20gXCIuLi9tb2R1bGVzL1dvcmtzcGFjZXNcIjtcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFyKHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pIHtcbiAgICBjb25zdCB7IFRPUCwgTEVGVCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvcjtcbiAgICBjb25zdCBoeXByTW9uaXRvciA9IGh5cHJsYW5kU2VydmljZS5nZXRIeXBybGFuZE1vbml0b3IoZ2RrbW9uaXRvcik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8d2luZG93XG4gICAgICAgICAgICBuYW1lc3BhY2U9J0JhcidcbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkJhclwiXX1cbiAgICAgICAgICAgIHZpc2libGVcbiAgICAgICAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5FWENMVVNJVkV9XG4gICAgICAgICAgICBsYXllcj17QXN0YWwuTGF5ZXIuQk9UVE9NfVxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGFuY2hvcj17VE9QIHwgUklHSFQgfCBMRUZUfVxuICAgICAgICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICAgICAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgICA+XG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkJhclwiXX0gaGFsaWduPXtHdGsuQWxpZ24uRklMTH0gaG9tb2dlbmVvdXM+XG4gICAgICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH0+XG4gICAgICAgICAgICAgICAgICAgIHtzeXN0ZW1UcmF5LlN5c3RlbVRyYXl9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9PlxuICAgICAgICAgICAgICAgICAgICB7bWVkaWEuTWVkaWF9XG4gICAgICAgICAgICAgICAgICAgIHt3b3Jrc3BhY2VzLldvcmtzcGFjZXMoeyBtb25pdG9yOiBoeXByTW9uaXRvciB9KX1cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8Ym94IGhhbGlnbj17R3RrLkFsaWduLkVORH0+XG4gICAgICAgICAgICAgICAgICAgIHtkYXRlVGltZS5EYXRlVGltZX1cbiAgICAgICAgICAgICAgICAgICAge2F1ZGlvQ29udHJvbC5BdWRpb0NvbnRyb2x9XG4gICAgICAgICAgICAgICAgICAgIHtzeXN0ZW1Nb25pdG9yLlN5c3RlbU1vbml0b3J9XG4gICAgICAgICAgICAgICAgICAgIHtjb250cm9sQ2VudGVyLkNvbnRyb2xDZW50ZXIoZ2RrbW9uaXRvcil9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKTtcbn1cbiIsICJpbXBvcnQgc2V0dGluZ3NTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9TZXR0aW5nc1wiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgR3NrIGZyb20gJ2dpOi8vR3NrJztcbmltcG9ydCBBc3RhbENhdmEgZnJvbSBcImdpOi8vQXN0YWxDYXZhP3ZlcnNpb249MC4xXCI7XG5pbXBvcnQgR09iamVjdCBmcm9tICdnaTovL0dPYmplY3QnO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgaHlwcmxhbmRTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9IeXBybGFuZFwiO1xuaW1wb3J0IEFzdGFsSHlwcmxhbmQgZnJvbSBcImdpOi8vQXN0YWxIeXBybGFuZD92ZXJzaW9uPTAuMVwiO1xuaW1wb3J0IHsgQ2F2YVZpc2libGl0eSB9IGZyb20gXCIuLi91dGlscy9DYXZhRW51bVwiO1xuXG5jb25zdCBDYXZhQ29uZmlnID0ge1xuICAgIGF1dG9zZW5zOiB0cnVlLFxuICAgIGJhcnM6IDI1LFxuICAgIGZyYW1lcmF0ZTogNjAsXG4gICAgaW5wdXQ6IEFzdGFsQ2F2YS5JbnB1dC5QSVBFV0lSRSxcbiAgICBub2lzZVJlZHVjdGlvbjogMC43NyxcbiAgICBzZW5zaXRpdml0eTogMC43NSxcbiAgICBzdGVyZW86IGZhbHNlLFxufTtcblxuY2xhc3MgQ2F2YVdpZGdldCBleHRlbmRzIEd0ay5EcmF3aW5nQXJlYSB7XG4gICAgcHJpdmF0ZSB2YWx1ZXNBY2Nlc3NvcjogQWNjZXNzb3I8bnVtYmVyW10+O1xuICAgIHByaXZhdGUgdW5zdWJBY2Nlc3NvcjogKCkgPT4gdm9pZDtcblxuICAgIGNvbnN0cnVjdG9yKHY6IEFjY2Vzc29yPG51bWJlcltdPikge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnNldF9oZXhwYW5kKHRydWUpO1xuICAgICAgICB0aGlzLnNldF92ZXhwYW5kKHRydWUpO1xuICAgICAgICB0aGlzLnZhbHVlc0FjY2Vzc29yID0gdi5hcyh2ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuZ2V0X2FsbG9jYXRlZF9oZWlnaHQoKTtcbiAgICAgICAgICAgIHJldHVybiB2Lm1hcChpID0+IGhlaWdodCAqICgxIC0gaSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy51bnN1YkFjY2Vzc29yID0gdGhpcy52YWx1ZXNBY2Nlc3Nvci5zdWJzY3JpYmUoKCkgPT4gdGhpcy5xdWV1ZV9kcmF3KCkpO1xuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB0aGlzLnVuc3ViQWNjZXNzb3IoKSk7XG4gICAgfVxuXG4gICAgb3ZlcnJpZGUgdmZ1bmNfc25hcHNob3Qoc25hcHNob3Q6IEd0ay5TbmFwc2hvdCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuZ2V0X21hcHBlZCgpKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghdGhpcy52aXNpYmxlKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRfYWxsb2NhdGVkX3dpZHRoKCk7XG4gICAgICAgICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmdldF9hbGxvY2F0ZWRfaGVpZ2h0KCk7XG5cbiAgICAgICAgICAgIGlmICh3aWR0aCA8PSAwIHx8IGhlaWdodCA8PSAwKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMudmFsdWVzQWNjZXNzb3IuZ2V0KCk7XG5cbiAgICAgICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IGJhcldpZHRoID0gd2lkdGggLyAodmFsdWVzLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgY29uc3QgY29sb3IgPSB0aGlzLnBhcmVudC5nZXRfY29sb3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgR3NrLlBhdGhCdWlsZGVyKCk7XG4gICAgICAgICAgICBidWlsZGVyLm1vdmVfdG8oMCwgdmFsdWVzWzBdKTtcbiAgICAgICAgICAgIGNvbnN0IGludlNpeCA9IDEgLyA2O1xuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwMHggPSAoaSAtIDEpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDB5ID0gdmFsdWVzW01hdGgubWF4KDAsIGkgLSAxKV07XG4gICAgICAgICAgICAgICAgY29uc3QgcDF4ID0gaSAqIGJhcldpZHRoO1xuICAgICAgICAgICAgICAgIGNvbnN0IHAxeSA9IHZhbHVlc1tpXTtcbiAgICAgICAgICAgICAgICBjb25zdCBwMnggPSAoaSArIDEpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDJ5ID0gdmFsdWVzW2kgKyAxXTtcbiAgICAgICAgICAgICAgICBjb25zdCBwM3ggPSAoaSArIDIpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDN5ID0gdmFsdWVzW01hdGgubWluKHZhbHVlcy5sZW5ndGggLSAxLCBpICsgMildO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgYzF4ID0gcDF4ICsgKHAyeCAtIHAweCkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzF5ID0gcDF5ICsgKHAyeSAtIHAweSkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzJ4ID0gcDJ4IC0gKHAzeCAtIHAxeCkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzJ5ID0gcDJ5IC0gKHAzeSAtIHAxeSkgKiBpbnZTaXg7XG5cbiAgICAgICAgICAgICAgICBidWlsZGVyLmN1YmljX3RvKGMxeCwgYzF5LCBjMngsIGMyeSwgcDJ4LCBwMnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBidWlsZGVyLmxpbmVfdG8od2lkdGgsIGhlaWdodCk7XG4gICAgICAgICAgICBidWlsZGVyLmxpbmVfdG8oMCwgaGVpZ2h0KTtcbiAgICAgICAgICAgIGJ1aWxkZXIuY2xvc2UoKTtcblxuICAgICAgICAgICAgc25hcHNob3QuYXBwZW5kX2ZpbGwoYnVpbGRlci50b19wYXRoKCksIEdzay5GaWxsUnVsZS5XSU5ESU5HLCBjb2xvcik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvIG5vIHNuYXBzaG90IGRvIENhdmE6XCIsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgX2NhdmEgPSBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6ICdDYXZhJyB9LCBDYXZhV2lkZ2V0KTtcblxuY2xhc3MgQ2F2YUNsYXNzIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IEFzdGFsQ2F2YS5DYXZhIHwgbnVsbDtcbiAgICBwcml2YXRlIF92YWx1ZXM6IEFjY2Vzc29yPG51bWJlcltdPjtcbiAgICBwcml2YXRlIHN0YXRpYyB3aWRnZXRDb3VudDogbnVtYmVyID0gMDtcblxuICAgIHByaXZhdGUgX3Zpc2liaWxpdHlTdGF0ZTogQWNjZXNzb3I8Q2F2YVZpc2libGl0eT47XG4gICAgcHJpdmF0ZSBfc2V0VmlzaWJpbGl0eVN0YXRlOiBTZXR0ZXI8Q2F2YVZpc2libGl0eT47XG4gICAgcHJpdmF0ZSB1bnN1YjogKCkgPT4gdm9pZDtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy9bdGhpcy5fdmlzaWJpbGl0eVN0YXRlLCB0aGlzLl9zZXRWaXNpYmlsaXR5U3RhdGVdID0gY3JlYXRlU3RhdGU8Q2F2YVZpc2libGl0eT4oQ2F2YVZpc2libGl0eS5BTFdBWVMpO1xuICAgICAgICBbdGhpcy5fdmlzaWJpbGl0eVN0YXRlLCB0aGlzLl9zZXRWaXNpYmlsaXR5U3RhdGVdID0gY3JlYXRlU3RhdGU8Q2F2YVZpc2libGl0eT4oc2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlLmdldCgpKTtcblxuICAgICAgICB0aGlzLnVuc3ViID0gc2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlLnN1YnNjcmliZSgoKSA9PiB0aGlzLl9zZXRWaXNpYmlsaXR5U3RhdGUoc2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlLmdldCgpKSk7XG5cbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gQXN0YWxDYXZhLmdldF9kZWZhdWx0KCk7XG4gICAgICAgIGlmICh0aGlzLmRlZmF1bHQpIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfYXV0b3NlbnMoQ2F2YUNvbmZpZy5hdXRvc2Vucyk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2JhcnMoQ2F2YUNvbmZpZy5iYXJzKTtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfZnJhbWVyYXRlKENhdmFDb25maWcuZnJhbWVyYXRlKTtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfaW5wdXQoQ2F2YUNvbmZpZy5pbnB1dCk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X25vaXNlX3JlZHVjdGlvbihDYXZhQ29uZmlnLm5vaXNlUmVkdWN0aW9uKTtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdC5zZXRfc3RlcmVvKENhdmFDb25maWcuc3RlcmVvKTtcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlcyA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAndmFsdWVzJykuYXMoKHYpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZW5zID0gQ2F2YUNvbmZpZy5zZW5zaXRpdml0eTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHYubWFwKGkgPT4gaSAqIHNlbnMpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm8gbm8gaGFuZGxlciBnbG9iYWwgZG8gQ2F2YTpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiTlx1MDBFM28gZm9pIHBvc3NcdTAwRUR2ZWwgaW5pY2lhbGl6YXIgbyBDYXZhXCIpO1xuICAgICAgICAgICAgdGhpcy5fdmFsdWVzID0gY3JlYXRlU3RhdGU8bnVtYmVyW10+KFtdKVswXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzaG91bGRDYXZhQXBwZWFyKG1vbml0b3I6IEFzdGFsSHlwcmxhbmQuTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWQoW3RoaXMuX3Zpc2liaWxpdHlTdGF0ZSwgaHlwcmxhbmRTZXJ2aWNlLnZpc2liaWxpdHlBY2Nlc3Nvcihtb25pdG9yKV0sXG4gICAgICAgICAgICAodnMsIHZhKSA9PiB7XG4gICAgICAgICAgICAgICAgc3dpdGNoKHZzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgQ2F2YVZpc2libGl0eS5ESVNBQkxFRDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBDYXZhVmlzaWJsaXR5LkFMV0FZUzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIENhdmFWaXNpYmxpdHkuTk9fQ0xJRU5UUzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCB2aXNpYmlsaXR5U3RhdGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92aXNpYmlsaXR5U3RhdGU7XG4gICAgfVxuXG4gICAgcHVibGljIENhdmEoY3NzQ2xhc3Nlczogc3RyaW5nW10pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbLi4uY3NzQ2xhc3NlcywgXCJDYXZhXCJdfVxuICAgICAgICAgICAgICAgIG92ZXJmbG93PXtHdGsuT3ZlcmZsb3cuSElEREVOfVxuICAgICAgICAgICAgICAgICQ9eygpID0+IENhdmFDbGFzcy53aWRnZXRDb3VudCArPSAxfVxuICAgICAgICAgICAgICAgIG9uRGVzdHJveT17XG4gICAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIENhdmFDbGFzcy53aWRnZXRDb3VudCAtPSAxXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoQ2F2YUNsYXNzLndpZGdldENvdW50IDw9IDApIHRoaXMudW5zdWIoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7bmV3IF9jYXZhKHRoaXMuX3ZhbHVlcyl9XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IGNhdmEgPSBuZXcgQ2F2YUNsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBjYXZhO1xuIiwgImltcG9ydCB7IEFzdGFsLCBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIjtcbmltcG9ydCBjYXZhIGZyb20gXCIuLi9tb2R1bGVzL0NhdmFcIjtcbmltcG9ydCBoeXBybGFuZFNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL0h5cHJsYW5kXCI7XG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiYWdzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENhdmFPdmVybGF5KHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pIHtcbiAgICBjb25zdCB7IExFRlQsIFJJR0hULCBCT1RUT00gfSA9IEFzdGFsLldpbmRvd0FuY2hvcjtcbiAgICBjb25zdCBoeXByTW9uaXRvciA9IGh5cHJsYW5kU2VydmljZS5nZXRIeXBybGFuZE1vbml0b3IoZ2RrbW9uaXRvcik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8d2luZG93XG4gICAgICAgICAgICBuYW1lc3BhY2U9J0NhdmFPdmVybGF5J1xuICAgICAgICAgICAgbGF5ZXI9e0FzdGFsLkxheWVyLkJPVFRPTX1cbiAgICAgICAgICAgIGdka21vbml0b3I9e2dka21vbml0b3J9XG4gICAgICAgICAgICBhbmNob3I9e1JJR0hUIHwgTEVGVCB8IEJPVFRPTX1cbiAgICAgICAgICAgIHZpc2libGU9e2NhdmEuc2hvdWxkQ2F2YUFwcGVhcihoeXByTW9uaXRvcil9XG4gICAgICAgICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgICAgICAgICAgJD17KHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSl9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxib3ggaGFsaWduPXtHdGsuQWxpZ24uRklMTH0gdmFsaWduPXtHdGsuQWxpZ24uRU5EfSBoZWlnaHRSZXF1ZXN0PXtNYXRoLmZsb29yKGdka21vbml0b3IuZ2V0X2dlb21ldHJ5KCkuaGVpZ2h0ICogLjI1KX0+XG4gICAgICAgICAgICAgICAge2NhdmEuQ2F2YShbXCJDYXZhT3ZlcmxheVwiXSl9XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKTtcbn1cbiIsICJpbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBBc3RhbCwgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCI7XG5cbmZ1bmN0aW9uIEVudHJ5KHsgYmluZCwgYWN0aW9uIH06IHsgYmluZDogc3RyaW5nLCBhY3Rpb246IHN0cmluZyB9KSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ0VudHJ5J119IG92ZXJmbG93PXtHdGsuT3ZlcmZsb3cuSElEREVOfSBob21vZ2VuZW91cz5cbiAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJCaW5kXCJdfSBsYWJlbD17YmluZH0gLz5cbiAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJBY3Rpb25cIl19IGxhYmVsPXthY3Rpb259IC8+XG4gICAgICAgIDwvYm94PlxuICAgICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENoZWF0c2hlZXQoeyBnZGttb25pdG9yIH06IHsgZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IgfSkge1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICAgbmFtZT0nQ2hlYXRzaGVldCdcbiAgICAgICAgICAgIGxheWVyPXtBc3RhbC5MYXllci5PVkVSTEFZfVxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICAgICAgICAkPXsoc2VsZikgPT4gb25DbGVhbnVwKCgpID0+IHNlbGYuZGVzdHJveSgpKX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ0NoZWF0c2hlZXQnXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snVGl0bGUnXX0gbGFiZWw9eydDaGVhdHNoZWV0J30gLz5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snSGFsZiddfSBob21vZ2VuZW91cz5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ1NlY3Rpb24nXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiU3VidGl0bGVcIl19IGxhYmVsPXtcIkdlc3RcdTAwRTNvIGRlIENsaWVudGVzXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBQXCIgYWN0aW9uPVwiRml4YXIgY2xpZW50ZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFFcIiBhY3Rpb249XCJGZWNoYXIgcHJvZ3JhbWFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBWXCIgYWN0aW9uPVwiRmx1dHVhciBhIHRlbGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBGXCIgYWN0aW9uPVwiRm9yXHUwMEU3YXIgdGVsYSBjaGVpYVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIEpcIiBhY3Rpb249XCJEaXZpZGlyIGVtIER3aW5kbGVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBcdUYwNjJcIiBhY3Rpb249XCJNb3ZlciBmb2NvIHBhcmEgamFuZWxhIGFjaW1hXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgXHVGMDYzXCIgYWN0aW9uPVwiTW92ZXIgZm9jbyBwYXJhIGphbmVsYSBhYmFpeG9cIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBcdUYwNjBcIiBhY3Rpb249XCJNb3ZlciBmb2NvIHBhcmEgamFuZWxhIFx1MDBFMCBlc3F1ZXJkYVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFx1RjA2MVwiIGFjdGlvbj1cIk1vdmVyIGZvY28gcGFyYSBqYW5lbGEgXHUwMEUwIGRpcmVpdGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snU2VjdGlvbiddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX0gbGFiZWw9e1wiR2VzdFx1MDBFM28gZGUgV29ya3NwYWNlc1wifSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIkNUUkwgKyBTVVBFUiArIFx1RjA2MFwiIGFjdGlvbj1cIklyIHBhcmEgV29ya3NwYWNlIFx1MDBFMCBlc3F1ZXJkYVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJDVFJMICsgU1VQRVIgKyBcdUYwNjFcIiBhY3Rpb249XCJJciBwYXJhIFdvcmtzcGFjZSBcdTAwRTAgZGlyZWl0YVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJDVFJMICsgU0hJRlQgKyBTVVBFUiArIFx1RjA2MFwiIGFjdGlvbj1cIk1vdmVyIHBhcmEgV29ya3NwYWNlIFx1MDBFMCBlc3F1ZXJkYVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJDVFJMICsgU0hJRlQgKyBTVVBFUiArIFx1RjA2MVwiIGFjdGlvbj1cIk1vdmVyIHBhcmEgV29ya3NwYWNlIFx1MDBFMCBkaXJlaXRhXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgU1wiIGFjdGlvbj1cIklyIHBhcmEgV29ya3NwYWNlIGVzcGVjaWFsXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgU0hJRlQgKyBTXCIgYWN0aW9uPVwiTW92ZXIgcGFyYSB3b3Jrc3BhY2UgZXNwZWNpYWxcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydIYWxmJ119IGhvbW9nZW5lb3VzPlxuICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snU2VjdGlvbiddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX0gbGFiZWw9e1wiUHJvZ3JhbWFzIHBhZHJcdTAwRTNvXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBFbnRlclwiIGFjdGlvbj1cIlRlcm1pbmFsXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgUlwiIGFjdGlvbj1cIkxhblx1MDBFN2Fkb3IgZGUgYXBsaWNhdGl2b3NcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBFXCIgYWN0aW9uPVwiQWJyaXIgR2VyZW5jaWFkb3IgZGUgQXJxdWl2b3NcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBEXCIgYWN0aW9uPVwiQWJyaXIvRmVjaGFyIERvY2tcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBDXCIgYWN0aW9uPVwiQWJyaXIvRmVjaGFyIENoZWF0c2hlZXRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBFU0NcIiBhY3Rpb249XCJBYnJpci9mZWNoYXIgV2xvZ291dFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydTZWN0aW9uJ119IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfSBsYWJlbD17XCJPdXRyb3NcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJQUklOVFwiIGFjdGlvbj1cIkNhcHR1cmFyIHRlbGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBQUklOVFwiIGFjdGlvbj1cIkNhcHR1cmFyIHJlZ2lcdTAwRTNvXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgTVwiIGFjdGlvbj1cIkZlY2hhciBzZXNzXHUwMEUzb1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIExcIiBhY3Rpb249XCJCbG9xdWVhciBhIHRlbGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvd2luZG93PlxuICAgICk7XG59XG4iLCAiaW1wb3J0IHN0eWxlIGZyb20gXCIuL3N0eWxlcy9pbmRleC5zY3NzXCI7XG5pbXBvcnQgQmFyIGZyb20gXCIuL3dpZGdldC9CYXJcIjtcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgRm9yLCBUaGlzIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IENhdmFPdmVybGF5IGZyb20gXCIuL3dpZGdldC9DYXZhT3ZlcmxheVwiO1xuaW1wb3J0IENoZWF0c2hlZXQgZnJvbSBcIi4vd2lkZ2V0L0NoZWF0c2hlZXRcIjtcblxuZnVuY3Rpb24gbWFpbigpIHtcbiAgICBjb25zdCBtb25pdG9ycyA9IGNyZWF0ZUJpbmRpbmcoYXBwLCBcIm1vbml0b3JzXCIpO1xuICAgIHJldHVybiAoXG4gICAgICAgIDxGb3IgZWFjaD17bW9uaXRvcnN9PlxuICAgICAgICAgICAge21vbml0b3IgPT4gKFxuICAgICAgICAgICAgICAgIDxUaGlzIHRoaXM9e2FwcH0+XG4gICAgICAgICAgICAgICAgICAgIDxCYXIgZ2RrbW9uaXRvcj17bW9uaXRvcn0gLz5cbiAgICAgICAgICAgICAgICAgICAgPENhdmFPdmVybGF5IGdka21vbml0b3I9e21vbml0b3J9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxDaGVhdHNoZWV0IGdka21vbml0b3I9e21vbml0b3J9IC8+XG4gICAgICAgICAgICAgICAgPC9UaGlzPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9Gb3I+XG4gICAgKTtcbn1cblxuYXBwLnN0YXJ0KHsgY3NzOiBzdHlsZSwgbWFpbjogbWFpbiB9KTtcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBQTs7O0FDQUEsT0FBTyxXQUFXO0FBQ2xCLE9BQU8sU0FBUztBQUNoQixPQUFPLFNBQVM7OztBQ0ZoQixPQUFPLGtCQUFrQjtBQUN6QixPQUFPLFVBQVU7OztBQ2FWLFNBQVMsa0JBQWtCLFNBQXlCO0FBQ3ZELE1BQUcsV0FBVyxNQUFNO0FBQ2hCLFdBQU8sR0FBRyxLQUFLLE1BQU0sVUFBVSxJQUFJLENBQUMsSUFBSSxLQUFL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QUVSO0FBRUEsWUFBSSxNQUFNLEVBQUUsS0FBSyxnQkFBTyxLQUFXLENBQUM7IiwKICAibmFtZXMiOiBbIkdPYmplY3QiLCAic2V0IiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJHT2JqZWN0IiwgIm1vZCIsICJHT2JqZWN0IiwgInJlbW92ZSIsICJBc3RhbElPIiwgIkFzdGFsSU8iLCAiaW50ZXJ2YWwiLCAic2V0IiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiR2lvIiwgIkdPYmplY3QiLCAiR3RrIiwgIkdpbyIsICJjc3MiLCAiR09iamVjdCIsICJpbmRleCIsICJHdGsiLCAiQXN0YWwiLCAiR0xpYiIsICJHdGsiLCAiQXN0YWwiLCAic25ha2VpZnkiLCAibW9kIiwgInBhdGNoIiwgIkh5cHJsYW5kIiwgIldwIiwgIkdPYmplY3QiLCAibWFpbiIsICJHdGsiLCAiR0xpYiIsICJBc3RhbCIsICJHTGliIiwgInBvbGxUaW1lIiwgIkdMaWIiLCAid29ya3NwYWNlcyIsICJHTGliIiwgIkdMaWIiLCAiR0xpYiIsICJBc3RhbCIsICJwYXRoIiwgInBhdGgiLCAiQXN0YWwiLCAiR0xpYiIsICJHaW8iLCAiR0xpYiIsICJHTGliIiwgIlN3d3ciLCAiUmVzaXplIiwgIkZpbHRlciIsICJUcmFuc2l0aW9uVHlwZSIsICJUcmFuc2l0aW9uUG9zIiwgInBhdGgiLCAicGF0aCIsICJHTGliIiwgInBvbGxUaW1lIiwgIkdpbyIsICJHT2JqZWN0IiwgInYiLCAiR09iamVjdCJdCn0K

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@