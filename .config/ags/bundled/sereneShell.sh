#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gc2-ags.js"

cat <<EOF | base64 --decode > $file
// sass:/home/itiro/.config/ags/styles/index.scss
var styles_default = '/* Catppuccin mocha colors */\n.ControlCenter, .Media, .Workspaces, .AudioControl, .CpuUsage, .Battery, .MemoryUsage, .DateTimeCalendar {\n  background: none;\n  padding: 4px;\n  margin: 2px;\n  border: none;\n  border-radius: 18px;\n}\n.ControlCenter *, .Media *, .Workspaces *, .AudioControl *, .CpuUsage *, .Battery *, .MemoryUsage *, .DateTimeCalendar * {\n  margin: 0px 2px;\n}\n\n.TrayItem, .Workspaces .Workspace, .Workspaces .MoreWorkspacesButton, .Mixer .MixerEntry .Icon {\n  border-radius: 100%;\n  min-width: 24px;\n  min-height: 24px;\n}\n\n.Mixer .MixerEntry .Slider {\n  border-radius: 20px;\n  min-width: 160px;\n  min-height: 20px;\n}\n\n.DateTimeCalendar {\n  font-weight: bold;\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar * {\n  all: unset;\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar button, .DateTimeCalendar .Calendar label.day-number, .DateTimeCalendar .Calendar label.other-month, .DateTimeCalendar .Calendar label.today {\n  border-radius: 50%;\n}\n.DateTimeCalendar .Calendar header {\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.DateTimeCalendar .Calendar button {\n  transition: all 0.3s ease;\n  background: none;\n}\n.DateTimeCalendar .Calendar button * {\n  color: #cdd6f4;\n}\n.DateTimeCalendar .Calendar button:hover {\n  background: #89b4fa;\n}\n.DateTimeCalendar .Calendar button:hover * {\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid {\n  background-color: rgba(69, 71, 90, 0.7);\n}\n.DateTimeCalendar .Calendar grid label.other-month {\n  opacity: 0.5;\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.other-month:hover {\n  background: #f5e0dc;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.day-number {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.DateTimeCalendar .Calendar grid label.day-number:hover {\n  background: #cba6f7;\n  color: #1e1e2e;\n}\n.DateTimeCalendar .Calendar grid label.today {\n  color: #1e1e2e;\n  background-color: #b4befe;\n}\n\n.MemoryUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.MemoryUsage * {\n  color: #fab387;\n}\n.MemoryUsage:hover {\n  background: #fab387;\n}\n.MemoryUsage:hover * {\n  color: #1e1e2e;\n}\n.MemoryUsage .Icon {\n  font-size: 20px;\n}\n\n.Battery {\n  border-radius: 20px;\n  transition: all 0.25s ease-in-out;\n}\n\n.BatteryNormal {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryNormal * {\n  color: #b4befe;\n}\n.BatteryNormal:hover {\n  background: #b4befe;\n}\n.BatteryNormal:hover * {\n  color: #11111b;\n}\n\n.BatteryCritical {\n  transition: all 0.3s ease;\n  background: none;\n}\n.BatteryCritical * {\n  color: #f38ba8;\n}\n.BatteryCritical:hover {\n  background: #f38ba8;\n}\n.BatteryCritical:hover * {\n  color: #11111b;\n}\n\n.BatteryPopover {\n  background-color: rgba(49, 50, 68, 0.8);\n  padding: 2px;\n  border-radius: 16px;\n}\n.BatteryPopover .Title, .BatteryPopover .BatteryLife, .BatteryPopover .ToggleButton {\n  margin: 2px;\n}\n.BatteryPopover .Title {\n  color: #cdd6f4;\n  font-weight: bold;\n}\n.BatteryPopover .BatteryLife {\n  color: #cdd6f4;\n}\n.BatteryPopover .ToggleButton {\n  margin: 2px 4px;\n  padding: 2px;\n  border-radius: 10px;\n  background: rgba(137, 180, 250, 0.75);\n  color: rgba(30, 30, 46, 0.75);\n  transition: all 0.3s ease;\n}\n.BatteryPopover .ToggleButton:hover {\n  background: rgba(30, 30, 46, 0.75);\n  color: rgba(137, 180, 250, 0.75);\n}\n\n.CpuUsage {\n  transition: all 0.3s ease;\n  background: none;\n}\n.CpuUsage * {\n  color: #a6e3a1;\n}\n.CpuUsage:hover {\n  background: #a6e3a1;\n}\n.CpuUsage:hover * {\n  color: #1e1e2e;\n}\n.CpuUsage .Icon {\n  font-size: 20px;\n}\n\n.AudioControl {\n  transition: all 0.3s ease;\n  background: none;\n}\n.AudioControl * {\n  color: #cdd6f4;\n}\n.AudioControl:hover {\n  background: #89b4fa;\n}\n.AudioControl:hover * {\n  color: #1e1e2e;\n}\n\n.Mixer {\n  padding: 6px;\n  border-radius: 16px;\n  background-color: rgba(49, 50, 68, 0.8);\n  border: none;\n}\n.Mixer .Label {\n  font-weight: bold;\n  font-size: 24px;\n  margin: 6px;\n  color: #cdd6f4;\n}\n.Mixer .MixerEntry {\n  background-color: #45475a;\n  padding: 2px;\n  margin: 2px;\n  border: none;\n  border-radius: 16px;\n}\n.Mixer .MixerEntry .Icon {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.Mixer .MixerEntry .Icon:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n.Mixer .MixerEntry .Slider {\n  background-color: #585b70;\n}\n.Mixer .MixerEntry .Slider highlight {\n  background-color: #89b4fa;\n}\n\n.Workspaces {\n  background-color: rgba(49, 50, 68, 0.8);\n  border-radius: 18px;\n}\n.Workspaces .Workspace, .Workspaces .MoreWorkspacesButton {\n  font-weight: bold;\n  background-color: rgba(17, 17, 27, 0.8);\n  border: none;\n  margin: 2px;\n  transition: all 0.2s ease;\n}\n.Workspaces .MoreWorkspacesButton {\n  transition: all 0.3s ease;\n  background: none;\n}\n.Workspaces .MoreWorkspacesButton * {\n  color: #cdd6f4;\n}\n.Workspaces .MoreWorkspacesButton:hover {\n  background: #89b4fa;\n}\n.Workspaces .MoreWorkspacesButton:hover * {\n  color: #1e1e2e;\n}\n.Workspaces .Active {\n  background-color: rgba(137, 180, 250, 0.9);\n  color: #11111b;\n}\n.Workspaces .Inactive {\n  transition: all 0.2s ease;\n}\n.Workspaces .Inactive:hover {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.Workspaces .WorkspacePopover {\n  border-radius: 16px;\n  padding: 6px;\n  background-color: rgba(49, 50, 68, 0.9);\n  margin: 2px;\n}\n\n.TrayItem {\n  margin: 2px;\n  -gtk-icon-size: 24px;\n  transition: all 0.25s ease;\n}\n.TrayItem:hover {\n  background-color: rgba(137, 180, 250, 0.8);\n  color: #11111b;\n}\n.TrayItem:active {\n  background-color: rgba(137, 180, 250, 0.6);\n  color: #11111b;\n}\n.TrayItem popover.menu {\n  margin: 10px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n.TrayItem popover.menu modelbutton {\n  padding: 2px;\n  border-radius: 4px;\n  margin: 0 2px;\n}\n.TrayItem popover.menu modelbutton:hover {\n  background: rgba(69, 71, 90, 0.2);\n}\n.TrayItem popover.menu modelbutton:active {\n  background: rgba(69, 71, 90, 0.4);\n}\n\n.Media {\n  margin: 2px;\n  border-radius: 20px;\n  transition: all 0.3s ease;\n  background: none;\n}\n.Media * {\n  color: #cdd6f4;\n}\n.Media:hover {\n  background: #89b4fa;\n}\n.Media:hover * {\n  color: #11111b;\n}\n.Media .MprisPopover {\n  background-color: rgba(24, 24, 37, 0.8);\n}\n.Media .MprisPopover .MprisPlayer {\n  padding: 16px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata {\n  margin-left: 12px;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Title {\n  font-size: 20px;\n  color: #cdd6f4;\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Artist {\n  font-size: 16px;\n  color: rgba(205, 214, 244, 0.7);\n}\n.Media .MprisPopover .MprisPlayer .Metadata .Album {\n  font-size: 14px;\n  color: rgba(205, 214, 244, 0.5);\n  font-style: italic;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart {\n  margin-top: 12px;\n  padding: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider {\n  padding: 4px;\n  background-color: rgba(30, 30, 46, 0.6);\n  border: none;\n  border-radius: 14px;\n  margin: 5px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider {\n  min-width: 160px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .Slider highlight {\n  background: #74c7ec;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .PlayerSlider .TimeLabel {\n  color: #cdd6f4;\n  margin-left: 10px;\n  font-size: 14px;\n  opacity: 0.8;\n  min-width: 40px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next {\n  margin: 4px;\n  border: none;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  background: #1e1e2e;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause image, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next image {\n  margin: 12px;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next * {\n  color: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover {\n  background: #89b4fa;\n}\n.Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Previous:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .PlayPause:hover *, .Media .MprisPopover .MprisPlayer .LowerPart .Controllers .Next:hover * {\n  color: #1e1e2e;\n}\n.Media .MprisPopover .Cava, .Media .MprisPopover .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.Cava, .Cava > *, .CavaOverlay, .CavaOverlay > * {\n  margin: 0;\n  padding: 0;\n}\n\n.Cava, .Cava > * {\n  color: rgba(137, 180, 250, 0.5);\n}\n\n.CavaOverlay {\n  border: none;\n  border-radius: 40px 40px 0px 0px;\n  background: none;\n  color: rgba(137, 180, 250, 0.6);\n  transition: all 0.3s ease;\n}\n.CavaOverlay:hover {\n  background: rgba(137, 180, 250, 0.6);\n  color: #1e1e2e;\n}\n\ntooltip {\n  padding: 6px;\n  background-color: #313244;\n  border-radius: 10px;\n}\n\n.ControlCenter {\n  transition: all 0.3s ease;\n}\n.ControlCenter .Label {\n  font-size: 20px;\n}\n.ControlCenter:hover {\n  background-color: #89b4fa;\n}\n.ControlCenter:hover .Label {\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover {\n  padding: 5px;\n  background-color: rgba(49, 50, 68, 0.8);\n}\n.ControlCenter .ControlCenterPopover .Subtitle {\n  font-size: 20px;\n  margin: 4px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .Option {\n  padding: 2px;\n  margin: 2px;\n  border-radius: 10px;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleAnimations {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleAnimations:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleCava {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.ControlCenter .ControlCenterPopover .ToggleVisibleComponents .ToggleCava:hover {\n  background: #b4befe;\n  color: #1e1e2e;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem {\n  margin: 0px 4px;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem .Wallpapers {\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 10px;\n  padding: 10px;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem .Wallpapers .Wallpaper {\n  opacity: 0.8;\n  border: 2px solid #b4befe;\n  border-radius: 10px;\n  transition: all 0.3s ease;\n}\n.ControlCenter .ControlCenterPopover .WallpaperSystem .Wallpapers .Wallpaper:hover {\n  opacity: 1;\n  border-color: #89b4fa;\n}\n\n.SelectorIndicator {\n  margin: 4px;\n  background-color: rgba(69, 71, 90, 0.8);\n  border-radius: 8px;\n}\n.SelectorIndicator .Option {\n  padding: 2px;\n  margin: 2px;\n  border-radius: 10px;\n}\n.SelectorIndicator .ToggleActive {\n  background: none;\n  color: #cdd6f4;\n  transition: all 0.3s ease;\n}\n.SelectorIndicator .ToggleActive:hover {\n  background: #89b4fa;\n  color: #1e1e2e;\n}\n\n.Cheatsheet {\n  padding: 10px;\n  border: 2px solid #89b4fa;\n  border-radius: 20px;\n  background-color: rgba(30, 30, 46, 0.8);\n}\n.Cheatsheet .Title {\n  font-weight: bolder;\n  font-size: 80px;\n}\n.Cheatsheet .Subtitle {\n  font-weight: bold;\n  font-size: 40px;\n}\n.Cheatsheet .Section {\n  margin: 4px;\n  padding: 4px;\n}\n.Cheatsheet .Entry {\n  margin: 3px;\n  border-radius: 6px;\n}\n.Cheatsheet .Entry .Bind, .Cheatsheet .Entry .Action {\n  padding: 2px;\n}\n.Cheatsheet .Entry .Bind {\n  transition: all 0.2s ease;\n  font-weight: bold;\n  color: #89b4fa;\n  background-color: #313244;\n}\n.Cheatsheet .Entry .Action {\n  transition: all 0.2s ease;\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Bind {\n  color: #313244;\n  background-color: #89b4fa;\n}\n.Cheatsheet .Entry:hover .Action {\n  color: #89b4fa;\n  background-color: #313244;\n}\n\n/* Resetting every decoration applied earlier */\n* {\n  font-family: "Monospace";\n  font-size: 16px;\n  -gtk-icon-size: 24px;\n  color: #cdd6f4;\n  background: none;\n  border: none;\n  box-shadow: none;\n  outline: none;\n  margin: 0;\n  padding: 0;\n}\n\n.Bar {\n  background: #1e1e2e;\n  border-radius: 28px;\n  margin: 4px 6px;\n}';

// ../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// modules/SystemMonitor.tsx
import AstalBattery from "gi://AstalBattery";
import GTop from "gi://GTop?version=2.0";

// services/TimeFormatter.ts
function formatTimeVerbose(seconds) {
  if (seconds >= 3600) {
    return `${Math.floor(seconds / 3600)}h${Math.floor(seconds % 3600 / 60)}m`;
  }
  return `${Math.floor(seconds / 60)}m`;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject2 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject from "gi://GObject";
import Gio from "gi://Gio";
import GLib from "gi://GLib";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputed(deps, transform) {
  let dispose;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const value = dep.get();
          if (cache[i] !== value) {
            cache[i] = dep.get();
            Array.from(subscribers).forEach((cb) => cb());
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  return new Accessor(get, subscribe);
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject2.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject3.Object, _b = GObject3.signals, _a = GObject3.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function callback(v) {
    for (const child of fragment.children) {
      fragment.removeChild(child);
      if (typeof cleanup === "function") {
        cleanup(child);
      } else if (cleanup !== null) {
        env.defaultCleanup(child);
      }
      if (scope) scope.dispose();
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    scope.dispose();
    dispose();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
function This({
  this: self,
  children,
  $type,
  ...props
}) {
  const cleanup = new Array();
  if ($type) setType(self, $type);
  for (const [key, value] of Object.entries(props)) {
    if (key === "css") {
      if (value instanceof Accessor) {
        env.setCss(self, value.get());
        cleanup.push(value.subscribe(() => env.setCss(self, value.get())));
      } else if (typeof value === "string") {
        env.setCss(self, value);
      }
    } else if (key === "class") {
      if (value instanceof Accessor) {
        env.setClass(self, value.get());
        cleanup.push(value.subscribe(() => env.setClass(self, value.get())));
      } else if (typeof value === "string") {
        env.setClass(self, value);
      }
    } else if (key.startsWith("on")) {
      const id = key.startsWith("onNotify") ? self.connect(`notify::${kebabify(key.slice(8))}`, value) : self.connect(kebabify(key.slice(2)), value);
      cleanup.push(() => self.disconnect(id));
    } else if (value instanceof Accessor) {
      set(self, key, value.get());
      cleanup.push(value.subscribe(() => set(self, key, value.get())));
    } else {
      set(self, key, value);
    }
  }
  if (Array.isArray(children)) {
    for (const ch of children) {
      if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
        env.addChild(self, ch, -1);
      }
    }
  } else {
    const ch = children;
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      env.addChild(self, ch, -1);
    }
  }
  if (cleanup.length > 0) {
    onCleanup(() => cleanup.forEach((cb) => cb()));
  }
  return self;
}

// ../../../../usr/share/ags/js/lib/time.ts
import AstalIO2 from "gi://AstalIO";

// ../../../../usr/share/ags/js/lib/process.ts
import AstalIO from "gi://AstalIO";
var Process = AstalIO.Process;
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// ../../../../usr/share/ags/js/lib/time.ts
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk2 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject4 from "gi://GObject";
var dummyBuilder = new Gtk2.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk2.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk2.Widget && parent instanceof Gtk2.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk2.Popover && parent instanceof Gtk2.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk2.MenuButton || parent instanceof Gtk2.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk2.Window && parent instanceof Gtk2.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk2.TextBuffer && parent instanceof Gtk2.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if (parent instanceof Gtk2.Widget && child instanceof Gtk2.EventController) {
    return parent.remove_controller(child);
  }
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk2.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk2.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk2.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject4.Object)) {
      child = Gtk2.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk2.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject4.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk3.Box,
  button: Gtk3.Button,
  centerbox: Gtk3.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk3.DrawingArea,
  entry: Gtk3.Entry,
  image: Gtk3.Image,
  label: Gtk3.Label,
  levelbar: Gtk3.LevelBar,
  menubutton: Gtk3.MenuButton,
  overlay: Gtk3.Overlay,
  popover: Gtk3.Popover,
  revealer: Gtk3.Revealer,
  scrolledwindow: Gtk3.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk3.Stack,
  switch: Gtk3.Switch,
  togglebutton: Gtk3.ToggleButton,
  window: Astal2.Window
});

// modules/SystemMonitor.tsx
var pollTime = 3e3;
var SystemMonitorClass = class {
  constructor() {
    this.battery = AstalBattery.get_default();
    this.batteryIcon = createBinding(this.battery, "batteryIconName");
    this.batteryPercentage = createBinding(this.battery, "percentage");
    this.batteryCharging = createBinding(this.battery, "charging");
    this.batteryCritical = createComputed([this.batteryPercentage, this.batteryCharging], (p, c) => ["Battery", p <= 0.3 && !c ? "BatteryCritical" : "BatteryNormal"]);
    this.batteryLifeLabel = this.batteryCharging.as((c) => c ? `Carregando: ${formatTimeVerbose(this.battery.time_to_full)} restante(s)` : `Descarregando: ${formatTimeVerbose(this.battery.time_to_empty)} restante(s)`);
    this.cpuSource = new GTop.glibtop_cpu();
    this.memSource = new GTop.glibtop_mem();
    this.cpuData = { prev: { user: 0, sys: 0, total: 0 }, diff: { user: 0, sys: 0, total: 0 } };
    this._metrics = createPoll({ cpu: 0, mem: 0 }, pollTime, () => {
      try {
        GTop.glibtop_get_cpu(this.cpuSource);
        GTop.glibtop_get_mem(this.memSource);
        const cpu = this.cpuSource;
        const prev = this.cpuData.prev;
        this.cpuData.diff = {
          user: cpu.user - prev.user,
          sys: cpu.sys - prev.sys,
          total: cpu.total - prev.total
        };
        this.cpuData.prev = {
          user: cpu.user,
          sys: cpu.sys,
          total: cpu.total
        };
        const cpuDiff = this.cpuData.diff;
        const cpuPercent = cpuDiff.total > 0 ? Math.round((cpuDiff.user + cpuDiff.sys) / cpuDiff.total * 100) : 0;
        const memPercent = this.memSource.total > 0 ? Math.round(this.memSource.user / this.memSource.total * 100) : 0;
        return { cpu: Math.min(100, cpuPercent), mem: Math.min(100, memPercent) };
      } catch (error) {
        console.warn("Erro ao obter m\xE9tricas do sistema:", error);
        return { cpu: 0, mem: 0 };
      }
    });
  }
  get SystemMonitor() {
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["SystemMonitor"], children: [
      /* @__PURE__ */ jsxs("box", { cssClasses: ["CpuUsage"], children: [
        /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\uEC19" }),
        /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.cpu}%`), widthChars: 4 })
      ] }),
      /* @__PURE__ */ jsxs("box", { cssClasses: ["MemoryUsage"], children: [
        /* @__PURE__ */ jsx("label", { cssClasses: ["Icon"], label: "\u{F061A}" }),
        /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: this._metrics.as((m) => `${m.mem}%`), widthChars: 4 })
      ] }),
      /* @__PURE__ */ jsxs("box", { cssClasses: this.batteryCritical, tooltipText: this.batteryLifeLabel, children: [
        /* @__PURE__ */ jsx("image", { cssClasses: ["BatteryIcon"], iconName: this.batteryIcon }),
        /* @__PURE__ */ jsx("label", { cssClasses: ["BatteryUsageLabel"], label: this.batteryPercentage.as((p) => `${Math.round(Math.min(1, p) * 100) ?? 0}%`) })
      ] })
    ] });
  }
};
var systemMonitor = new SystemMonitorClass();
var SystemMonitor_default = systemMonitor;

// modules/SystemTray.tsx
import AstalTray from "gi://AstalTray?version=0.1";
var SystemTrayClass = class {
  constructor() {
    this.setupTrayItem = (btn, item) => {
      btn.menuModel = item.menuModel;
      btn.insert_action_group("dbusmenu", item.actionGroup);
      const agId = item.connect("notify::action-group", () => {
        btn.insert_action_group("dbusmenu", item.actionGroup);
      });
      const mmId = item.connect("notify::menu-model", () => {
        btn.set_menu_model(item.menuModel);
      });
      onCleanup(() => {
        item.disconnect(agId);
        item.disconnect(mmId);
      });
    };
    this.default = AstalTray.get_default();
    this.itemsBinding = createBinding(this.default, "items");
  }
  TrayItem({ item }) {
    return /* @__PURE__ */ jsx(
      "menubutton",
      {
        cssClasses: ["TrayItem"],
        tooltipMarkup: createBinding(item, "tooltipMarkup"),
        $: (self) => this.setupTrayItem(self, item),
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER,
        children: /* @__PURE__ */ jsx("image", { gicon: createBinding(item, "gicon") })
      }
    );
  }
  get SystemTray() {
    return /* @__PURE__ */ jsx("box", { cssClasses: ["SystemTray"], children: /* @__PURE__ */ jsx(For, { each: this.itemsBinding, children: (item) => this.TrayItem({ item }) }) });
  }
};
var systemTray = new SystemTrayClass();
var SystemTray_default = systemTray;

// modules/Media.tsx
import AstalMpris from "gi://AstalMpris?version=0.1";
var PlayerButtonIcons = {
  playing: "media-playback-start-symbolic",
  paused: "media-playback-pause-symbolic",
  stopped: "media-playback-stop-symbolic",
  next: "media-skip-forward-symbolic",
  previous: "media-skip-backward-symbolic"
};
var MediaClass = class {
  constructor() {
    this.mpris = AstalMpris.get_default();
    this._activePlayerData = createBinding(this.mpris, "players").as(
      (players) => {
        let playing = null;
        let paused = null;
        let final = null;
        for (const player of players) {
          const status = player.get_playback_status();
          if (status === AstalMpris.PlaybackStatus.PLAYING) {
            playing = player;
            break;
          } else if (status === AstalMpris.PlaybackStatus.PAUSED) {
            paused = player;
          }
        }
        final = playing || paused;
        if (final !== null) {
          const status = createBinding(final, "playbackStatus");
          const canGoNext = createBinding(final, "canGoNext");
          const canGoPrevious = createBinding(final, "canGoPrevious");
          const canPause = createBinding(final, "canPause");
          const canPlay = createBinding(final, "canPlay");
          return {
            active: true,
            title: createBinding(final, "title"),
            artist: createBinding(final, "artist"),
            album: createBinding(final, "album"),
            statusIcon: status.as((st) => this.getPlayerStatusIcon(st === AstalMpris.PlaybackStatus.PLAYING ? "paused" : "playing")),
            statusText: status.as((st) => this.getPlayerStatus(st)),
            next: () => {
              if (canGoNext.get()) final.next();
            },
            previous: () => {
              if (canGoPrevious.get()) final.previous();
            },
            playPause: () => {
              if (canPause.get() || canPlay.get()) final.play_pause();
            }
          };
        }
        return {
          active: false,
          title: "Nenhum player ativo",
          artist: "",
          album: "",
          statusIcon: PlayerButtonIcons.stopped,
          statusText: this.getPlayerStatus(AstalMpris.PlaybackStatus.STOPPED),
          next: () => {
          },
          previous: () => {
          },
          playPause: () => {
          }
        };
      }
    );
  }
  getPlayerStatus(status) {
    switch (status) {
      case AstalMpris.PlaybackStatus.PLAYING:
        return "Tocando";
      case AstalMpris.PlaybackStatus.PAUSED:
        return "Pausado";
      default:
        return "Nada tocando";
    }
  }
  getPlayerStatusIcon(status) {
    switch (status) {
      case "previous":
        return PlayerButtonIcons.previous;
      case "playing":
        return PlayerButtonIcons.playing;
      case "paused":
        return PlayerButtonIcons.paused;
      case "stopped":
        return PlayerButtonIcons.stopped;
      case "next":
        return PlayerButtonIcons.next;
      default:
        return PlayerButtonIcons.stopped;
    }
  }
  get Media() {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: this._activePlayerData, children: (player) => {
      return /* @__PURE__ */ jsx(
        "menubutton",
        {
          alwaysShowArrow: false,
          cssClasses: ["Media"],
          sensitive: player.active,
          popover: /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { cssClasses: ["MprisPopover"], overflow: Gtk.Overflow.HIDDEN, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["MprisPlayer"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsxs("box", { cssClasses: ["Metadata"], orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: player.title, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Artist"], label: player.artist, ellipsize: 3, maxWidthChars: 15, widthChars: 30 }),
              /* @__PURE__ */ jsx("label", { cssClasses: ["Album"], label: player.album, ellipsize: 3, maxWidthChars: 15, widthChars: 30 })
            ] }),
            /* @__PURE__ */ jsx("box", { cssClasses: ["LowerPart"], orientation: Gtk.Orientation.VERTICAL, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Controllers"], halign: Gtk.Align.CENTER, children: [
              /* @__PURE__ */ jsx(
                "box",
                {
                  cssClasses: ["Previous"],
                  sensitive: player.active,
                  $: (self) => {
                    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
                    const handler = click.connect("pressed", player.previous);
                    self.add_controller(click);
                    onCleanup(() => {
                      click.disconnect(handler);
                    });
                  },
                  children: /* @__PURE__ */ jsx("image", { iconSize: Gtk.IconSize.LARGE, iconName: PlayerButtonIcons.previous })
                }
              ),
              /* @__PURE__ */ jsx(
                "box",
                {
                  cssClasses: ["PlayPause"],
                  sensitive: player.active,
                  $: (self) => {
                    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
                    const handler = click.connect("pressed", player.playPause);
                    self.add_controller(click);
                    onCleanup(() => {
                      click.disconnect(handler);
                    });
                  },
                  children: /* @__PURE__ */ jsx("image", { iconSize: Gtk.IconSize.LARGE, iconName: player.statusIcon })
                }
              ),
              /* @__PURE__ */ jsx(
                "box",
                {
                  cssClasses: ["Next"],
                  sensitive: player.active,
                  $: (self) => {
                    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
                    const handler = click.connect("pressed", player.next);
                    self.add_controller(click);
                    onCleanup(() => {
                      click.disconnect(handler);
                    });
                  },
                  children: /* @__PURE__ */ jsx("image", { iconSize: Gtk.IconSize.LARGE, iconName: PlayerButtonIcons.next })
                }
              )
            ] }) })
          ] }) }) }),
          children: /* @__PURE__ */ jsx("label", { label: player.statusText, widthChars: 12 })
        }
      );
    } }) });
  }
};
var media = new MediaClass();
var Media_default = media;

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib2 from "gi://GLib?version=2.0";
import Gtk4 from "gi://Gtk?version=4.0";
import Astal3 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/lib/overrides.ts
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify2(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland: Hyprland2, Monitor, Workspace }) => {
  patch(Hyprland2.prototype, "binds");
  patch(Hyprland2.prototype, "monitors");
  patch(Hyprland2.prototype, "workspaces");
  patch(Hyprland2.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp: Wp2, Audio, Video }) => {
  patch(Wp2.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../usr/share/ags/js/lib/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";
import IO from "gi://AstalIO";
import GObject5 from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject5.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main: main2, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main2?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk4.init();
GLib2.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var app_default = mkApp(Astal3.Application);

// modules/DateTime.tsx
import GLib3 from "gi://GLib?version=2.0";
var pollTime2 = 6e4;
var DateTimeClass = class {
  constructor() {
    this.formatterTime = "%H:%M";
    this.formatterDate = "Hoje \xE9: %A, %d de %B de %Y";
    this._dateTime = createPoll({ date: "", time: "" }, pollTime2, () => {
      const now = GLib3.DateTime.new_now_local();
      return {
        date: now.format(this.formatterDate),
        time: now.format(this.formatterTime)
      };
    });
  }
  get DateTimePopover() {
    return /* @__PURE__ */ jsx(Gtk.Popover, { children: /* @__PURE__ */ jsx(Gtk.Calendar, { cssClasses: ["Calendar"] }) });
  }
  get DateTime() {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["DateTimeCalendar"], popover: this.DateTimePopover, children: /* @__PURE__ */ jsx("label", { cssClasses: ["Time"], label: this._dateTime.as((t) => `\uF017 ${t.time}`), tooltipMarkup: this._dateTime.as((d) => `\u{F00ED} ${d.date}`) }) });
  }
};
var dateTime = new DateTimeClass();
var DateTime_default = dateTime;

// services/Hyprland.ts
import AstalHyprland from "gi://AstalHyprland?version=0.1";
var Hyprland = class {
  constructor() {
    this.default = AstalHyprland.get_default();
    this._workspaces = createBinding(this.default, "workspaces").as((workspaces2) => workspaces2.sort((a, b) => a.id - b.id));
    this._focusedWorkspace = createBinding(this.default, "focusedWorkspace");
  }
  get workspaces() {
    return this._workspaces;
  }
  get focusedWorkspace() {
    return this._focusedWorkspace;
  }
  areMonitorsEqual(monitor, hyprMonitor) {
    const geometry = monitor.get_geometry();
    if (hyprMonitor.get_model() === monitor.get_model() && hyprMonitor.get_height() === geometry.height && hyprMonitor.get_width() === geometry.width && hyprMonitor.get_x() === geometry.x && hyprMonitor.get_y() === geometry.y) {
      return true;
    }
    return false;
  }
  getHyprlandMonitor(monitor) {
    const hyprlandMonitors = this.default.get_monitors();
    return hyprlandMonitors.find((hyprMonitor) => this.areMonitorsEqual(monitor, hyprMonitor)) || hyprlandMonitors[0];
  }
};
var hyprlandService = new Hyprland();
var Hyprland_default = hyprlandService;

// modules/AudioControl.tsx
import Wp from "gi://AstalWp";
import GLib4 from "gi://GLib?version=2.0";
var AudioControlClass = class {
  constructor() {
    this.step = 0.02;
    this.default = Wp.get_default();
    this.defaultSpeaker = createBinding(this.default, "defaultSpeaker");
    this.defaultMicrophone = createBinding(this.default, "defaultMicrophone");
  }
  handleScroll(edp, dy) {
    let newVolume = edp.get_volume();
    if (dy < 0) newVolume += this.step;
    else newVolume -= this.step;
    edp.set_volume(Math.min(newVolume, 1));
  }
  Endpoint({ endpoint }) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume").as((a) => `${Math.round(a * 100)}%`);
      const leftClick = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
      const leftHandler = leftClick.connect("pressed", () => edp.set_mute(!edp.get_mute()));
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => {
        leftClick.disconnect(leftHandler);
        scroll.disconnect(scrollHandler);
      });
      return /* @__PURE__ */ jsxs(
        "box",
        {
          cssClasses: ["Endpoint"],
          $: (self) => {
            self.add_controller(leftClick);
            self.add_controller(scroll);
          },
          children: [
            /* @__PURE__ */ jsx("image", { cssClasses: ["Icon"], iconName: icon }),
            /* @__PURE__ */ jsx("label", { cssClasses: ["Volume"], label: volume, widthChars: 4 })
          ]
        }
      );
    } }) });
  }
  MixerEntry({ endpoint }) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: endpoint, children: (edp) => {
      const icon = createBinding(edp, "volumeIcon");
      const volume = createBinding(edp, "volume");
      const toggleMuteClick = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
      const toggleMuteHandler = toggleMuteClick.connect("pressed", () => edp.set_mute(!edp.get_mute()));
      const scroll = new Gtk.EventControllerScroll({ flags: Gtk.EventControllerScrollFlags.VERTICAL });
      const scrollHandler = scroll.connect("scroll", (controler, dx, dy) => this.handleScroll(edp, dy));
      onCleanup(() => {
        toggleMuteClick.disconnect(toggleMuteHandler);
        scroll.disconnect(scrollHandler);
      });
      return /* @__PURE__ */ jsxs("box", { cssClasses: ["MixerEntry"], children: [
        /* @__PURE__ */ jsx("image", { cssClasses: ["Icon"], iconName: icon, $: (self) => self.add_controller(toggleMuteClick) }),
        /* @__PURE__ */ jsx("slider", { cssClasses: ["Slider"], $: (self) => self.add_controller(scroll), value: volume, step: 0.1, min: 0, max: 1, onChangeValue: ({ value }) => edp.set_volume(value) })
      ] });
    } }) });
  }
  Mixer() {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["Mixer"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "Mixer" }),
      this.MixerEntry({ endpoint: this.defaultSpeaker }),
      this.MixerEntry({ endpoint: this.defaultMicrophone })
    ] }) });
  }
  get AudioControl() {
    const spawnPavucontrolClick = new Gtk.GestureClick({ button: Gdk.BUTTON_SECONDARY });
    const spawnPavucontrolHandler = spawnPavucontrolClick.connect("pressed", () => GLib4.spawn_command_line_async("pavucontrol"));
    onCleanup(() => spawnPavucontrolClick.disconnect(spawnPavucontrolHandler));
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["AudioControl"], $: (self) => self.add_controller(spawnPavucontrolClick), children: [
      this.Endpoint({ endpoint: this.defaultSpeaker }),
      /* @__PURE__ */ jsx("menubutton", { popover: this.Mixer(), child: /* @__PURE__ */ jsx("label", { label: "\uEAF8" }) })
    ] });
  }
};
var audioControl = new AudioControlClass();
var AudioControl_default = audioControl;

// services/Settings.ts
import GLib5 from "gi://GLib?version=2.0";

// ../../../../usr/share/ags/js/lib/file.ts
import Astal4 from "gi://AstalIO";
function readFile(path3) {
  return Astal4.read_file(path3) || "";
}
function writeFile(path3, content) {
  Astal4.write_file(path3, content);
}

// services/Settings.ts
var optionsFallback = {
  animationsEnabled: true,
  cavaVisible: true,
  wallpaperSelectorActive: true
};
var path = GLib5.get_home_dir() + "/.config/ags/options/options.json";
var SettingsClass = class {
  constructor() {
    const fileStr = readFile(path);
    try {
      const parsed = JSON.parse(fileStr);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(parsed.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(parsed.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(parsed.wallpaperSelectorActive);
    } catch (err) {
      console.error("Erro ao ler options.json: " + err);
      [this._animationsEnabled, this._setAnimationsEnabled] = createState(optionsFallback.animationsEnabled);
      [this._cavaVisible, this._setCavaVisible] = createState(optionsFallback.cavaVisible);
      [this._wallpaperSelectorActive, this._setWallpaperSelectorActive] = createState(optionsFallback.wallpaperSelectorActive);
    }
  }
  saveOptions() {
    const options = {
      animationsEnabled: this._animationsEnabled.get(),
      cavaVisible: this._cavaVisible.get(),
      wallpaperSelectorActive: this._wallpaperSelectorActive.get()
    };
    writeFile(path, JSON.stringify(options, null, 2));
  }
  get animationsEnabled() {
    return this._animationsEnabled;
  }
  get cavaVisible() {
    return this._cavaVisible;
  }
  get wallpaperSelectorActive() {
    return this._wallpaperSelectorActive;
  }
  set setWallpaperSelectorActive(newState) {
    if (this._wallpaperSelectorActive.get() !== newState) this._setWallpaperSelectorActive(newState);
  }
  set setAnimationsEnabled(newState) {
    if (this._animationsEnabled.get() !== newState) this._setAnimationsEnabled(newState);
  }
  set setCavaVisible(newState) {
    if (this._cavaVisible.get() !== newState) this._setCavaVisible(newState);
  }
};
var settingsService = new SettingsClass();
var Settings_default = settingsService;

// modules/WallpaperSelector.tsx
import Gio3 from "gi://Gio?version=2.0";
import GLib7 from "gi://GLib?version=2.0";

// utils/Swww.ts
import GLib6 from "gi://GLib?version=2.0";
var Swww;
((Swww2) => {
  let Resize;
  ((Resize2) => {
    Resize2["NO"] = "no";
    Resize2["CROP"] = "crop";
    Resize2["FIT"] = "fit";
    Resize2["STRETCH"] = "stretch";
  })(Resize = Swww2.Resize || (Swww2.Resize = {}));
  let Filter;
  ((Filter2) => {
    Filter2["NEAREST"] = "Nearest";
    Filter2["BILINEAR"] = "Bilinear";
    Filter2["CATMULLROM"] = "CatmullRom";
    Filter2["MITCHELL"] = "Mitchell";
    Filter2["LANCZOS3"] = "Lanczos3";
  })(Filter = Swww2.Filter || (Swww2.Filter = {}));
  let TransitionType;
  ((TransitionType2) => {
    TransitionType2["NONE"] = "none";
    TransitionType2["SIMPLE"] = "simple";
    TransitionType2["FADE"] = "fade";
    TransitionType2["LEFT"] = "left";
    TransitionType2["RIGHT"] = "right";
    TransitionType2["TOP"] = "top";
    TransitionType2["BOTTOM"] = "bottom";
    TransitionType2["WIPE"] = "wipe";
    TransitionType2["WAVE"] = "wave";
    TransitionType2["GROW"] = "grow";
    TransitionType2["CENTER"] = "center";
    TransitionType2["ANY"] = "any";
    TransitionType2["RANDOM"] = "random";
  })(TransitionType = Swww2.TransitionType || (Swww2.TransitionType = {}));
  let TransitionPos;
  ((TransitionPos2) => {
    TransitionPos2["CENTER"] = "center";
    TransitionPos2["TOP"] = "top";
    TransitionPos2["LEFT"] = "left";
    TransitionPos2["RIGHT"] = "right";
    TransitionPos2["BOTTOM"] = "bottom";
    TransitionPos2["TOP_LEFT"] = "top-left";
    TransitionPos2["TOP_RIGHT"] = "top-right";
    TransitionPos2["BOTTOM_LEFT"] = "bottom-left";
    TransitionPos2["BOTTOM_RIGHT"] = "bottom-right";
  })(TransitionPos = Swww2.TransitionPos || (Swww2.TransitionPos = {}));
  class Manager {
    constructor() {
      GLib6.spawn_command_line_async("swww clear");
    }
    setWallpaper(path3, options) {
      let command = `swww img ${path3}`;
      if (options) {
        if (options.resize) command += ` --resize ${options.resize}`;
        if (options.filter) command += ` -f ${options.filter}`;
        if (options.invertY) command += ` --invert-y ${options.invertY.valueOf()}`;
        if (options.transitionAngle) command += ` --transition-angle ${options.transitionAngle}`;
        if (options.transitionDurantion) command += ` --transition-duration ${options.transitionDurantion}`;
        if (options.transitionPos) command += ` --transition-pos ${options.transitionPos}`;
        if (options.transitionStep) command += ` --transition-step ${options.transitionStep}`;
        if (options.transitionType) command += ` --transition-type ${options.transitionType}`;
        if (options.transitionWave) command += ` --transition-wave ${options.transitionWave.x},${options.transitionWave.y}`;
        if (options.outputs) command += ` --outputs ${options.outputs}`;
      }
      GLib6.spawn_command_line_async(command);
      return true;
    }
  }
  Swww2.manager = new Manager();
})(Swww || (Swww = {}));

// modules/WallpaperSelector.tsx
var path2 = GLib7.get_home_dir() + "/.config/ags/wallpapers";
var pollTime3 = 24e4;
var imageExtensions = [".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp", ".svg"];
var WallpaperSelectorClass = class _WallpaperSelectorClass {
  static {
    this.widgetCount = 0;
  }
  constructor() {
    [this.images, this.setImages] = createState([]);
    [this._timerActive, this._setTimerActive] = createState(Settings_default.wallpaperSelectorActive.get());
    this.polling = createPoll(true, pollTime3, (prev) => !prev);
    this.unsub = Settings_default.wallpaperSelectorActive.subscribe(() => this._setTimerActive(Settings_default.wallpaperSelectorActive.get()));
    this.setImages(this.readImageFiles(path2));
  }
  isImageFile(filename) {
    const extension = filename.toLowerCase().substring(filename.lastIndexOf("."));
    return imageExtensions.includes(extension) ? extension : null;
  }
  readImageFiles(directoryPath) {
    try {
      const file = Gio3.File.new_for_path(directoryPath);
      if (!file.query_exists(null)) return [];
      const enumerator = file.enumerate_children("standard::name,standard::type", Gio3.FileQueryInfoFlags.NONE, null);
      const images = [];
      let fileInfo;
      while ((fileInfo = enumerator.next_file(null)) !== null) {
        if (fileInfo.get_file_type() === Gio3.FileType.REGULAR) {
          const fileName = fileInfo.get_name();
          const ext = this.isImageFile(fileName);
          if (ext) images.push(fileName);
        }
      }
      enumerator.close(null);
      return images;
    } catch (error) {
      console.error("\u274C Erro Gio ao ler diret\xF3rio:", directoryPath, error);
      return [];
    }
  }
  get timerActive() {
    return this._timerActive;
  }
  SelectorIndicator(gdkmonitor) {
    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
    const handler = click.connect("pressed", () => this._setTimerActive(!this._timerActive.get()));
    const unsub = this.polling.subscribe(() => {
      if (this._timerActive.get()) {
        const connector = gdkmonitor.get_connector();
        if (connector) {
          const imgArray = this.images.get();
          const img = imgArray[Math.floor(Math.random() * imgArray.length)];
          Swww.manager.setWallpaper(`${path2}/${img}`, { outputs: connector, transitionType: Swww.TransitionType.GROW });
        } else {
          execAsync(`notify-send "Monitor ${gdkmonitor.get_description()} n\xE3o tem conector" "${gdkmonitor.get_description()} n\xE3o tem conector."`);
        }
      }
    });
    return /* @__PURE__ */ jsxs(
      "box",
      {
        cssClasses: ["SelectorIndicator"],
        orientation: Gtk.Orientation.VERTICAL,
        $: () => _WallpaperSelectorClass.widgetCount += 1,
        onDestroy: () => {
          _WallpaperSelectorClass.widgetCount -= 1;
          if (_WallpaperSelectorClass.widgetCount <= 0) this.unsub();
          click.disconnect(handler);
          unsub();
        },
        children: [
          /* @__PURE__ */ jsx(
            "label",
            {
              cssClasses: ["Subtitle"],
              label: "Seletor de Pap\xE9is de Parede"
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              cssClasses: ["Option", "ToggleActive"],
              label: this._timerActive.as((ta) => `Estado: ${ta ? "Ativo" : "Desativado"}`),
              $: (self) => self.add_controller(click)
            }
          )
        ]
      }
    );
  }
};
var wallpaperSelector = new WallpaperSelectorClass();
var WallpaperSelector_default = wallpaperSelector;

// modules/ControlCenter.tsx
var ControlCenterClass = class {
  constructor() {
  }
  setupButton(self, callback) {
    const click = new Gtk.GestureClick({ button: Gdk.BUTTON_PRIMARY });
    const handler = click.connect("pressed", callback);
    self.add_controller(click);
    onCleanup(() => click.disconnect(handler));
  }
  formatCavaVisiblityText(i) {
    if (i) return "Cava sempre ativo";
    return "Cava desativado";
  }
  get ToggleVisibleComponents() {
    onCleanup(() => Settings_default.saveOptions());
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["ToggleVisibleComponents"], orientation: Gtk.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Anima\xE7\xF5es e componentes" }),
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["ToggleAnimations", "Option"],
          $: (self) => this.setupButton(self, () => Settings_default.setAnimationsEnabled = !Settings_default.animationsEnabled.get()),
          label: Settings_default.animationsEnabled.as((ae) => ae ? "Desativar anima\xE7\xF5es" : "Ativar anima\xE7\xF5es"),
          widthChars: 30
        }
      ),
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["ToggleCava", "Option"],
          $: (self) => this.setupButton(self, () => Settings_default.setCavaVisible = !Settings_default.cavaVisible.get()),
          label: Settings_default.cavaVisible.as((vs) => this.formatCavaVisiblityText(vs)),
          widthChars: 30
        }
      )
    ] });
  }
  ControlCenterPopover(gdkmonitor) {
    return /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx("box", { cssClasses: ["ControlCenterPopover"], children: /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
      this.ToggleVisibleComponents,
      WallpaperSelector_default.SelectorIndicator(gdkmonitor)
    ] }) }) });
  }
  ControlCenter(gdkmonitor) {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["ControlCenter"], popover: this.ControlCenterPopover(gdkmonitor), children: /* @__PURE__ */ jsx("label", { cssClasses: ["Label"], label: "\u{F08C7}" }) });
  }
};
var controlCenter = new ControlCenterClass();
var ControlCenter_default = controlCenter;

// modules/Workspaces.tsx
var WorkspacesClass = class {
  constructor() {
    this.maxWorkspaces = 10;
  }
  Workspace({ workspace, isInPopover = false }) {
    const click = new Gtk.GestureClick();
    const handler_id = click.connect("pressed", () => {
      if (Hyprland_default.focusedWorkspace.get().get_id() !== workspace.get_id()) workspace.focus();
    });
    onCleanup(() => {
      if (handler_id) click.disconnect(handler_id);
    });
    return /* @__PURE__ */ jsx(
      "label",
      {
        $: (self) => self.add_controller(click),
        cssClasses: Hyprland_default.focusedWorkspace.as((focused) => ["Workspace", workspace.get_id() === focused.get_id() ? "Active" : "Inactive"]),
        label: `${workspace.get_id()}`,
        widthChars: 3,
        maxWidthChars: 3,
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER
      }
    );
  }
  MainWorkspace(workspace) {
    const click = new Gtk.GestureClick();
    const handler = click.connect("pressed", () => {
      if (workspace.get_id() !== Hyprland_default.focusedWorkspace.get().get_id()) workspace.focus();
    });
    onCleanup(() => {
      if (click) click.disconnect(handler);
    });
    return /* @__PURE__ */ jsx(
      "label",
      {
        $: (self) => self.add_controller(click),
        cssClasses: createComputed([Hyprland_default.focusedWorkspace, createBinding(workspace, "id")], (focused, id) => ["Workspace", id === focused?.get_id() ? "Active" : "Inactive"]),
        label: workspace.get_id().toString(),
        widthChars: 1,
        maxWidthChars: 1,
        halign: Gtk.Align.CENTER,
        valign: Gtk.Align.CENTER
      }
    );
  }
  WorkspacePopover({ theRest }) {
    return /* @__PURE__ */ jsx("popover", { cssClasses: ["WorkspacePopover"], children: /* @__PURE__ */ jsx(Gtk.FlowBox, { maxChildrenPerLine: 4, children: /* @__PURE__ */ jsx(For, { each: theRest, children: (item) => this.Workspace({ workspace: item, isInPopover: true }) }) }) });
  }
  MoreWorkspacesButton({ theRest }) {
    return /* @__PURE__ */ jsx("menubutton", { cssClasses: ["MoreWorkspacesButton"], sensitive: theRest.as((tr) => tr.length > 0), popover: this.WorkspacePopover({ theRest }), children: /* @__PURE__ */ jsx("label", { label: "\u{F054F}" }) });
  }
  Workspaces({ monitor }) {
    const monitorWorkspaces = Hyprland_default.workspaces.as((ws) => {
      const filtered = ws.filter((workspace) => workspace.get_monitor() === monitor);
      return {
        main: filtered.slice(0, this.maxWorkspaces),
        theRest: filtered.slice(this.maxWorkspaces)
      };
    });
    return /* @__PURE__ */ jsxs("box", { cssClasses: ["Workspaces"], children: [
      /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(For, { each: monitorWorkspaces.as((mw) => mw.main), children: (w) => this.MainWorkspace(w) }) }),
      this.MoreWorkspacesButton({ theRest: monitorWorkspaces.as(({ theRest }) => theRest) })
    ] });
  }
};
var workspaces = new WorkspacesClass();
var Workspaces_default = workspaces;

// widget/Bar.tsx
function Bar({ gdkmonitor }) {
  const { TOP, LEFT, RIGHT } = Astal.WindowAnchor;
  const hyprMonitor = Hyprland_default.getHyprlandMonitor(gdkmonitor);
  return /* @__PURE__ */ jsx(
    "window",
    {
      namespace: "Bar",
      cssClasses: ["Bar"],
      visible: true,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: TOP | RIGHT | LEFT,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Bar"], halign: Gtk.Align.FILL, homogeneous: true, children: [
        /* @__PURE__ */ jsx("box", { halign: Gtk.Align.START, children: SystemTray_default.SystemTray }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.CENTER, children: [
          Media_default.Media,
          Workspaces_default.Workspaces({ monitor: hyprMonitor })
        ] }),
        /* @__PURE__ */ jsxs("box", { halign: Gtk.Align.END, children: [
          DateTime_default.DateTime,
          AudioControl_default.AudioControl,
          SystemMonitor_default.SystemMonitor,
          ControlCenter_default.ControlCenter(gdkmonitor)
        ] })
      ] })
    }
  );
}

// modules/Cava.tsx
import Gsk from "gi://Gsk";
import AstalCava from "gi://AstalCava?version=0.1";
import GObject6 from "gi://GObject";
var CavaConfig = {
  autosens: true,
  bars: 25,
  framerate: 60,
  input: AstalCava.Input.PIPEWIRE,
  noiseReduction: 0.77,
  sensitivity: 0.75,
  stereo: false
};
var CavaWidget = class extends Gtk.DrawingArea {
  constructor(v) {
    super();
    this.set_hexpand(true);
    this.set_vexpand(true);
    this.valuesAccessor = v.as((v2) => {
      const height = this.get_allocated_height();
      return v2.map((i) => height * (1 - i));
    });
    this.unsubAccessor = this.valuesAccessor.subscribe(() => this.queue_draw());
    onCleanup(() => this.unsubAccessor());
  }
  vfunc_snapshot(snapshot) {
    if (!this.get_mapped()) return;
    try {
      if (!this.visible) return;
      const width = this.get_allocated_width();
      const height = this.get_allocated_height();
      if (width <= 0 || height <= 0) return;
      const values = this.valuesAccessor.get();
      if (values.length === 0) return;
      const barWidth = width / (values.length - 1);
      const color = this.parent.get_color();
      const builder = new Gsk.PathBuilder();
      builder.move_to(0, values[0]);
      const invSix = 1 / 6;
      for (let i = 0; i < values.length - 1; i++) {
        const p0x = (i - 1) * barWidth;
        const p0y = values[Math.max(0, i - 1)];
        const p1x = i * barWidth;
        const p1y = values[i];
        const p2x = (i + 1) * barWidth;
        const p2y = values[i + 1];
        const p3x = (i + 2) * barWidth;
        const p3y = values[Math.min(values.length - 1, i + 2)];
        const c1x = p1x + (p2x - p0x) * invSix;
        const c1y = p1y + (p2y - p0y) * invSix;
        const c2x = p2x - (p3x - p1x) * invSix;
        const c2y = p2y - (p3y - p1y) * invSix;
        builder.cubic_to(c1x, c1y, c2x, c2y, p2x, p2y);
      }
      builder.line_to(width, height);
      builder.line_to(0, height);
      builder.close();
      snapshot.append_fill(builder.to_path(), Gsk.FillRule.WINDING, color);
    } catch (error) {
      console.warn("Erro no snapshot do Cava:", error);
    }
  }
};
var _cava = GObject6.registerClass({ GTypeName: "Cava" }, CavaWidget);
var CavaClass = class _CavaClass {
  static {
    this.widgetCount = 0;
  }
  constructor() {
    [this._visibilityState, this._setVisibilityState] = createState(Settings_default.cavaVisible.get());
    this.unsub = Settings_default.cavaVisible.subscribe(() => this._setVisibilityState(Settings_default.cavaVisible.get()));
    this.default = AstalCava.get_default();
    if (this.default) {
      this.default.set_autosens(CavaConfig.autosens);
      this.default.set_bars(CavaConfig.bars);
      this.default.set_framerate(CavaConfig.framerate);
      this.default.set_input(CavaConfig.input);
      this.default.set_noise_reduction(CavaConfig.noiseReduction);
      this.default.set_stereo(CavaConfig.stereo);
      this._values = createBinding(this.default, "values").as((v) => {
        try {
          const sens = CavaConfig.sensitivity;
          return v.map((i) => i * sens);
        } catch (error) {
          console.warn("Erro no handler global do Cava:", error);
          return [];
        }
      });
    } else {
      console.error("N\xE3o foi poss\xEDvel inicializar o Cava");
      this._values = createState([])[0];
    }
  }
  get visibilityState() {
    return this._visibilityState;
  }
  Cava(cssClasses) {
    return /* @__PURE__ */ jsx(
      "box",
      {
        cssClasses: [...cssClasses, "Cava"],
        overflow: Gtk.Overflow.HIDDEN,
        $: () => _CavaClass.widgetCount += 1,
        onDestroy: () => {
          _CavaClass.widgetCount -= 1;
          if (_CavaClass.widgetCount <= 0) this.unsub();
        },
        children: new _cava(this._values)
      }
    );
  }
};
var cava = new CavaClass();
var Cava_default = cava;

// widget/CavaOverlay.tsx
function CavaOverlay({ gdkmonitor }) {
  const { LEFT, RIGHT, BOTTOM } = Astal.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      namespace: "CavaOverlay",
      layer: Astal.Layer.BOTTOM,
      gdkmonitor,
      anchor: RIGHT | LEFT | BOTTOM,
      visible: Cava_default.visibilityState,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsx("box", { halign: Gtk.Align.FILL, valign: Gtk.Align.END, heightRequest: Math.floor(gdkmonitor.get_geometry().height * 0.25), children: Cava_default.Cava(["CavaOverlay"]) })
    }
  );
}

// widget/Cheatsheet.tsx
function Entry({ bind, action }) {
  return /* @__PURE__ */ jsxs("box", { cssClasses: ["Entry"], overflow: Gtk.Overflow.HIDDEN, homogeneous: true, children: [
    /* @__PURE__ */ jsx("label", { cssClasses: ["Bind"], label: bind }),
    /* @__PURE__ */ jsx("label", { cssClasses: ["Action"], label: action })
  ] });
}
function Cheatsheet({ gdkmonitor }) {
  return /* @__PURE__ */ jsx(
    "window",
    {
      name: "Cheatsheet",
      layer: Astal.Layer.OVERLAY,
      gdkmonitor,
      application: app_default,
      $: (self) => onCleanup(() => self.destroy()),
      children: /* @__PURE__ */ jsxs("box", { cssClasses: ["Cheatsheet"], orientation: Gtk.Orientation.VERTICAL, children: [
        /* @__PURE__ */ jsx("label", { cssClasses: ["Title"], label: "Cheatsheet" }),
        /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Gest\xE3o de Clientes" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + P", action: "Fixar cliente" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Q", action: "Fechar programa" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + V", action: "Flutuar a tela" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + F", action: "For\xE7ar tela cheia" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + J", action: "Dividir em Dwindle" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF062", action: "Mover foco para janela acima" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF063", action: "Mover foco para janela abaixo" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF060", action: "Mover foco para janela \xE0 esquerda" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + \uF061", action: "Mover foco para janela \xE0 direita" })
            ] })
          ] }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Gest\xE3o de Workspaces" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF060", action: "Ir para Workspace \xE0 esquerda" }),
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SUPER + \uF061", action: "Ir para Workspace \xE0 direita" }),
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF060", action: "Mover para Workspace \xE0 esquerda" }),
              /* @__PURE__ */ jsx(Entry, { bind: "CTRL + SHIFT + SUPER + \uF061", action: "Mover para Workspace \xE0 direita" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + S", action: "Ir para Workspace especial" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + SHIFT + S", action: "Mover para workspace especial" })
            ] })
          ] })
        ] }),
        /* @__PURE__ */ jsxs("box", { cssClasses: ["Half"], homogeneous: true, children: [
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Programas padr\xE3o" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + Enter", action: "Terminal" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + R", action: "Lan\xE7ador de aplicativos" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + E", action: "Abrir Gerenciador de Arquivos" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + D", action: "Abrir/Fechar Dock" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + C", action: "Abrir/Fechar Cheatsheet" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + ESC", action: "Abrir/fechar Wlogout" })
            ] })
          ] }),
          /* @__PURE__ */ jsxs("box", { cssClasses: ["Section"], orientation: Gtk.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { cssClasses: ["Subtitle"], label: "Outros" }),
            /* @__PURE__ */ jsxs("box", { orientation: Gtk.Orientation.VERTICAL, children: [
              /* @__PURE__ */ jsx(Entry, { bind: "PRINT", action: "Capturar tela" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + PRINT", action: "Capturar regi\xE3o" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + M", action: "Fechar sess\xE3o" }),
              /* @__PURE__ */ jsx(Entry, { bind: "SUPER + L", action: "Bloquear a tela" })
            ] })
          ] })
        ] })
      ] })
    }
  );
}

// app.tsx
function main() {
  const monitors = createBinding(app_default, "monitors");
  return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsxs(This, { this: app_default, children: [
    /* @__PURE__ */ jsx(Bar, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(CavaOverlay, { gdkmonitor: monitor }),
    /* @__PURE__ */ jsx(Cheatsheet, { gdkmonitor: monitor })
  ] }) });
}
app_default.start({ css: styles_default, main });
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic2FzczovaG9tZS9pdGlyby8uY29uZmlnL2Fncy9zdHlsZXMvaW5kZXguc2NzcyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzIiwgIm1vZHVsZXMvU3lzdGVtTW9uaXRvci50c3giLCAic2VydmljZXMvVGltZUZvcm1hdHRlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvZW52LnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ25vbWUvc2lnbmFsVHJhY2tlci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L0Zvci50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L1dpdGgudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9UaGlzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3RpbWUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIm1vZHVsZXMvU3lzdGVtVHJheS50c3giLCAibW9kdWxlcy9NZWRpYS50c3giLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMiLCAibW9kdWxlcy9EYXRlVGltZS50c3giLCAic2VydmljZXMvSHlwcmxhbmQudHMiLCAibW9kdWxlcy9BdWRpb0NvbnRyb2wudHN4IiwgInNlcnZpY2VzL1NldHRpbmdzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2ZpbGUudHMiLCAibW9kdWxlcy9XYWxscGFwZXJTZWxlY3Rvci50c3giLCAidXRpbHMvU3d3dy50cyIsICJtb2R1bGVzL0NvbnRyb2xDZW50ZXIudHN4IiwgIm1vZHVsZXMvV29ya3NwYWNlcy50c3giLCAid2lkZ2V0L0Jhci50c3giLCAibW9kdWxlcy9DYXZhLnRzeCIsICJ3aWRnZXQvQ2F2YU92ZXJsYXkudHN4IiwgIndpZGdldC9DaGVhdHNoZWV0LnRzeCIsICJhcHAudHN4Il0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKiBDYXRwcHVjY2luIG1vY2hhIGNvbG9ycyAqL1xuLkNvbnRyb2xDZW50ZXIsIC5NZWRpYSwgLldvcmtzcGFjZXMsIC5BdWRpb0NvbnRyb2wsIC5DcHVVc2FnZSwgLkJhdHRlcnksIC5NZW1vcnlVc2FnZSwgLkRhdGVUaW1lQ2FsZW5kYXIge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBwYWRkaW5nOiA0cHg7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7XG59XG4uQ29udHJvbENlbnRlciAqLCAuTWVkaWEgKiwgLldvcmtzcGFjZXMgKiwgLkF1ZGlvQ29udHJvbCAqLCAuQ3B1VXNhZ2UgKiwgLkJhdHRlcnkgKiwgLk1lbW9yeVVzYWdlICosIC5EYXRlVGltZUNhbGVuZGFyICoge1xuICBtYXJnaW46IDBweCAycHg7XG59XG5cbi5UcmF5SXRlbSwgLldvcmtzcGFjZXMgLldvcmtzcGFjZSwgLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uLCAuTWl4ZXIgLk1peGVyRW50cnkgLkljb24ge1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBtaW4td2lkdGg6IDI0cHg7XG4gIG1pbi1oZWlnaHQ6IDI0cHg7XG59XG5cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIHtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgbWluLXdpZHRoOiAxNjBweDtcbiAgbWluLWhlaWdodDogMjBweDtcbn1cblxuLkRhdGVUaW1lQ2FsZW5kYXIge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5EYXRlVGltZUNhbGVuZGFyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciAqIHtcbiAgYWxsOiB1bnNldDtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgYnV0dG9uLCAuRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgbGFiZWwuZGF5LW51bWJlciwgLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGxhYmVsLm90aGVyLW1vbnRoLCAuRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgbGFiZWwudG9kYXkge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGJ1dHRvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgYnV0dG9uICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLkRhdGVUaW1lQ2FsZW5kYXIgLkNhbGVuZGFyIGJ1dHRvbjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDcxLCA5MCwgMC43KTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLm90aGVyLW1vbnRoIHtcbiAgb3BhY2l0eTogMC41O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5EYXRlVGltZUNhbGVuZGFyIC5DYWxlbmRhciBncmlkIGxhYmVsLm90aGVyLW1vbnRoOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2Y1ZTBkYztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5kYXktbnVtYmVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC5kYXktbnVtYmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2NiYTZmNztcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uRGF0ZVRpbWVDYWxlbmRhciAuQ2FsZW5kYXIgZ3JpZCBsYWJlbC50b2RheSB7XG4gIGNvbG9yOiAjMWUxZTJlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjRiZWZlO1xufVxuXG4uTWVtb3J5VXNhZ2Uge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLk1lbW9yeVVzYWdlICoge1xuICBjb2xvcjogI2ZhYjM4Nztcbn1cbi5NZW1vcnlVc2FnZTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmYWIzODc7XG59XG4uTWVtb3J5VXNhZ2U6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLk1lbW9yeVVzYWdlIC5JY29uIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uQmF0dGVyeSB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcbn1cblxuLkJhdHRlcnlOb3JtYWwge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuLkJhdHRlcnlOb3JtYWwgKiB7XG4gIGNvbG9yOiAjYjRiZWZlO1xufVxuLkJhdHRlcnlOb3JtYWw6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjYjRiZWZlO1xufVxuLkJhdHRlcnlOb3JtYWw6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuXG4uQmF0dGVyeUNyaXRpY2FsIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5CYXR0ZXJ5Q3JpdGljYWwgKiB7XG4gIGNvbG9yOiAjZjM4YmE4O1xufVxuLkJhdHRlcnlDcml0aWNhbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmMzhiYTg7XG59XG4uQmF0dGVyeUNyaXRpY2FsOmhvdmVyICoge1xuICBjb2xvcjogIzExMTExYjtcbn1cblxuLkJhdHRlcnlQb3BvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBwYWRkaW5nOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG59XG4uQmF0dGVyeVBvcG92ZXIgLlRpdGxlLCAuQmF0dGVyeVBvcG92ZXIgLkJhdHRlcnlMaWZlLCAuQmF0dGVyeVBvcG92ZXIgLlRvZ2dsZUJ1dHRvbiB7XG4gIG1hcmdpbjogMnB4O1xufVxuLkJhdHRlcnlQb3BvdmVyIC5UaXRsZSB7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuQmF0dGVyeUxpZmUge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5CYXR0ZXJ5UG9wb3ZlciAuVG9nZ2xlQnV0dG9uIHtcbiAgbWFyZ2luOiAycHggNHB4O1xuICBwYWRkaW5nOiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC43NSk7XG4gIGNvbG9yOiByZ2JhKDMwLCAzMCwgNDYsIDAuNzUpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkJhdHRlcnlQb3BvdmVyIC5Ub2dnbGVCdXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMwLCAzMCwgNDYsIDAuNzUpO1xuICBjb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjc1KTtcbn1cblxuLkNwdVVzYWdlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5DcHVVc2FnZSAqIHtcbiAgY29sb3I6ICNhNmUzYTE7XG59XG4uQ3B1VXNhZ2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjYTZlM2ExO1xufVxuLkNwdVVzYWdlOmhvdmVyICoge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5DcHVVc2FnZSAuSWNvbiB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLkF1ZGlvQ29udHJvbCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uQXVkaW9Db250cm9sICoge1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5BdWRpb0NvbnRyb2w6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLkF1ZGlvQ29udHJvbDpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG5cbi5NaXhlciB7XG4gIHBhZGRpbmc6IDZweDtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBib3JkZXI6IG5vbmU7XG59XG4uTWl4ZXIgLkxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbWFyZ2luOiA2cHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLk1peGVyIC5NaXhlckVudHJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDc1YTtcbiAgcGFkZGluZzogMnB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xufVxuLk1peGVyIC5NaXhlckVudHJ5IC5JY29uIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uTWl4ZXIgLk1peGVyRW50cnkgLkljb246aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU4NWI3MDtcbn1cbi5NaXhlciAuTWl4ZXJFbnRyeSAuU2xpZGVyIGhpZ2hsaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG59XG5cbi5Xb3Jrc3BhY2VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xuICBib3JkZXItcmFkaXVzOiAxOHB4O1xufVxuLldvcmtzcGFjZXMgLldvcmtzcGFjZSwgLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTcsIDE3LCAyNywgMC44KTtcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW46IDJweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uV29ya3NwYWNlcyAuTW9yZVdvcmtzcGFjZXNCdXR0b24gKiB7XG4gIGNvbG9yOiAjY2RkNmY0O1xufVxuLldvcmtzcGFjZXMgLk1vcmVXb3Jrc3BhY2VzQnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbn1cbi5Xb3Jrc3BhY2VzIC5Nb3JlV29ya3NwYWNlc0J1dHRvbjpob3ZlciAqIHtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG4uV29ya3NwYWNlcyAuQWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDE4MCwgMjUwLCAwLjkpO1xuICBjb2xvcjogIzExMTExYjtcbn1cbi5Xb3Jrc3BhY2VzIC5JbmFjdGl2ZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG59XG4uV29ya3NwYWNlcyAuSW5hY3RpdmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNik7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLldvcmtzcGFjZXMgLldvcmtzcGFjZVBvcG92ZXIge1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICBwYWRkaW5nOiA2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDksIDUwLCA2OCwgMC45KTtcbiAgbWFyZ2luOiAycHg7XG59XG5cbi5UcmF5SXRlbSB7XG4gIG1hcmdpbjogMnB4O1xuICAtZ3RrLWljb24tc2l6ZTogMjRweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2U7XG59XG4uVHJheUl0ZW06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuOCk7XG4gIGNvbG9yOiAjMTExMTFiO1xufVxuLlRyYXlJdGVtOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM3LCAxODAsIDI1MCwgMC42KTtcbiAgY29sb3I6ICMxMTExMWI7XG59XG4uVHJheUl0ZW0gcG9wb3Zlci5tZW51IHtcbiAgbWFyZ2luOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMjQ0O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLlRyYXlJdGVtIHBvcG92ZXIubWVudSBtb2RlbGJ1dHRvbiB7XG4gIHBhZGRpbmc6IDJweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBtYXJnaW46IDAgMnB4O1xufVxuLlRyYXlJdGVtIHBvcG92ZXIubWVudSBtb2RlbGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoNjksIDcxLCA5MCwgMC4yKTtcbn1cbi5UcmF5SXRlbSBwb3BvdmVyLm1lbnUgbW9kZWxidXR0b246YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogcmdiYSg2OSwgNzEsIDkwLCAwLjQpO1xufVxuXG4uTWVkaWEge1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5NZWRpYSAqIHtcbiAgY29sb3I6ICNjZGQ2ZjQ7XG59XG4uTWVkaWE6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLk1lZGlhOmhvdmVyICoge1xuICBjb2xvcjogIzExMTExYjtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNCwgMjQsIDM3LCAwLjgpO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIHtcbiAgcGFkZGluZzogMTZweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTWV0YWRhdGEge1xuICBtYXJnaW4tbGVmdDogMTJweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTWV0YWRhdGEgLlRpdGxlIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBjb2xvcjogI2NkZDZmNDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTWV0YWRhdGEgLkFydGlzdCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IHJnYmEoMjA1LCAyMTQsIDI0NCwgMC43KTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTWV0YWRhdGEgLkFsYnVtIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogcmdiYSgyMDUsIDIxNCwgMjQ0LCAwLjUpO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCB7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHBhZGRpbmc6IDEycHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuUGxheWVyU2xpZGVyIHtcbiAgcGFkZGluZzogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMwLCAzMCwgNDYsIDAuNik7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMTRweDtcbiAgbWFyZ2luOiA1cHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuUGxheWVyU2xpZGVyIC5TbGlkZXIge1xuICBtaW4td2lkdGg6IDE2MHB4O1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLlBsYXllclNsaWRlciAuU2xpZGVyIGhpZ2hsaWdodCB7XG4gIGJhY2tncm91bmQ6ICM3NGM3ZWM7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuUGxheWVyU2xpZGVyIC5UaW1lTGFiZWwge1xuICBjb2xvcjogI2NkZDZmNDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgb3BhY2l0eTogMC44O1xuICBtaW4td2lkdGg6IDQwcHg7XG59XG4uTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlByZXZpb3VzLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZSwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0IHtcbiAgbWFyZ2luOiA0cHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiAjMWUxZTJlO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91cyBpbWFnZSwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2UgaW1hZ2UsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuTmV4dCBpbWFnZSB7XG4gIG1hcmdpbjogMTJweDtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXMgKiwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QbGF5UGF1c2UgKiwgLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5OZXh0ICoge1xuICBjb2xvcjogIzg5YjRmYTtcbn1cbi5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUHJldmlvdXM6aG92ZXIsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5NcHJpc1BsYXllciAuTG93ZXJQYXJ0IC5Db250cm9sbGVycyAuUGxheVBhdXNlOmhvdmVyLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLk1wcmlzUGxheWVyIC5Mb3dlclBhcnQgLkNvbnRyb2xsZXJzIC5QcmV2aW91czpob3ZlciAqLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLlBsYXlQYXVzZTpob3ZlciAqLCAuTWVkaWEgLk1wcmlzUG9wb3ZlciAuTXByaXNQbGF5ZXIgLkxvd2VyUGFydCAuQ29udHJvbGxlcnMgLk5leHQ6aG92ZXIgKiB7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuLk1lZGlhIC5NcHJpc1BvcG92ZXIgLkNhdmEsIC5NZWRpYSAuTXByaXNQb3BvdmVyIC5DYXZhID4gKiB7XG4gIGNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNSk7XG59XG5cbi5DYXZhLCAuQ2F2YSA+ICosIC5DYXZhT3ZlcmxheSwgLkNhdmFPdmVybGF5ID4gKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLkNhdmEsIC5DYXZhID4gKiB7XG4gIGNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNSk7XG59XG5cbi5DYXZhT3ZlcmxheSB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNDBweCA0MHB4IDBweCAwcHg7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNik7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uQ2F2YU92ZXJsYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDEzNywgMTgwLCAyNTAsIDAuNik7XG4gIGNvbG9yOiAjMWUxZTJlO1xufVxuXG50b29sdGlwIHtcbiAgcGFkZGluZzogNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMjQ0O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG4uQ29udHJvbENlbnRlciB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uQ29udHJvbENlbnRlciAuTGFiZWwge1xuICBmb250LXNpemU6IDIwcHg7XG59XG4uQ29udHJvbENlbnRlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4OWI0ZmE7XG59XG4uQ29udHJvbENlbnRlcjpob3ZlciAuTGFiZWwge1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciB7XG4gIHBhZGRpbmc6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0OSwgNTAsIDY4LCAwLjgpO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5TdWJ0aXRsZSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbWFyZ2luOiA0cHg7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLlRvZ2dsZVZpc2libGVDb21wb25lbnRzIHtcbiAgbWFyZ2luOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDcxLCA5MCwgMC44KTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5Ub2dnbGVWaXNpYmxlQ29tcG9uZW50cyAuT3B0aW9uIHtcbiAgcGFkZGluZzogMnB4O1xuICBtYXJnaW46IDJweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLlRvZ2dsZUFuaW1hdGlvbnMge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLlRvZ2dsZUFuaW1hdGlvbnM6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjODliNGZhO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLlRvZ2dsZUNhdmEge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuVG9nZ2xlVmlzaWJsZUNvbXBvbmVudHMgLlRvZ2dsZUNhdmE6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjYjRiZWZlO1xuICBjb2xvcjogIzFlMWUyZTtcbn1cbi5Db250cm9sQ2VudGVyIC5Db250cm9sQ2VudGVyUG9wb3ZlciAuV2FsbHBhcGVyU3lzdGVtIHtcbiAgbWFyZ2luOiAwcHggNHB4O1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5XYWxscGFwZXJTeXN0ZW0gLldhbGxwYXBlcnMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDY5LCA3MSwgOTAsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG4uQ29udHJvbENlbnRlciAuQ29udHJvbENlbnRlclBvcG92ZXIgLldhbGxwYXBlclN5c3RlbSAuV2FsbHBhcGVycyAuV2FsbHBhcGVyIHtcbiAgb3BhY2l0eTogMC44O1xuICBib3JkZXI6IDJweCBzb2xpZCAjYjRiZWZlO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLkNvbnRyb2xDZW50ZXIgLkNvbnRyb2xDZW50ZXJQb3BvdmVyIC5XYWxscGFwZXJTeXN0ZW0gLldhbGxwYXBlcnMgLldhbGxwYXBlcjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG4gIGJvcmRlci1jb2xvcjogIzg5YjRmYTtcbn1cblxuLlNlbGVjdG9ySW5kaWNhdG9yIHtcbiAgbWFyZ2luOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDcxLCA5MCwgMC44KTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLlNlbGVjdG9ySW5kaWNhdG9yIC5PcHRpb24ge1xuICBwYWRkaW5nOiAycHg7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLlNlbGVjdG9ySW5kaWNhdG9yIC5Ub2dnbGVBY3RpdmUge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2NkZDZmNDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5TZWxlY3RvckluZGljYXRvciAuVG9nZ2xlQWN0aXZlOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzg5YjRmYTtcbiAgY29sb3I6ICMxZTFlMmU7XG59XG5cbi5DaGVhdHNoZWV0IHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgIzg5YjRmYTtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMzAsIDQ2LCAwLjgpO1xufVxuLkNoZWF0c2hlZXQgLlRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgZm9udC1zaXplOiA4MHB4O1xufVxuLkNoZWF0c2hlZXQgLlN1YnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogNDBweDtcbn1cbi5DaGVhdHNoZWV0IC5TZWN0aW9uIHtcbiAgbWFyZ2luOiA0cHg7XG4gIHBhZGRpbmc6IDRweDtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeSB7XG4gIG1hcmdpbjogM3B4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG59XG4uQ2hlYXRzaGVldCAuRW50cnkgLkJpbmQsIC5DaGVhdHNoZWV0IC5FbnRyeSAuQWN0aW9uIHtcbiAgcGFkZGluZzogMnB4O1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5IC5CaW5kIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjODliNGZhO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMjQ0O1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5IC5BY3Rpb24ge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICBjb2xvcjogIzMxMzI0NDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg5YjRmYTtcbn1cbi5DaGVhdHNoZWV0IC5FbnRyeTpob3ZlciAuQmluZCB7XG4gIGNvbG9yOiAjMzEzMjQ0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODliNGZhO1xufVxuLkNoZWF0c2hlZXQgLkVudHJ5OmhvdmVyIC5BY3Rpb24ge1xuICBjb2xvcjogIzg5YjRmYTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzI0NDtcbn1cblxuLyogUmVzZXR0aW5nIGV2ZXJ5IGRlY29yYXRpb24gYXBwbGllZCBlYXJsaWVyICovXG4qIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgLWd0ay1pY29uLXNpemU6IDI0cHg7XG4gIGNvbG9yOiAjY2RkNmY0O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLkJhciB7XG4gIGJhY2tncm91bmQ6ICMxZTFlMmU7XG4gIGJvcmRlci1yYWRpdXM6IDI4cHg7XG4gIG1hcmdpbjogNHB4IDZweDtcbn0iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmV4cG9ydCB7IEFzdGFsLCBHdGssIEdkayB9XG4iLCAiaW1wb3J0IEFzdGFsQmF0dGVyeSBmcm9tIFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIlxuaW1wb3J0IEdUb3AgZnJvbSBcImdpOi8vR1RvcD92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgZm9ybWF0VGltZVZlcmJvc2UgfSBmcm9tIFwiLi4vc2VydmljZXMvVGltZUZvcm1hdHRlclwiO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiO1xuXG50eXBlIE1ldHJpY3MgPSB7XG4gICAgY3B1OiBudW1iZXIsXG4gICAgbWVtOiBudW1iZXJcbn1cblxuY29uc3QgcG9sbFRpbWUgPSAzMDAwO1xuXG5jbGFzcyBTeXN0ZW1Nb25pdG9yQ2xhc3Mge1xuICAgIHByaXZhdGUgYmF0dGVyeTogQXN0YWxCYXR0ZXJ5LkRldmljZTtcbiAgICBwcml2YXRlIGJhdHRlcnlQZXJjZW50YWdlOiBBY2Nlc3NvcjxudW1iZXI+O1xuICAgIHByaXZhdGUgYmF0dGVyeUNoYXJnaW5nOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIGJhdHRlcnlDcml0aWNhbDogQWNjZXNzb3I8c3RyaW5nW10+O1xuICAgIHByaXZhdGUgYmF0dGVyeUxpZmVMYWJlbDogQWNjZXNzb3I8c3RyaW5nPjtcbiAgICBwcml2YXRlIGJhdHRlcnlJY29uOiBBY2Nlc3NvcjxzdHJpbmc+O1xuXG4gICAgcHJpdmF0ZSBjcHVTb3VyY2U6IEdUb3AuZ2xpYnRvcF9jcHU7XG4gICAgcHJpdmF0ZSBjcHVEYXRhOiB7IHByZXY6IHsgdXNlcjogbnVtYmVyLCBzeXM6IG51bWJlciwgdG90YWw6IG51bWJlciB9LCBkaWZmOiB7IHVzZXI6IG51bWJlciwgc3lzOiBudW1iZXIsIHRvdGFsOiBudW1iZXIgfSB9O1xuICAgIHByaXZhdGUgbWVtU291cmNlOiBHVG9wLmdsaWJ0b3BfbWVtO1xuICAgIHByaXZhdGUgX21ldHJpY3M6IEFjY2Vzc29yPE1ldHJpY3M+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmJhdHRlcnkgPSBBc3RhbEJhdHRlcnkuZ2V0X2RlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5SWNvbiA9IGNyZWF0ZUJpbmRpbmcodGhpcy5iYXR0ZXJ5LCBcImJhdHRlcnlJY29uTmFtZVwiKTtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5UGVyY2VudGFnZSA9IGNyZWF0ZUJpbmRpbmcodGhpcy5iYXR0ZXJ5LCBcInBlcmNlbnRhZ2VcIik7XG4gICAgICAgIHRoaXMuYmF0dGVyeUNoYXJnaW5nID0gY3JlYXRlQmluZGluZyh0aGlzLmJhdHRlcnksIFwiY2hhcmdpbmdcIik7XG4gICAgICAgIHRoaXMuYmF0dGVyeUNyaXRpY2FsID0gY3JlYXRlQ29tcHV0ZWQoW3RoaXMuYmF0dGVyeVBlcmNlbnRhZ2UsIHRoaXMuYmF0dGVyeUNoYXJnaW5nXSwgKHAsIGMpID0+IFtcIkJhdHRlcnlcIiwgcCA8PSAwLjMgJiYgIWMgPyBcIkJhdHRlcnlDcml0aWNhbFwiIDogXCJCYXR0ZXJ5Tm9ybWFsXCJdKTtcbiAgICAgICAgdGhpcy5iYXR0ZXJ5TGlmZUxhYmVsID0gdGhpcy5iYXR0ZXJ5Q2hhcmdpbmcuYXMoYyA9PiBjID8gYENhcnJlZ2FuZG86ICR7Zm9ybWF0VGltZVZlcmJvc2UodGhpcy5iYXR0ZXJ5LnRpbWVfdG9fZnVsbCl9IHJlc3RhbnRlKHMpYCA6IGBEZXNjYXJyZWdhbmRvOiAke2Zvcm1hdFRpbWVWZXJib3NlKHRoaXMuYmF0dGVyeS50aW1lX3RvX2VtcHR5KX0gcmVzdGFudGUocylgKTtcblxuICAgICAgICB0aGlzLmNwdVNvdXJjZSA9IG5ldyBHVG9wLmdsaWJ0b3BfY3B1KCk7XG4gICAgICAgIHRoaXMubWVtU291cmNlID0gbmV3IEdUb3AuZ2xpYnRvcF9tZW0oKTtcblxuICAgICAgICB0aGlzLmNwdURhdGEgPSB7IHByZXY6IHsgdXNlcjogMCwgc3lzOiAwLCB0b3RhbDogMCB9LCBkaWZmOiB7IHVzZXI6IDAsIHN5czogMCwgdG90YWw6IDAgfSB9O1xuXG4gICAgICAgIHRoaXMuX21ldHJpY3MgPSBjcmVhdGVQb2xsKHsgY3B1OiAwLCBtZW06IDAgfSwgcG9sbFRpbWUsICgpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgR1RvcC5nbGlidG9wX2dldF9jcHUodGhpcy5jcHVTb3VyY2UpO1xuICAgICAgICAgICAgICAgIEdUb3AuZ2xpYnRvcF9nZXRfbWVtKHRoaXMubWVtU291cmNlKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGNwdSA9IHRoaXMuY3B1U291cmNlO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgcHJldiA9IHRoaXMuY3B1RGF0YS5wcmV2O1xuXG4gICAgICAgICAgICAgICAgdGhpcy5jcHVEYXRhLmRpZmYgPSB7XG4gICAgICAgICAgICAgICAgICAgIHVzZXI6IGNwdS51c2VyIC0gcHJldi51c2VyLFxuICAgICAgICAgICAgICAgICAgICBzeXM6IGNwdS5zeXMgLSBwcmV2LnN5cyxcbiAgICAgICAgICAgICAgICAgICAgdG90YWw6IGNwdS50b3RhbCAtIHByZXYudG90YWxcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLmNwdURhdGEucHJldiA9IHtcbiAgICAgICAgICAgICAgICAgICAgdXNlcjogY3B1LnVzZXIsXG4gICAgICAgICAgICAgICAgICAgIHN5czogY3B1LnN5cyxcbiAgICAgICAgICAgICAgICAgICAgdG90YWw6IGNwdS50b3RhbFxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnN0IGNwdURpZmYgPSB0aGlzLmNwdURhdGEuZGlmZjtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGNwdVBlcmNlbnQgPSBjcHVEaWZmLnRvdGFsID4gMCA/IE1hdGgucm91bmQoKChjcHVEaWZmLnVzZXIgKyBjcHVEaWZmLnN5cykgLyBjcHVEaWZmLnRvdGFsKSAqIDEwMCkgOiAwO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lbVBlcmNlbnQgPSB0aGlzLm1lbVNvdXJjZS50b3RhbCA+IDAgPyBNYXRoLnJvdW5kKCh0aGlzLm1lbVNvdXJjZS51c2VyIC8gdGhpcy5tZW1Tb3VyY2UudG90YWwpICogMTAwKSA6IDA7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4geyBjcHU6IE1hdGgubWluKDEwMCwgY3B1UGVyY2VudCksIG1lbTogTWF0aC5taW4oMTAwLCBtZW1QZXJjZW50KSB9O1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvIGFvIG9idGVyIG1cdTAwRTl0cmljYXMgZG8gc2lzdGVtYTpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGNwdTogMCwgbWVtOiAwIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgU3lzdGVtTW9uaXRvcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiU3lzdGVtTW9uaXRvclwiXX0+XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJDcHVVc2FnZVwiXX0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0ljb24nXX0gbGFiZWw9eydcdUVDMTknfSAvPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17WydMYWJlbCddfSBsYWJlbD17dGhpcy5fbWV0cmljcy5hcyhtID0+IGAke20uY3B1fSVgKX0gd2lkdGhDaGFycz17NH0gLz5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIk1lbW9yeVVzYWdlXCJdfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snSWNvbiddfSBsYWJlbD17J1x1REI4MVx1REUxQSd9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbJ0xhYmVsJ119IGxhYmVsPXt0aGlzLl9tZXRyaWNzLmFzKG0gPT4gYCR7bS5tZW19JWApfSB3aWR0aENoYXJzPXs0fSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17dGhpcy5iYXR0ZXJ5Q3JpdGljYWx9IHRvb2x0aXBUZXh0PXt0aGlzLmJhdHRlcnlMaWZlTGFiZWx9PlxuICAgICAgICAgICAgICAgICAgICA8aW1hZ2UgY3NzQ2xhc3Nlcz17W1wiQmF0dGVyeUljb25cIl19IGljb25OYW1lPXt0aGlzLmJhdHRlcnlJY29ufSAvPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiQmF0dGVyeVVzYWdlTGFiZWxcIl19IGxhYmVsPXt0aGlzLmJhdHRlcnlQZXJjZW50YWdlLmFzKHAgPT4gYCR7TWF0aC5yb3VuZChNYXRoLm1pbigxLCBwKSAqIDEwMCkgPz8gMH0lYCl9IC8+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IHN5c3RlbU1vbml0b3IgPSBuZXcgU3lzdGVtTW9uaXRvckNsYXNzO1xuZXhwb3J0IGRlZmF1bHQgc3lzdGVtTW9uaXRvcjtcbiIsICJleHBvcnQgZnVuY3Rpb24gZm9ybWF0VGltZShzZWNvbmRzOiBudW1iZXIpOiBzdHJpbmcge1xuICAgIGlmICghc2Vjb25kcyB8fCBzZWNvbmRzIDwgMCkgcmV0dXJuIFwiMDowMFwiO1xuXG4gICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKHNlY29uZHMgLyAzNjAwKTtcbiAgICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcigoc2Vjb25kcyAlIDM2MDApIC8gNjApO1xuICAgIGNvbnN0IHJlbWFpbmluZ1NlY29uZHMgPSBNYXRoLmZsb29yKHNlY29uZHMgJSA2MCk7XG5cbiAgICBpZiAoaG91cnMgPiAwKSB7XG4gICAgICAgIHJldHVybiBgJHtob3Vyc306JHttaW51dGVzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHtyZW1haW5pbmdTZWNvbmRzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBgJHttaW51dGVzfToke3JlbWFpbmluZ1NlY29uZHMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWA7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0VGltZVZlcmJvc2Uoc2Vjb25kczogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBpZihzZWNvbmRzID49IDM2MDApIHtcbiAgICAgICAgcmV0dXJuIGAke01hdGguZmxvb3Ioc2Vjb25kcyAvIDM2MDApfWgke01hdGguZmxvb3IoKHNlY29uZHMgJSAzNjAwKSAvIDYwKX1tYDtcbiAgICB9XG5cbiAgICByZXR1cm4gYCR7TWF0aC5mbG9vcihzZWNvbmRzIC8gNjApfW1gO1xufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IHR5cGUgQ0MsIHR5cGUgRkMsIGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBrZWJhYmlmeSwgdHlwZSBQYXNjYWxpZnksIHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFsbCBvZiB0aGUgdGhpbmdzIHRoYXQgY2FuIGJlIHBhc3NlZCBhcyBhIGNoaWxkIHRvIGNsYXNzIGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCB0eXBlIE5vZGUgPVxuICAgIHwgQXJyYXk8R09iamVjdC5PYmplY3Q+XG4gICAgfCBHT2JqZWN0Lk9iamVjdFxuICAgIHwgbnVtYmVyXG4gICAgfCBzdHJpbmdcbiAgICB8IGJvb2xlYW5cbiAgICB8IG51bGxcbiAgICB8IHVuZGVmaW5lZFxuXG5leHBvcnQgY29uc3QgZ3RrVHlwZSA9IFN5bWJvbChcImd0ayBidWlsZGVyIHR5cGVcIilcblxuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIG9iamVjdCBzcGVjaWZpZWQgdGhyb3VnaCB0aGUgYCR0eXBlYCBwcm9wZXJ0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZShvYmplY3Q6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgcmV0dXJuIGd0a1R5cGUgaW4gb2JqZWN0ID8gKG9iamVjdFtndGtUeXBlXSBhcyBzdHJpbmcpIDogbnVsbFxufVxuXG4vKipcbiAqIEZ1bmN0aW9uIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIEZDUHJvcHM8U2VsZiwgUHJvcHM+ID0gUHJvcHMgJiB7XG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb25cbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxufVxuXG4vKipcbiAqIENsYXNzIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIENDUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQcm9wcz4gPSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsIGNoaWxkcmVuIGVsZW1lbnRzXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgIGNoaWxkcmVuPzogQXJyYXk8Tm9kZT4gfCBOb2RlXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIHRvIHVzZSBhcyBhIGNvbnN0cnVjdG9yLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkY29uc3RydWN0b3I/KHByb3BzOiBQYXJ0aWFsPFByb3BzPik6IFNlbGZcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvbixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBQcm9wc106IEFjY2Vzc29yPE5vbk51bGxhYmxlPFByb3BzW0tdPj4gfCBQcm9wc1tLXVxufSAmIHtcbiAgICBbUyBpbiBrZXlvZiBTZWxmW1wiJHNpZ25hbHNcIl0gYXMgUyBleHRlbmRzIGBub3RpZnk6OiR7aW5mZXIgUH1gXG4gICAgICAgID8gYG9uTm90aWZ5JHtQYXNjYWxpZnk8UD59YFxuICAgICAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PFM+fWBcbiAgICAgICAgICA6IG5ldmVyXT86IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8U2VsZiwgU2VsZltcIiRzaWduYWxzXCJdW1NdPlxufVxuXG4vLyBwcmV0dGllci1pZ25vcmVcbnR5cGUgSnN4UHJvcHM8QywgUHJvcHM+ID1cbiAgICBDIGV4dGVuZHMgdHlwZW9mIEZyYWdtZW50ID8gKFByb3BzICYge30pXG4gICAgLy8gaW50cmluc2ljRWxlbWVudHMgYWx3YXlzIHJlc29sdmUgYXMgRkNcbiAgICAvLyBzbyB3ZSBjYW4ndCBuYXJyb3cgaXQgZG93biwgYW5kIGluIHNvbWUgY2FzZXNcbiAgICAvLyB0aGUgc2V0dXAgZnVuY3Rpb24gaXMgdHlwZWQgYXMgYSB1bmlvbiBvZiBPYmplY3QgYW5kIGFjdHVhbCB0eXBlXG4gICAgLy8gYXMgYSBmaXggdXNlcnMgY2FuIGFuZCBzaG91bGQgdXNlIEZDUHJvcHNcbiAgICA6IEMgZXh0ZW5kcyBGQyA/IFByb3BzICYgT21pdDxGQ1Byb3BzPFJldHVyblR5cGU8Qz4sIFByb3BzPiwgXCIkXCI+XG4gICAgOiBDIGV4dGVuZHMgQ0MgPyBDQ1Byb3BzPEluc3RhbmNlVHlwZTxDPiwgUHJvcHM+XG4gICAgOiBuZXZlclxuXG5mdW5jdGlvbiBpc0dPYmplY3RDdG9yKGN0b3I6IGFueSk6IGN0b3IgaXMgQ0Mge1xuICAgIHJldHVybiBjdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0XG59XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb25DdG9yKGN0b3I6IGFueSk6IGN0b3IgaXMgRkMge1xuICAgIHJldHVybiB0eXBlb2YgY3RvciA9PT0gXCJmdW5jdGlvblwiICYmICFpc0dPYmplY3RDdG9yKGN0b3IpXG59XG5cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRUeXBlKG9iamVjdDogb2JqZWN0LCB0eXBlOiBzdHJpbmcpIHtcbiAgICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSBcIlwiKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKVxuICAgIH1cblxuICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtndGtUeXBlXTogdHlwZSB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIFBhcmFtZXRlcnM8VD5bMF0+LFxuKTogUmV0dXJuVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBuZXcgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8VD5bMF0+LFxuKTogSW5zdGFuY2VUeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBrZXlvZiAodHlwZW9mIGVudilbXCJpbnRyaW5zaWNFbGVtZW50c1wiXSB8IChuZXcgKHByb3BzOiBhbnkpID0+IFQpIHwgKChwcm9wczogYW55KSA9PiBUKSxcbiAgICBpbnByb3BzOiBhbnksXG4gICAgLy8ga2V5IGlzIGEgc3BlY2lhbCBwcm9wIGluIGpzeCB3aGljaCBpcyBwYXNzZWQgYXMgYSB0aGlyZCBhcmd1bWVudCBhbmQgbm90IGluIHByb3BzXG4gICAga2V5Pzogc3RyaW5nLFxuKTogVCB7XG4gICAgY29uc3QgeyAkLCAkdHlwZSwgJGNvbnN0cnVjdG9yLCBjaGlsZHJlbiwgLi4ucmVzdCB9ID0gaW5wcm9wcyBhcyBDQ1Byb3BzPFQsIGFueT5cbiAgICBjb25zdCBwcm9wcyA9IHJlc3QgYXMgUmVjb3JkPHN0cmluZywgYW55PlxuXG4gICAgaWYgKGtleSkgT2JqZWN0LmFzc2lnbihwcm9wcywgeyBrZXkgfSlcbiAgICBlbnYuaW5pdFByb3BzKHByb3BzKVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSBkZWxldGUgcHJvcHNba2V5XVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgY3RvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAoY3RvciBpbiBlbnYuaW50cmluc2ljRWxlbWVudHMpIHtcbiAgICAgICAgICAgIGN0b3IgPSBlbnYuaW50cmluc2ljRWxlbWVudHNbY3Rvcl0gYXMgRkM8VD4gfCBDQzxUPlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYHVua25vd24gaW50cmluc2ljIGVsZW1lbnQgXCIke2N0b3J9XCJgKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb25DdG9yKGN0b3IpKSB7XG4gICAgICAgIGNvbnN0IG9iamVjdCA9IGN0b3IoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSlcbiAgICAgICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG4gICAgICAgICQ/LihvYmplY3QpXG4gICAgICAgIHJldHVybiBvYmplY3RcbiAgICB9XG5cbiAgICAvLyBjb2xsZWN0IGNzcyBhbmQgY2xhc3NOYW1lXG4gICAgY29uc3QgeyBjc3MsIGNsYXNzOiBjbGFzc05hbWUgfSA9IHByb3BzXG4gICAgZGVsZXRlIHByb3BzLmNzc1xuICAgIGRlbGV0ZSBwcm9wcy5jbGFzc1xuXG4gICAgY29uc3Qgc2lnbmFsczogQXJyYXk8W3N0cmluZywgKC4uLnByb3BzOiB1bmtub3duW10pID0+IHVua25vd25dPiA9IFtdXG4gICAgY29uc3QgYmluZGluZ3M6IEFycmF5PFtzdHJpbmcsIEFjY2Vzc29yPHVua25vd24+XT4gPSBbXVxuXG4gICAgLy8gY29sbGVjdCBzaWduYWxzIGFuZCBiaW5kaW5nc1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgc2lnbmFscy5wdXNoKFtrZXkuc2xpY2UoMiksIHZhbHVlIGFzICgpID0+IHVua25vd25dKVxuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgICAgICBwcm9wc1trZXldID0gdmFsdWUuZ2V0KClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvbnN0cnVjdFxuICAgIGNvbnN0IG9iamVjdCA9ICRjb25zdHJ1Y3RvciA/ICRjb25zdHJ1Y3Rvcihwcm9wcykgOiBuZXcgKGN0b3IgYXMgQ0M8VD4pKHByb3BzKVxuICAgIGlmICgkY29uc3RydWN0b3IpIE9iamVjdC5hc3NpZ24ob2JqZWN0LCBwcm9wcylcbiAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSlcblxuICAgIGlmIChjc3MpIGVudi5zZXRDc3Mob2JqZWN0LCBjc3MpXG4gICAgaWYgKGNsYXNzTmFtZSkgZW52LnNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKVxuXG4gICAgLy8gYWRkIGNoaWxkcmVuXG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC5cIilcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaCwgLTEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoY2hpbGQpIHtcbiAgICAgICAgICAgIGVudi5hZGRDaGlsZChvYmplY3QsIGNoaWxkLCAtMSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBzaWduYWxzXG4gICAgY29uc3QgZGlzcG9zZUhhbmRsZXJzID0gc2lnbmFscy5tYXAoKFtzaWcsIGhhbmRsZXJdKSA9PiB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBrZWJhYmlmeShzaWcpXG4gICAgICAgIGNvbnN0IGlkID0gbmFtZS5zdGFydHNXaXRoKFwibm90aWZ5LVwiKVxuICAgICAgICAgICAgPyBvYmplY3QuY29ubmVjdChgbm90aWZ5Ojoke25hbWUuc2xpY2UoNyl9YCwgaGFuZGxlcilcbiAgICAgICAgICAgIDogb2JqZWN0LmNvbm5lY3Qoa2ViYWJpZnkoc2lnKSwgaGFuZGxlcilcblxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfSlcblxuICAgIC8vIGhhbmRsZSBiaW5kaW5nc1xuICAgIGNvbnN0IGRpc3Bvc2VCaW5kaW5ncyA9IGJpbmRpbmdzLm1hcCgoW3Byb3AsIGJpbmRpbmddKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICB9KVxuICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICByZXR1cm4gZGlzcG9zZVxuICAgIH0pXG5cbiAgICAvLyBjbGVhbnVwXG4gICAgaWYgKGRpc3Bvc2VCaW5kaW5ncy5sZW5ndGggPiAwIHx8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NlSGFuZGxlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICBkaXNwb3NlQmluZGluZ3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgJD8uKG9iamVjdClcbiAgICByZXR1cm4gb2JqZWN0XG59XG5cbmV4cG9ydCBjb25zdCBqc3hzID0ganN4XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICB0eXBlIEVsZW1lbnRUeXBlID0ga2V5b2YgSW50cmluc2ljRWxlbWVudHMgfCBGQyB8IENDXG4gICAgICAgIHR5cGUgRWxlbWVudCA9IEdPYmplY3QuT2JqZWN0XG4gICAgICAgIHR5cGUgRWxlbWVudENsYXNzID0gR09iamVjdC5PYmplY3RcblxuICAgICAgICB0eXBlIExpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczxDLCBQcm9wcz4gPSBKc3hQcm9wczxDLCBQcm9wcz4gJiB7XG4gICAgICAgICAgICAvLyBGSVhNRTogd2h5IGRvZXMgYW4gaW50cmluc2ljIGVsZW1lbnQgYWx3YXlzIHJlc29sdmUgYXMgRkM/XG4gICAgICAgICAgICAvLyBfX3R5cGU/OiBDIGV4dGVuZHMgQ0MgPyBcIkNDXCIgOiBDIGV4dGVuZHMgRkMgPyBcIkZDXCIgOiBuZXZlclxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgLy8gY2M6IENDUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzLCBHdGsuQm94LlNpZ25hbFNpZ25hdHVyZXM+XG4gICAgICAgICAgICAvLyBmYzogRkNQcm9wczxHdGsuV2lkZ2V0LCBGblByb3BzPlxuICAgICAgICB9XG5cbiAgICAgICAgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgICAgICBjaGlsZHJlbjoge31cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IHsgdHlwZSBQYXNjYWxpZnksIGNhbWVsaWZ5LCBrZWJhYmlmeSB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB0eXBlIHsgRGVlcEluZmVyLCBSZWN1cnNpdmVJbmZlciB9IGZyb20gXCIuLi92YXJpYW50LmpzXCJcblxudHlwZSBTdWJzY3JpYmVDYWxsYmFjayA9ICgpID0+IHZvaWRcbnR5cGUgRGlzcG9zZUZ1bmN0aW9uID0gKCkgPT4gdm9pZFxudHlwZSBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spID0+IERpc3Bvc2VGdW5jdGlvblxuXG5leHBvcnQgdHlwZSBBY2Nlc3NlZDxUPiA9IFQgZXh0ZW5kcyBBY2Nlc3NvcjxpbmZlciBWPiA/IFYgOiBuZXZlclxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1kZWNsYXJhdGlvbi1tZXJnaW5nXG5leHBvcnQgY2xhc3MgQWNjZXNzb3I8VCA9IHVua25vd24+IGV4dGVuZHMgRnVuY3Rpb24ge1xuICAgIHN0YXRpYyAkZ3R5cGUgPSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1QgYXMgdW5rbm93biBhcyBHT2JqZWN0LkdUeXBlPEFjY2Vzc29yPlxuXG4gICAgI2dldDogKCkgPT4gVFxuICAgICNzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uXG5cbiAgICBjb25zdHJ1Y3RvcihnZXQ6ICgpID0+IFQsIHN1YnNjcmliZT86IFN1YnNjcmliZUZ1bmN0aW9uKSB7XG4gICAgICAgIHN1cGVyKFwicmV0dXJuIGFyZ3VtZW50cy5jYWxsZWUuX2NhbGwuYXBwbHkoYXJndW1lbnRzLmNhbGxlZSwgYXJndW1lbnRzKVwiKVxuICAgICAgICB0aGlzLiNzdWJzY3JpYmUgPSBzdWJzY3JpYmUgPz8gKCgpID0+ICgpID0+IHZvaWQgMClcbiAgICAgICAgdGhpcy4jZ2V0ID0gZ2V0XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3Vic2NyaWJlIGZvciB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnQgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcmV0dXJucyBVbnN1YnNjcmliZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBzdWJzY3JpYmUoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKTogRGlzcG9zZUZ1bmN0aW9uIHtcbiAgICAgICAgLy8gVE9ETzogYXV0byB1bnN1YiB3aGVuIGEgc2NvcGUgaXMgYXZhaWxhYmxlP1xuICAgICAgICByZXR1cm4gdGhpcy4jc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIFRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAqL1xuICAgIGdldCgpOiBUIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2dldCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGFzPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB0cmFuc2Zvcm0odGhpcy4jZ2V0KCkpLCB0aGlzLiNzdWJzY3JpYmUpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jYWxsPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXModHJhbnNmb3JtKVxuICAgIH1cblxuICAgIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgQWNjZXNzb3I8JHt0aGlzLmdldCgpfT5gXG4gICAgfVxuXG4gICAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLlwiKVxuICAgICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc29yPFQ+IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+XG59XG5cbmV4cG9ydCB0eXBlIFNldHRlcjxUPiA9IHtcbiAgICAodmFsdWU6IFQpOiB2b2lkXG4gICAgKHZhbHVlOiAocHJldjogVCkgPT4gVCk6IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgU3RhdGU8VD4gPSBbQWNjZXNzb3I8VD4sIFNldHRlcjxUPl1cblxuLyoqXG4gKiBDcmVhdGUgYSB3cml0YWJsZSBzaWduYWwuXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGludGlhbCB2YWx1ZSBvZiB0aGUgc2lnbmFsXG4gKiBAcmV0dXJucyBBbiBgQWNjZXNzb3JgIGFuZCBhIHNldHRlciBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhdGU8VD4oaW5pdDogVCk6IFN0YXRlPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG4gICAgICAgIHJldHVybiAoKSA9PiBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY29uc3Qgc2V0ID0gKG5ld1ZhbHVlOiB1bmtub3duKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlOiBUID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuZXdWYWx1ZShjdXJyZW50VmFsdWUpIDogbmV3VmFsdWVcbiAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAvLyBydW5uaW5nIGNhbGxiYWNrcyBtaWdodCBtdXRhdGUgc3Vic2NyaWJlcnNcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFtuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpLCBzZXQgYXMgU2V0dGVyPFQ+XVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIGlzIGNvbXB1dGVkIGZyb20gYSBsaXN0IG9mIGBBY2Nlc3NvcmBzLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGxldCBhOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBsZXQgYjogQWNjZXNzb3I8c3RyaW5nPlxuICogY29uc3QgYzogQWNjZXNzb3I8W251bWJlciwgc3RyaW5nXT4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0pXG4gKiBjb25zdCBkOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdLCAoYTogbnVtYmVyLCBiOiBzdHJpbmcpID0+IGAke2F9ICR7Yn1gKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGRlcHMgTGlzdCBvZiBgQWNjZXNzb3JzYC5cbiAqIEBwYXJhbSB0cmFuc2Zvcm0gQW4gb3B0aW9uYWwgdHJhbnNmb3JtIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGNvbXB1dGVkIGBBY2Nlc3NvcmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgViA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBWKTogQWNjZXNzb3I8Vj4ge1xuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgQXJyYXk8dW5rbm93bj4oZGVwcy5sZW5ndGgpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gZGVwcy5tYXAoKGRlcCwgaSkgPT5cbiAgICAgICAgICAgICAgICBkZXAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlW2ldICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgICAgIGNhY2hlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBWID0+IHtcbiAgICAgICAgY29uc3QgYXJncyA9IGRlcHMubWFwKChkZXAsIGkpID0+IHtcbiAgICAgICAgICAgIGlmICghY2FjaGVbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVbaV1cbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtID8gdHJhbnNmb3JtKC4uLihhcmdzIGFzIEFyZ3MpKSA6IChhcmdzIGFzIFYpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHT2JqZWN0Lk9iamVjdGAncyBgcHJvcGVydHlgLlxuICpcbiAqIEBwYXJhbSBvYmplY3QgVGhlIGBHT2JqZWN0Lk9iamVjdGAgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIHByb3BlcnR5IE9uZSBvZiBpdHMgcmVnaXN0ZXJlZCBwcm9wZXJ0aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFAgZXh0ZW5kcyBrZXlvZiBUPihcbiAgICBvYmplY3Q6IFQsXG4gICAgcHJvcGVydHk6IEV4dHJhY3Q8UCwgc3RyaW5nPixcbik6IEFjY2Vzc29yPFRbUF0+XG5cbi8vIFRPRE86IHN1cHBvcnQgbmVzdGVkIGJpbmRpbmdzXG4vLyBleHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxcbi8vICAgICBUIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4vLyAgICAgUDEgZXh0ZW5kcyBrZXlvZiBULFxuLy8gICAgIFAyIGV4dGVuZHMga2V5b2YgTm9uTnVsbGFibGU8VFtQMV0+LFxuLy8gPihcbi8vICAgICBvYmplY3Q6IFQsXG4vLyAgICAgcHJvcGVydHkxOiBFeHRyYWN0PFAxLCBzdHJpbmc+LFxuLy8gICAgIHByb3BlcnR5MjogRXh0cmFjdDxQMiwgc3RyaW5nPixcbi8vICk6IEFjY2Vzc29yPE5vbk51bGxhYmxlPFRbUDFdPltQMl0+XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR2lvLlNldHRpbmdzYCdzIGBrZXlgLlxuICogVmFsdWVzIGFyZSByZWN1cnNpdmVseSB1bnBhY2tlZC5cbiAqXG4gKiBAZGVwcmVjYXRlZCBwcmVmZXIgdXNpbmcge0BsaW5rIGNyZWF0ZVNldHRpbmdzfS5cbiAqIEBwYXJhbSBvYmplY3QgVGhlIGBHaW8uU2V0dGluZ3NgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBrZXkgVGhlIHNldHRpbmdzIGtleVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihzZXR0aW5nczogR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KG9iamVjdDogR09iamVjdC5PYmplY3QgfCBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD4ge1xuICAgIGNvbnN0IHByb3AgPSBrZWJhYmlmeShrZXkpIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgY29uc3Qgc2lnID0gb2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzID8gXCJjaGFuZ2VkXCIgOiBcIm5vdGlmeVwiXG4gICAgICAgIGNvbnN0IGlkID0gb2JqZWN0LmNvbm5lY3QoYCR7c2lnfTo6JHtwcm9wfWAsICgpID0+IGNhbGxiYWNrKCkpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmplY3QuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKCkgYXMgVFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke3Byb3AucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgICAgICAgICBpZiAoZ2V0dGVyIGluIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0W2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiAob2JqZWN0W2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKSBhcyBUXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm9wIGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtwcm9wXSBhcyBUXG4gICAgICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtrZXkgYXMga2V5b2YgdHlwZW9mIG9iamVjdF0gYXMgVFxuXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGdldCBwcm9wZXJ0eSAke2tleX1gKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxudHlwZSBDb25uZWN0aW9uSGFuZGxlcjxcbiAgICBPIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUyBleHRlbmRzIGtleW9mIE9bXCIkc2lnbmFsc1wiXSxcbiAgICBULFxuPiA9IE9bXCIkc2lnbmFsc1wiXVtTXSBleHRlbmRzICguLi5hcmdzOiBhbnlbXSkgPT4gaW5mZXIgUlxuICAgID8gdm9pZCBleHRlbmRzIFJcbiAgICAgICAgPyAoLi4uYXJnczogWy4uLlBhcmFtZXRlcnM8T1tcIiRzaWduYWxzXCJdW1NdPiwgY3VycmVudFZhbHVlOiBUXSkgPT4gVFxuICAgICAgICA6IG5ldmVyXG4gICAgOiBuZXZlclxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIHNldHMgdXAgYSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAgc2lnbmFsIGNvbm5lY3Rpb25zLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGNvbnN0IHZhbHVlOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29ubmVjdGlvbihcbiAqICAgXCJpbml0aWFsIHZhbHVlXCIsXG4gKiAgIFtvYmoxLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXSxcbiAqICAgW29iajIsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdXG4gKiApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHNpZ25hbHMgQSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAsIHNpZ25hbCBuYW1lIGFuZCBjYWxsYmFjayBwYWlycyB0byBjb25uZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbjxcbiAgICBULFxuICAgIE8xIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzEgZXh0ZW5kcyBrZXlvZiBPMVtcIiRzaWduYWxzXCJdLFxuICAgIE8yIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzIgZXh0ZW5kcyBrZXlvZiBPMltcIiRzaWduYWxzXCJdLFxuICAgIE8zIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzMgZXh0ZW5kcyBrZXlvZiBPM1tcIiRzaWduYWxzXCJdLFxuICAgIE80IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzQgZXh0ZW5kcyBrZXlvZiBPNFtcIiRzaWduYWxzXCJdLFxuICAgIE81IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzUgZXh0ZW5kcyBrZXlvZiBPNVtcIiRzaWduYWxzXCJdLFxuICAgIE82IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzYgZXh0ZW5kcyBrZXlvZiBPNltcIiRzaWduYWxzXCJdLFxuICAgIE83IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzcgZXh0ZW5kcyBrZXlvZiBPN1tcIiRzaWduYWxzXCJdLFxuICAgIE84IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzggZXh0ZW5kcyBrZXlvZiBPOFtcIiRzaWduYWxzXCJdLFxuICAgIE85IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzkgZXh0ZW5kcyBrZXlvZiBPOVtcIiRzaWduYWxzXCJdLFxuPihcbiAgICBpbml0OiBULFxuICAgIGgxOiBbTzEsIFMxLCBDb25uZWN0aW9uSGFuZGxlcjxPMSwgUzEsIFQ+XSxcbiAgICBoMj86IFtPMiwgUzIsIENvbm5lY3Rpb25IYW5kbGVyPE8yLCBTMiwgVD5dLFxuICAgIGgzPzogW08zLCBTMywgQ29ubmVjdGlvbkhhbmRsZXI8TzMsIFMzLCBUPl0sXG4gICAgaDQ/OiBbTzQsIFM0LCBDb25uZWN0aW9uSGFuZGxlcjxPNCwgUzQsIFQ+XSxcbiAgICBoNT86IFtPNSwgUzUsIENvbm5lY3Rpb25IYW5kbGVyPE81LCBTNSwgVD5dLFxuICAgIGg2PzogW082LCBTNiwgQ29ubmVjdGlvbkhhbmRsZXI8TzYsIFM2LCBUPl0sXG4gICAgaDc/OiBbTzcsIFM3LCBDb25uZWN0aW9uSGFuZGxlcjxPNywgUzcsIFQ+XSxcbiAgICBoOD86IFtPOCwgUzgsIENvbm5lY3Rpb25IYW5kbGVyPE84LCBTOCwgVD5dLFxuICAgIGg5PzogW085LCBTOSwgQ29ubmVjdGlvbkhhbmRsZXI8TzksIFM5LCBUPl0sXG4pIHtcbiAgICBsZXQgdmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBzaWduYWxzID0gW2gxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIGg3LCBoOCwgaDldLmZpbHRlcigoaCkgPT4gaCAhPT0gdW5kZWZpbmVkKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHNpZ25hbHMubWFwKChbb2JqZWN0LCBzaWduYWwsIGNhbGxiYWNrXSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmNvbm5lY3QuY2FsbChcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LFxuICAgICAgICAgICAgICAgICAgICBzaWduYWwgYXMgc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAoXywgLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBjYWxsYmFjayguLi5hcmdzLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5kaXNjb25uZWN0LmNhbGwob2JqZWN0LCBpZClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB2YWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHNpZ25hbCBmcm9tIGEgcHJvdmllciBmdW5jdGlvbi5cbiAqIFRoZSBwcm92aWRlciBpcyBjYWxsZWQgd2hlbiB0aGUgZmlyc3Qgc3Vic2NyaWJlciBhcHBlYXJzIGFuZCB0aGUgcmV0dXJuZWQgZGlzcG9zZVxuICogZnVuY3Rpb24gZnJvbSB0aGUgcHJvdmlkZXIgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgbnVtYmVyIG9mIHN1YnNjcmliZXJzIGRyb3AgdG8gemVyby5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCB2YWx1ZSA9IGNyZWF0ZUV4dGVybmFsKDAsIChzZXQpID0+IHtcbiAqICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiBzZXQoKHYpID0+IHYgKyAxKSlcbiAqICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXG4gKiB9KVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBwcm9kdWNlciBUaGUgcHJvZHVjZXIgZnVuY3Rpb24gd2hpY2ggc2hvdWxkIHJldHVybiBhIGNsZWFudXAgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUV4dGVybmFsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgcHJvZHVjZXI6IChzZXQ6IFNldHRlcjxUPikgPT4gRGlzcG9zZUZ1bmN0aW9uLFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IERpc3Bvc2VGdW5jdGlvblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHByb2R1Y2VyKCh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWU6IFQgPSB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihjdXJyZW50VmFsdWUpIDogdlxuICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xudHlwZSBTZXR0aW5nczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBVbmNhcGl0YWxpemU8UGFzY2FsaWZ5PEs+Pl06IEFjY2Vzc29yPFJlY3Vyc2l2ZUluZmVyPFRbS10+PlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIGBzZXQke1Bhc2NhbGlmeTxLPn1gXTogU2V0dGVyPERlZXBJbmZlcjxUW0tdPj5cbn1cblxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKlxuICogV3JhcCBhIHtAbGluayBHaW8uU2V0dGluZ3N9IGludG8gYSBjb2xsZWN0aW9uIG9mIHNldHRlcnMgYW5kIGFjY2Vzc29ycy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBzID0gY3JlYXRlU2V0dGluZ3Moc2V0dGluZ3MsIHtcbiAqICAgXCJjb21wbGV4LWtleVwiOiBcImF7c2F7c3N9fVwiLFxuICogICBcInNpbXBsZS1rZXlcIjogXCJzXCIsXG4gKiB9KVxuICpcbiAqIHMuY29tcGxleEtleS5zdWJzY3JpYmUoKCkgPT4ge1xuICogICBwcmludChzLmNvbXBsZXhLZXkuZ2V0KCkpXG4gKiB9KVxuICpcbiAqIHMuc2V0Q29tcGxleEtleSgocHJldikgPT4gKHtcbiAqICAgLi4ucHJldixcbiAqICAga2V5OiB7IG5lc3RlZDogXCJcIiB9LFxuICogfSkpXG4gKiBgYGBcbiAqL1xuLy8gVE9ETzogY29tZSB1cCB3aXRoIGFuIEFQSVxuLy8gLSB0byBtYW51YWxseSBhbm5vdGF0ZSBWYXJpYW50IHR5cGVkIHNldHRlcnMvZ2V0dGVyc1xuLy8gLSB0byBzZXQgcmVjdXJzaXZlIHZzIGRlZXAgdW5wYWNrIHBlciBrZXlcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXR0aW5nczxjb25zdCBUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4oXG4gICAgc2V0dGluZ3M6IEdpby5TZXR0aW5ncyxcbiAgICBrZXlzOiBULFxuKTogU2V0dGluZ3M8VD4ge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGtleXMpLmZsYXRNYXAoKFtrZXksIHR5cGVdKSA9PiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY2FtZWxpZnkoa2V5KSxcbiAgICAgICAgICAgICAgICBuZXcgQWNjZXNzb3IoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHNldHRpbmdzLmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpLFxuICAgICAgICAgICAgICAgICAgICAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gc2V0dGluZ3MuY29ubmVjdChgY2hhbmdlZDo6JHtrZXl9YCwgY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gc2V0dGluZ3MuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBgc2V0JHtrZXlbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaWZ5KGtleSkuc2xpY2UoMSl9YCxcbiAgICAgICAgICAgICAgICAodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zZXRfdmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkuZGVlcFVucGFjaygpKSA6IHYsXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIF0pLFxuICAgIClcbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxudHlwZSBDaGlsZEZuID0gKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmogfCBudW1iZXIgfCBzdHJpbmcsIGluZGV4PzogbnVtYmVyKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIGFkZENoaWxkOiBDaGlsZEZuXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgaW5pdFByb3BzOiAocHJvcHM6IGFueSkgPT4gdm9pZFxuICAgIGRlZmF1bHRDbGVhbnVwOiAob2JqZWN0OiBHT2JqKSA9PiB2b2lkXG59XG5cbmZ1bmN0aW9uIG1pc3NpbmdJbXBsKCkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgYWRkQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUgfSBmcm9tIFwiLi4vZ25vbWUvc2lnbmFsVHJhY2tlci5qc1wiXG5cbi8vIFRPRE86IEZyYWdtZW50IHNob3VsZCBpbXBsZW1lbnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgY2xhc3MgRnJhZ21lbnQ8VCA9IGFueT4gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBcImRlc3Ryb3lcIjoge30sXG5cbiAgICAgICAgXCJjaGlsZC1hZGRlZFwiOiB7XG4gICAgICAgICAgICBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1QsIEdPYmplY3QuVFlQRV9VSU5UXSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJjaGlsZC1yZW1vdmVkXCI6IHtcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVCwgR09iamVjdC5UWVBFX1VJTlRdLFxuICAgICAgICB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICAgICAgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUodGhpcylcbiAgICB9XG5cbiAgICBzdGF0aWMgbmV3PFQ+KGNoaWxkcmVuOiBBcnJheTxUPiA9IFtdKSB7XG4gICAgICAgIHJldHVybiBuZXcgRnJhZ21lbnQoeyBjaGlsZHJlbiB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgY29ubmVjdGlvbklkcyA9IG5ldyBTZXQ8bnVtYmVyPigpXG4gICAgcHJpdmF0ZSBfY2hpbGRyZW46IEFycmF5PFQ+XG5cbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5fY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgYWRkQ2hpbGQoY2hpbGQ6IFQsIGluZGV4OiBudW1iZXIgPSAtMSk6IHZvaWQge1xuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYG5lc3RpbmcgRnJhZ21lbnRzIGFyZSBub3QgeWV0IHN1cHBvcnRlZGApXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IFtcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZSgwLCBpbmRleCksXG4gICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgLi4udGhpcy5fY2hpbGRyZW4uc2xpY2UoaW5kZXgpLFxuICAgICAgICAgICAgXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgICAgICAgIGluZGV4ID0gdGhpcy5fY2hpbGRyZW4ubGVuZ3RoIC0gMVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5lbWl0KFwiY2hpbGQtYWRkZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgaGFzQ2hpbGQoY2hpbGQ6IFQpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoY2gpID0+IGNoID09PSBjaGlsZCkgPiAtMVxuICAgIH1cblxuICAgIHJlbW92ZUNoaWxkKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKVxuXG4gICAgICAgIHRoaXMuZW1pdChcImNoaWxkLXJlbW92ZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoeyBjaGlsZHJlbiA9IFtdIH06IFBhcnRpYWw8eyBjaGlsZHJlbjogQXJyYXk8VD4gfCBUIH0+ID0ge30pIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgY29ubmVjdChzaWduYWw6IHN0cmluZywgY2FsbGJhY2s6IChfOiB0aGlzLCAuLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IG51bWJlciB7XG4gICAgICAgIGNvbnN0IGlkID0gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25JZHMuYWRkKGlkKVxuICAgICAgICByZXR1cm4gaWRcbiAgICB9XG5cbiAgICBkaXNjb25uZWN0KGlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuZGlzY29ubmVjdChpZClcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uSWRzLmRlbGV0ZShpZClcbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmVtaXQoXCJkZXN0cm95XCIpXG4gICAgICAgIGZvciAoY29uc3QgaWQgb2YgdGhpcy5jb25uZWN0aW9uSWRzLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBzdXBlci5kaXNjb25uZWN0KGlkKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbnR5cGUgVHlwZSA9IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IEdPYmplY3QuT2JqZWN0IH1cblxuLy8gQHRzLWV4cGVjdC1lcnJvciBtaXNzaW5nIHR5cGVzXG5jb25zdCBtb2QgPSBpbXBvcnQoXCJyZXNvdXJjZTovLy9vcmcvZ25vbWUvc2hlbGwvbWlzYy9zaWduYWxUcmFja2VyLmpzXCIpXG5cbmV4cG9ydCBjb25zdCByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZTogKHR5cGU6IFR5cGUpID0+IHZvaWQgPSBhd2FpdCBtb2RcbiAgICAudGhlbigobW9kKSA9PiBtb2QucmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUpXG4gICAgLmNhdGNoKCgpID0+ICgpID0+IHZvaWQgMClcbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yLCB0eXBlIFN0YXRlLCBjcmVhdGVTdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuaW50ZXJmYWNlIEZvclByb3BzPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4ge1xuICAgIGVhY2g6IEFjY2Vzc29yPEl0ZXJhYmxlPEl0ZW0+PlxuICAgIGNoaWxkcmVuOiAoaXRlbTogSXRlbSwgaW5kZXg6IEFjY2Vzc29yPG51bWJlcj4pID0+IEVsXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFbCwgaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZClcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIHRoZSBrZXkgZm9yIGVhY2ggaXRlbS5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQgaXRlbXMgYXJlIG1hcHBlZCBieTpcbiAgICAgKiAtIHZhbHVlIGluIGNhc2Ugb2YgcHJpbWl0aXZlIHZhbHVlc1xuICAgICAqIC0gcmVmZXJlbmNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlkPzogKGl0ZW06IEl0ZW0pID0+IEtleSB8IEl0ZW1cbn1cblxuLy8gVE9ETzogc3VwcG9ydCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3I8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5Pih7XG4gICAgZWFjaCxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxuICAgIGlkID0gKGl0ZW06IEl0ZW0pID0+IGl0ZW0sXG59OiBGb3JQcm9wczxJdGVtLCBFbCwgS2V5Pik6IEZyYWdtZW50PEVsPiB7XG4gICAgdHlwZSBNYXBJdGVtID0geyBpdGVtOiBJdGVtOyBjaGlsZDogRWw7IGluZGV4OiBTdGF0ZTxudW1iZXI+OyBzY29wZTogU2NvcGUgfVxuXG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXA8SXRlbSB8IEtleSwgTWFwSXRlbT4oKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEVsPigpXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleF0sIHNjb3BlIH06IE1hcEl0ZW0pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQsIGl0ZW0sIGluZGV4LmdldCgpKVxuICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgfVxuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayhpdGFyZWFibGU6IEl0ZXJhYmxlPEl0ZW0+KSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gWy4uLml0YXJlYWJsZV1cbiAgICAgICAgY29uc3QgaWRzID0gaXRlbXMubWFwKGlkKVxuICAgICAgICBjb25zdCBpZFNldCA9IG5ldyBTZXQoaWRzKVxuXG4gICAgICAgIC8vIGNsZWFudXAgY2hpbGRyZW4gbWlzc2luZyBmcm9tIGFyclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtYXAuZW50cmllcygpKSB7XG4gICAgICAgICAgICAvLyB0aGVyZSBpcyBubyBnZW5lcmljIHdheSB0byBpbnNlcnQgY2hpbGQgYXQgaW5kZXhcbiAgICAgICAgICAgIC8vIHNvIHdlIHNvcnQgYnkgcmVtb3ZpbmcgZXZlcnkgY2hpbGQgYW5kIHJlYXBwZW5kaW5nIGluIG9yZGVyXG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZCh2YWx1ZS5jaGlsZClcblxuICAgICAgICAgICAgaWYgKCFpZFNldC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgICAgICAgICBtYXAuZGVsZXRlKGtleSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBpbmRleCBhbmQgYWRkIG5ldyBpdGVtc1xuICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGlkc1tpXVxuICAgICAgICAgICAgaWYgKG1hcC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgfSA9IG1hcC5nZXQoa2V5KSFcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKVxuICAgICAgICAgICAgICAgIGlmIChmcmFnbWVudC5oYXNDaGlsZChjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gY3JlYXRlU3RhdGUoaSlcbiAgICAgICAgICAgICAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpXG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSlcbiAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gZWFjaC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG5pbnRlcmZhY2UgV2l0aFByb3BzPFQsIEUgZXh0ZW5kcyBKU1guRWxlbWVudD4ge1xuICAgIHZhbHVlOiBBY2Nlc3NvcjxUPlxuICAgIGNoaWxkcmVuOiAodmFsdWU6IFQpID0+IEUgfCBcIlwiIHwgZmFsc2UgfCBudWxsIHwgdW5kZWZpbmVkXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFKSA9PiB2b2lkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gV2l0aDxULCBFIGV4dGVuZHMgSlNYLkVsZW1lbnQ+KHtcbiAgICB2YWx1ZSxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxufTogV2l0aFByb3BzPFQsIEU+KTogRnJhZ21lbnQ8RT4ge1xuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFPigpXG5cbiAgICBsZXQgc2NvcGU6IFNjb3BlXG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayh2OiBUKSB7XG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZnJhZ21lbnQuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGZyYWdtZW50LnJlbW92ZUNoaWxkKGNoaWxkKVxuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGNsZWFudXAoY2hpbGQpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBlbnYuZGVmYXVsdENsZWFudXAoY2hpbGQpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzY29wZSkgc2NvcGUuZGlzcG9zZSgpXG4gICAgICAgIH1cblxuICAgICAgICBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgIGNvbnN0IGNoID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQodikpXG4gICAgICAgIGlmIChjaCAhPT0gXCJcIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2gpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gdmFsdWUuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayh2YWx1ZS5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICBkaXNwb3NlKClcbiAgICB9KVxuXG4gICAgcmV0dXJuIGZyYWdtZW50XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBrZWJhYmlmeSwgdHlwZSBQYXNjYWxpZnksIHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcbmltcG9ydCB7IHNldFR5cGUgfSBmcm9tIFwiLi9qc3guanNcIlxuXG50eXBlIEVsZW1lbnQgPSBKU1guRWxlbWVudCB8IFwiXCIgfCBmYWxzZSB8IG51bGwgfCB1bmRlZmluZWRcblxudHlwZSBUaGlzUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0PiA9IHtcbiAgICB0aGlzOiBTZWxmXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuXG4gICAgY2hpbGRyZW4/OiBFbGVtZW50IHwgQXJyYXk8RWxlbWVudD5cbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBTZWxmXT86IFNlbGZbS10gfCBBY2Nlc3NvcjxOb25OdWxsYWJsZTxTZWxmW0tdPj5cbn0gJiB7XG4gICAgW1MgaW4ga2V5b2YgU2VsZltcIiRzaWduYWxzXCJdIGFzIFMgZXh0ZW5kcyBgbm90aWZ5Ojoke2luZmVyIFB9YFxuICAgICAgICA/IGBvbk5vdGlmeSR7UGFzY2FsaWZ5PFA+fWBcbiAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxTPn1gXG4gICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gVE9ETzpcbi8vIGNvbnNpZGVyIG1ha2luZyB0aGlzIGNvbXBvbmVudCBhIHBvdGVudGlhbCBzdWJzdGl0dXRlIGZvciBgY3JlYXRlUm9vdCgpYFxuLy8gZGlzcG9zaW5nIHRoZSBzY29wZSB1c2luZyBhIGRlc3Ryb3kgc2lnbmFsXG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgZnVuY3Rpb24gVGhpczxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KHtcbiAgICB0aGlzOiBzZWxmLFxuICAgIGNoaWxkcmVuLFxuICAgICR0eXBlLFxuICAgIC4uLnByb3BzXG59OiBUaGlzUHJvcHM8VD4pIHtcbiAgICBjb25zdCBjbGVhbnVwID0gbmV3IEFycmF5PCgpID0+IHZvaWQ+KClcblxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShzZWxmLCAkdHlwZSlcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5ID09PSBcImNzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcImNsYXNzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGtleS5zdGFydHNXaXRoKFwib25Ob3RpZnlcIilcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29ubmVjdChgbm90aWZ5Ojoke2tlYmFiaWZ5KGtleS5zbGljZSg4KSl9YCwgdmFsdWUpXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbm5lY3Qoa2ViYWJpZnkoa2V5LnNsaWNlKDIpKSwgdmFsdWUpXG5cbiAgICAgICAgICAgIGNsZWFudXAucHVzaCgoKSA9PiBzZWxmLmRpc2Nvbm5lY3QoaWQpKVxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgaWYgKGNoICE9PSBcIlwiICYmIGNoICE9PSBmYWxzZSAmJiBjaCAhPT0gbnVsbCAmJiBjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKHNlbGYsIGNoLCAtMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGNoID0gY2hpbGRyZW5cbiAgICAgICAgaWYgKGNoICE9PSBcIlwiICYmIGNoICE9PSBmYWxzZSAmJiBjaCAhPT0gbnVsbCAmJiBjaCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQoc2VsZiwgY2gsIC0xKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2xlYW51cC5mb3JFYWNoKChjYikgPT4gY2IoKSkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGZcbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcbmltcG9ydCBBc3RhbElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5cbmV4cG9ydCB0eXBlIFRpbWUgPSBBc3RhbElPLlRpbWVcbmV4cG9ydCBjb25zdCBUaW1lID0gQXN0YWxJTy5UaW1lXG5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLmludGVydmFsKGludGVydmFsLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLnRpbWVvdXQodGltZW91dCwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUuaWRsZSgoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBBc3RhbElPLlRpbWUgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgZnVuY3Rpb24gc2V0KHZhbHVlOiBUKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgdGltZXIgPSBpbnRlcnZhbChpdmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aW1lcj8uY2FuY2VsKClcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IEFzdGFsSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcblxudHlwZSBBcmdzID0ge1xuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW11cbiAgICBvdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWRcbiAgICBlcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgUHJvY2VzcyA9IEFzdGFsSU8uUHJvY2Vzc1xuZXhwb3J0IGNvbnN0IFByb2Nlc3MgPSBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoYXJnczogQXJncyk6IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkLFxuICAgIG9uRXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkLFxuKTogQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGFyZ3NPckNtZDogQXJncyB8IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQgPSBwcmludCxcbiAgICBvbkVycjogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnRlcnIsXG4pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkuaXNBcnJheShhcmdzT3JDbWQpIHx8IHR5cGVvZiBhcmdzT3JDbWQgPT09IFwic3RyaW5nXCJcbiAgICBjb25zdCB7IGNtZCwgZXJyLCBvdXQgfSA9IHtcbiAgICAgICAgY21kOiBhcmdzID8gYXJnc09yQ21kIDogYXJnc09yQ21kLmNtZCxcbiAgICAgICAgZXJyOiBhcmdzID8gb25FcnIgOiBhcmdzT3JDbWQuZXJyIHx8IG9uRXJyLFxuICAgICAgICBvdXQ6IGFyZ3MgPyBvbk91dCA6IGFyZ3NPckNtZC5vdXQgfHwgb25PdXQsXG4gICAgfVxuXG4gICAgY29uc3QgcHJvYyA9IEFycmF5LmlzQXJyYXkoY21kKVxuICAgICAgICA/IEFzdGFsSU8uUHJvY2Vzcy5zdWJwcm9jZXNzdihjbWQpXG4gICAgICAgIDogQXN0YWxJTy5Qcm9jZXNzLnN1YnByb2Nlc3MoY21kKVxuXG4gICAgcHJvYy5jb25uZWN0KFwic3Rkb3V0XCIsIChfLCBzdGRvdXQ6IHN0cmluZykgPT4gb3V0KHN0ZG91dCkpXG4gICAgcHJvYy5jb25uZWN0KFwic3RkZXJyXCIsIChfLCBzdGRlcnI6IHN0cmluZykgPT4gZXJyKHN0ZGVycikpXG4gICAgcmV0dXJuIHByb2Ncbn1cblxuLyoqIEB0aHJvd3Mge0dMaWIuRXJyb3J9IFRocm93cyBzdGRlcnIgKi9cbmV4cG9ydCBmdW5jdGlvbiBleGVjKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjbWQpID8gQXN0YWxJTy5Qcm9jZXNzLmV4ZWN2KGNtZCkgOiBBc3RhbElPLlByb2Nlc3MuZXhlYyhjbWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGVjQXN5bmMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY21kKSkge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2KGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2X2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmMoY21kLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbElPLlByb2Nlc3MuZXhlY19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzKGluaXQ6IHN0cmluZywgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBwcm9jOiBBc3RhbElPLlByb2Nlc3MgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHByb2MgPSBzdWJwcm9jZXNzKGV4ZWMsIChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcm9jPy5raWxsKClcbiAgICAgICAgICAgICAgICBwcm9jID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICIvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlICovXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgQ0NQcm9wcyB9IGZyb20gXCJnbmltXCJcbmltcG9ydCB7IGludHJpbnNpY0VsZW1lbnRzIH0gZnJvbSBcImduaW0vZ3RrNC9qc3gtcnVudGltZVwiXG5cbnR5cGUgUHJvcHM8VCBleHRlbmRzIEd0ay5XaWRnZXQsIFByb3BzPiA9IENDUHJvcHM8VCwgUGFydGlhbDxQcm9wcz4+XG5cbk9iamVjdC5hc3NpZ24oaW50cmluc2ljRWxlbWVudHMsIHtcbiAgICBib3g6IEd0ay5Cb3gsXG4gICAgYnV0dG9uOiBHdGsuQnV0dG9uLFxuICAgIGNlbnRlcmJveDogR3RrLkNlbnRlckJveCxcbiAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBBc3RhbC5DaXJjdWxhclByb2dyZXNzLFxuICAgIGRyYXdpbmdhcmVhOiBHdGsuRHJhd2luZ0FyZWEsXG4gICAgZW50cnk6IEd0ay5FbnRyeSxcbiAgICBpbWFnZTogR3RrLkltYWdlLFxuICAgIGxhYmVsOiBHdGsuTGFiZWwsXG4gICAgbGV2ZWxiYXI6IEd0ay5MZXZlbEJhcixcbiAgICBtZW51YnV0dG9uOiBHdGsuTWVudUJ1dHRvbixcbiAgICBvdmVybGF5OiBHdGsuT3ZlcmxheSxcbiAgICBwb3BvdmVyOiBHdGsuUG9wb3ZlcixcbiAgICByZXZlYWxlcjogR3RrLlJldmVhbGVyLFxuICAgIHNjcm9sbGVkd2luZG93OiBHdGsuU2Nyb2xsZWRXaW5kb3csXG4gICAgc2xpZGVyOiBBc3RhbC5TbGlkZXIsXG4gICAgc3RhY2s6IEd0ay5TdGFjayxcbiAgICBzd2l0Y2g6IEd0ay5Td2l0Y2gsXG4gICAgdG9nZ2xlYnV0dG9uOiBHdGsuVG9nZ2xlQnV0dG9uLFxuICAgIHdpbmRvdzogQXN0YWwuV2luZG93LFxufSlcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgYm94OiBQcm9wczxHdGsuQm94LCBHdGsuQm94LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBidXR0b246IFByb3BzPEd0ay5CdXR0b24sIEd0ay5CdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGNlbnRlcmJveDogUHJvcHM8R3RrLkNlbnRlckJveCwgR3RrLkNlbnRlckJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgLy8gY2lyY3VsYXJwcm9ncmVzczogUHJvcHM8QXN0YWwuQ2lyY3VsYXJQcm9ncmVzcywgQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZHJhd2luZ2FyZWE6IFByb3BzPEd0ay5EcmF3aW5nQXJlYSwgR3RrLkRyYXdpbmdBcmVhLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBlbnRyeTogUHJvcHM8R3RrLkVudHJ5LCBHdGsuRW50cnkuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGltYWdlOiBQcm9wczxHdGsuSW1hZ2UsIEd0ay5JbWFnZS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGFiZWw6IFByb3BzPEd0ay5MYWJlbCwgR3RrLkxhYmVsLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBsZXZlbGJhcjogUHJvcHM8R3RrLkxldmVsQmFyLCBHdGsuTGV2ZWxCYXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG1lbnVidXR0b246IFByb3BzPEd0ay5NZW51QnV0dG9uLCBHdGsuTWVudUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgb3ZlcmxheTogUHJvcHM8R3RrLk92ZXJsYXksIEd0ay5PdmVybGF5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBwb3BvdmVyOiBQcm9wczxHdGsuUG9wb3ZlciwgR3RrLlBvcG92ZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHJldmVhbGVyOiBQcm9wczxHdGsuUmV2ZWFsZXIsIEd0ay5SZXZlYWxlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2Nyb2xsZWR3aW5kb3c6IFByb3BzPEd0ay5TY3JvbGxlZFdpbmRvdywgR3RrLlNjcm9sbGVkV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzbGlkZXI6IFByb3BzPEFzdGFsLlNsaWRlciwgQXN0YWwuU2xpZGVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzdGFjazogUHJvcHM8R3RrLlN0YWNrLCBHdGsuU3RhY2suQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHN3aXRjaDogUHJvcHM8R3RrLlN3aXRjaCwgR3RrLlN3aXRjaC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgdG9nZ2xlYnV0dG9uOiBQcm9wczxHdGsuVG9nZ2xlQnV0dG9uLCBHdGsuVG9nZ2xlQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICB3aW5kb3c6IFByb3BzPEFzdGFsLldpbmRvdywgQXN0YWwuV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCAqIGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuIiwgImltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZ2V0VHlwZSwgb25DbGVhbnVwLCBBY2Nlc3NvciwgRnJhZ21lbnQgfSBmcm9tIFwiLi4vaW5kZXguanNcIlxuaW1wb3J0IHsgY29uZmlndWUgfSBmcm9tIFwiLi4vanN4L2Vudi5qc1wiXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmZ1bmN0aW9uIGFkZChwYXJlbnQ6IEd0ay5CdWlsZGFibGUsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCwgXzogbnVtYmVyKSB7XG4gICAgaWYgKCFzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIF8pKSB7XG4gICAgICAgIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBzcGVjaWFsUmVtb3ZlKF9wYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBfY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgLy8gVE9ETzogYWRkIGFueSBzcGVjaWFsIGNhc2VcbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gc3BlY2lhbEFkZChwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QsIF86IG51bWJlcikge1xuICAgIC8vIFRPRE86IGFkZCBhbnkgb3RoZXIgc3BlY2lhbCBjYXNlXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgIFwic2V0X2FkanVzdG1lbnRcIiBpbiBwYXJlbnQgJiZcbiAgICAgICAgdHlwZW9mIHBhcmVudC5zZXRfYWRqdXN0bWVudCA9PT0gXCJmdW5jdGlvblwiXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5zZXRfYWRqdXN0bWVudChjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLldpZGdldCAmJlxuICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgY2hpbGQubmFtZSAhPT0gXCJcIiAmJlxuICAgICAgICBjaGlsZC5uYW1lICE9PSBudWxsICYmXG4gICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICApIHtcbiAgICAgICAgcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuUG9wb3ZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbikge1xuICAgICAgICBwYXJlbnQuc2V0X3BvcG92ZXIoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51TW9kZWwgJiZcbiAgICAgICAgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uIHx8IHBhcmVudCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyTWVudSlcbiAgICApIHtcbiAgICAgICAgcGFyZW50LnNldF9tZW51X21vZGVsKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51SXRlbSAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHaW8uTWVudSkge1xuICAgICAgICAvLyBUT0RPOlxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLkFwcGxpY2F0aW9uKSB7XG4gICAgICAgIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5UZXh0Vmlldykge1xuICAgICAgICBwYXJlbnQuc2V0X2J1ZmZlcihjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChzcGVjaWFsUmVtb3ZlKHBhcmVudCwgY2hpbGQpKSByZXR1cm5cblxuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmIGNoaWxkIGluc3RhbmNlb2YgR3RrLkV2ZW50Q29udHJvbGxlcikge1xuICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKVxuICAgIH1cblxuICAgIGlmIChcInNldF9jaGlsZFwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9jaGlsZCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICB9XG5cbiAgICBpZiAoXCJyZW1vdmVcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgIH1cblxuICAgIHRocm93IEVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2hpbGR9IGZyb20gJHtwYXJlbnR9YClcbn1cblxuY29uc3QgeyBhZGRDaGlsZCwgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBzZXRDc3Mob2JqZWN0LCBjc3MpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY3NzIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY3R4ID0gb2JqZWN0LmdldF9zdHlsZV9jb250ZXh0KClcbiAgICAgICAgbGV0IHByb3ZpZGVyOiBHdGsuQ3NzUHJvdmlkZXJcblxuICAgICAgICBjb25zdCBzZXR0ZXIgPSAoY3NzOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGlmICghY3NzLmluY2x1ZGVzKFwie1wiKSB8fCAhY3NzLmluY2x1ZGVzKFwifVwiKSkge1xuICAgICAgICAgICAgICAgIGNzcyA9IGAqIHsgJHtjc3N9IH1gXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm92aWRlcikgY3R4LnJlbW92ZV9wcm92aWRlcihwcm92aWRlcilcblxuICAgICAgICAgICAgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzKVxuICAgICAgICAgICAgY3R4LmFkZF9wcm92aWRlcihwcm92aWRlciwgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3NzIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MuZ2V0KCkpXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY3NzLnN1YnNjcmliZSgoKSA9PiBzZXR0ZXIoY3NzLmdldCgpKSlcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0dGVyKGNzcylcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNsYXNzTmFtZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAoKSA9PiAob2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdC5zZXRfY3NzX2NsYXNzZXMoY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGFkZENoaWxkKHBhcmVudCwgY2hpbGQsIGluZGV4ID0gLTEpIHtcbiAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgIGNoaWxkID0gR3RrLkxhYmVsLm5ldyhTdHJpbmcoY2hpbGQpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpKSByZXR1cm5cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHBhcmVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5CdWlsZGFibGUpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZC5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICBhZGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLWFkZGVkXCIsIChfLCBjaDogdW5rbm93biwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhZGRDaGlsZChwYXJlbnQsIGNoLCBpbmRleClcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLXJlbW92ZWRcIiwgKF8sIGNoOiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjaGlsZC5kZXN0cm95KCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFkZChwYXJlbnQsIGNoaWxkLCBpbmRleClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBhZGQgJHtjaGlsZH0gdG8gJHtwYXJlbnR9YClcbiAgICB9LFxufSlcblxuZXhwb3J0IHsgRnJhZ21lbnQsIGludHJpbnNpY0VsZW1lbnRzIH1cbmV4cG9ydCB7IGpzeCwganN4cyB9IGZyb20gXCIuLi9qc3gvanN4LmpzXCJcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgRm9yLCBvbkNsZWFudXAgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCBBc3RhbFRyYXkgZnJvbSBcImdpOi8vQXN0YWxUcmF5P3ZlcnNpb249MC4xXCI7XG5cbmNsYXNzIFN5c3RlbVRyYXlDbGFzcyB7XG4gICAgcHJpdmF0ZSBkZWZhdWx0OiBBc3RhbFRyYXkuVHJheTtcbiAgICBwcml2YXRlIGl0ZW1zQmluZGluZzogQWNjZXNzb3I8QXN0YWxUcmF5LlRyYXlJdGVtW10+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHQgPSBBc3RhbFRyYXkuZ2V0X2RlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5pdGVtc0JpbmRpbmcgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgXCJpdGVtc1wiKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldHVwVHJheUl0ZW0gPSAoYnRuOiBHdGsuTWVudUJ1dHRvbiwgaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtKSA9PiB7XG4gICAgICAgIGJ0bi5tZW51TW9kZWwgPSBpdGVtLm1lbnVNb2RlbDtcbiAgICAgICAgYnRuLmluc2VydF9hY3Rpb25fZ3JvdXAoXCJkYnVzbWVudVwiLCBpdGVtLmFjdGlvbkdyb3VwKTtcblxuICAgICAgICBjb25zdCBhZ0lkID0gaXRlbS5jb25uZWN0KFwibm90aWZ5OjphY3Rpb24tZ3JvdXBcIiwgKCkgPT4ge1xuICAgICAgICAgICAgYnRuLmluc2VydF9hY3Rpb25fZ3JvdXAoXCJkYnVzbWVudVwiLCBpdGVtLmFjdGlvbkdyb3VwKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgbW1JZCA9IGl0ZW0uY29ubmVjdChcIm5vdGlmeTo6bWVudS1tb2RlbFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBidG4uc2V0X21lbnVfbW9kZWwoaXRlbS5tZW51TW9kZWwpO1xuICAgICAgICB9KTtcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgaXRlbS5kaXNjb25uZWN0KGFnSWQpO1xuICAgICAgICAgICAgaXRlbS5kaXNjb25uZWN0KG1tSWQpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBUcmF5SXRlbSh7IGl0ZW0gfTogeyBpdGVtOiBBc3RhbFRyYXkuVHJheUl0ZW0gfSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b25cbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJUcmF5SXRlbVwiXX1cbiAgICAgICAgICAgICAgICB0b29sdGlwTWFya3VwPXtjcmVhdGVCaW5kaW5nKGl0ZW0sIFwidG9vbHRpcE1hcmt1cFwiKX1cbiAgICAgICAgICAgICAgICAkPXsoc2VsZikgPT4gdGhpcy5zZXR1cFRyYXlJdGVtKHNlbGYsIGl0ZW0pfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGltYWdlIGdpY29uPXtjcmVhdGVCaW5kaW5nKGl0ZW0sIFwiZ2ljb25cIil9IC8+XG4gICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBTeXN0ZW1UcmF5KCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJTeXN0ZW1UcmF5XCJdfT5cbiAgICAgICAgICAgICAgICA8Rm9yIGVhY2g9e3RoaXMuaXRlbXNCaW5kaW5nfSBjaGlsZHJlbj17KGl0ZW0pID0+IHRoaXMuVHJheUl0ZW0oeyBpdGVtIH0pfSAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jb25zdCBzeXN0ZW1UcmF5ID0gbmV3IFN5c3RlbVRyYXlDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgc3lzdGVtVHJheTtcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgb25DbGVhbnVwLCBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCBBc3RhbE1wcmlzIGZyb20gXCJnaTovL0FzdGFsTXByaXM/dmVyc2lvbj0wLjFcIjtcblxudHlwZSBQbGF5ZXJCdXR0b24gPSAncHJldmlvdXMnIHwgJ25leHQnIHwgJ3BsYXlpbmcnIHwgJ3BhdXNlZCcgfCAnc3RvcHBlZCc7XG5cbmNvbnN0IFBsYXllckJ1dHRvbkljb25zID0ge1xuICAgIHBsYXlpbmc6IFwibWVkaWEtcGxheWJhY2stc3RhcnQtc3ltYm9saWNcIixcbiAgICBwYXVzZWQ6IFwibWVkaWEtcGxheWJhY2stcGF1c2Utc3ltYm9saWNcIixcbiAgICBzdG9wcGVkOiBcIm1lZGlhLXBsYXliYWNrLXN0b3Atc3ltYm9saWNcIixcbiAgICBuZXh0OiBcIm1lZGlhLXNraXAtZm9yd2FyZC1zeW1ib2xpY1wiLFxuICAgIHByZXZpb3VzOiBcIm1lZGlhLXNraXAtYmFja3dhcmQtc3ltYm9saWNcIlxufVxuXG50eXBlIFBsYXllckRhdGEgPSB7XG4gICAgYWN0aXZlOiBib29sZWFuLFxuICAgIHRpdGxlOiBBY2Nlc3NvcjxzdHJpbmc+IHwgc3RyaW5nLFxuICAgIGFydGlzdDogQWNjZXNzb3I8c3RyaW5nPiB8IHN0cmluZyxcbiAgICBhbGJ1bTogQWNjZXNzb3I8c3RyaW5nPiB8IHN0cmluZyxcbiAgICBzdGF0dXNJY29uOiBBY2Nlc3NvcjxzdHJpbmc+IHwgc3RyaW5nLFxuICAgIHN0YXR1c1RleHQ6IEFjY2Vzc29yPHN0cmluZz4gfCBzdHJpbmcsXG4gICAgbmV4dDogKCkgPT4gdm9pZCxcbiAgICBwcmV2aW91czogKCkgPT4gdm9pZCxcbiAgICBwbGF5UGF1c2U6ICgpID0+IHZvaWRcbn1cblxuY2xhc3MgTWVkaWFDbGFzcyB7XG4gICAgcHJpdmF0ZSBtcHJpczogQXN0YWxNcHJpcy5NcHJpcztcbiAgICBwcml2YXRlIF9hY3RpdmVQbGF5ZXJEYXRhOiBBY2Nlc3NvcjxQbGF5ZXJEYXRhPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5tcHJpcyA9IEFzdGFsTXByaXMuZ2V0X2RlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5fYWN0aXZlUGxheWVyRGF0YSA9IGNyZWF0ZUJpbmRpbmcodGhpcy5tcHJpcywgXCJwbGF5ZXJzXCIpLmFzKFxuICAgICAgICAgICAgKHBsYXllcnMpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgcGxheWluZzogQXN0YWxNcHJpcy5QbGF5ZXIgfCBudWxsID0gbnVsbDtcbiAgICAgICAgICAgICAgICBsZXQgcGF1c2VkOiBBc3RhbE1wcmlzLlBsYXllciB8IG51bGwgPSBudWxsO1xuICAgICAgICAgICAgICAgIGxldCBmaW5hbDogQXN0YWxNcHJpcy5QbGF5ZXIgfCBudWxsID0gbnVsbDtcblxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcGxheWVyIG9mIHBsYXllcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gcGxheWVyLmdldF9wbGF5YmFja19zdGF0dXMoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5aW5nID0gcGxheWVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RhdHVzID09PSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBBVVNFRCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF1c2VkID0gcGxheWVyO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZmluYWwgPSBwbGF5aW5nIHx8IHBhdXNlZDtcblxuICAgICAgICAgICAgICAgIGlmIChmaW5hbCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAncGxheWJhY2tTdGF0dXMnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FuR29OZXh0ID0gY3JlYXRlQmluZGluZyhmaW5hbCwgJ2NhbkdvTmV4dCcpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYW5Hb1ByZXZpb3VzID0gY3JlYXRlQmluZGluZyhmaW5hbCwgJ2NhbkdvUHJldmlvdXMnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FuUGF1c2UgPSBjcmVhdGVCaW5kaW5nKGZpbmFsLCAnY2FuUGF1c2UnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FuUGxheSA9IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdjYW5QbGF5Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjcmVhdGVCaW5kaW5nKGZpbmFsLCAndGl0bGUnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFydGlzdDogY3JlYXRlQmluZGluZyhmaW5hbCwgJ2FydGlzdCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxidW06IGNyZWF0ZUJpbmRpbmcoZmluYWwsICdhbGJ1bScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzSWNvbjogc3RhdHVzLmFzKHN0ID0+IHRoaXMuZ2V0UGxheWVyU3RhdHVzSWNvbihzdCA9PT0gQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QTEFZSU5HID8gJ3BhdXNlZCcgOiAncGxheWluZycpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6IHN0YXR1cy5hcyhzdCA9PiB0aGlzLmdldFBsYXllclN0YXR1cyhzdCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dDogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYW5Hb05leHQuZ2V0KCkpIGZpbmFsIS5uZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXM6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FuR29QcmV2aW91cy5nZXQoKSkgZmluYWwhLnByZXZpb3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheVBhdXNlOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhblBhdXNlLmdldCgpIHx8IGNhblBsYXkuZ2V0KCkpIGZpbmFsIS5wbGF5X3BhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdOZW5odW0gcGxheWVyIGF0aXZvJyxcbiAgICAgICAgICAgICAgICAgICAgYXJ0aXN0OiAnJyxcbiAgICAgICAgICAgICAgICAgICAgYWxidW06ICcnLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXNJY29uOiBQbGF5ZXJCdXR0b25JY29ucy5zdG9wcGVkLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiB0aGlzLmdldFBsYXllclN0YXR1cyhBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlNUT1BQRUQpLFxuICAgICAgICAgICAgICAgICAgICBuZXh0OiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgIHByZXZpb3VzOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgIHBsYXlQYXVzZTogKCkgPT4geyB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFBsYXllclN0YXR1cyhzdGF0dXM6IEFzdGFsTXByaXMuUGxheWJhY2tTdGF0dXMpIHtcbiAgICAgICAgc3dpdGNoKHN0YXR1cykge1xuICAgICAgICAgICAgY2FzZSBBc3RhbE1wcmlzLlBsYXliYWNrU3RhdHVzLlBMQVlJTkc6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdUb2NhbmRvJztcbiAgICAgICAgICAgIGNhc2UgQXN0YWxNcHJpcy5QbGF5YmFja1N0YXR1cy5QQVVTRUQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdQYXVzYWRvJztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdOYWRhIHRvY2FuZG8nO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRQbGF5ZXJTdGF0dXNJY29uKHN0YXR1czogUGxheWVyQnV0dG9uKSB7XG4gICAgICAgIHN3aXRjaChzdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgJ3ByZXZpb3VzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMucHJldmlvdXM7XG4gICAgICAgICAgICBjYXNlICdwbGF5aW5nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUGxheWVyQnV0dG9uSWNvbnMucGxheWluZztcbiAgICAgICAgICAgIGNhc2UgJ3BhdXNlZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLnBhdXNlZDtcbiAgICAgICAgICAgIGNhc2UgJ3N0b3BwZWQnOlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5zdG9wcGVkO1xuICAgICAgICAgICAgY2FzZSAnbmV4dCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFBsYXllckJ1dHRvbkljb25zLm5leHQ7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBQbGF5ZXJCdXR0b25JY29ucy5zdG9wcGVkO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBNZWRpYSgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICA8V2l0aCB2YWx1ZT17dGhpcy5fYWN0aXZlUGxheWVyRGF0YX0+XG4gICAgICAgICAgICAgICAge3BsYXllciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8bWVudWJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsd2F5c1Nob3dBcnJvdz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiTWVkaWFcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vuc2l0aXZlPXtwbGF5ZXIuYWN0aXZlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvcG92ZXI9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9wb3Zlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTXByaXNQb3BvdmVyXCJdfSBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNcHJpc1BsYXllclwiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiTWV0YWRhdGFcIl19IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlRpdGxlXCJdfSBsYWJlbD17cGxheWVyLnRpdGxlfSBlbGxpcHNpemU9ezN9IG1heFdpZHRoQ2hhcnM9ezE1fSB3aWR0aENoYXJzPXszMH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJBcnRpc3RcIl19IGxhYmVsPXtwbGF5ZXIuYXJ0aXN0fSBlbGxpcHNpemU9ezN9IG1heFdpZHRoQ2hhcnM9ezE1fSB3aWR0aENoYXJzPXszMH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJBbGJ1bVwiXX0gbGFiZWw9e3BsYXllci5hbGJ1bX0gZWxsaXBzaXplPXszfSBtYXhXaWR0aENoYXJzPXsxNX0gd2lkdGhDaGFycz17MzB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkxvd2VyUGFydFwiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkNvbnRyb2xsZXJzXCJdfSBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiUHJldmlvdXNcIl19IHNlbnNpdGl2ZT17cGxheWVyLmFjdGl2ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fUFJJTUFSWSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gY2xpY2suY29ubmVjdChcInByZXNzZWRcIiwgcGxheWVyLnByZXZpb3VzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT57Y2xpY2suZGlzY29ubmVjdChoYW5kbGVyKX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1hZ2UgaWNvblNpemU9e0d0ay5JY29uU2l6ZS5MQVJHRX0gaWNvbk5hbWU9e1BsYXllckJ1dHRvbkljb25zLnByZXZpb3VzfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiUGxheVBhdXNlXCJdfSBzZW5zaXRpdmU9e3BsYXllci5hY3RpdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQ9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNlbGYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1BSSU1BUlkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoXCJwcmVzc2VkXCIsIHBsYXllci5wbGF5UGF1c2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoY2xpY2spO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PntjbGljay5kaXNjb25uZWN0KGhhbmRsZXIpfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSBpY29uU2l6ZT17R3RrLkljb25TaXplLkxBUkdFfSBpY29uTmFtZT17cGxheWVyLnN0YXR1c0ljb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJOZXh0XCJdfSBzZW5zaXRpdmU9e3BsYXllci5hY3RpdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQ9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNlbGYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1BSSU1BUlkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoXCJwcmVzc2VkXCIsIHBsYXllci5uZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT57Y2xpY2suZGlzY29ubmVjdChoYW5kbGVyKX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1hZ2UgaWNvblNpemU9e0d0ay5JY29uU2l6ZS5MQVJHRX0gaWNvbk5hbWU9e1BsYXllckJ1dHRvbkljb25zLm5leHR9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wb3BvdmVyPiBhcyBHdGsuUG9wb3Zlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3BsYXllci5zdGF0dXNUZXh0fSB3aWR0aENoYXJzPXsxMn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNvbnN0IG1lZGlhID0gbmV3IE1lZGlhQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IG1lZGlhO1xuIiwgImltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IG1rQXBwIH0gZnJvbSBcIi4uL19hcHAuanNcIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbmV4cG9ydCBkZWZhdWx0IG1rQXBwKEFzdGFsLkFwcGxpY2F0aW9uKVxuIiwgIi8qKlxuICogV29ya2Fyb3VuZCBmb3IgXCJDYW4ndCBjb252ZXJ0IG5vbi1udWxsIHBvaW50ZXIgdG8gSlMgdmFsdWUgXCJcbiAqL1xuXG5leHBvcnQge31cblxuZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXyQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKChtKSA9PiBwYXRjaChtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG59XG5cbmZ1bmN0aW9uIHBhdGNoPFAgZXh0ZW5kcyBvYmplY3Q+KHByb3RvOiBQLCBwcm9wOiBFeHRyYWN0PGtleW9mIFAsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKClcbiAgICAgICAgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJtaWNyb3Bob25lc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzcGVha2Vyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNpbmtzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNvdXJjZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFRyYXlcIiksICh7IFRyYXkgfSkgPT4ge1xuICAgIHBhdGNoKFRyYXkucHJvdG90eXBlLCBcIml0ZW1zXCIpXG59KVxuIiwgImltcG9ydCBcIi4vb3ZlcnJpZGVzLmpzXCJcbmltcG9ydCB7IHNldENvbnNvbGVMb2dEb21haW4gfSBmcm9tIFwiY29uc29sZVwiXG5pbXBvcnQgeyBleGl0LCBwcm9ncmFtQXJncyB9IGZyb20gXCJzeXN0ZW1cIlxuaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gXCJnbmltXCJcbmltcG9ydCBJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWwzIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249My4wXCJcbmltcG9ydCB0eXBlIEFzdGFsNCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5cbnR5cGUgQ29uZmlnID0gUGFydGlhbDx7XG4gICAgaW5zdGFuY2VOYW1lOiBzdHJpbmdcbiAgICBjc3M6IHN0cmluZ1xuICAgIGljb25zOiBzdHJpbmdcbiAgICBndGtUaGVtZTogc3RyaW5nXG4gICAgaWNvblRoZW1lOiBzdHJpbmdcbiAgICBjdXJzb3JUaGVtZTogc3RyaW5nXG4gICAgaG9sZDogYm9vbGVhblxuICAgIHJlcXVlc3RIYW5kbGVyKHJlcXVlc3Q6IHN0cmluZywgcmVzOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZCk6IHZvaWRcbiAgICBtYWluKC4uLmFyZ3M6IHN0cmluZ1tdKTogdm9pZFxuICAgIGNsaWVudChtZXNzYWdlOiAobXNnOiBzdHJpbmcpID0+IHN0cmluZywgLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXN0YWwzSlMgZXh0ZW5kcyBBc3RhbDMuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI6IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG5pbnRlcmZhY2UgQXN0YWw0SlMgZXh0ZW5kcyBBc3RhbDQuQXBwbGljYXRpb24ge1xuICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+XG4gICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldD86IGJvb2xlYW4pOiB2b2lkXG4gICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZFxuICAgIHN0YXJ0KGNvbmZpZz86IENvbmZpZyk6IHZvaWRcbn1cblxudHlwZSBBcHAzID0gdHlwZW9mIEFzdGFsMy5BcHBsaWNhdGlvblxudHlwZSBBcHA0ID0gdHlwZW9mIEFzdGFsNC5BcHBsaWNhdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwMz4oQXBwOiBBcHApOiBBc3RhbDNKU1xuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwPEFwcCBleHRlbmRzIEFwcDQ+KEFwcDogQXBwKTogQXN0YWw0SlNcblxuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwKEFwcDogQXBwMyB8IEFwcDQpIHtcbiAgICByZXR1cm4gbmV3IChjbGFzcyBBc3RhbEpTIGV4dGVuZHMgQXBwIHtcbiAgICAgICAgcHJpdmF0ZSBkaXNwb3NlUm9vdD86ICgpID0+IHZvaWRcblxuICAgICAgICBzdGF0aWMge1xuICAgICAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHsgR1R5cGVOYW1lOiBcIkFzdGFsSlNcIiB9LCB0aGlzIGFzIGFueSlcbiAgICAgICAgfVxuXG4gICAgICAgIGV2YWwoYm9keTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmbiA9IEZ1bmN0aW9uKGByZXR1cm4gKGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHtib2R5LmluY2x1ZGVzKFwiO1wiKSA/IGJvZHkgOiBgcmV0dXJuICR7Ym9keX07YH1cbiAgICAgICAgICAgICAgICAgICAgfSlgKVxuICAgICAgICAgICAgICAgICAgICBmbigpKCkudGhlbihyZXMpLmNhdGNoKHJlailcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWooZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3RIYW5kbGVyPzogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cblxuICAgICAgICB2ZnVuY19zaHV0ZG93bigpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnZmdW5jX3NodXRkb3duKClcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3Q/LigpXG4gICAgICAgIH1cblxuICAgICAgICB2ZnVuY19yZXF1ZXN0KG1zZzogc3RyaW5nLCBjb25uOiBHaW8uU29ja2V0Q29ubmVjdGlvbik6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyKG1zZywgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIElPLndyaXRlX3NvY2soY29ubiwgU3RyaW5nKHJlc3BvbnNlKSwgKF8sIHJlcykgPT4gSU8ud3JpdGVfc29ja19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdXBlci52ZnVuY19yZXF1ZXN0KG1zZywgY29ubilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgICAgICBzdXBlci5hcHBseV9jc3Moc3R5bGUsIHJlc2V0KVxuICAgICAgICB9XG5cbiAgICAgICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgICAgIGV4aXQoY29kZSA/PyAwKVxuICAgICAgICB9XG5cbiAgICAgICAgc3RhcnQoeyByZXF1ZXN0SGFuZGxlciwgY3NzLCBob2xkLCBtYWluLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfTogQ29uZmlnID0ge30pIHtcbiAgICAgICAgICAgIGNvbnN0IGFwcCA9IHRoaXMgYXMgdW5rbm93biBhcyBJbnN0YW5jZVR5cGU8QXBwMyB8IEFwcDQ+XG5cbiAgICAgICAgICAgIGNsaWVudCA/Pz0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSBcIiR7YXBwLmluc3RhbmNlTmFtZX1cIiBhbHJlYWR5IHJ1bm5pbmdgKVxuICAgICAgICAgICAgICAgIGV4aXQoMSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG4gICAgICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpXG5cbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIgPSByZXF1ZXN0SGFuZGxlclxuICAgICAgICAgICAgYXBwLmNvbm5lY3QoXCJhY3RpdmF0ZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2VSb290ID0gZGlzcG9zZVxuICAgICAgICAgICAgICAgICAgICBtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXBwLmFjcXVpcmVfc29ja2V0KClcbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQoKG1zZykgPT4gSU8uc2VuZF9yZXF1ZXN0KGFwcC5pbnN0YW5jZU5hbWUsIG1zZykhLCAuLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSlcblxuICAgICAgICAgICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgICAgICBob2xkID8/PSB0cnVlXG4gICAgICAgICAgICBpZiAoaG9sZCkgYXBwLmhvbGQoKVxuXG4gICAgICAgICAgICBhcHAucnVuQXN5bmMoW10pXG4gICAgICAgIH1cbiAgICB9KSgpXG59XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIjtcbmltcG9ydCB7IGNyZWF0ZVBvbGwgfSBmcm9tIFwiYWdzL3RpbWVcIjtcblxuY29uc3QgcG9sbFRpbWUgPSA2MDAwMDtcblxuY2xhc3MgRGF0ZVRpbWVDbGFzcyB7XG4gICAgcHJpdmF0ZSBmb3JtYXR0ZXJUaW1lID0gXCIlSDolTVwiO1xuICAgIHByaXZhdGUgZm9ybWF0dGVyRGF0ZSA9IFwiSG9qZSBcdTAwRTk6ICVBLCAlZCBkZSAlQiBkZSAlWVwiO1xuICAgIHByaXZhdGUgX2RhdGVUaW1lOiBBY2Nlc3Nvcjx7IGRhdGU6IHN0cmluZywgdGltZTogc3RyaW5nIH0+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9kYXRlVGltZSA9IGNyZWF0ZVBvbGwoeyBkYXRlOiBcIlwiLCB0aW1lOiBcIlwiIH0sIHBvbGxUaW1lLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub3cgPSBHTGliLkRhdGVUaW1lLm5ld19ub3dfbG9jYWwoKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZGF0ZTogbm93LmZvcm1hdCh0aGlzLmZvcm1hdHRlckRhdGUpISxcbiAgICAgICAgICAgICAgICB0aW1lOiBub3cuZm9ybWF0KHRoaXMuZm9ybWF0dGVyVGltZSkhXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldCBEYXRlVGltZVBvcG92ZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8R3RrLlBvcG92ZXI+XG4gICAgICAgICAgICAgICAgPEd0ay5DYWxlbmRhciBjc3NDbGFzc2VzPXtbXCJDYWxlbmRhclwiXX0gLz5cbiAgICAgICAgICAgIDwvR3RrLlBvcG92ZXI+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBEYXRlVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxtZW51YnV0dG9uIGNzc0NsYXNzZXM9e1tcIkRhdGVUaW1lQ2FsZW5kYXJcIl19IHBvcG92ZXI9e3RoaXMuRGF0ZVRpbWVQb3BvdmVyIGFzIEd0ay5Qb3BvdmVyfT5cbiAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiVGltZVwiXX0gbGFiZWw9e3RoaXMuX2RhdGVUaW1lLmFzKHQgPT4gYFx1RjAxNyAke3QudGltZX1gKX0gdG9vbHRpcE1hcmt1cD17dGhpcy5fZGF0ZVRpbWUuYXMoZCA9PiBgXHVEQjgwXHVEQ0VEICR7ZC5kYXRlfWApfSAvPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgZGF0ZVRpbWUgPSBuZXcgRGF0ZVRpbWVDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgZGF0ZVRpbWU7XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgR2RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kP3ZlcnNpb249MC4xXCI7XG5cbmV4cG9ydCBjbGFzcyBIeXBybGFuZCB7XG4gICAgcHJpdmF0ZSBkZWZhdWx0OiBBc3RhbEh5cHJsYW5kLkh5cHJsYW5kO1xuICAgIHByaXZhdGUgX3dvcmtzcGFjZXM6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlW10+O1xuICAgIHByaXZhdGUgX2ZvY3VzZWRXb3Jrc3BhY2U6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gQXN0YWxIeXBybGFuZC5nZXRfZGVmYXVsdCgpO1xuICAgICAgICB0aGlzLl93b3Jrc3BhY2VzID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwid29ya3NwYWNlc1wiKS5hcygod29ya3NwYWNlcykgPT4gd29ya3NwYWNlcy5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZCkpO1xuICAgICAgICB0aGlzLl9mb2N1c2VkV29ya3NwYWNlID0gY3JlYXRlQmluZGluZyh0aGlzLmRlZmF1bHQsIFwiZm9jdXNlZFdvcmtzcGFjZVwiKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHdvcmtzcGFjZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl93b3Jrc3BhY2VzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZm9jdXNlZFdvcmtzcGFjZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZvY3VzZWRXb3Jrc3BhY2U7XG4gICAgfVxuXG4gICAgcHVibGljIGFyZU1vbml0b3JzRXF1YWwobW9uaXRvcjogR2RrLk1vbml0b3IsIGh5cHJNb25pdG9yOiBBc3RhbEh5cHJsYW5kLk1vbml0b3IpIHtcbiAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBtb25pdG9yLmdldF9nZW9tZXRyeSgpO1xuICAgICAgICBpZihoeXByTW9uaXRvci5nZXRfbW9kZWwoKSA9PT0gbW9uaXRvci5nZXRfbW9kZWwoKVxuICAgICAgICAmJiBoeXByTW9uaXRvci5nZXRfaGVpZ2h0KCkgPT09IGdlb21ldHJ5LmhlaWdodFxuICAgICAgICAmJiBoeXByTW9uaXRvci5nZXRfd2lkdGgoKSA9PT0gZ2VvbWV0cnkud2lkdGhcbiAgICAgICAgJiYgaHlwck1vbml0b3IuZ2V0X3goKSA9PT0gZ2VvbWV0cnkueFxuICAgICAgICAmJiBoeXByTW9uaXRvci5nZXRfeSgpID09PSBnZW9tZXRyeS55KSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEh5cHJsYW5kTW9uaXRvcihtb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICBjb25zdCBoeXBybGFuZE1vbml0b3JzID0gdGhpcy5kZWZhdWx0LmdldF9tb25pdG9ycygpO1xuICAgICAgICByZXR1cm4gaHlwcmxhbmRNb25pdG9ycy5maW5kKGh5cHJNb25pdG9yID0+IHRoaXMuYXJlTW9uaXRvcnNFcXVhbChtb25pdG9yLCBoeXByTW9uaXRvcikpIHx8IGh5cHJsYW5kTW9uaXRvcnNbMF07XG4gICAgfVxufVxuXG5jb25zdCBoeXBybGFuZFNlcnZpY2UgPSBuZXcgSHlwcmxhbmQ7XG5cbmV4cG9ydCBkZWZhdWx0IGh5cHJsYW5kU2VydmljZTtcbiIsICJpbXBvcnQgV3AgZnJvbSBcImdpOi8vQXN0YWxXcFwiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgR3RrLCBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVCaW5kaW5nLCBvbkNsZWFudXAsIFdpdGggfSBmcm9tIFwiYWdzXCI7XG5cbmNsYXNzIEF1ZGlvQ29udHJvbENsYXNzIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IFdwLldwO1xuICAgIHByaXZhdGUgZGVmYXVsdFNwZWFrZXI6IEFjY2Vzc29yPFdwLkVuZHBvaW50PjtcbiAgICBwcml2YXRlIGRlZmF1bHRNaWNyb3Bob25lOiBBY2Nlc3NvcjxXcC5FbmRwb2ludD47XG4gICAgcHJpdmF0ZSByZWFkb25seSBzdGVwOiBudW1iZXIgPSAwLjAyO1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHQgPSBXcC5nZXRfZGVmYXVsdCgpITtcbiAgICAgICAgdGhpcy5kZWZhdWx0U3BlYWtlciA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAnZGVmYXVsdFNwZWFrZXInKTtcbiAgICAgICAgdGhpcy5kZWZhdWx0TWljcm9waG9uZSA9IGNyZWF0ZUJpbmRpbmcodGhpcy5kZWZhdWx0LCAnZGVmYXVsdE1pY3JvcGhvbmUnKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGhhbmRsZVNjcm9sbChlZHA6IFdwLkVuZHBvaW50LCBkeTogbnVtYmVyKSB7XG4gICAgICAgIGxldCBuZXdWb2x1bWUgPSBlZHAuZ2V0X3ZvbHVtZSgpO1xuICAgICAgICBpZihkeSA8IDApIG5ld1ZvbHVtZSArPSB0aGlzLnN0ZXA7XG4gICAgICAgIGVsc2UgbmV3Vm9sdW1lIC09IHRoaXMuc3RlcDtcbiAgICAgICAgZWRwLnNldF92b2x1bWUoTWF0aC5taW4obmV3Vm9sdW1lLCAxKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBFbmRwb2ludCh7IGVuZHBvaW50IH06IHsgZW5kcG9pbnQ6IEFjY2Vzc29yPFdwLkVuZHBvaW50PiB9KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgPFdpdGggdmFsdWU9e2VuZHBvaW50fT5cbiAgICAgICAgICAgICAgICB7ZWRwID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWNvbiA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAndm9sdW1lSWNvbicpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2b2x1bWUgPSBjcmVhdGVCaW5kaW5nKGVkcCwgJ3ZvbHVtZScpLmFzKGEgPT4gYCR7TWF0aC5yb3VuZChhICogMTAwKX0lYCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxlZnRDbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1BSSU1BUlkgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxlZnRIYW5kbGVyID0gbGVmdENsaWNrLmNvbm5lY3QoJ3ByZXNzZWQnLCAoKSA9PiBlZHAuc2V0X211dGUoIWVkcC5nZXRfbXV0ZSgpKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwoeyBmbGFnczogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMIH0pO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxIYW5kbGVyID0gc2Nyb2xsLmNvbm5lY3QoJ3Njcm9sbCcsIChjb250cm9sZXI6IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwsIGR4OiBudW1iZXIsIGR5OiBudW1iZXIpID0+IHRoaXMuaGFuZGxlU2Nyb2xsKGVkcCwgZHkpKTtcblxuICAgICAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdENsaWNrLmRpc2Nvbm5lY3QobGVmdEhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsLmRpc2Nvbm5lY3Qoc2Nyb2xsSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJFbmRwb2ludFwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNlbGYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIobGVmdENsaWNrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoc2Nyb2xsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1hZ2UgY3NzQ2xhc3Nlcz17W1wiSWNvblwiXX0gaWNvbk5hbWU9e2ljb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlZvbHVtZVwiXX0gbGFiZWw9e3ZvbHVtZX0gd2lkdGhDaGFycz17NH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIE1peGVyRW50cnkoeyBlbmRwb2ludCB9OiB7IGVuZHBvaW50OiBBY2Nlc3NvcjxXcC5FbmRwb2ludD4gfSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICA8V2l0aCB2YWx1ZT17ZW5kcG9pbnR9PlxuICAgICAgICAgICAgICAgICAgICB7ZWRwID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGljb24gPSBjcmVhdGVCaW5kaW5nKGVkcCwgJ3ZvbHVtZUljb24nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHZvbHVtZSA9IGNyZWF0ZUJpbmRpbmcoZWRwLCAndm9sdW1lJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2dnbGVNdXRlQ2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogR2RrLkJVVFRPTl9QUklNQVJZIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9nZ2xlTXV0ZUhhbmRsZXIgPSB0b2dnbGVNdXRlQ2xpY2suY29ubmVjdCgncHJlc3NlZCcsICgpID0+IGVkcC5zZXRfbXV0ZSghZWRwLmdldF9tdXRlKCkpKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwoeyBmbGFnczogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsSGFuZGxlciA9IHNjcm9sbC5jb25uZWN0KCdzY3JvbGwnLCAoY29udHJvbGVyOiBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsLCBkeDogbnVtYmVyLCBkeTogbnVtYmVyKSA9PiB0aGlzLmhhbmRsZVNjcm9sbChlZHAsIGR5KSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlTXV0ZUNsaWNrLmRpc2Nvbm5lY3QodG9nZ2xlTXV0ZUhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbC5kaXNjb25uZWN0KHNjcm9sbEhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJNaXhlckVudHJ5XCJdfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltYWdlIGNzc0NsYXNzZXM9e1tcIkljb25cIl19IGljb25OYW1lPXtpY29ufSAkPXtzZWxmID0+IHNlbGYuYWRkX2NvbnRyb2xsZXIodG9nZ2xlTXV0ZUNsaWNrKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNsaWRlciBjc3NDbGFzc2VzPXtbXCJTbGlkZXJcIl19ICQ9e3NlbGYgPT4gc2VsZi5hZGRfY29udHJvbGxlcihzY3JvbGwpfSB2YWx1ZT17dm9sdW1lfSBzdGVwPXswLjF9IG1pbj17MH0gbWF4PXsxfSBvbkNoYW5nZVZhbHVlPXsoeyB2YWx1ZSB9KSA9PiBlZHAuc2V0X3ZvbHVtZSh2YWx1ZSl9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgTWl4ZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8cG9wb3ZlciBjc3NDbGFzc2VzPXtbXCJNaXhlclwiXX0+XG4gICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIkxhYmVsXCJdfSBsYWJlbD17XCJNaXhlclwifSAvPlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5NaXhlckVudHJ5KHsgZW5kcG9pbnQ6IHRoaXMuZGVmYXVsdFNwZWFrZXIgfSl9XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLk1peGVyRW50cnkoeyBlbmRwb2ludDogdGhpcy5kZWZhdWx0TWljcm9waG9uZSB9KX1cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IEF1ZGlvQ29udHJvbCgpIHtcbiAgICAgICAgY29uc3Qgc3Bhd25QYXZ1Y29udHJvbENsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fU0VDT05EQVJZIH0pO1xuICAgICAgICBjb25zdCBzcGF3blBhdnVjb250cm9sSGFuZGxlciA9IHNwYXduUGF2dWNvbnRyb2xDbGljay5jb25uZWN0KCdwcmVzc2VkJywgKCkgPT4gR0xpYi5zcGF3bl9jb21tYW5kX2xpbmVfYXN5bmMoJ3BhdnVjb250cm9sJykpO1xuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiBzcGF3blBhdnVjb250cm9sQ2xpY2suZGlzY29ubmVjdChzcGF3blBhdnVjb250cm9sSGFuZGxlcikpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkF1ZGlvQ29udHJvbFwiXX0gJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKHNwYXduUGF2dWNvbnRyb2xDbGljayl9PlxuICAgICAgICAgICAgICAgIHt0aGlzLkVuZHBvaW50KHsgZW5kcG9pbnQ6IHRoaXMuZGVmYXVsdFNwZWFrZXIgfSl9XG4gICAgICAgICAgICAgICAgPG1lbnVidXR0b24gcG9wb3Zlcj17dGhpcy5NaXhlcigpIGFzIEd0ay5Qb3BvdmVyfSBjaGlsZD17PGxhYmVsIGxhYmVsPXsnXHVFQUY4J30+PC9sYWJlbD4gYXMgR3RrLldpZGdldH0gLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgYXVkaW9Db250cm9sID0gbmV3IEF1ZGlvQ29udHJvbENsYXNzO1xuXG5leHBvcnQgZGVmYXVsdCBhdWRpb0NvbnRyb2w7XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgcmVhZEZpbGUsIHdyaXRlRmlsZSB9IGZyb20gXCJhZ3MvZmlsZVwiO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZVN0YXRlLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5cbmludGVyZmFjZSBPcHRpb25zIHtcbiAgICBhbmltYXRpb25zRW5hYmxlZDogYm9vbGVhbjtcbiAgICBjYXZhVmlzaWJsZTogYm9vbGVhbjtcbiAgICB3YWxscGFwZXJTZWxlY3RvckFjdGl2ZTogYm9vbGVhbjtcbn1cblxuY29uc3Qgb3B0aW9uc0ZhbGxiYWNrOiBPcHRpb25zID0ge1xuICAgIGFuaW1hdGlvbnNFbmFibGVkOiB0cnVlLFxuICAgIGNhdmFWaXNpYmxlOiB0cnVlLFxuICAgIHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiB0cnVlXG59XG5cbmNvbnN0IHBhdGggPSBHTGliLmdldF9ob21lX2RpcigpICsgJy8uY29uZmlnL2Fncy9vcHRpb25zL29wdGlvbnMuanNvbic7XG5cbmNsYXNzIFNldHRpbmdzQ2xhc3Mge1xuICAgIHByaXZhdGUgX2FuaW1hdGlvbnNFbmFibGVkOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRBbmltYXRpb25zRW5hYmxlZDogU2V0dGVyPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX2NhdmFWaXNpYmxlOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRDYXZhVmlzaWJsZTogU2V0dGVyPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX3dhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIF9zZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZTogU2V0dGVyPGJvb2xlYW4+O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IGZpbGVTdHIgPSByZWFkRmlsZShwYXRoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2UoZmlsZVN0cikgYXMgT3B0aW9ucztcbiAgICAgICAgICAgIFt0aGlzLl9hbmltYXRpb25zRW5hYmxlZCwgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWRdID0gY3JlYXRlU3RhdGUocGFyc2VkLmFuaW1hdGlvbnNFbmFibGVkKTtcbiAgICAgICAgICAgIFt0aGlzLl9jYXZhVmlzaWJsZSwgdGhpcy5fc2V0Q2F2YVZpc2libGVdID0gY3JlYXRlU3RhdGUocGFyc2VkLmNhdmFWaXNpYmxlKTtcbiAgICAgICAgICAgIFt0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZSwgdGhpcy5fc2V0V2FsbHBhcGVyU2VsZWN0b3JBY3RpdmVdID0gY3JlYXRlU3RhdGUocGFyc2VkLndhbGxwYXBlclNlbGVjdG9yQWN0aXZlKTtcblxuICAgICAgICB9IGNhdGNoKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJybyBhbyBsZXIgb3B0aW9ucy5qc29uOiAnICsgZXJyKTtcbiAgICAgICAgICAgIFt0aGlzLl9hbmltYXRpb25zRW5hYmxlZCwgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWRdID0gY3JlYXRlU3RhdGUob3B0aW9uc0ZhbGxiYWNrLmFuaW1hdGlvbnNFbmFibGVkKTtcbiAgICAgICAgICAgIFt0aGlzLl9jYXZhVmlzaWJsZSwgdGhpcy5fc2V0Q2F2YVZpc2libGVdID0gY3JlYXRlU3RhdGUob3B0aW9uc0ZhbGxiYWNrLmNhdmFWaXNpYmxlKTtcbiAgICAgICAgICAgIFt0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZSwgdGhpcy5fc2V0V2FsbHBhcGVyU2VsZWN0b3JBY3RpdmVdID0gY3JlYXRlU3RhdGUob3B0aW9uc0ZhbGxiYWNrLndhbGxwYXBlclNlbGVjdG9yQWN0aXZlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzYXZlT3B0aW9ucygpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGFuaW1hdGlvbnNFbmFibGVkOiB0aGlzLl9hbmltYXRpb25zRW5hYmxlZC5nZXQoKSxcbiAgICAgICAgICAgIGNhdmFWaXNpYmxlOiB0aGlzLl9jYXZhVmlzaWJsZS5nZXQoKSxcbiAgICAgICAgICAgIHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlOiB0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5nZXQoKVxuICAgICAgICB9XG4gICAgICAgIHdyaXRlRmlsZShwYXRoLCBKU09OLnN0cmluZ2lmeShvcHRpb25zLCBudWxsLCAyKSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBhbmltYXRpb25zRW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY2F2YVZpc2libGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jYXZhVmlzaWJsZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHdhbGxwYXBlclNlbGVjdG9yQWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2FsbHBhcGVyU2VsZWN0b3JBY3RpdmU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBzZXRXYWxscGFwZXJTZWxlY3RvckFjdGl2ZShuZXdTdGF0ZTogYm9vbGVhbikge1xuICAgICAgICBpZih0aGlzLl93YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5nZXQoKSAhPT0gbmV3U3RhdGUpIHRoaXMuX3NldFdhbGxwYXBlclNlbGVjdG9yQWN0aXZlKG5ld1N0YXRlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHNldEFuaW1hdGlvbnNFbmFibGVkKG5ld1N0YXRlOiBib29sZWFuKSB7XG4gICAgICAgIGlmKHRoaXMuX2FuaW1hdGlvbnNFbmFibGVkLmdldCgpICE9PSBuZXdTdGF0ZSkgdGhpcy5fc2V0QW5pbWF0aW9uc0VuYWJsZWQobmV3U3RhdGUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgc2V0Q2F2YVZpc2libGUobmV3U3RhdGU6IGJvb2xlYW4pIHtcbiAgICAgICAgaWYodGhpcy5fY2F2YVZpc2libGUuZ2V0KCkgIT09IG5ld1N0YXRlKSB0aGlzLl9zZXRDYXZhVmlzaWJsZShuZXdTdGF0ZSk7XG4gICAgfVxufVxuXG5jb25zdCBzZXR0aW5nc1NlcnZpY2UgPSBuZXcgU2V0dGluZ3NDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgc2V0dGluZ3NTZXJ2aWNlO1xuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKHBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIEFzdGFsLnJlYWRfZmlsZShwYXRoKSB8fCBcIlwiXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZUFzeW5jKHBhdGg6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgQXN0YWwucmVhZF9maWxlX2FzeW5jKHBhdGgsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbC5yZWFkX2ZpbGVfZmluaXNoKHJlcykgfHwgXCJcIilcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGUocGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBBc3RhbC53cml0ZV9maWxlKHBhdGgsIGNvbnRlbnQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVBc3luYyhwYXRoOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIEFzdGFsLndyaXRlX2ZpbGVfYXN5bmMocGF0aCwgY29udGVudCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsLndyaXRlX2ZpbGVfZmluaXNoKHJlcykpXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbW9uaXRvckZpbGUoXG4gICAgcGF0aDogc3RyaW5nLFxuICAgIGNhbGxiYWNrOiAoZmlsZTogc3RyaW5nLCBldmVudDogR2lvLkZpbGVNb25pdG9yRXZlbnQpID0+IHZvaWQsXG4pOiBHaW8uRmlsZU1vbml0b3Ige1xuICAgIHJldHVybiBBc3RhbC5tb25pdG9yX2ZpbGUocGF0aCwgKGZpbGU6IHN0cmluZywgZXZlbnQ6IEdpby5GaWxlTW9uaXRvckV2ZW50KSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGZpbGUsIGV2ZW50KVxuICAgIH0pIVxufVxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgU3d3dyB9IGZyb20gXCIuLi91dGlscy9Td3d3XCI7XG5pbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgc2V0dGluZ3NTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9TZXR0aW5nc1wiO1xuXG5jb25zdCBwYXRoID0gR0xpYi5nZXRfaG9tZV9kaXIoKSArICcvLmNvbmZpZy9hZ3Mvd2FsbHBhcGVycyc7XG5jb25zdCBwb2xsVGltZSA9IDI0MDAwMDtcbmNvbnN0IGltYWdlRXh0ZW5zaW9ucyA9IFsnLmpwZycsICcuanBlZycsICcucG5nJywgJy5naWYnLCAnLmJtcCcsICcud2VicCcsICcuc3ZnJ107XG5cbmNsYXNzIFdhbGxwYXBlclNlbGVjdG9yQ2xhc3Mge1xuICAgIHByaXZhdGUgaW1hZ2VzOiBBY2Nlc3NvcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBzZXRJbWFnZXM6IFNldHRlcjxzdHJpbmdbXT47XG4gICAgcHJpdmF0ZSBfdGltZXJBY3RpdmU6IEFjY2Vzc29yPGJvb2xlYW4+O1xuICAgIHByaXZhdGUgX3NldFRpbWVyQWN0aXZlOiBTZXR0ZXI8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBwb2xsaW5nOiBBY2Nlc3Nvcjxib29sZWFuPjtcbiAgICBwcml2YXRlIHN0YXRpYyB3aWRnZXRDb3VudDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIHVuc3ViOiAoKSA9PiB2b2lkO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIFt0aGlzLmltYWdlcywgdGhpcy5zZXRJbWFnZXNdID0gY3JlYXRlU3RhdGUoW10gYXMgc3RyaW5nW10pO1xuICAgICAgICBbdGhpcy5fdGltZXJBY3RpdmUsIHRoaXMuX3NldFRpbWVyQWN0aXZlXSA9IGNyZWF0ZVN0YXRlKHNldHRpbmdzU2VydmljZS53YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5nZXQoKSk7XG4gICAgICAgIHRoaXMucG9sbGluZyA9IGNyZWF0ZVBvbGwodHJ1ZSwgcG9sbFRpbWUsIChwcmV2OiBib29sZWFuKSA9PiAhcHJldik7XG5cbiAgICAgICAgdGhpcy51bnN1YiA9IHNldHRpbmdzU2VydmljZS53YWxscGFwZXJTZWxlY3RvckFjdGl2ZS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5fc2V0VGltZXJBY3RpdmUoc2V0dGluZ3NTZXJ2aWNlLndhbGxwYXBlclNlbGVjdG9yQWN0aXZlLmdldCgpKSk7XG4gICAgICAgIHRoaXMuc2V0SW1hZ2VzKHRoaXMucmVhZEltYWdlRmlsZXMocGF0aCkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaXNJbWFnZUZpbGUoZmlsZW5hbWU6IHN0cmluZykge1xuICAgICAgICBjb25zdCBleHRlbnNpb24gPSBmaWxlbmFtZS50b0xvd2VyQ2FzZSgpLnN1YnN0cmluZyhmaWxlbmFtZS5sYXN0SW5kZXhPZignLicpKTtcbiAgICAgICAgcmV0dXJuIGltYWdlRXh0ZW5zaW9ucy5pbmNsdWRlcyhleHRlbnNpb24pID8gZXh0ZW5zaW9uOiBudWxsO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVhZEltYWdlRmlsZXMoZGlyZWN0b3J5UGF0aDogc3RyaW5nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBmaWxlID0gR2lvLkZpbGUubmV3X2Zvcl9wYXRoKGRpcmVjdG9yeVBhdGgpO1xuXG4gICAgICAgICAgICBpZiAoIWZpbGUucXVlcnlfZXhpc3RzKG51bGwpKSByZXR1cm4gW107XG5cbiAgICAgICAgICAgIGNvbnN0IGVudW1lcmF0b3IgPSBmaWxlLmVudW1lcmF0ZV9jaGlsZHJlbignc3RhbmRhcmQ6Om5hbWUsc3RhbmRhcmQ6OnR5cGUnLCBHaW8uRmlsZVF1ZXJ5SW5mb0ZsYWdzLk5PTkUsIG51bGwpO1xuXG4gICAgICAgICAgICBjb25zdCBpbWFnZXM6IHN0cmluZ1tdID0gW107XG4gICAgICAgICAgICBsZXQgZmlsZUluZm87XG5cbiAgICAgICAgICAgIHdoaWxlICgoZmlsZUluZm8gPSBlbnVtZXJhdG9yLm5leHRfZmlsZShudWxsKSkgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpZiAoZmlsZUluZm8uZ2V0X2ZpbGVfdHlwZSgpID09PSBHaW8uRmlsZVR5cGUuUkVHVUxBUikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWxlTmFtZSA9IGZpbGVJbmZvLmdldF9uYW1lKCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4dCA9IHRoaXMuaXNJbWFnZUZpbGUoZmlsZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBpZihleHQpIGltYWdlcy5wdXNoKGZpbGVOYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGVudW1lcmF0b3IuY2xvc2UobnVsbCk7XG4gICAgICAgICAgICByZXR1cm4gaW1hZ2VzO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignXHUyNzRDIEVycm8gR2lvIGFvIGxlciBkaXJldFx1MDBGM3JpbzonLCBkaXJlY3RvcnlQYXRoLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHRpbWVyQWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdGltZXJBY3RpdmU7XG4gICAgfVxuXG4gICAgcHVibGljIFNlbGVjdG9ySW5kaWNhdG9yKGdka21vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gICAgICAgIGNvbnN0IGNsaWNrID0gbmV3IEd0ay5HZXN0dXJlQ2xpY2soeyBidXR0b246IEdkay5CVVRUT05fUFJJTUFSWSB9KTtcbiAgICAgICAgY29uc3QgaGFuZGxlciA9IGNsaWNrLmNvbm5lY3QoJ3ByZXNzZWQnLCAoKSA9PiB0aGlzLl9zZXRUaW1lckFjdGl2ZSghdGhpcy5fdGltZXJBY3RpdmUuZ2V0KCkpKTtcbiAgICAgICAgY29uc3QgdW5zdWIgPSB0aGlzLnBvbGxpbmcuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLl90aW1lckFjdGl2ZS5nZXQoKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbm5lY3RvciA9IGdka21vbml0b3IuZ2V0X2Nvbm5lY3RvcigpO1xuICAgICAgICAgICAgICAgIGlmKGNvbm5lY3Rvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWdBcnJheSA9IHRoaXMuaW1hZ2VzLmdldCgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbWcgPSBpbWdBcnJheVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbWdBcnJheS5sZW5ndGgpXTtcbiAgICAgICAgICAgICAgICAgICAgU3d3dy5tYW5hZ2VyLnNldFdhbGxwYXBlcihgJHtwYXRofS8ke2ltZ31gLCB7IG91dHB1dHM6IGNvbm5lY3RvciwgdHJhbnNpdGlvblR5cGU6IFN3d3cuVHJhbnNpdGlvblR5cGUuR1JPVyB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBleGVjQXN5bmMoYG5vdGlmeS1zZW5kIFwiTW9uaXRvciAke2dka21vbml0b3IuZ2V0X2Rlc2NyaXB0aW9uKCl9IG5cdTAwRTNvIHRlbSBjb25lY3RvclwiIFwiJHtnZGttb25pdG9yLmdldF9kZXNjcmlwdGlvbigpfSBuXHUwMEUzbyB0ZW0gY29uZWN0b3IuXCJgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1snU2VsZWN0b3JJbmRpY2F0b3InXX1cbiAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgICAgICQ9eygpID0+IFdhbGxwYXBlclNlbGVjdG9yQ2xhc3Mud2lkZ2V0Q291bnQgKz0gMX1cbiAgICAgICAgICAgICAgICBvbkRlc3Ryb3k9e1xuICAgICAgICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBXYWxscGFwZXJTZWxlY3RvckNsYXNzLndpZGdldENvdW50IC09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChXYWxscGFwZXJTZWxlY3RvckNsYXNzLndpZGdldENvdW50IDw9IDApIHRoaXMudW5zdWIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bnN1YigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9eydTZWxldG9yIGRlIFBhcFx1MDBFOWlzIGRlIFBhcmVkZSd9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiT3B0aW9uXCIsIFwiVG9nZ2xlQWN0aXZlXCJdfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17dGhpcy5fdGltZXJBY3RpdmUuYXModGEgPT4gYEVzdGFkbzogJHt0YSA/ICdBdGl2byc6ICdEZXNhdGl2YWRvJ31gKX0gJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKSB9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgd2FsbHBhcGVyU2VsZWN0b3IgPSBuZXcgV2FsbHBhcGVyU2VsZWN0b3JDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgd2FsbHBhcGVyU2VsZWN0b3I7XG4iLCAiaW1wb3J0IHsgZXhlYywgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgU3d3dyB7XG4gICAgZXhwb3J0IGVudW0gUmVzaXplIHtcbiAgICAgICAgTk8gPSAnbm8nLFxuICAgICAgICBDUk9QID0gJ2Nyb3AnLFxuICAgICAgICBGSVQgPSAnZml0JyxcbiAgICAgICAgU1RSRVRDSCA9ICdzdHJldGNoJ1xuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIEZpbHRlciB7XG4gICAgICAgIE5FQVJFU1QgPSAnTmVhcmVzdCcsXG4gICAgICAgIEJJTElORUFSID0gJ0JpbGluZWFyJyxcbiAgICAgICAgQ0FUTVVMTFJPTSA9ICdDYXRtdWxsUm9tJyxcbiAgICAgICAgTUlUQ0hFTEwgPSAnTWl0Y2hlbGwnLFxuICAgICAgICBMQU5DWk9TMyA9ICdMYW5jem9zMydcbiAgICB9XG5cbiAgICBleHBvcnQgZW51bSBUcmFuc2l0aW9uVHlwZSB7XG4gICAgICAgIE5PTkUgPSAnbm9uZScsXG4gICAgICAgIFNJTVBMRSA9ICdzaW1wbGUnLFxuICAgICAgICBGQURFID0gJ2ZhZGUnLFxuICAgICAgICBMRUZUID0gJ2xlZnQnLFxuICAgICAgICBSSUdIVCA9ICdyaWdodCcsXG4gICAgICAgIFRPUCA9ICd0b3AnLFxuICAgICAgICBCT1RUT00gPSAnYm90dG9tJyxcbiAgICAgICAgV0lQRSA9ICd3aXBlJyxcbiAgICAgICAgV0FWRSA9ICd3YXZlJyxcbiAgICAgICAgR1JPVyA9ICdncm93JyxcbiAgICAgICAgQ0VOVEVSID0gJ2NlbnRlcicsXG4gICAgICAgIEFOWSA9ICdhbnknLFxuICAgICAgICBSQU5ET00gPSAncmFuZG9tJ1xuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIFRyYW5zaXRpb25Qb3Mge1xuICAgICAgICBDRU5URVIgPSAnY2VudGVyJyxcbiAgICAgICAgVE9QID0gJ3RvcCcsXG4gICAgICAgIExFRlQgPSAnbGVmdCcsXG4gICAgICAgIFJJR0hUID0gJ3JpZ2h0JyxcbiAgICAgICAgQk9UVE9NID0gJ2JvdHRvbScsXG4gICAgICAgIFRPUF9MRUZUID0gJ3RvcC1sZWZ0JyxcbiAgICAgICAgVE9QX1JJR0hUID0gJ3RvcC1yaWdodCcsXG4gICAgICAgIEJPVFRPTV9MRUZUID0gJ2JvdHRvbS1sZWZ0JyxcbiAgICAgICAgQk9UVE9NX1JJR0hUID0gJ2JvdHRvbS1yaWdodCdcbiAgICB9XG5cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgUGFyc2VyT3B0aW9ucyB7XG4gICAgICAgIHJlc2l6ZTogUmVzaXplO1xuICAgICAgICBmaWx0ZXI6IEZpbHRlcjtcbiAgICAgICAgdHJhbnNpdGlvblR5cGU6IFRyYW5zaXRpb25UeXBlO1xuICAgICAgICB0cmFuc2l0aW9uUG9zOiBUcmFuc2l0aW9uUG9zO1xuICAgICAgICBvdXRwdXRzOiBzdHJpbmc7XG4gICAgICAgIHRyYW5zaXRpb25TdGVwOiBudW1iZXI7XG4gICAgICAgIHRyYW5zaXRpb25EdXJhbnRpb246IG51bWJlcjtcbiAgICAgICAgdHJhbnNpdGlvbkFuZ2xlOiBudW1iZXI7XG4gICAgICAgIGludmVydFk6IGJvb2xlYW47XG4gICAgICAgIHRyYW5zaXRpb25XYXZlOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH07XG4gICAgfVxuXG5cbiAgICBjbGFzcyBNYW5hZ2VyIHtcbiAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9hc3luYygnc3d3dyBjbGVhcicpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIHNldFdhbGxwYXBlcihwYXRoOiBzdHJpbmcsIG9wdGlvbnM/OiBQYXJ0aWFsPFBhcnNlck9wdGlvbnM+KTogYm9vbGVhbiB7XG4gICAgICAgICAgICBsZXQgY29tbWFuZCA9IGBzd3d3IGltZyAke3BhdGh9YDtcbiAgICAgICAgICAgIGlmKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnJlc2l6ZSkgY29tbWFuZCArPSBgIC0tcmVzaXplICR7b3B0aW9ucy5yZXNpemV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLmZpbHRlcikgY29tbWFuZCArPSBgIC1mICR7b3B0aW9ucy5maWx0ZXJ9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLmludmVydFkpIGNvbW1hbmQgKz0gYCAtLWludmVydC15ICR7b3B0aW9ucy5pbnZlcnRZLnZhbHVlT2YoKX1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvbkFuZ2xlKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLWFuZ2xlICR7b3B0aW9ucy50cmFuc2l0aW9uQW5nbGV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25EdXJhbnRpb24pIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tZHVyYXRpb24gJHtvcHRpb25zLnRyYW5zaXRpb25EdXJhbnRpb259YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25Qb3MpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tcG9zICR7b3B0aW9ucy50cmFuc2l0aW9uUG9zfWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy50cmFuc2l0aW9uU3RlcCkgY29tbWFuZCArPSBgIC0tdHJhbnNpdGlvbi1zdGVwICR7b3B0aW9ucy50cmFuc2l0aW9uU3RlcH1gO1xuICAgICAgICAgICAgICAgIGlmKG9wdGlvbnMudHJhbnNpdGlvblR5cGUpIGNvbW1hbmQgKz0gYCAtLXRyYW5zaXRpb24tdHlwZSAke29wdGlvbnMudHJhbnNpdGlvblR5cGV9YDtcbiAgICAgICAgICAgICAgICBpZihvcHRpb25zLnRyYW5zaXRpb25XYXZlKSBjb21tYW5kICs9IGAgLS10cmFuc2l0aW9uLXdhdmUgJHtvcHRpb25zLnRyYW5zaXRpb25XYXZlLnh9LCR7b3B0aW9ucy50cmFuc2l0aW9uV2F2ZS55fWA7XG4gICAgICAgICAgICAgICAgaWYob3B0aW9ucy5vdXRwdXRzKSBjb21tYW5kICs9IGAgLS1vdXRwdXRzICR7b3B0aW9ucy5vdXRwdXRzfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBHTGliLnNwYXduX2NvbW1hbmRfbGluZV9hc3luYyhjb21tYW5kKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGV4cG9ydCBjb25zdCBtYW5hZ2VyID0gbmV3IE1hbmFnZXI7XG59XG4iLCAiaW1wb3J0IHsgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBzZXR0aW5nc1NlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL1NldHRpbmdzXCI7XG5pbXBvcnQgd2FsbHBhcGVyU2VsZWN0b3IgZnJvbSBcIi4vV2FsbHBhcGVyU2VsZWN0b3JcIjtcblxuY2xhc3MgQ29udHJvbENlbnRlckNsYXNzIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZXR1cEJ1dHRvbihzZWxmOiBHdGsuV2lkZ2V0LCBjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCBjbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKHsgYnV0dG9uOiBHZGsuQlVUVE9OX1BSSU1BUlkgfSk7XG4gICAgICAgIGNvbnN0IGhhbmRsZXIgPSBjbGljay5jb25uZWN0KCdwcmVzc2VkJywgY2FsbGJhY2spO1xuICAgICAgICBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKTtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IGNsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcikpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZm9ybWF0Q2F2YVZpc2libGl0eVRleHQoaTogYm9vbGVhbikge1xuICAgICAgICBpZihpKSByZXR1cm4gJ0NhdmEgc2VtcHJlIGF0aXZvJztcbiAgICAgICAgcmV0dXJuICdDYXZhIGRlc2F0aXZhZG8nO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0IFRvZ2dsZVZpc2libGVDb21wb25lbnRzKCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gc2V0dGluZ3NTZXJ2aWNlLnNhdmVPcHRpb25zKCkpO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJUb2dnbGVWaXNpYmxlQ29tcG9uZW50c1wiXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfSBsYWJlbD17J0FuaW1hXHUwMEU3XHUwMEY1ZXMgZSBjb21wb25lbnRlcyd9IC8+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlRvZ2dsZUFuaW1hdGlvbnNcIiwgXCJPcHRpb25cIl19XG4gICAgICAgICAgICAgICAgICAgICQ9e3NlbGYgPT4gdGhpcy5zZXR1cEJ1dHRvbihzZWxmLCAoKSA9PiBzZXR0aW5nc1NlcnZpY2Uuc2V0QW5pbWF0aW9uc0VuYWJsZWQgPSAhc2V0dGluZ3NTZXJ2aWNlLmFuaW1hdGlvbnNFbmFibGVkLmdldCgpKX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3NldHRpbmdzU2VydmljZS5hbmltYXRpb25zRW5hYmxlZC5hcyhhZSA9PiBhZSA/IFwiRGVzYXRpdmFyIGFuaW1hXHUwMEU3XHUwMEY1ZXNcIiA6IFwiQXRpdmFyIGFuaW1hXHUwMEU3XHUwMEY1ZXNcIil9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIlRvZ2dsZUNhdmFcIiwgXCJPcHRpb25cIl19XG4gICAgICAgICAgICAgICAgICAgICQ9e3NlbGYgPT4gdGhpcy5zZXR1cEJ1dHRvbihzZWxmLCAoKSA9PiBzZXR0aW5nc1NlcnZpY2Uuc2V0Q2F2YVZpc2libGUgPSAhc2V0dGluZ3NTZXJ2aWNlLmNhdmFWaXNpYmxlLmdldCgpKX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3NldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5hcyh2cyA9PiB0aGlzLmZvcm1hdENhdmFWaXNpYmxpdHlUZXh0KHZzKSl9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIENvbnRyb2xDZW50ZXJQb3BvdmVyKGdka21vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8cG9wb3Zlcj5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkNvbnRyb2xDZW50ZXJQb3BvdmVyXCJdfT5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLlRvZ2dsZVZpc2libGVDb21wb25lbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAge3dhbGxwYXBlclNlbGVjdG9yLlNlbGVjdG9ySW5kaWNhdG9yKGdka21vbml0b3IpfVxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgQ29udHJvbENlbnRlcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG1lbnVidXR0b24gY3NzQ2xhc3Nlcz17W1wiQ29udHJvbENlbnRlclwiXX0gcG9wb3Zlcj17dGhpcy5Db250cm9sQ2VudGVyUG9wb3ZlcihnZGttb25pdG9yKSBhcyBHdGsuUG9wb3Zlcn0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1snTGFiZWwnXX0gbGFiZWw9eydcdURCODJcdURDQzcnfSAvPlxuICAgICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgY29udHJvbENlbnRlciA9IG5ldyBDb250cm9sQ2VudGVyQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRyb2xDZW50ZXI7XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kP3ZlcnNpb249MC4xXCI7XG5pbXBvcnQgaHlwcmxhbmRTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9IeXBybGFuZFwiO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkLCBGb3IsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcblxuY2xhc3MgV29ya3NwYWNlc0NsYXNzIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IG1heFdvcmtzcGFjZXM6IG51bWJlciA9IDEwO1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcblxuICAgIH1cblxuICAgIHByaXZhdGUgV29ya3NwYWNlKHsgd29ya3NwYWNlLCBpc0luUG9wb3ZlciA9IGZhbHNlIH06IHsgd29ya3NwYWNlOiBBc3RhbEh5cHJsYW5kLldvcmtzcGFjZSwgaXNJblBvcG92ZXI6IGJvb2xlYW4gfSkge1xuICAgICAgICBjb25zdCBjbGljayA9IG5ldyBHdGsuR2VzdHVyZUNsaWNrKCk7XG4gICAgICAgIGNvbnN0IGhhbmRsZXJfaWQgPSBjbGljay5jb25uZWN0KFwicHJlc3NlZFwiLCAoKSA9PiB7IGlmKGh5cHJsYW5kU2VydmljZS5mb2N1c2VkV29ya3NwYWNlLmdldCgpLmdldF9pZCgpICE9PSB3b3Jrc3BhY2UuZ2V0X2lkKCkpIHdvcmtzcGFjZS5mb2N1cygpIH0pO1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4geyBpZiAoaGFuZGxlcl9pZCkgY2xpY2suZGlzY29ubmVjdChoYW5kbGVyX2lkKSB9KTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgJD17c2VsZiA9PiBzZWxmLmFkZF9jb250cm9sbGVyKGNsaWNrKX1cbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtoeXBybGFuZFNlcnZpY2UuZm9jdXNlZFdvcmtzcGFjZS5hcyhmb2N1c2VkID0+IFtcIldvcmtzcGFjZVwiLCB3b3Jrc3BhY2UuZ2V0X2lkKCkgPT09IGZvY3VzZWQuZ2V0X2lkKCkgPyBcIkFjdGl2ZVwiIDogXCJJbmFjdGl2ZVwiXSl9XG4gICAgICAgICAgICAgICAgbGFiZWw9e2Ake3dvcmtzcGFjZS5nZXRfaWQoKX1gfSB3aWR0aENoYXJzPXszfSBtYXhXaWR0aENoYXJzPXszfSBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9IHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBNYWluV29ya3NwYWNlKHdvcmtzcGFjZTogQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2UpIHtcbiAgICAgICAgY29uc3QgY2xpY2sgPSBuZXcgR3RrLkdlc3R1cmVDbGljaygpO1xuICAgICAgICBjb25zdCBoYW5kbGVyID0gY2xpY2suY29ubmVjdChcInByZXNzZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHdvcmtzcGFjZS5nZXRfaWQoKSAhPT0gaHlwcmxhbmRTZXJ2aWNlLmZvY3VzZWRXb3Jrc3BhY2UuZ2V0KCkuZ2V0X2lkKCkpIHdvcmtzcGFjZS5mb2N1cygpO1xuICAgICAgICB9KTtcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4geyBpZiAoY2xpY2spIGNsaWNrLmRpc2Nvbm5lY3QoaGFuZGxlcikgfSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAkPXsoc2VsZikgPT4gc2VsZi5hZGRfY29udHJvbGxlcihjbGljayl9XG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Y3JlYXRlQ29tcHV0ZWQoW2h5cHJsYW5kU2VydmljZS5mb2N1c2VkV29ya3NwYWNlLCBjcmVhdGVCaW5kaW5nKHdvcmtzcGFjZSwgXCJpZFwiKV0sIChmb2N1c2VkLCBpZCkgPT4gW1wiV29ya3NwYWNlXCIsIGlkID09PSBmb2N1c2VkPy5nZXRfaWQoKSA/IFwiQWN0aXZlXCIgOiBcIkluYWN0aXZlXCJdKX1cbiAgICAgICAgICAgICAgICBsYWJlbD17d29ya3NwYWNlLmdldF9pZCgpLnRvU3RyaW5nKCl9XG4gICAgICAgICAgICAgICAgd2lkdGhDaGFycz17MX1cbiAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXsxfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgV29ya3NwYWNlUG9wb3Zlcih7IHRoZVJlc3QgfTogeyB0aGVSZXN0OiBBY2Nlc3NvcjxBc3RhbEh5cHJsYW5kLldvcmtzcGFjZVtdPiB9KSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8cG9wb3ZlciBjc3NDbGFzc2VzPXtbXCJXb3Jrc3BhY2VQb3BvdmVyXCJdfT5cbiAgICAgICAgICAgICAgICA8R3RrLkZsb3dCb3ggbWF4Q2hpbGRyZW5QZXJMaW5lPXs0fT5cbiAgICAgICAgICAgICAgICAgICAgPEZvciBlYWNoPXt0aGVSZXN0fSBjaGlsZHJlbj17aXRlbSA9PiB0aGlzLldvcmtzcGFjZSh7IHdvcmtzcGFjZTogaXRlbSwgaXNJblBvcG92ZXI6IHRydWUgfSl9IC8+XG4gICAgICAgICAgICAgICAgPC9HdGsuRmxvd0JveD5cbiAgICAgICAgICAgIDwvcG9wb3Zlcj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIE1vcmVXb3Jrc3BhY2VzQnV0dG9uKHsgdGhlUmVzdCB9OiB7IHRoZVJlc3Q6IEFjY2Vzc29yPEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlW10+IH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxtZW51YnV0dG9uIGNzc0NsYXNzZXM9e1tcIk1vcmVXb3Jrc3BhY2VzQnV0dG9uXCJdfSBzZW5zaXRpdmU9e3RoZVJlc3QuYXModHIgPT4gdHIubGVuZ3RoID4gMCl9IHBvcG92ZXI9e3RoaXMuV29ya3NwYWNlUG9wb3Zlcih7IHRoZVJlc3Q6IHRoZVJlc3QgfSkgYXMgR3RrLlBvcG92ZXJ9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17J1x1REI4MVx1REQ0Rid9IC8+XG4gICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHVibGljIFdvcmtzcGFjZXMoeyBtb25pdG9yIH06IHsgbW9uaXRvcjogQXN0YWxIeXBybGFuZC5Nb25pdG9yIH0pIHtcbiAgICAgICAgY29uc3QgbW9uaXRvcldvcmtzcGFjZXMgPSBoeXBybGFuZFNlcnZpY2Uud29ya3NwYWNlcy5hcyh3cyA9PiB7XG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IHdzLmZpbHRlcigod29ya3NwYWNlKSA9PiB3b3Jrc3BhY2UuZ2V0X21vbml0b3IoKSA9PT0gbW9uaXRvcik7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1haW46IGZpbHRlcmVkLnNsaWNlKDAsIHRoaXMubWF4V29ya3NwYWNlcyksXG4gICAgICAgICAgICAgICAgdGhlUmVzdDogZmlsdGVyZWQuc2xpY2UodGhpcy5tYXhXb3Jrc3BhY2VzKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiV29ya3NwYWNlc1wiXX0+XG4gICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgICAgPEZvciBlYWNoPXttb25pdG9yV29ya3NwYWNlcy5hcyhtdyA9PiBtdy5tYWluKX0gY2hpbGRyZW49eyh3OiBBc3RhbEh5cHJsYW5kLldvcmtzcGFjZSkgPT4gdGhpcy5NYWluV29ya3NwYWNlKHcpfSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIHt0aGlzLk1vcmVXb3Jrc3BhY2VzQnV0dG9uKHsgdGhlUmVzdDogbW9uaXRvcldvcmtzcGFjZXMuYXMoKHsgdGhlUmVzdCB9KSA9PiB0aGVSZXN0KSB9KX1cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3Qgd29ya3NwYWNlcyA9IG5ldyBXb3Jrc3BhY2VzQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IHdvcmtzcGFjZXM7XG4iLCAiaW1wb3J0IHsgQXN0YWwsIEd0aywgR2RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgc3lzdGVtTW9uaXRvciBmcm9tIFwiLi4vbW9kdWxlcy9TeXN0ZW1Nb25pdG9yXCI7XG5pbXBvcnQgc3lzdGVtVHJheSBmcm9tIFwiLi4vbW9kdWxlcy9TeXN0ZW1UcmF5XCI7XG5pbXBvcnQgbWVkaWEgZnJvbSBcIi4uL21vZHVsZXMvTWVkaWFcIjtcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IGRhdGVUaW1lIGZyb20gXCIuLi9tb2R1bGVzL0RhdGVUaW1lXCI7XG5pbXBvcnQgaHlwcmxhbmRTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9IeXBybGFuZFwiO1xuaW1wb3J0IGF1ZGlvQ29udHJvbCBmcm9tIFwiLi4vbW9kdWxlcy9BdWRpb0NvbnRyb2xcIjtcbmltcG9ydCBjb250cm9sQ2VudGVyIGZyb20gXCIuLi9tb2R1bGVzL0NvbnRyb2xDZW50ZXJcIjtcbmltcG9ydCB3b3Jrc3BhY2VzIGZyb20gXCIuLi9tb2R1bGVzL1dvcmtzcGFjZXNcIjtcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFyKHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pIHtcbiAgICBjb25zdCB7IFRPUCwgTEVGVCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvcjtcbiAgICBjb25zdCBoeXByTW9uaXRvciA9IGh5cHJsYW5kU2VydmljZS5nZXRIeXBybGFuZE1vbml0b3IoZ2RrbW9uaXRvcik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8d2luZG93XG4gICAgICAgICAgICBuYW1lc3BhY2U9J0JhcidcbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIkJhclwiXX1cbiAgICAgICAgICAgIHZpc2libGVcbiAgICAgICAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5FWENMVVNJVkV9XG4gICAgICAgICAgICBsYXllcj17QXN0YWwuTGF5ZXIuQk9UVE9NfVxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGFuY2hvcj17VE9QIHwgUklHSFQgfCBMRUZUfVxuICAgICAgICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICAgICAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgICA+XG4gICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIkJhclwiXX0gaGFsaWduPXtHdGsuQWxpZ24uRklMTH0gaG9tb2dlbmVvdXM+XG4gICAgICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH0+XG4gICAgICAgICAgICAgICAgICAgIHtzeXN0ZW1UcmF5LlN5c3RlbVRyYXl9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9PlxuICAgICAgICAgICAgICAgICAgICB7bWVkaWEuTWVkaWF9XG4gICAgICAgICAgICAgICAgICAgIHt3b3Jrc3BhY2VzLldvcmtzcGFjZXMoeyBtb25pdG9yOiBoeXByTW9uaXRvciB9KX1cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8Ym94IGhhbGlnbj17R3RrLkFsaWduLkVORH0+XG4gICAgICAgICAgICAgICAgICAgIHtkYXRlVGltZS5EYXRlVGltZX1cbiAgICAgICAgICAgICAgICAgICAge2F1ZGlvQ29udHJvbC5BdWRpb0NvbnRyb2x9XG4gICAgICAgICAgICAgICAgICAgIHtzeXN0ZW1Nb25pdG9yLlN5c3RlbU1vbml0b3J9XG4gICAgICAgICAgICAgICAgICAgIHtjb250cm9sQ2VudGVyLkNvbnRyb2xDZW50ZXIoZ2RrbW9uaXRvcil9XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgKTtcbn1cbiIsICJpbXBvcnQgc2V0dGluZ3NTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9TZXR0aW5nc1wiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgR3NrIGZyb20gJ2dpOi8vR3NrJztcbmltcG9ydCBBc3RhbENhdmEgZnJvbSBcImdpOi8vQXN0YWxDYXZhP3ZlcnNpb249MC4xXCI7XG5pbXBvcnQgR09iamVjdCBmcm9tICdnaTovL0dPYmplY3QnO1xuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwLCBTZXR0ZXIgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgaHlwcmxhbmRTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9IeXBybGFuZFwiO1xuaW1wb3J0IEFzdGFsSHlwcmxhbmQgZnJvbSBcImdpOi8vQXN0YWxIeXBybGFuZD92ZXJzaW9uPTAuMVwiO1xuXG5jb25zdCBDYXZhQ29uZmlnID0ge1xuICAgIGF1dG9zZW5zOiB0cnVlLFxuICAgIGJhcnM6IDI1LFxuICAgIGZyYW1lcmF0ZTogNjAsXG4gICAgaW5wdXQ6IEFzdGFsQ2F2YS5JbnB1dC5QSVBFV0lSRSxcbiAgICBub2lzZVJlZHVjdGlvbjogMC43NyxcbiAgICBzZW5zaXRpdml0eTogMC43NSxcbiAgICBzdGVyZW86IGZhbHNlLFxufTtcblxuY2xhc3MgQ2F2YVdpZGdldCBleHRlbmRzIEd0ay5EcmF3aW5nQXJlYSB7XG4gICAgcHJpdmF0ZSB2YWx1ZXNBY2Nlc3NvcjogQWNjZXNzb3I8bnVtYmVyW10+O1xuICAgIHByaXZhdGUgdW5zdWJBY2Nlc3NvcjogKCkgPT4gdm9pZDtcblxuICAgIGNvbnN0cnVjdG9yKHY6IEFjY2Vzc29yPG51bWJlcltdPikge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnNldF9oZXhwYW5kKHRydWUpO1xuICAgICAgICB0aGlzLnNldF92ZXhwYW5kKHRydWUpO1xuICAgICAgICB0aGlzLnZhbHVlc0FjY2Vzc29yID0gdi5hcyh2ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuZ2V0X2FsbG9jYXRlZF9oZWlnaHQoKTtcbiAgICAgICAgICAgIHJldHVybiB2Lm1hcChpID0+IGhlaWdodCAqICgxIC0gaSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy51bnN1YkFjY2Vzc29yID0gdGhpcy52YWx1ZXNBY2Nlc3Nvci5zdWJzY3JpYmUoKCkgPT4gdGhpcy5xdWV1ZV9kcmF3KCkpO1xuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB0aGlzLnVuc3ViQWNjZXNzb3IoKSk7XG4gICAgfVxuXG4gICAgb3ZlcnJpZGUgdmZ1bmNfc25hcHNob3Qoc25hcHNob3Q6IEd0ay5TbmFwc2hvdCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuZ2V0X21hcHBlZCgpKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghdGhpcy52aXNpYmxlKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nZXRfYWxsb2NhdGVkX3dpZHRoKCk7XG4gICAgICAgICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmdldF9hbGxvY2F0ZWRfaGVpZ2h0KCk7XG5cbiAgICAgICAgICAgIGlmICh3aWR0aCA8PSAwIHx8IGhlaWdodCA8PSAwKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMudmFsdWVzQWNjZXNzb3IuZ2V0KCk7XG5cbiAgICAgICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAgICAgICAgIGNvbnN0IGJhcldpZHRoID0gd2lkdGggLyAodmFsdWVzLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgY29uc3QgY29sb3IgPSB0aGlzLnBhcmVudC5nZXRfY29sb3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgR3NrLlBhdGhCdWlsZGVyKCk7XG4gICAgICAgICAgICBidWlsZGVyLm1vdmVfdG8oMCwgdmFsdWVzWzBdKTtcbiAgICAgICAgICAgIGNvbnN0IGludlNpeCA9IDEgLyA2O1xuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwMHggPSAoaSAtIDEpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDB5ID0gdmFsdWVzW01hdGgubWF4KDAsIGkgLSAxKV07XG4gICAgICAgICAgICAgICAgY29uc3QgcDF4ID0gaSAqIGJhcldpZHRoO1xuICAgICAgICAgICAgICAgIGNvbnN0IHAxeSA9IHZhbHVlc1tpXTtcbiAgICAgICAgICAgICAgICBjb25zdCBwMnggPSAoaSArIDEpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDJ5ID0gdmFsdWVzW2kgKyAxXTtcbiAgICAgICAgICAgICAgICBjb25zdCBwM3ggPSAoaSArIDIpICogYmFyV2lkdGg7XG4gICAgICAgICAgICAgICAgY29uc3QgcDN5ID0gdmFsdWVzW01hdGgubWluKHZhbHVlcy5sZW5ndGggLSAxLCBpICsgMildO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgYzF4ID0gcDF4ICsgKHAyeCAtIHAweCkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzF5ID0gcDF5ICsgKHAyeSAtIHAweSkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzJ4ID0gcDJ4IC0gKHAzeCAtIHAxeCkgKiBpbnZTaXg7XG4gICAgICAgICAgICAgICAgY29uc3QgYzJ5ID0gcDJ5IC0gKHAzeSAtIHAxeSkgKiBpbnZTaXg7XG5cbiAgICAgICAgICAgICAgICBidWlsZGVyLmN1YmljX3RvKGMxeCwgYzF5LCBjMngsIGMyeSwgcDJ4LCBwMnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBidWlsZGVyLmxpbmVfdG8od2lkdGgsIGhlaWdodCk7XG4gICAgICAgICAgICBidWlsZGVyLmxpbmVfdG8oMCwgaGVpZ2h0KTtcbiAgICAgICAgICAgIGJ1aWxkZXIuY2xvc2UoKTtcblxuICAgICAgICAgICAgc25hcHNob3QuYXBwZW5kX2ZpbGwoYnVpbGRlci50b19wYXRoKCksIEdzay5GaWxsUnVsZS5XSU5ESU5HLCBjb2xvcik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvIG5vIHNuYXBzaG90IGRvIENhdmE6XCIsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgX2NhdmEgPSBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6ICdDYXZhJyB9LCBDYXZhV2lkZ2V0KTtcblxuY2xhc3MgQ2F2YUNsYXNzIHtcbiAgICBwcml2YXRlIGRlZmF1bHQ6IEFzdGFsQ2F2YS5DYXZhIHwgbnVsbDtcbiAgICBwcml2YXRlIF92YWx1ZXM6IEFjY2Vzc29yPG51bWJlcltdPjtcbiAgICBwcml2YXRlIHN0YXRpYyB3aWRnZXRDb3VudDogbnVtYmVyID0gMDtcblxuICAgIHByaXZhdGUgX3Zpc2liaWxpdHlTdGF0ZTogQWNjZXNzb3I8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBfc2V0VmlzaWJpbGl0eVN0YXRlOiBTZXR0ZXI8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSB1bnN1YjogKCkgPT4gdm9pZDtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgW3RoaXMuX3Zpc2liaWxpdHlTdGF0ZSwgdGhpcy5fc2V0VmlzaWJpbGl0eVN0YXRlXSA9IGNyZWF0ZVN0YXRlKHNldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5nZXQoKSk7XG5cbiAgICAgICAgdGhpcy51bnN1YiA9IHNldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5fc2V0VmlzaWJpbGl0eVN0YXRlKHNldHRpbmdzU2VydmljZS5jYXZhVmlzaWJsZS5nZXQoKSkpO1xuXG4gICAgICAgIHRoaXMuZGVmYXVsdCA9IEFzdGFsQ2F2YS5nZXRfZGVmYXVsdCgpO1xuICAgICAgICBpZiAodGhpcy5kZWZhdWx0KSB7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2F1dG9zZW5zKENhdmFDb25maWcuYXV0b3NlbnMpO1xuICAgICAgICAgICAgdGhpcy5kZWZhdWx0LnNldF9iYXJzKENhdmFDb25maWcuYmFycyk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2ZyYW1lcmF0ZShDYXZhQ29uZmlnLmZyYW1lcmF0ZSk7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X2lucHV0KENhdmFDb25maWcuaW5wdXQpO1xuICAgICAgICAgICAgdGhpcy5kZWZhdWx0LnNldF9ub2lzZV9yZWR1Y3Rpb24oQ2F2YUNvbmZpZy5ub2lzZVJlZHVjdGlvbik7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHQuc2V0X3N0ZXJlbyhDYXZhQ29uZmlnLnN0ZXJlbyk7XG4gICAgICAgICAgICB0aGlzLl92YWx1ZXMgPSBjcmVhdGVCaW5kaW5nKHRoaXMuZGVmYXVsdCwgJ3ZhbHVlcycpLmFzKCh2KSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VucyA9IENhdmFDb25maWcuc2Vuc2l0aXZpdHk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB2Lm1hcChpID0+IGkgKiBzZW5zKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvIG5vIGhhbmRsZXIgZ2xvYmFsIGRvIENhdmE6XCIsIGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk5cdTAwRTNvIGZvaSBwb3NzXHUwMEVEdmVsIGluaWNpYWxpemFyIG8gQ2F2YVwiKTtcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlcyA9IGNyZWF0ZVN0YXRlPG51bWJlcltdPihbXSlbMF07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHZpc2liaWxpdHlTdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Zpc2liaWxpdHlTdGF0ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgQ2F2YShjc3NDbGFzc2VzOiBzdHJpbmdbXSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1suLi5jc3NDbGFzc2VzLCBcIkNhdmFcIl19XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59XG4gICAgICAgICAgICAgICAgJD17KCkgPT4gQ2F2YUNsYXNzLndpZGdldENvdW50ICs9IDF9XG4gICAgICAgICAgICAgICAgb25EZXN0cm95PXtcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgQ2F2YUNsYXNzLndpZGdldENvdW50IC09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChDYXZhQ2xhc3Mud2lkZ2V0Q291bnQgPD0gMCkgdGhpcy51bnN1YigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtuZXcgX2NhdmEodGhpcy5fdmFsdWVzKX1cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgY2F2YSA9IG5ldyBDYXZhQ2xhc3M7XG5cbmV4cG9ydCBkZWZhdWx0IGNhdmE7XG4iLCAiaW1wb3J0IHsgQXN0YWwsIEdkaywgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuaW1wb3J0IGNhdmEgZnJvbSBcIi4uL21vZHVsZXMvQ2F2YVwiO1xuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDYXZhT3ZlcmxheSh7IGdka21vbml0b3IgfTogeyBnZGttb25pdG9yOiBHZGsuTW9uaXRvciB9KSB7XG4gICAgY29uc3QgeyBMRUZULCBSSUdIVCwgQk9UVE9NIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8d2luZG93XG4gICAgICAgICAgICBuYW1lc3BhY2U9J0NhdmFPdmVybGF5J1xuICAgICAgICAgICAgbGF5ZXI9e0FzdGFsLkxheWVyLkJPVFRPTX1cbiAgICAgICAgICAgIGdka21vbml0b3I9e2dka21vbml0b3J9XG4gICAgICAgICAgICBhbmNob3I9e1JJR0hUIHwgTEVGVCB8IEJPVFRPTX1cbiAgICAgICAgICAgIHZpc2libGU9e2NhdmEudmlzaWJpbGl0eVN0YXRlfVxuICAgICAgICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICAgICAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgICA+XG4gICAgICAgICAgICA8Ym94IGhhbGlnbj17R3RrLkFsaWduLkZJTEx9IHZhbGlnbj17R3RrLkFsaWduLkVORH0gaGVpZ2h0UmVxdWVzdD17TWF0aC5mbG9vcihnZGttb25pdG9yLmdldF9nZW9tZXRyeSgpLmhlaWdodCAqIC4yNSl9PlxuICAgICAgICAgICAgICAgIHtjYXZhLkNhdmEoW1wiQ2F2YU92ZXJsYXlcIl0pfVxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvd2luZG93PlxuICAgICk7XG59XG4iLCAiaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgQXN0YWwsIEdkaywgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiO1xuXG5mdW5jdGlvbiBFbnRyeSh7IGJpbmQsIGFjdGlvbiB9OiB7IGJpbmQ6IHN0cmluZywgYWN0aW9uOiBzdHJpbmcgfSkge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydFbnRyeSddfSBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn0gaG9tb2dlbmVvdXM+XG4gICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiQmluZFwiXX0gbGFiZWw9e2JpbmR9IC8+XG4gICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiQWN0aW9uXCJdfSBsYWJlbD17YWN0aW9ufSAvPlxuICAgICAgICA8L2JveD5cbiAgICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDaGVhdHNoZWV0KHsgZ2RrbW9uaXRvciB9OiB7IGdka21vbml0b3I6IEdkay5Nb25pdG9yIH0pIHtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDx3aW5kb3dcbiAgICAgICAgICAgIG5hbWU9J0NoZWF0c2hlZXQnXG4gICAgICAgICAgICBsYXllcj17QXN0YWwuTGF5ZXIuT1ZFUkxBWX1cbiAgICAgICAgICAgIGdka21vbml0b3I9e2dka21vbml0b3J9XG4gICAgICAgICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgICAgICAgICAgJD17KHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSl9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydDaGVhdHNoZWV0J119IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbJ1RpdGxlJ119IGxhYmVsPXsnQ2hlYXRzaGVldCd9IC8+XG4gICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ0hhbGYnXX0gaG9tb2dlbmVvdXM+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17WydTZWN0aW9uJ119IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNzc0NsYXNzZXM9e1tcIlN1YnRpdGxlXCJdfSBsYWJlbD17XCJHZXN0XHUwMEUzbyBkZSBDbGllbnRlc1wifSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgUFwiIGFjdGlvbj1cIkZpeGFyIGNsaWVudGVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBRXCIgYWN0aW9uPVwiRmVjaGFyIHByb2dyYW1hXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgVlwiIGFjdGlvbj1cIkZsdXR1YXIgYSB0ZWxhXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRlwiIGFjdGlvbj1cIkZvclx1MDBFN2FyIHRlbGEgY2hlaWFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBKXCIgYWN0aW9uPVwiRGl2aWRpciBlbSBEd2luZGxlXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgXHVGMDYyXCIgYWN0aW9uPVwiTW92ZXIgZm9jbyBwYXJhIGphbmVsYSBhY2ltYVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFx1RjA2M1wiIGFjdGlvbj1cIk1vdmVyIGZvY28gcGFyYSBqYW5lbGEgYWJhaXhvXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgXHVGMDYwXCIgYWN0aW9uPVwiTW92ZXIgZm9jbyBwYXJhIGphbmVsYSBcdTAwRTAgZXNxdWVyZGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBcdUYwNjFcIiBhY3Rpb249XCJNb3ZlciBmb2NvIHBhcmEgamFuZWxhIFx1MDBFMCBkaXJlaXRhXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ1NlY3Rpb24nXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiU3VidGl0bGVcIl19IGxhYmVsPXtcIkdlc3RcdTAwRTNvIGRlIFdvcmtzcGFjZXNcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJDVFJMICsgU1VQRVIgKyBcdUYwNjBcIiBhY3Rpb249XCJJciBwYXJhIFdvcmtzcGFjZSBcdTAwRTAgZXNxdWVyZGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiQ1RSTCArIFNVUEVSICsgXHVGMDYxXCIgYWN0aW9uPVwiSXIgcGFyYSBXb3Jrc3BhY2UgXHUwMEUwIGRpcmVpdGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiQ1RSTCArIFNISUZUICsgU1VQRVIgKyBcdUYwNjBcIiBhY3Rpb249XCJNb3ZlciBwYXJhIFdvcmtzcGFjZSBcdTAwRTAgZXNxdWVyZGFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiQ1RSTCArIFNISUZUICsgU1VQRVIgKyBcdUYwNjFcIiBhY3Rpb249XCJNb3ZlciBwYXJhIFdvcmtzcGFjZSBcdTAwRTAgZGlyZWl0YVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFNcIiBhY3Rpb249XCJJciBwYXJhIFdvcmtzcGFjZSBlc3BlY2lhbFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFNISUZUICsgU1wiIGFjdGlvbj1cIk1vdmVyIHBhcmEgd29ya3NwYWNlIGVzcGVjaWFsXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snSGFsZiddfSBob21vZ2VuZW91cz5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbJ1NlY3Rpb24nXX0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY3NzQ2xhc3Nlcz17W1wiU3VidGl0bGVcIl19IGxhYmVsPXtcIlByb2dyYW1hcyBwYWRyXHUwMEUzb1wifSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRW50ZXJcIiBhY3Rpb249XCJUZXJtaW5hbFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIFJcIiBhY3Rpb249XCJMYW5cdTAwRTdhZG9yIGRlIGFwbGljYXRpdm9zXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRVwiIGFjdGlvbj1cIkFicmlyIEdlcmVuY2lhZG9yIGRlIEFycXVpdm9zXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRFwiIGFjdGlvbj1cIkFicmlyL0ZlY2hhciBEb2NrXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgQ1wiIGFjdGlvbj1cIkFicmlyL0ZlY2hhciBDaGVhdHNoZWV0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgRVNDXCIgYWN0aW9uPVwiQWJyaXIvZmVjaGFyIFdsb2dvdXRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1snU2VjdGlvbiddfSBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjc3NDbGFzc2VzPXtbXCJTdWJ0aXRsZVwiXX0gbGFiZWw9e1wiT3V0cm9zXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiUFJJTlRcIiBhY3Rpb249XCJDYXB0dXJhciB0ZWxhXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RW50cnkgYmluZD1cIlNVUEVSICsgUFJJTlRcIiBhY3Rpb249XCJDYXB0dXJhciByZWdpXHUwMEUzb1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVudHJ5IGJpbmQ9XCJTVVBFUiArIE1cIiBhY3Rpb249XCJGZWNoYXIgc2Vzc1x1MDBFM29cIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFbnRyeSBiaW5kPVwiU1VQRVIgKyBMXCIgYWN0aW9uPVwiQmxvcXVlYXIgYSB0ZWxhXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3dpbmRvdz5cbiAgICApO1xufVxuIiwgImltcG9ydCBzdHlsZSBmcm9tIFwiLi9zdHlsZXMvaW5kZXguc2Nzc1wiO1xuaW1wb3J0IEJhciBmcm9tIFwiLi93aWRnZXQvQmFyXCI7XG5pbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIjtcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIEZvciwgVGhpcyB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBDYXZhT3ZlcmxheSBmcm9tIFwiLi93aWRnZXQvQ2F2YU92ZXJsYXlcIjtcbmltcG9ydCBDaGVhdHNoZWV0IGZyb20gXCIuL3dpZGdldC9DaGVhdHNoZWV0XCI7XG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gICAgY29uc3QgbW9uaXRvcnMgPSBjcmVhdGVCaW5kaW5nKGFwcCwgXCJtb25pdG9yc1wiKTtcbiAgICByZXR1cm4gKFxuICAgICAgICA8Rm9yIGVhY2g9e21vbml0b3JzfT5cbiAgICAgICAgICAgIHttb25pdG9yID0+IChcbiAgICAgICAgICAgICAgICA8VGhpcyB0aGlzPXthcHB9PlxuICAgICAgICAgICAgICAgICAgICA8QmFyIGdka21vbml0b3I9e21vbml0b3J9IC8+XG4gICAgICAgICAgICAgICAgICAgIDxDYXZhT3ZlcmxheSBnZGttb25pdG9yPXttb25pdG9yfSAvPlxuICAgICAgICAgICAgICAgICAgICA8Q2hlYXRzaGVldCBnZGttb25pdG9yPXttb25pdG9yfSAvPlxuICAgICAgICAgICAgICAgIDwvVGhpcz5cbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvRm9yPlxuICAgICk7XG59XG5cbmFwcC5zdGFydCh7IGNzczogc3R5bGUsIG1haW46IG1haW4gfSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUE7OztBQ0FBLE9BQU8sV0FBVztBQUNsQixPQUFPLFNBQVM7QUFDaEIsT0FBTyxTQUFTOzs7QUNGaEIsT0FBTyxrQkFBa0I7QUFDekIsT0FBTyxVQUFVOzs7QUNhVixTQUFTLGtCQUFrQixTQUF5QjtBQUN2RCxNQUFHLFdBQVcsTUFBTTtBQUNoQixXQUFPLEdBQUcsS0FBSyxNQUFNLFVBQVUsSUFBSSxDQUFDLElBQUksS0FBSyxNQUFPLFVBQVUsT0FBUSxFQUFFLENBQUM7QUFBQSxFQUM3RTtBQUVBLFNBQU8sR0FBRyxLQUFLLE1BQU0sVUFBVSxFQUFFLENBQUM7QUFDdEM7OztBQ3BCQSxPQUFPQSxjQUFhOzs7QUNBcEIsT0FBTyxhQUFhO0FBQ3BCLE9BQU8sU0FBUztBQUNoQixPQUFPLFVBQVU7OztBQ0FWLFNBQVMsU0FBUyxLQUFhO0FBQ2xDLFNBQU8sSUFDRixRQUFRLG1CQUFtQixPQUFPLEVBQ2xDLFdBQVcsS0FBSyxHQUFHLEVBQ25CLFlBQVk7QUFDckI7QUFFTyxTQUFTLFNBQVMsS0FBYTtBQUNsQyxTQUFPLElBQ0YsUUFBUSxtQkFBbUIsT0FBTyxFQUNsQyxXQUFXLEtBQUssR0FBRyxFQUNuQixZQUFZO0FBQ3JCO0FBdURPLFNBQVMsSUFBSSxLQUFxQixNQUFjLE9BQVk7QUFDL0QsUUFBTSxNQUFNLFNBQVMsSUFBSTtBQUN6QixRQUFNLFNBQVMsT0FBTyxHQUFHO0FBQ3pCLFFBQU0sU0FBUyxPQUFPLEdBQUc7QUFFekIsTUFBSTtBQUVKLE1BQUksVUFBVSxPQUFPLE9BQU8sSUFBSSxNQUFNLE1BQU0sWUFBWTtBQUNwRCxjQUFXLElBQUksTUFBTSxFQUFvQjtBQUFBLEVBQzdDLE9BQU87QUFDSCxjQUFVLElBQUksSUFBd0I7QUFBQSxFQUMxQztBQUVBLE1BQUksWUFBWSxPQUFPO0FBQ25CLFFBQUksVUFBVSxPQUFPLE9BQU8sSUFBSSxNQUFNLE1BQU0sWUFBWTtBQUNwRDtBQUFDLE1BQUMsSUFBSSxNQUFNLEVBQXVCLEtBQUs7QUFBQSxJQUM1QyxPQUFPO0FBQ0gsYUFBTyxPQUFPLEtBQUssRUFBRSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7QUFBQSxJQUN4QztBQUFBLEVBQ0o7QUFDSjs7O0FENUVPLElBQU0sV0FBTixNQUFNLGtCQUE4QixTQUFTO0FBQUEsRUFDaEQ7QUFBQSxTQUFPLFNBQVMsUUFBUTtBQUFBO0FBQUEsRUFFeEI7QUFBQSxFQUNBO0FBQUEsRUFFQSxZQUFZLEtBQWMsV0FBK0I7QUFDckQsVUFBTSxrRUFBa0U7QUFDeEUsU0FBSyxhQUFhLGNBQWMsTUFBTSxNQUFNO0FBQzVDLFNBQUssT0FBTztBQUFBLEVBQ2hCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBT0EsVUFBVSxVQUE4QztBQUVwRCxXQUFPLEtBQUssV0FBVyxRQUFRO0FBQUEsRUFDbkM7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLE1BQVM7QUFDTCxXQUFPLEtBQUssS0FBSztBQUFBLEVBQ3JCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLEdBQVUsV0FBeUM7QUFDL0MsV0FBTyxJQUFJLFVBQVMsTUFBTSxVQUFVLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxVQUFVO0FBQUEsRUFDckU7QUFBQSxFQUVVLE1BQWEsV0FBeUM7QUFDNUQsV0FBTyxLQUFLLEdBQUcsU0FBUztBQUFBLEVBQzVCO0FBQUEsRUFFQSxXQUFtQjtBQUNmLFdBQU8sWUFBWSxLQUFLLElBQUksQ0FBQztBQUFBLEVBQ2pDO0FBQUEsRUFFQSxDQUFDLE9BQU8sV0FBVyxJQUFJO0FBQ25CLFlBQVEsS0FBSyxxREFBcUQ7QUFDbEUsV0FBTyxLQUFLLFNBQVM7QUFBQSxFQUN6QjtBQUNKO0FBdUJPLFNBQVMsWUFBZSxNQUFtQjtBQUM5QyxNQUFJLGVBQWU7QUFDbkIsUUFBTSxjQUFjLG9CQUFJLElBQXVCO0FBRS9DLFFBQU0sWUFBK0IsQ0FBQyxhQUFhO0FBQy9DLGdCQUFZLElBQUksUUFBUTtBQUN4QixXQUFPLE1BQU0sWUFBWSxPQUFPLFFBQVE7QUFBQSxFQUM1QztBQUVBLFFBQU1DLE9BQU0sQ0FBQyxhQUFzQjtBQUMvQixVQUFNLFFBQVcsT0FBTyxhQUFhLGFBQWEsU0FBUyxZQUFZLElBQUk7QUFDM0UsUUFBSSxpQkFBaUIsT0FBTztBQUN4QixxQkFBZTtBQUVmLFlBQU0sS0FBSyxXQUFXLEVBQUUsUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQUEsSUFDaEQ7QUFBQSxFQUNKO0FBRUEsU0FBTyxDQUFDLElBQUksU0FBUyxNQUFNLGNBQWMsU0FBUyxHQUFHQSxJQUFnQjtBQUN6RTtBQWdCTyxTQUFTLGVBSWQsTUFBWSxXQUErQztBQUN6RCxNQUFJO0FBQ0osUUFBTSxjQUFjLG9CQUFJLElBQXVCO0FBQy9DLFFBQU0sUUFBUSxJQUFJLE1BQWUsS0FBSyxNQUFNO0FBRTVDLFFBQU0sWUFBK0IsQ0FBQyxhQUFhO0FBQy9DLFFBQUksWUFBWSxTQUFTLEdBQUc7QUFDeEIsZ0JBQVUsS0FBSztBQUFBLFFBQUksQ0FBQyxLQUFLLE1BQ3JCLElBQUksVUFBVSxNQUFNO0FBQ2hCLGdCQUFNLFFBQVEsSUFBSSxJQUFJO0FBQ3RCLGNBQUksTUFBTSxDQUFDLE1BQU0sT0FBTztBQUNwQixrQkFBTSxDQUFDLElBQUksSUFBSSxJQUFJO0FBQ25CLGtCQUFNLEtBQUssV0FBVyxFQUFFLFFBQVEsQ0FBQyxPQUFPLEdBQUcsQ0FBQztBQUFBLFVBQ2hEO0FBQUEsUUFDSixDQUFDO0FBQUEsTUFDTDtBQUFBLElBQ0o7QUFFQSxnQkFBWSxJQUFJLFFBQVE7QUFFeEIsV0FBTyxNQUFNO0FBQ1Qsa0JBQVksT0FBTyxRQUFRO0FBQzNCLFVBQUksWUFBWSxTQUFTLEdBQUc7QUFDeEIsZ0JBQVEsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQ3hCLGdCQUFRLFNBQVM7QUFDakIsY0FBTSxTQUFTO0FBQUEsTUFDbkI7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUVBLFFBQU0sTUFBTSxNQUFTO0FBQ2pCLFVBQU0sT0FBTyxLQUFLLElBQUksQ0FBQyxLQUFLLE1BQU07QUFDOUIsVUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHO0FBQ1gsY0FBTSxDQUFDLElBQUksSUFBSSxJQUFJO0FBQUEsTUFDdkI7QUFFQSxhQUFPLE1BQU0sQ0FBQztBQUFBLElBQ2xCLENBQUM7QUFFRCxXQUFPLFlBQVksVUFBVSxHQUFJLElBQWEsSUFBSztBQUFBLEVBQ3ZEO0FBRUEsU0FBTyxJQUFJLFNBQVMsS0FBSyxTQUFTO0FBQ3RDO0FBa0NPLFNBQVMsY0FBaUIsUUFBdUMsS0FBMEI7QUFDOUYsUUFBTSxPQUFPLFNBQVMsR0FBRztBQUV6QixRQUFNLFlBQStCLENBQUMsYUFBYTtBQUMvQyxVQUFNLE1BQU0sa0JBQWtCLElBQUksV0FBVyxZQUFZO0FBQ3pELFVBQU0sS0FBSyxPQUFPLFFBQVEsR0FBRyxHQUFHLEtBQUssSUFBSSxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBQzdELFdBQU8sTUFBTSxPQUFPLFdBQVcsRUFBRTtBQUFBLEVBQ3JDO0FBRUEsUUFBTSxNQUFNLE1BQVM7QUFDakIsUUFBSSxrQkFBa0IsSUFBSSxVQUFVO0FBQ2hDLGFBQU8sT0FBTyxVQUFVLEdBQUcsRUFBRSxnQkFBZ0I7QUFBQSxJQUNqRCxPQUFPO0FBQ0gsWUFBTSxTQUFTLE9BQU8sS0FBSyxXQUFXLEtBQUssR0FBRyxDQUFDO0FBRS9DLFVBQUksVUFBVSxVQUFVLE9BQU8sT0FBTyxNQUFNLE1BQU0sWUFBWTtBQUMxRCxlQUFRLE9BQU8sTUFBTSxFQUFvQjtBQUFBLE1BQzdDO0FBRUEsVUFBSSxRQUFRLE9BQVEsUUFBTyxPQUFPLElBQUk7QUFDdEMsVUFBSSxPQUFPLE9BQVEsUUFBTyxPQUFPLEdBQTBCO0FBRTNELFlBQU0sTUFBTSx1QkFBdUIsR0FBRyxFQUFFO0FBQUEsSUFDNUM7QUFBQSxFQUNKO0FBRUEsU0FBTyxJQUFJLFNBQVMsS0FBSyxTQUFTO0FBQ3RDOzs7QUUxTk8sU0FBUyxTQUFTLE1BQXVCO0FBQzVDLFNBQU8sT0FBTyxPQUFPLEtBQUssSUFBSTtBQUNsQztBQVdBLFNBQVMsY0FBYztBQUNuQixRQUFNLE1BQU0sY0FBYztBQUM5QjtBQUVPLElBQU0sTUFBYztBQUFBLEVBQ3ZCLG1CQUFtQixDQUFDO0FBQUEsRUFDcEIsVUFBVTtBQUFBLEVBQ1YsUUFBUTtBQUFBLEVBQ1IsVUFBVTtBQUFBLEVBQ1YsV0FBVyxNQUFNO0FBQUEsRUFDakIsZ0JBQWdCLE1BQU07QUFDMUI7OztBQ2xDTyxJQUFNLFFBQU4sTUFBTSxPQUFNO0FBQUEsRUFVZixZQUFZLFFBQXVCO0FBTm5DLG9CQUFXLG9CQUFJLElBQXNCO0FBRXJDLFNBQVEsV0FBVyxvQkFBSSxJQUFnQjtBQUN2QyxTQUFRLFNBQVMsb0JBQUksSUFBZ0I7QUFDckMsU0FBUSxVQUFVO0FBR2QsU0FBSyxTQUFTO0FBQUEsRUFDbEI7QUFBQSxFQUVBLFVBQVUsVUFBc0I7QUFDNUIsU0FBSyxVQUFVLElBQUksUUFBUTtBQUFBLEVBQy9CO0FBQUEsRUFFQSxRQUFRLFVBQXNCO0FBQzFCLFFBQUksS0FBSyxVQUFVLENBQUMsS0FBSyxPQUFPLFNBQVM7QUFDckMsV0FBSyxPQUFPLFFBQVEsUUFBUTtBQUFBLElBQ2hDLE9BQU87QUFDSCxXQUFLLE9BQU8sSUFBSSxRQUFRO0FBQUEsSUFDNUI7QUFBQSxFQUNKO0FBQUEsRUFFQSxJQUFPLElBQWE7QUFDaEIsVUFBTSxPQUFPLE9BQU07QUFDbkIsV0FBTSxVQUFVO0FBRWhCLFFBQUk7QUFDQSxhQUFPLEdBQUc7QUFBQSxJQUNkLFVBQUU7QUFDRSxXQUFLLE9BQU8sUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQ2hDLFdBQUssT0FBTyxNQUFNO0FBQ2xCLFdBQUssVUFBVTtBQUNmLGFBQU0sVUFBVTtBQUFBLElBQ3BCO0FBQUEsRUFDSjtBQUFBLEVBRUEsVUFBVTtBQUNOLFNBQUssU0FBUyxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUM7QUFDbEMsU0FBSyxTQUFTLE1BQU07QUFDcEIsU0FBSyxTQUFTLE1BQU07QUFDcEIsV0FBTyxLQUFLO0FBQUEsRUFDaEI7QUFDSjtBQTZFTyxTQUFTLFdBQWtCO0FBQzlCLFFBQU0sUUFBUSxNQUFNO0FBQ3BCLE1BQUksQ0FBQyxPQUFPO0FBQ1IsVUFBTSxNQUFNLDJDQUEyQztBQUFBLEVBQzNEO0FBRUEsU0FBTztBQUNYO0FBS08sU0FBUyxVQUFVLFNBQXFCO0FBQzNDLE1BQUksQ0FBQyxNQUFNLFNBQVM7QUFDaEIsWUFBUSxNQUFNLE1BQU0sc0RBQXNELENBQUM7QUFBQSxFQUMvRTtBQUVBLFFBQU0sU0FBUyxVQUFVLE9BQU87QUFDcEM7QUF3Q08sU0FBUyxXQUFjLElBQWdDO0FBQzFELFFBQU0sUUFBUSxJQUFJLE1BQU0sSUFBSTtBQUM1QixTQUFPLE1BQU0sSUFBSSxNQUFNLEdBQUcsTUFBTSxNQUFNLFFBQVEsQ0FBQyxDQUFDO0FBQ3BEOzs7QUpyS08sSUFBTSxVQUFVLE9BQU8sa0JBQWtCO0FBS3pDLFNBQVMsUUFBUSxRQUF3QjtBQUM1QyxTQUFPLFdBQVcsU0FBVSxPQUFPLE9BQU8sSUFBZTtBQUM3RDtBQXVFQSxTQUFTLGNBQWMsTUFBdUI7QUFDMUMsU0FBTyxLQUFLLHFCQUFxQkMsU0FBUTtBQUM3QztBQUVBLFNBQVMsZUFBZSxNQUF1QjtBQUMzQyxTQUFPLE9BQU8sU0FBUyxjQUFjLENBQUMsY0FBYyxJQUFJO0FBQzVEO0FBR08sU0FBUyxRQUFRLFFBQWdCLE1BQWM7QUFDbEQsTUFBSSxXQUFXLFVBQVUsT0FBTyxPQUFPLE1BQU0sSUFBSTtBQUM3QyxZQUFRLEtBQUssdUJBQXVCLE9BQU8sT0FBTyxDQUFDLE9BQU8sSUFBSSxPQUFPLE1BQU0sRUFBRTtBQUFBLEVBQ2pGO0FBRUEsU0FBTyxPQUFPLFFBQVEsRUFBRSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7QUFDN0M7QUFZTyxTQUFTLElBQ1osTUFDQSxTQUVBLEtBQ0M7QUFDRCxRQUFNLEVBQUUsR0FBRyxPQUFPLGNBQWMsVUFBVSxHQUFHLEtBQUssSUFBSTtBQUN0RCxRQUFNLFFBQVE7QUFFZCxNQUFJLElBQUssUUFBTyxPQUFPLE9BQU8sRUFBRSxJQUFJLENBQUM7QUFDckMsTUFBSSxVQUFVLEtBQUs7QUFFbkIsYUFBVyxDQUFDQyxNQUFLLEtBQUssS0FBSyxPQUFPLFFBQVEsS0FBSyxHQUFHO0FBQzlDLFFBQUksVUFBVSxPQUFXLFFBQU8sTUFBTUEsSUFBRztBQUFBLEVBQzdDO0FBRUEsTUFBSSxPQUFPLFNBQVMsVUFBVTtBQUMxQixRQUFJLFFBQVEsSUFBSSxtQkFBbUI7QUFDL0IsYUFBTyxJQUFJLGtCQUFrQixJQUFJO0FBQUEsSUFDckMsT0FBTztBQUNILFlBQU0sTUFBTSw4QkFBOEIsSUFBSSxHQUFHO0FBQUEsSUFDckQ7QUFBQSxFQUNKO0FBRUEsTUFBSSxlQUFlLElBQUksR0FBRztBQUN0QixVQUFNQyxVQUFTLEtBQUssRUFBRSxVQUFVLEdBQUcsTUFBTSxDQUFDO0FBQzFDLFFBQUksTUFBTyxTQUFRQSxTQUFRLEtBQUs7QUFDaEMsUUFBSUEsT0FBTTtBQUNWLFdBQU9BO0FBQUEsRUFDWDtBQUdBLFFBQU0sRUFBRSxLQUFLLE9BQU8sVUFBVSxJQUFJO0FBQ2xDLFNBQU8sTUFBTTtBQUNiLFNBQU8sTUFBTTtBQUViLFFBQU0sVUFBNkQsQ0FBQztBQUNwRSxRQUFNLFdBQStDLENBQUM7QUFHdEQsYUFBVyxDQUFDRCxNQUFLLEtBQUssS0FBSyxPQUFPLFFBQVEsS0FBSyxHQUFHO0FBQzlDLFFBQUlBLEtBQUksV0FBVyxJQUFJLEdBQUc7QUFDdEIsY0FBUSxLQUFLLENBQUNBLEtBQUksTUFBTSxDQUFDLEdBQUcsS0FBc0IsQ0FBQztBQUNuRCxhQUFPLE1BQU1BLElBQUc7QUFBQSxJQUNwQjtBQUNBLFFBQUksaUJBQWlCLFVBQVU7QUFDM0IsZUFBUyxLQUFLLENBQUNBLE1BQUssS0FBSyxDQUFDO0FBQzFCLFlBQU1BLElBQUcsSUFBSSxNQUFNLElBQUk7QUFBQSxJQUMzQjtBQUFBLEVBQ0o7QUFHQSxRQUFNLFNBQVMsZUFBZSxhQUFhLEtBQUssSUFBSSxJQUFLLEtBQWUsS0FBSztBQUM3RSxNQUFJLGFBQWMsUUFBTyxPQUFPLFFBQVEsS0FBSztBQUM3QyxNQUFJLE1BQU8sU0FBUSxRQUFRLEtBQUs7QUFFaEMsTUFBSSxJQUFLLEtBQUksT0FBTyxRQUFRLEdBQUc7QUFDL0IsTUFBSSxVQUFXLEtBQUksU0FBUyxRQUFRLFNBQVM7QUFHN0MsYUFBVyxTQUFTLE1BQU0sUUFBUSxRQUFRLElBQUksV0FBVyxDQUFDLFFBQVEsR0FBRztBQUNqRSxRQUFJLFVBQVUsTUFBTTtBQUNoQixjQUFRLEtBQUssbURBQW1EO0FBQ2hFO0FBQUEsSUFDSjtBQUVBLFFBQUksTUFBTSxRQUFRLEtBQUssR0FBRztBQUN0QixpQkFBVyxNQUFNLE9BQU87QUFDcEIsWUFBSSxTQUFTLFFBQVEsSUFBSSxFQUFFO0FBQUEsTUFDL0I7QUFBQSxJQUNKLFdBQVcsT0FBTztBQUNkLFVBQUksU0FBUyxRQUFRLE9BQU8sRUFBRTtBQUFBLElBQ2xDO0FBQUEsRUFDSjtBQUdBLFFBQU0sa0JBQWtCLFFBQVEsSUFBSSxDQUFDLENBQUMsS0FBSyxPQUFPLE1BQU07QUFDcEQsVUFBTSxPQUFPLFNBQVMsR0FBRztBQUN6QixVQUFNLEtBQUssS0FBSyxXQUFXLFNBQVMsSUFDOUIsT0FBTyxRQUFRLFdBQVcsS0FBSyxNQUFNLENBQUMsQ0FBQyxJQUFJLE9BQU8sSUFDbEQsT0FBTyxRQUFRLFNBQVMsR0FBRyxHQUFHLE9BQU87QUFFM0MsV0FBTyxNQUFNLE9BQU8sV0FBVyxFQUFFO0FBQUEsRUFDckMsQ0FBQztBQUdELFFBQU0sa0JBQWtCLFNBQVMsSUFBSSxDQUFDLENBQUMsTUFBTSxPQUFPLE1BQU07QUFDdEQsVUFBTSxVQUFVLFFBQVEsVUFBVSxNQUFNO0FBQ3BDLFVBQUksUUFBUSxNQUFNLFFBQVEsSUFBSSxDQUFDO0FBQUEsSUFDbkMsQ0FBQztBQUNELFFBQUksUUFBUSxNQUFNLFFBQVEsSUFBSSxDQUFDO0FBQy9CLFdBQU87QUFBQSxFQUNYLENBQUM7QUFHRCxNQUFJLGdCQUFnQixTQUFTLEtBQUssZ0JBQWdCLFNBQVMsR0FBRztBQUMxRCxjQUFVLE1BQU07QUFDWixzQkFBZ0IsUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQ3BDLHNCQUFnQixRQUFRLENBQUMsT0FBTyxHQUFHLENBQUM7QUFBQSxJQUN4QyxDQUFDO0FBQUEsRUFDTDtBQUVBLE1BQUksTUFBTTtBQUNWLFNBQU87QUFDWDtBQUVPLElBQU0sT0FBTzs7O0FLdE9wQixPQUFPRSxjQUFhOzs7QUNLcEIsSUFBTSxNQUFNLE9BQU8sbURBQW1EO0FBRS9ELElBQU0sMEJBQWdELE1BQU0sSUFDOUQsS0FBSyxDQUFDQyxTQUFRQSxLQUFJLHVCQUF1QixFQUN6QyxNQUFNLE1BQU0sTUFBTSxNQUFNOzs7QURUN0I7QUFLTyxJQUFNLFdBQU4sTUFBTSxtQkFBMEIsS0FBQUMsU0FBUSxRQUNuQyxLQUFBQSxTQUFRLFNBV1IsS0FBQUEsU0FBUSxZQVptQixJQUFlO0FBQUEsRUFnRWxELFlBQVksRUFBRSxXQUFXLENBQUMsRUFBRSxJQUF5QyxDQUFDLEdBQUc7QUFDckUsVUFBTTtBQXhDVixTQUFRLGdCQUFnQixvQkFBSSxJQUFZO0FBeUNwQyxTQUFLLFlBQVksTUFBTSxRQUFRLFFBQVEsSUFBSSxXQUFXLENBQUMsUUFBUTtBQUFBLEVBQ25FO0FBQUEsRUFsRUE7QUFBQSxTQUFRLE1BQW1CO0FBQUEsTUFDdkIsV0FBVyxDQUFDO0FBQUEsTUFFWixlQUFlO0FBQUEsUUFDWCxhQUFhLENBQUNBLFNBQVEsYUFBYUEsU0FBUSxTQUFTO0FBQUEsTUFDeEQ7QUFBQSxNQUNBLGlCQUFpQjtBQUFBLFFBQ2IsYUFBYSxDQUFDQSxTQUFRLGFBQWFBLFNBQVEsU0FBUztBQUFBLE1BQ3hEO0FBQUEsSUFDSjtBQUFBO0FBQUEsRUFFQTtBQUFBLFNBQVEsTUFBc0I7QUFBQSxNQUMxQixVQUFVQSxTQUFRLFVBQVUsU0FBUyxZQUFZLElBQUksSUFBSUEsU0FBUSxXQUFXLFFBQVE7QUFBQSxJQUN4RjtBQUFBO0FBQUEsRUFFQSxPQUFPO0FBQ0gsSUFBQUEsU0FBUSxjQUFjLElBQUk7QUFDMUIsNEJBQXdCLElBQUk7QUFBQSxFQUNoQztBQUFBLEVBRUEsT0FBTyxJQUFPLFdBQXFCLENBQUMsR0FBRztBQUNuQyxXQUFPLElBQUksVUFBUyxFQUFFLFNBQVMsQ0FBQztBQUFBLEVBQ3BDO0FBQUEsRUFLQSxJQUFJLFdBQVc7QUFDWCxXQUFPLENBQUMsR0FBRyxLQUFLLFNBQVM7QUFBQSxFQUM3QjtBQUFBLEVBRUEsU0FBUyxPQUFVLFFBQWdCLElBQVU7QUFDekMsUUFBSSxpQkFBaUIsV0FBVTtBQUMzQixZQUFNLE1BQU0seUNBQXlDO0FBQUEsSUFDekQ7QUFFQSxRQUFJLFFBQVEsR0FBRztBQUNYLFdBQUssWUFBWTtBQUFBLFFBQ2IsR0FBRyxLQUFLLFVBQVUsTUFBTSxHQUFHLEtBQUs7QUFBQSxRQUNoQztBQUFBLFFBQ0EsR0FBRyxLQUFLLFVBQVUsTUFBTSxLQUFLO0FBQUEsTUFDakM7QUFBQSxJQUNKLE9BQU87QUFDSCxXQUFLLFVBQVUsS0FBSyxLQUFLO0FBQ3pCLGNBQVEsS0FBSyxVQUFVLFNBQVM7QUFBQSxJQUNwQztBQUVBLFNBQUssS0FBSyxlQUFlLE9BQU8sS0FBSztBQUNyQyxTQUFLLE9BQU8sVUFBVTtBQUFBLEVBQzFCO0FBQUEsRUFFQSxTQUFTLE9BQW1CO0FBQ3hCLFdBQU8sS0FBSyxVQUFVLFVBQVUsQ0FBQyxPQUFPLE9BQU8sS0FBSyxJQUFJO0FBQUEsRUFDNUQ7QUFBQSxFQUVBLFlBQVksT0FBZ0I7QUFDeEIsVUFBTSxRQUFRLEtBQUssVUFBVSxVQUFVLENBQUMsTUFBTSxNQUFNLEtBQUs7QUFDekQsU0FBSyxVQUFVLE9BQU8sT0FBTyxDQUFDO0FBRTlCLFNBQUssS0FBSyxpQkFBaUIsT0FBTyxLQUFLO0FBQ3ZDLFNBQUssT0FBTyxVQUFVO0FBQUEsRUFDMUI7QUFBQSxFQU9BLFFBQVEsUUFBZ0IsVUFBcUQ7QUFDekUsVUFBTSxLQUFLLE1BQU0sUUFBUSxRQUFRLFFBQVE7QUFDekMsU0FBSyxjQUFjLElBQUksRUFBRTtBQUN6QixXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsV0FBVyxJQUFrQjtBQUN6QixVQUFNLFdBQVcsRUFBRTtBQUNuQixTQUFLLGNBQWMsT0FBTyxFQUFFO0FBQUEsRUFDaEM7QUFBQSxFQUVBLFVBQVU7QUFDTixTQUFLLEtBQUssU0FBUztBQUNuQixlQUFXLE1BQU0sS0FBSyxjQUFjLE9BQU8sR0FBRztBQUMxQyxZQUFNLFdBQVcsRUFBRTtBQUFBLElBQ3ZCO0FBQUEsRUFDSjtBQUNKOzs7QUU1RE8sU0FBUyxJQUF1QztBQUFBLEVBQ25EO0FBQUEsRUFDQSxVQUFVO0FBQUEsRUFDVjtBQUFBLEVBQ0EsS0FBSyxDQUFDLFNBQWU7QUFDekIsR0FBMEM7QUFHdEMsUUFBTSxlQUFlLFNBQVM7QUFDOUIsUUFBTSxNQUFNLG9CQUFJLElBQXlCO0FBQ3pDLFFBQU0sV0FBVyxJQUFJLFNBQWE7QUFFbEMsV0FBU0MsUUFBTyxFQUFFLE1BQU0sT0FBTyxPQUFPLENBQUMsS0FBSyxHQUFHLE1BQU0sR0FBWTtBQUM3RCxRQUFJLE9BQU8sWUFBWSxZQUFZO0FBQy9CLGNBQVEsT0FBTyxNQUFNLE1BQU0sSUFBSSxDQUFDO0FBQUEsSUFDcEMsV0FBVyxZQUFZLE1BQU07QUFDekIsVUFBSSxlQUFlLEtBQUs7QUFBQSxJQUM1QjtBQUNBLFVBQU0sUUFBUTtBQUFBLEVBQ2xCO0FBRUEsV0FBUyxTQUFTLFdBQTJCO0FBQ3pDLFVBQU0sUUFBUSxDQUFDLEdBQUcsU0FBUztBQUMzQixVQUFNLE1BQU0sTUFBTSxJQUFJLEVBQUU7QUFDeEIsVUFBTSxRQUFRLElBQUksSUFBSSxHQUFHO0FBR3pCLGVBQVcsQ0FBQyxLQUFLLEtBQUssS0FBSyxJQUFJLFFBQVEsR0FBRztBQUd0QyxlQUFTLFlBQVksTUFBTSxLQUFLO0FBRWhDLFVBQUksQ0FBQyxNQUFNLElBQUksR0FBRyxHQUFHO0FBQ2pCLFFBQUFBLFFBQU8sS0FBSztBQUNaLFlBQUksT0FBTyxHQUFHO0FBQUEsTUFDbEI7QUFBQSxJQUNKO0FBR0EsVUFBTSxJQUFJLENBQUMsTUFBTSxNQUFNO0FBQ25CLFlBQU0sTUFBTSxJQUFJLENBQUM7QUFDakIsVUFBSSxJQUFJLElBQUksR0FBRyxHQUFHO0FBQ2QsY0FBTTtBQUFBLFVBQ0YsT0FBTyxDQUFDLEVBQUUsUUFBUTtBQUFBLFVBQ2xCO0FBQUEsUUFDSixJQUFJLElBQUksSUFBSSxHQUFHO0FBQ2YsaUJBQVMsQ0FBQztBQUNWLFlBQUksU0FBUyxTQUFTLEtBQUssR0FBRztBQUMxQixrQkFBUSxLQUFLLHlCQUF5QixHQUFHLEVBQUU7QUFBQSxRQUMvQyxPQUFPO0FBQ0gsbUJBQVMsU0FBUyxLQUFLO0FBQUEsUUFDM0I7QUFBQSxNQUNKLE9BQU87QUFDSCxjQUFNLENBQUMsT0FBTyxRQUFRLElBQUksWUFBWSxDQUFDO0FBQ3ZDLGNBQU0sUUFBUSxJQUFJLE1BQU0sWUFBWTtBQUNwQyxjQUFNLFFBQVEsTUFBTSxJQUFJLE1BQU0sUUFBUSxNQUFNLEtBQUssQ0FBQztBQUNsRCxZQUFJLElBQUksS0FBSyxFQUFFLE1BQU0sT0FBTyxPQUFPLENBQUMsT0FBTyxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBQzdELGlCQUFTLFNBQVMsS0FBSztBQUFBLE1BQzNCO0FBQUEsSUFDSixDQUFDO0FBQUEsRUFDTDtBQUVBLFFBQU0sVUFBVSxLQUFLLFVBQVUsTUFBTTtBQUNqQyxhQUFTLEtBQUssSUFBSSxDQUFDO0FBQUEsRUFDdkIsQ0FBQztBQUNELFdBQVMsS0FBSyxJQUFJLENBQUM7QUFFbkIsWUFBVSxNQUFNO0FBQ1osWUFBUTtBQUVSLGVBQVcsU0FBUyxJQUFJLE9BQU8sR0FBRztBQUM5QixNQUFBQSxRQUFPLEtBQUs7QUFBQSxJQUNoQjtBQUVBLFFBQUksTUFBTTtBQUFBLEVBQ2QsQ0FBQztBQUVELFNBQU87QUFDWDs7O0FDekZPLFNBQVMsS0FBK0I7QUFBQSxFQUMzQztBQUFBLEVBQ0EsVUFBVTtBQUFBLEVBQ1Y7QUFDSixHQUFpQztBQUM3QixRQUFNLGVBQWUsU0FBUztBQUM5QixRQUFNLFdBQVcsSUFBSSxTQUFZO0FBRWpDLE1BQUk7QUFFSixXQUFTLFNBQVMsR0FBTTtBQUNwQixlQUFXLFNBQVMsU0FBUyxVQUFVO0FBQ25DLGVBQVMsWUFBWSxLQUFLO0FBRTFCLFVBQUksT0FBTyxZQUFZLFlBQVk7QUFDL0IsZ0JBQVEsS0FBSztBQUFBLE1BQ2pCLFdBQVcsWUFBWSxNQUFNO0FBQ3pCLFlBQUksZUFBZSxLQUFLO0FBQUEsTUFDNUI7QUFFQSxVQUFJLE1BQU8sT0FBTSxRQUFRO0FBQUEsSUFDN0I7QUFFQSxZQUFRLElBQUksTUFBTSxZQUFZO0FBQzlCLFVBQU0sS0FBSyxNQUFNLElBQUksTUFBTSxRQUFRLENBQUMsQ0FBQztBQUNyQyxRQUFJLE9BQU8sTUFBTSxPQUFPLFNBQVMsT0FBTyxRQUFRLE9BQU8sUUFBVztBQUM5RCxlQUFTLFNBQVMsRUFBRTtBQUFBLElBQ3hCO0FBQUEsRUFDSjtBQUVBLFFBQU0sVUFBVSxNQUFNLFVBQVUsTUFBTTtBQUNsQyxhQUFTLE1BQU0sSUFBSSxDQUFDO0FBQUEsRUFDeEIsQ0FBQztBQUNELFdBQVMsTUFBTSxJQUFJLENBQUM7QUFFcEIsWUFBVSxNQUFNO0FBQ1osVUFBTSxRQUFRO0FBQ2QsWUFBUTtBQUFBLEVBQ1osQ0FBQztBQUVELFNBQU87QUFDWDs7O0FDcEJPLFNBQVMsS0FBK0I7QUFBQSxFQUMzQyxNQUFNO0FBQUEsRUFDTjtBQUFBLEVBQ0E7QUFBQSxFQUNBLEdBQUc7QUFDUCxHQUFpQjtBQUNiLFFBQU0sVUFBVSxJQUFJLE1BQWtCO0FBRXRDLE1BQUksTUFBTyxTQUFRLE1BQU0sS0FBSztBQUU5QixhQUFXLENBQUMsS0FBSyxLQUFLLEtBQUssT0FBTyxRQUFRLEtBQUssR0FBRztBQUM5QyxRQUFJLFFBQVEsT0FBTztBQUNmLFVBQUksaUJBQWlCLFVBQVU7QUFDM0IsWUFBSSxPQUFPLE1BQU0sTUFBTSxJQUFJLENBQUM7QUFDNUIsZ0JBQVEsS0FBSyxNQUFNLFVBQVUsTUFBTSxJQUFJLE9BQU8sTUFBTSxNQUFNLElBQUksQ0FBQyxDQUFDLENBQUM7QUFBQSxNQUNyRSxXQUFXLE9BQU8sVUFBVSxVQUFVO0FBQ2xDLFlBQUksT0FBTyxNQUFNLEtBQUs7QUFBQSxNQUMxQjtBQUFBLElBQ0osV0FBVyxRQUFRLFNBQVM7QUFDeEIsVUFBSSxpQkFBaUIsVUFBVTtBQUMzQixZQUFJLFNBQVMsTUFBTSxNQUFNLElBQUksQ0FBQztBQUM5QixnQkFBUSxLQUFLLE1BQU0sVUFBVSxNQUFNLElBQUksU0FBUyxNQUFNLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQztBQUFBLE1BQ3ZFLFdBQVcsT0FBTyxVQUFVLFVBQVU7QUFDbEMsWUFBSSxTQUFTLE1BQU0sS0FBSztBQUFBLE1BQzVCO0FBQUEsSUFDSixXQUFXLElBQUksV0FBVyxJQUFJLEdBQUc7QUFDN0IsWUFBTSxLQUFLLElBQUksV0FBVyxVQUFVLElBQzlCLEtBQUssUUFBUSxXQUFXLFNBQVMsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxJQUN2RCxLQUFLLFFBQVEsU0FBUyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEdBQUcsS0FBSztBQUVoRCxjQUFRLEtBQUssTUFBTSxLQUFLLFdBQVcsRUFBRSxDQUFDO0FBQUEsSUFDMUMsV0FBVyxpQkFBaUIsVUFBVTtBQUNsQyxVQUFJLE1BQU0sS0FBSyxNQUFNLElBQUksQ0FBQztBQUMxQixjQUFRLEtBQUssTUFBTSxVQUFVLE1BQU0sSUFBSSxNQUFNLEtBQUssTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQUEsSUFDbkUsT0FBTztBQUNILFVBQUksTUFBTSxLQUFLLEtBQUs7QUFBQSxJQUN4QjtBQUFBLEVBQ0o7QUFFQSxNQUFJLE1BQU0sUUFBUSxRQUFRLEdBQUc7QUFDekIsZUFBVyxNQUFNLFVBQVU7QUFDdkIsVUFBSSxPQUFPLE1BQU0sT0FBTyxTQUFTLE9BQU8sUUFBUSxPQUFPLFFBQVc7QUFDOUQsWUFBSSxTQUFTLE1BQU0sSUFBSSxFQUFFO0FBQUEsTUFDN0I7QUFBQSxJQUNKO0FBQUEsRUFDSixPQUFPO0FBQ0gsVUFBTSxLQUFLO0FBQ1gsUUFBSSxPQUFPLE1BQU0sT0FBTyxTQUFTLE9BQU8sUUFBUSxPQUFPLFFBQVc7QUFDOUQsVUFBSSxTQUFTLE1BQU0sSUFBSSxFQUFFO0FBQUEsSUFDN0I7QUFBQSxFQUNKO0FBRUEsTUFBSSxRQUFRLFNBQVMsR0FBRztBQUNwQixjQUFVLE1BQU0sUUFBUSxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztBQUFBLEVBQ2pEO0FBRUEsU0FBTztBQUNYOzs7QUNqR0EsT0FBT0MsY0FBYTs7O0FDRHBCLE9BQU8sYUFBYTtBQVViLElBQU0sVUFBVSxRQUFRO0FBb0N4QixTQUFTLFVBQVUsS0FBeUM7QUFDL0QsU0FBTyxJQUFJLFFBQVEsQ0FBQyxTQUFTLFdBQVc7QUFDcEMsUUFBSSxNQUFNLFFBQVEsR0FBRyxHQUFHO0FBQ3BCLGNBQVEsUUFBUSxZQUFZLEtBQUssQ0FBQyxHQUFHLFFBQVE7QUFDekMsWUFBSTtBQUNBLGtCQUFRLFFBQVEsUUFBUSxtQkFBbUIsR0FBRyxDQUFDO0FBQUEsUUFDbkQsU0FBUyxPQUFPO0FBQ1osaUJBQU8sS0FBSztBQUFBLFFBQ2hCO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTCxPQUFPO0FBQ0gsY0FBUSxRQUFRLFdBQVcsS0FBSyxDQUFDLEdBQUcsUUFBUTtBQUN4QyxZQUFJO0FBQ0Esa0JBQVEsUUFBUSxRQUFRLFlBQVksR0FBRyxDQUFDO0FBQUEsUUFDNUMsU0FBUyxPQUFPO0FBQ1osaUJBQU8sS0FBSztBQUFBLFFBQ2hCO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTDtBQUFBLEVBQ0osQ0FBQztBQUNMOzs7QUQ3RE8sSUFBTSxPQUFPQyxTQUFRO0FBRXJCLFNBQVMsU0FBU0MsV0FBa0IsVUFBdUI7QUFDOUQsU0FBT0QsU0FBUSxLQUFLLFNBQVNDLFdBQVUsTUFBTSxLQUFLLFdBQVcsQ0FBQztBQUNsRTtBQTZCTyxTQUFTLFdBQ1osTUFDQSxNQUNBLFVBQ0EsV0FDVztBQUNYLE1BQUksZUFBZTtBQUNuQixNQUFJLFFBQTZCO0FBQ2pDLFFBQU0sY0FBYyxvQkFBSSxJQUFnQjtBQUV4QyxXQUFTLFVBQVUsVUFBa0M7QUFDakQsYUFBU0MsS0FBSSxPQUFVO0FBQ25CLFVBQUksVUFBVSxjQUFjO0FBQ3hCLHVCQUFlO0FBQ2Ysb0JBQVksUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDO0FBQUEsTUFDcEM7QUFBQSxJQUNKO0FBRUEsUUFBSSxZQUFZLFNBQVMsR0FBRztBQUN4QixjQUFRLFNBQVMsTUFBTSxNQUFNO0FBQ3pCLFlBQUksT0FBTyxhQUFhLFlBQVk7QUFDaEMsZ0JBQU0sUUFBUSxTQUFTLFlBQVk7QUFDbkMsY0FBSSxpQkFBaUIsU0FBUztBQUMxQixrQkFBTSxLQUFLQSxJQUFHO0FBQUEsVUFDbEIsT0FBTztBQUNILFlBQUFBLEtBQUksS0FBSztBQUFBLFVBQ2I7QUFBQSxRQUNKLE9BQU87QUFDSCxvQkFBVSxRQUFRLEVBQUUsS0FBSyxDQUFDLFdBQVc7QUFDakMsWUFBQUEsS0FBSSxZQUFZLFVBQVUsUUFBUSxZQUFZLElBQUssTUFBWTtBQUFBLFVBQ25FLENBQUM7QUFBQSxRQUNMO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTDtBQUVBLGdCQUFZLElBQUksUUFBUTtBQUV4QixXQUFPLE1BQU07QUFDVCxrQkFBWSxPQUFPLFFBQVE7QUFDM0IsVUFBSSxZQUFZLFNBQVMsR0FBRztBQUN4QixlQUFPLE9BQU87QUFDZCxnQkFBUTtBQUFBLE1BQ1o7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUVBLFNBQU8sSUFBSSxTQUFTLE1BQU0sY0FBYyxTQUFTO0FBQ3JEOzs7QUVwRkEsT0FBT0MsVUFBUztBQUNoQixPQUFPQyxZQUFXOzs7QUNGbEIsT0FBT0MsVUFBUztBQUNoQixPQUFPQyxVQUFTO0FBQ2hCLE9BQU9DLGNBQWE7QUFJcEIsSUFBTSxlQUFlLElBQUlDLEtBQUksUUFBUTtBQUVyQyxTQUFTLElBQUksUUFBdUIsT0FBdUIsR0FBVztBQUNsRSxNQUFJLENBQUMsV0FBVyxRQUFRLE9BQU8sQ0FBQyxHQUFHO0FBQy9CLFdBQU8sZ0JBQWdCLGNBQWMsT0FBTyxRQUFRLEtBQUssQ0FBQztBQUFBLEVBQzlEO0FBQ0o7QUFFQSxTQUFTLGNBQWMsU0FBeUIsUUFBd0I7QUFFcEUsU0FBTztBQUNYO0FBRUEsU0FBUyxXQUFXLFFBQXdCLE9BQXVCLEdBQVc7QUFFMUUsTUFDSSxpQkFBaUJBLEtBQUksY0FDckIsb0JBQW9CLFVBQ3BCLE9BQU8sT0FBTyxtQkFBbUIsWUFDbkM7QUFDRSxXQUFPLGVBQWUsS0FBSztBQUMzQixXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQ0ksaUJBQWlCQSxLQUFJLFVBQ3JCLGtCQUFrQkEsS0FBSSxTQUN0QixNQUFNLFNBQVMsTUFDZixNQUFNLFNBQVMsUUFDZixRQUFRLEtBQUssTUFBTSxTQUNyQjtBQUNFLFdBQU8sVUFBVSxPQUFPLE1BQU0sSUFBSTtBQUNsQyxXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQUksaUJBQWlCQSxLQUFJLFdBQVcsa0JBQWtCQSxLQUFJLFlBQVk7QUFDbEUsV0FBTyxZQUFZLEtBQUs7QUFDeEIsV0FBTztBQUFBLEVBQ1g7QUFFQSxNQUNJLGlCQUFpQkMsS0FBSSxjQUNwQixrQkFBa0JELEtBQUksY0FBYyxrQkFBa0JBLEtBQUksY0FDN0Q7QUFDRSxXQUFPLGVBQWUsS0FBSztBQUMzQixXQUFPO0FBQUEsRUFDWDtBQUVBLE1BQUksaUJBQWlCQyxLQUFJLFlBQVksa0JBQWtCQSxLQUFJLE1BQU07QUFBQSxFQUVqRTtBQUVBLE1BQUksaUJBQWlCRCxLQUFJLFVBQVUsa0JBQWtCQSxLQUFJLGFBQWE7QUFDbEUsV0FBTyxXQUFXLEtBQUs7QUFDdkIsV0FBTztBQUFBLEVBQ1g7QUFFQSxNQUFJLGlCQUFpQkEsS0FBSSxjQUFjLGtCQUFrQkEsS0FBSSxVQUFVO0FBQ25FLFdBQU8sV0FBVyxLQUFLO0FBQ3ZCLFdBQU87QUFBQSxFQUNYO0FBRUEsU0FBTztBQUNYO0FBRUEsU0FBUyxPQUFPLFFBQXdCLE9BQXVCO0FBQzNELE1BQUksY0FBYyxRQUFRLEtBQUssRUFBRztBQUVsQyxNQUFJLGtCQUFrQkEsS0FBSSxVQUFVLGlCQUFpQkEsS0FBSSxpQkFBaUI7QUFDdEUsV0FBTyxPQUFPLGtCQUFrQixLQUFLO0FBQUEsRUFDekM7QUFFQSxNQUFJLGVBQWUsVUFBVSxPQUFPLE9BQU8sYUFBYSxZQUFZO0FBQ2hFLFdBQU8sT0FBTyxVQUFVLElBQUk7QUFBQSxFQUNoQztBQUVBLE1BQUksWUFBWSxVQUFVLE9BQU8sT0FBTyxVQUFVLFlBQVk7QUFDMUQsV0FBTyxPQUFPLE9BQU8sS0FBSztBQUFBLEVBQzlCO0FBRUEsUUFBTSxNQUFNLGlCQUFpQixLQUFLLFNBQVMsTUFBTSxFQUFFO0FBQ3ZEO0FBRUEsSUFBTSxFQUFFLFVBQVUsa0JBQWtCLElBQUksU0FBUztBQUFBLEVBQzdDLE9BQU8sUUFBUSxLQUFLO0FBQ2hCLFFBQUksRUFBRSxrQkFBa0JBLEtBQUksU0FBUztBQUNqQyxhQUFPLFFBQVEsS0FBSyxNQUFNLHFCQUFxQixNQUFNLEVBQUUsQ0FBQztBQUFBLElBQzVEO0FBRUEsVUFBTSxNQUFNLE9BQU8sa0JBQWtCO0FBQ3JDLFFBQUk7QUFFSixVQUFNLFNBQVMsQ0FBQ0UsU0FBZ0I7QUFDNUIsVUFBSSxDQUFDQSxLQUFJLFNBQVMsR0FBRyxLQUFLLENBQUNBLEtBQUksU0FBUyxHQUFHLEdBQUc7QUFDMUMsUUFBQUEsT0FBTSxPQUFPQSxJQUFHO0FBQUEsTUFDcEI7QUFFQSxVQUFJLFNBQVUsS0FBSSxnQkFBZ0IsUUFBUTtBQUUxQyxpQkFBVyxJQUFJRixLQUFJLFlBQVk7QUFDL0IsZUFBUyxpQkFBaUJFLElBQUc7QUFDN0IsVUFBSSxhQUFhLFVBQVVGLEtBQUksNEJBQTRCO0FBQUEsSUFDL0Q7QUFFQSxRQUFJLGVBQWUsVUFBVTtBQUN6QixhQUFPLElBQUksSUFBSSxDQUFDO0FBQ2hCLFlBQU0sVUFBVSxJQUFJLFVBQVUsTUFBTSxPQUFPLElBQUksSUFBSSxDQUFDLENBQUM7QUFDckQsZ0JBQVUsT0FBTztBQUFBLElBQ3JCLE9BQU87QUFDSCxhQUFPLEdBQUc7QUFBQSxJQUNkO0FBQUEsRUFDSjtBQUFBLEVBQ0EsU0FBUyxRQUFRLFdBQVc7QUFDeEIsUUFBSSxFQUFFLGtCQUFrQkEsS0FBSSxTQUFTO0FBQ2pDLGFBQU8sUUFBUSxLQUFLLE1BQU0sMkJBQTJCLE1BQU0sRUFBRSxDQUFDO0FBQUEsSUFDbEU7QUFFQSxRQUFJLHFCQUFxQixVQUFVO0FBQy9CLGFBQU8sYUFBYSxVQUFVLElBQUksRUFBRSxNQUFNLEtBQUs7QUFDL0MsWUFBTSxVQUFVLFVBQVU7QUFBQSxRQUN0QixNQUFPLE9BQU8sYUFBYSxVQUFVLElBQUksRUFBRSxNQUFNLEtBQUs7QUFBQSxNQUMxRDtBQUNBLGdCQUFVLE9BQU87QUFBQSxJQUNyQixPQUFPO0FBQ0gsYUFBTyxnQkFBZ0IsVUFBVSxNQUFNLEtBQUssQ0FBQztBQUFBLElBQ2pEO0FBQUEsRUFDSjtBQUFBLEVBQ0EsU0FBUyxRQUFRLE9BQU8sUUFBUSxJQUFJO0FBQ2hDLFFBQUksRUFBRSxpQkFBaUJHLFNBQVEsU0FBUztBQUNwQyxjQUFRSCxLQUFJLE1BQU0sSUFBSSxPQUFPLEtBQUssQ0FBQztBQUFBLElBQ3ZDO0FBRUEsUUFBSSxXQUFXLFFBQVEsT0FBTyxLQUFLLEVBQUc7QUFFdEMsUUFBSSxrQkFBa0IsVUFBVTtBQUM1QixhQUFPLFNBQVMsS0FBSztBQUNyQjtBQUFBLElBQ0o7QUFFQSxRQUFJLGtCQUFrQkEsS0FBSSxXQUFXO0FBQ2pDLFVBQUksaUJBQWlCLFVBQVU7QUFDM0IsbUJBQVcsTUFBTSxNQUFNLFVBQVU7QUFDN0IsY0FBSSxRQUFRLElBQUksS0FBSztBQUFBLFFBQ3pCO0FBRUEsY0FBTSxRQUFRLGVBQWUsQ0FBQyxHQUFHLElBQWFJLFdBQWtCO0FBQzVELGNBQUksRUFBRSxjQUFjRCxTQUFRLFNBQVM7QUFDakMsb0JBQVEsTUFBTSxVQUFVLGNBQWMsRUFBRSxPQUFPLE1BQU0sRUFBRSxDQUFDO0FBQ3hEO0FBQUEsVUFDSjtBQUNBLG1CQUFTLFFBQVEsSUFBSUMsTUFBSztBQUFBLFFBQzlCLENBQUM7QUFFRCxjQUFNLFFBQVEsaUJBQWlCLENBQUMsR0FBRyxPQUFnQjtBQUMvQyxjQUFJLEVBQUUsY0FBY0QsU0FBUSxTQUFTO0FBQ2pDLG9CQUFRLE1BQU0sVUFBVSxpQkFBaUIsRUFBRSxTQUFTLE1BQU0sRUFBRSxDQUFDO0FBQzdEO0FBQUEsVUFDSjtBQUNBLGlCQUFPLFFBQVEsRUFBRTtBQUFBLFFBQ3JCLENBQUM7QUFFRCxrQkFBVSxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBQy9CO0FBQUEsTUFDSjtBQUVBLFVBQUksUUFBUSxPQUFPLEtBQUs7QUFDeEI7QUFBQSxJQUNKO0FBRUEsVUFBTSxNQUFNLGNBQWMsS0FBSyxPQUFPLE1BQU0sRUFBRTtBQUFBLEVBQ2xEO0FBQ0osQ0FBQzs7O0FEektELE9BQU8sT0FBTyxtQkFBbUI7QUFBQSxFQUM3QixLQUFLRSxLQUFJO0FBQUEsRUFDVCxRQUFRQSxLQUFJO0FBQUEsRUFDWixXQUFXQSxLQUFJO0FBQUE7QUFBQSxFQUVmLGFBQWFBLEtBQUk7QUFBQSxFQUNqQixPQUFPQSxLQUFJO0FBQUEsRUFDWCxPQUFPQSxLQUFJO0FBQUEsRUFDWCxPQUFPQSxLQUFJO0FBQUEsRUFDWCxVQUFVQSxLQUFJO0FBQUEsRUFDZCxZQUFZQSxLQUFJO0FBQUEsRUFDaEIsU0FBU0EsS0FBSTtBQUFBLEVBQ2IsU0FBU0EsS0FBSTtBQUFBLEVBQ2IsVUFBVUEsS0FBSTtBQUFBLEVBQ2QsZ0JBQWdCQSxLQUFJO0FBQUEsRUFDcEIsUUFBUUMsT0FBTTtBQUFBLEVBQ2QsT0FBT0QsS0FBSTtBQUFBLEVBQ1gsUUFBUUEsS0FBSTtBQUFBLEVBQ1osY0FBY0EsS0FBSTtBQUFBLEVBQ2xCLFFBQVFDLE9BQU07QUFDbEIsQ0FBQzs7O0FkakJELElBQU0sV0FBVztBQUVqQixJQUFNLHFCQUFOLE1BQXlCO0FBQUEsRUFhZCxjQUFjO0FBQ2pCLFNBQUssVUFBVSxhQUFhLFlBQVk7QUFDeEMsU0FBSyxjQUFjLGNBQWMsS0FBSyxTQUFTLGlCQUFpQjtBQUNoRSxTQUFLLG9CQUFvQixjQUFjLEtBQUssU0FBUyxZQUFZO0FBQ2pFLFNBQUssa0JBQWtCLGNBQWMsS0FBSyxTQUFTLFVBQVU7QUFDN0QsU0FBSyxrQkFBa0IsZUFBZSxDQUFDLEtBQUssbUJBQW1CLEtBQUssZUFBZSxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsV0FBVyxLQUFLLE9BQU8sQ0FBQyxJQUFJLG9CQUFvQixlQUFlLENBQUM7QUFDakssU0FBSyxtQkFBbUIsS0FBSyxnQkFBZ0IsR0FBRyxPQUFLLElBQUksZUFBZSxrQkFBa0IsS0FBSyxRQUFRLFlBQVksQ0FBQyxpQkFBaUIsa0JBQWtCLGtCQUFrQixLQUFLLFFBQVEsYUFBYSxDQUFDLGNBQWM7QUFFbE4sU0FBSyxZQUFZLElBQUksS0FBSyxZQUFZO0FBQ3RDLFNBQUssWUFBWSxJQUFJLEtBQUssWUFBWTtBQUV0QyxTQUFLLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFHLEtBQUssR0FBRyxPQUFPLEVBQUUsR0FBRyxNQUFNLEVBQUUsTUFBTSxHQUFHLEtBQUssR0FBRyxPQUFPLEVBQUUsRUFBRTtBQUUxRixTQUFLLFdBQVcsV0FBVyxFQUFFLEtBQUssR0FBRyxLQUFLLEVBQUUsR0FBRyxVQUFVLE1BQU07QUFDM0QsVUFBSTtBQUNBLGFBQUssZ0JBQWdCLEtBQUssU0FBUztBQUNuQyxhQUFLLGdCQUFnQixLQUFLLFNBQVM7QUFFbkMsY0FBTSxNQUFNLEtBQUs7QUFFakIsY0FBTSxPQUFPLEtBQUssUUFBUTtBQUUxQixhQUFLLFFBQVEsT0FBTztBQUFBLFVBQ2hCLE1BQU0sSUFBSSxPQUFPLEtBQUs7QUFBQSxVQUN0QixLQUFLLElBQUksTUFBTSxLQUFLO0FBQUEsVUFDcEIsT0FBTyxJQUFJLFFBQVEsS0FBSztBQUFBLFFBQzVCO0FBRUEsYUFBSyxRQUFRLE9BQU87QUFBQSxVQUNoQixNQUFNLElBQUk7QUFBQSxVQUNWLEtBQUssSUFBSTtBQUFBLFVBQ1QsT0FBTyxJQUFJO0FBQUEsUUFDZjtBQUVBLGNBQU0sVUFBVSxLQUFLLFFBQVE7QUFFN0IsY0FBTSxhQUFhLFFBQVEsUUFBUSxJQUFJLEtBQUssT0FBUSxRQUFRLE9BQU8sUUFBUSxPQUFPLFFBQVEsUUFBUyxHQUFHLElBQUk7QUFDMUcsY0FBTSxhQUFhLEtBQUssVUFBVSxRQUFRLElBQUksS0FBSyxNQUFPLEtBQUssVUFBVSxPQUFPLEtBQUssVUFBVSxRQUFTLEdBQUcsSUFBSTtBQUUvRyxlQUFPLEVBQUUsS0FBSyxLQUFLLElBQUksS0FBSyxVQUFVLEdBQUcsS0FBSyxLQUFLLElBQUksS0FBSyxVQUFVLEVBQUU7QUFBQSxNQUM1RSxTQUFTLE9BQU87QUFDWixnQkFBUSxLQUFLLHlDQUFzQyxLQUFLO0FBQ3hELGVBQU8sRUFBRSxLQUFLLEdBQUcsS0FBSyxFQUFFO0FBQUEsTUFDNUI7QUFBQSxJQUNKLENBQUM7QUFBQSxFQUNMO0FBQUEsRUFFQSxJQUFXLGdCQUFnQjtBQUN2QixXQUNJLHFCQUFDLFNBQUksWUFBWSxDQUFDLGVBQWUsR0FDN0I7QUFBQSwyQkFBQyxTQUFJLFlBQVksQ0FBQyxVQUFVLEdBQ3hCO0FBQUEsNEJBQUMsV0FBTSxZQUFZLENBQUMsTUFBTSxHQUFHLE9BQU8sVUFBSztBQUFBLFFBQ3pDLG9CQUFDLFdBQU0sWUFBWSxDQUFDLE9BQU8sR0FBRyxPQUFPLEtBQUssU0FBUyxHQUFHLE9BQUssR0FBRyxFQUFFLEdBQUcsR0FBRyxHQUFHLFlBQVksR0FBRztBQUFBLFNBQzVGO0FBQUEsTUFDQSxxQkFBQyxTQUFJLFlBQVksQ0FBQyxhQUFhLEdBQzNCO0FBQUEsNEJBQUMsV0FBTSxZQUFZLENBQUMsTUFBTSxHQUFHLE9BQU8sYUFBTTtBQUFBLFFBQzFDLG9CQUFDLFdBQU0sWUFBWSxDQUFDLE9BQU8sR0FBRyxPQUFPLEtBQUssU0FBUyxHQUFHLE9BQUssR0FBRyxFQUFFLEdBQUcsR0FBRyxHQUFHLFlBQVksR0FBRztBQUFBLFNBQzVGO0FBQUEsTUFDQSxxQkFBQyxTQUFJLFlBQVksS0FBSyxpQkFBaUIsYUFBYSxLQUFLLGtCQUNyRDtBQUFBLDRCQUFDLFdBQU0sWUFBWSxDQUFDLGFBQWEsR0FBRyxVQUFVLEtBQUssYUFBYTtBQUFBLFFBQ2hFLG9CQUFDLFdBQU0sWUFBWSxDQUFDLG1CQUFtQixHQUFHLE9BQU8sS0FBSyxrQkFBa0IsR0FBRyxPQUFLLEdBQUcsS0FBSyxNQUFNLEtBQUssSUFBSSxHQUFHLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHLEdBQUc7QUFBQSxTQUNsSTtBQUFBLE9BQ0o7QUFBQSxFQUVSO0FBQ0o7QUFFQSxJQUFNLGdCQUFnQixJQUFJO0FBQzFCLElBQU8sd0JBQVE7OztBZ0I1RmYsT0FBTyxlQUFlO0FBRXRCLElBQU0sa0JBQU4sTUFBc0I7QUFBQSxFQUlYLGNBQWM7QUFLckIsU0FBUSxnQkFBZ0IsQ0FBQyxLQUFxQixTQUE2QjtBQUN2RSxVQUFJLFlBQVksS0FBSztBQUNyQixVQUFJLG9CQUFvQixZQUFZLEtBQUssV0FBVztBQUVwRCxZQUFNLE9BQU8sS0FBSyxRQUFRLHdCQUF3QixNQUFNO0FBQ3BELFlBQUksb0JBQW9CLFlBQVksS0FBSyxXQUFXO0FBQUEsTUFDeEQsQ0FBQztBQUVELFlBQU0sT0FBTyxLQUFLLFFBQVEsc0JBQXNCLE1BQU07QUFDbEQsWUFBSSxlQUFlLEtBQUssU0FBUztBQUFBLE1BQ3JDLENBQUM7QUFFRCxnQkFBVSxNQUFNO0FBQ1osYUFBSyxXQUFXLElBQUk7QUFDcEIsYUFBSyxXQUFXLElBQUk7QUFBQSxNQUN4QixDQUFDO0FBQUEsSUFDTDtBQXBCSSxTQUFLLFVBQVUsVUFBVSxZQUFZO0FBQ3JDLFNBQUssZUFBZSxjQUFjLEtBQUssU0FBUyxPQUFPO0FBQUEsRUFDM0Q7QUFBQSxFQW9CUSxTQUFTLEVBQUUsS0FBSyxHQUFpQztBQUNyRCxXQUNJO0FBQUEsTUFBQztBQUFBO0FBQUEsUUFDRyxZQUFZLENBQUMsVUFBVTtBQUFBLFFBQ3ZCLGVBQWUsY0FBYyxNQUFNLGVBQWU7QUFBQSxRQUNsRCxHQUFHLENBQUMsU0FBUyxLQUFLLGNBQWMsTUFBTSxJQUFJO0FBQUEsUUFDMUMsUUFBUSxJQUFJLE1BQU07QUFBQSxRQUNsQixRQUFRLElBQUksTUFBTTtBQUFBLFFBRWxCLDhCQUFDLFdBQU0sT0FBTyxjQUFjLE1BQU0sT0FBTyxHQUFHO0FBQUE7QUFBQSxJQUNoRDtBQUFBLEVBRVI7QUFBQSxFQUVBLElBQVcsYUFBYTtBQUNwQixXQUNJLG9CQUFDLFNBQUksWUFBWSxDQUFDLFlBQVksR0FDMUIsOEJBQUMsT0FBSSxNQUFNLEtBQUssY0FBYyxVQUFVLENBQUMsU0FBUyxLQUFLLFNBQVMsRUFBRSxLQUFLLENBQUMsR0FBRyxHQUMvRTtBQUFBLEVBRVI7QUFDSjtBQUVBLElBQU0sYUFBYSxJQUFJO0FBRXZCLElBQU8scUJBQVE7OztBQ3REZixPQUFPLGdCQUFnQjtBQUl2QixJQUFNLG9CQUFvQjtBQUFBLEVBQ3RCLFNBQVM7QUFBQSxFQUNULFFBQVE7QUFBQSxFQUNSLFNBQVM7QUFBQSxFQUNULE1BQU07QUFBQSxFQUNOLFVBQVU7QUFDZDtBQWNBLElBQU0sYUFBTixNQUFpQjtBQUFBLEVBSU4sY0FBYztBQUNqQixTQUFLLFFBQVEsV0FBVyxZQUFZO0FBQ3BDLFNBQUssb0JBQW9CLGNBQWMsS0FBSyxPQUFPLFNBQVMsRUFBRTtBQUFBLE1BQzFELENBQUMsWUFBWTtBQUNULFlBQUksVUFBb0M7QUFDeEMsWUFBSSxTQUFtQztBQUN2QyxZQUFJLFFBQWtDO0FBRXRDLG1CQUFXLFVBQVUsU0FBUztBQUMxQixnQkFBTSxTQUFTLE9BQU8sb0JBQW9CO0FBQzFDLGNBQUksV0FBVyxXQUFXLGVBQWUsU0FBUztBQUM5QyxzQkFBVTtBQUNWO0FBQUEsVUFDSixXQUFXLFdBQVcsV0FBVyxlQUFlLFFBQVE7QUFDcEQscUJBQVM7QUFBQSxVQUNiO0FBQUEsUUFDSjtBQUVBLGdCQUFRLFdBQVc7QUFFbkIsWUFBSSxVQUFVLE1BQU07QUFDaEIsZ0JBQU0sU0FBUyxjQUFjLE9BQU8sZ0JBQWdCO0FBQ3BELGdCQUFNLFlBQVksY0FBYyxPQUFPLFdBQVc7QUFDbEQsZ0JBQU0sZ0JBQWdCLGNBQWMsT0FBTyxlQUFlO0FBQzFELGdCQUFNLFdBQVcsY0FBYyxPQUFPLFVBQVU7QUFDaEQsZ0JBQU0sVUFBVSxjQUFjLE9BQU8sU0FBUztBQUU5QyxpQkFBTztBQUFBLFlBQ0gsUUFBUTtBQUFBLFlBQ1IsT0FBTyxjQUFjLE9BQU8sT0FBTztBQUFBLFlBQ25DLFFBQVEsY0FBYyxPQUFPLFFBQVE7QUFBQSxZQUNyQyxPQUFPLGNBQWMsT0FBTyxPQUFPO0FBQUEsWUFDbkMsWUFBWSxPQUFPLEdBQUcsUUFBTSxLQUFLLG9CQUFvQixPQUFPLFdBQVcsZUFBZSxVQUFVLFdBQVcsU0FBUyxDQUFDO0FBQUEsWUFDckgsWUFBWSxPQUFPLEdBQUcsUUFBTSxLQUFLLGdCQUFnQixFQUFFLENBQUM7QUFBQSxZQUNwRCxNQUFNLE1BQU07QUFDUixrQkFBSSxVQUFVLElBQUksRUFBRyxPQUFPLEtBQUs7QUFBQSxZQUNyQztBQUFBLFlBQ0EsVUFBVSxNQUFNO0FBQ1osa0JBQUksY0FBYyxJQUFJLEVBQUcsT0FBTyxTQUFTO0FBQUEsWUFDN0M7QUFBQSxZQUNBLFdBQVcsTUFBTTtBQUNiLGtCQUFJLFNBQVMsSUFBSSxLQUFLLFFBQVEsSUFBSSxFQUFHLE9BQU8sV0FBVztBQUFBLFlBQzNEO0FBQUEsVUFDSjtBQUFBLFFBQ0o7QUFFQSxlQUFPO0FBQUEsVUFDSCxRQUFRO0FBQUEsVUFDUixPQUFPO0FBQUEsVUFDUCxRQUFRO0FBQUEsVUFDUixPQUFPO0FBQUEsVUFDUCxZQUFZLGtCQUFrQjtBQUFBLFVBQzlCLFlBQVksS0FBSyxnQkFBZ0IsV0FBVyxlQUFlLE9BQU87QUFBQSxVQUNsRSxNQUFNLE1BQU07QUFBQSxVQUFFO0FBQUEsVUFDZCxVQUFVLE1BQU07QUFBQSxVQUFFO0FBQUEsVUFDbEIsV0FBVyxNQUFNO0FBQUEsVUFBRTtBQUFBLFFBQ3ZCO0FBQUEsTUFDSjtBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQUEsRUFFUSxnQkFBZ0IsUUFBbUM7QUFDdkQsWUFBTyxRQUFRO0FBQUEsTUFDWCxLQUFLLFdBQVcsZUFBZTtBQUMzQixlQUFPO0FBQUEsTUFDWCxLQUFLLFdBQVcsZUFBZTtBQUMzQixlQUFPO0FBQUEsTUFDWDtBQUNJLGVBQU87QUFBQSxJQUNmO0FBQUEsRUFDSjtBQUFBLEVBRVEsb0JBQW9CLFFBQXNCO0FBQzlDLFlBQU8sUUFBUTtBQUFBLE1BQ1gsS0FBSztBQUNELGVBQU8sa0JBQWtCO0FBQUEsTUFDN0IsS0FBSztBQUNELGVBQU8sa0JBQWtCO0FBQUEsTUFDN0IsS0FBSztBQUNELGVBQU8sa0JBQWtCO0FBQUEsTUFDN0IsS0FBSztBQUNELGVBQU8sa0JBQWtCO0FBQUEsTUFDN0IsS0FBSztBQUNELGVBQU8sa0JBQWtCO0FBQUEsTUFDN0I7QUFDSSxlQUFPLGtCQUFrQjtBQUFBLElBQ2pDO0FBQUEsRUFDSjtBQUFBLEVBRUEsSUFBVyxRQUFRO0FBQ2YsV0FDSSxvQkFBQyxTQUNELDhCQUFDLFFBQUssT0FBTyxLQUFLLG1CQUNiLHNCQUFVO0FBQ1AsYUFDSTtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csaUJBQWlCO0FBQUEsVUFDakIsWUFBWSxDQUFDLE9BQU87QUFBQSxVQUNwQixXQUFXLE9BQU87QUFBQSxVQUNsQixTQUNJLG9CQUFDLGFBQ0csOEJBQUMsU0FBSSxZQUFZLENBQUMsY0FBYyxHQUFHLFVBQVUsSUFBSSxTQUFTLFFBQ3RELCtCQUFDLFNBQUksWUFBWSxDQUFDLGFBQWEsR0FBRyxhQUFhLElBQUksWUFBWSxVQUMzRDtBQUFBLGlDQUFDLFNBQUksWUFBWSxDQUFDLFVBQVUsR0FBRyxhQUFhLElBQUksWUFBWSxVQUN4RDtBQUFBLGtDQUFDLFdBQU0sWUFBWSxDQUFDLE9BQU8sR0FBRyxPQUFPLE9BQU8sT0FBTyxXQUFXLEdBQUcsZUFBZSxJQUFJLFlBQVksSUFBSTtBQUFBLGNBQ3BHLG9CQUFDLFdBQU0sWUFBWSxDQUFDLFFBQVEsR0FBRyxPQUFPLE9BQU8sUUFBUSxXQUFXLEdBQUcsZUFBZSxJQUFJLFlBQVksSUFBSTtBQUFBLGNBQ3RHLG9CQUFDLFdBQU0sWUFBWSxDQUFDLE9BQU8sR0FBRyxPQUFPLE9BQU8sT0FBTyxXQUFXLEdBQUcsZUFBZSxJQUFJLFlBQVksSUFBSTtBQUFBLGVBQ3hHO0FBQUEsWUFDQSxvQkFBQyxTQUFJLFlBQVksQ0FBQyxXQUFXLEdBQUcsYUFBYSxJQUFJLFlBQVksVUFDekQsK0JBQUMsU0FBSSxZQUFZLENBQUMsYUFBYSxHQUFHLFFBQVEsSUFBSSxNQUFNLFFBQ2hEO0FBQUE7QUFBQSxnQkFBQztBQUFBO0FBQUEsa0JBQUksWUFBWSxDQUFDLFVBQVU7QUFBQSxrQkFBRyxXQUFXLE9BQU87QUFBQSxrQkFDN0MsR0FDSSxDQUFDLFNBQVM7QUFDTiwwQkFBTSxRQUFRLElBQUksSUFBSSxhQUFhLEVBQUUsUUFBUSxJQUFJLGVBQWUsQ0FBQztBQUNqRSwwQkFBTSxVQUFVLE1BQU0sUUFBUSxXQUFXLE9BQU8sUUFBUTtBQUN4RCx5QkFBSyxlQUFlLEtBQUs7QUFDekIsOEJBQVUsTUFBSztBQUFDLDRCQUFNLFdBQVcsT0FBTztBQUFBLG9CQUFDLENBQUM7QUFBQSxrQkFDOUM7QUFBQSxrQkFHSiw4QkFBQyxXQUFNLFVBQVUsSUFBSSxTQUFTLE9BQU8sVUFBVSxrQkFBa0IsVUFBVTtBQUFBO0FBQUEsY0FDL0U7QUFBQSxjQUNBO0FBQUEsZ0JBQUM7QUFBQTtBQUFBLGtCQUFJLFlBQVksQ0FBQyxXQUFXO0FBQUEsa0JBQUcsV0FBVyxPQUFPO0FBQUEsa0JBQzlDLEdBQ0ksQ0FBQyxTQUFTO0FBQ04sMEJBQU0sUUFBUSxJQUFJLElBQUksYUFBYSxFQUFFLFFBQVEsSUFBSSxlQUFlLENBQUM7QUFDakUsMEJBQU0sVUFBVSxNQUFNLFFBQVEsV0FBVyxPQUFPLFNBQVM7QUFDekQseUJBQUssZUFBZSxLQUFLO0FBQ3pCLDhCQUFVLE1BQUs7QUFBQyw0QkFBTSxXQUFXLE9BQU87QUFBQSxvQkFBQyxDQUFDO0FBQUEsa0JBQzlDO0FBQUEsa0JBR0osOEJBQUMsV0FBTSxVQUFVLElBQUksU0FBUyxPQUFPLFVBQVUsT0FBTyxZQUFZO0FBQUE7QUFBQSxjQUN0RTtBQUFBLGNBQ0E7QUFBQSxnQkFBQztBQUFBO0FBQUEsa0JBQUksWUFBWSxDQUFDLE1BQU07QUFBQSxrQkFBRyxXQUFXLE9BQU87QUFBQSxrQkFDekMsR0FDSSxDQUFDLFNBQVM7QUFDTiwwQkFBTSxRQUFRLElBQUksSUFBSSxhQUFhLEVBQUUsUUFBUSxJQUFJLGVBQWUsQ0FBQztBQUNqRSwwQkFBTSxVQUFVLE1BQU0sUUFBUSxXQUFXLE9BQU8sSUFBSTtBQUNwRCx5QkFBSyxlQUFlLEtBQUs7QUFDekIsOEJBQVUsTUFBSztBQUFDLDRCQUFNLFdBQVcsT0FBTztBQUFBLG9CQUFDLENBQUM7QUFBQSxrQkFDOUM7QUFBQSxrQkFHSiw4QkFBQyxXQUFNLFVBQVUsSUFBSSxTQUFTLE9BQU8sVUFBVSxrQkFBa0IsTUFBTTtBQUFBO0FBQUEsY0FDM0U7QUFBQSxlQUNKLEdBQ0o7QUFBQSxhQUNKLEdBQ0osR0FDSjtBQUFBLFVBRUosOEJBQUMsV0FBTSxPQUFPLE9BQU8sWUFBWSxZQUFZLElBQUc7QUFBQTtBQUFBLE1BQ3BEO0FBQUEsSUFFUixHQUNKLEdBQ0E7QUFBQSxFQUVSO0FBQ0o7QUFFQSxJQUFNLFFBQVEsSUFBSTtBQUVsQixJQUFPLGdCQUFROzs7QUNsTWYsT0FBT0MsV0FBVTtBQUNqQixPQUFPQyxVQUFTO0FBQ2hCLE9BQU9DLFlBQVc7OztBQ0lsQixTQUFTQyxVQUFTLEtBQWE7QUFDM0IsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQUVBLGVBQWUsU0FBWUMsTUFBOEJDLFFBQXVCO0FBQzVFLFNBQU9ELEtBQUksS0FBSyxDQUFDLE1BQU1DLE9BQU0sRUFBRSxPQUFPLENBQUMsRUFBRSxNQUFNLE1BQU0sTUFBTTtBQUMvRDtBQUVBLFNBQVMsTUFBd0IsT0FBVSxNQUFnQztBQUN2RSxTQUFPLGVBQWUsT0FBTyxNQUFNO0FBQUEsSUFDL0IsTUFBTTtBQUNGLGFBQU8sS0FBSyxPQUFPRixVQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUN6QztBQUFBLEVBQ0osQ0FBQztBQUNMO0FBRUEsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sWUFBWSxNQUFNO0FBQ2hFLFFBQU0sS0FBSyxXQUFXLE1BQU07QUFDNUIsUUFBTSxZQUFZLFdBQVcsVUFBVTtBQUN2QyxRQUFNLFlBQVksV0FBVyxZQUFZO0FBQzdDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxtQkFBbUIsR0FBRyxDQUFDLEVBQUUsT0FBTyxNQUFNO0FBQ3hELFFBQU0sT0FBTyxXQUFXLFNBQVM7QUFDckMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLHFCQUFxQixHQUFHLENBQUMsRUFBRSxTQUFTLFdBQVcsT0FBTyxNQUFNO0FBQzlFLFFBQU0sUUFBUSxXQUFXLE9BQU87QUFDaEMsUUFBTSxVQUFVLFdBQVcsVUFBVTtBQUNyQyxRQUFNLFVBQVUsV0FBVyxTQUFTO0FBQ3BDLFFBQU0sT0FBTyxXQUFXLE9BQU87QUFDbkMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLG9CQUFvQixHQUFHLENBQUMsRUFBRSxVQUFBRyxXQUFVLFNBQVMsVUFBVSxNQUFNO0FBQy9FLFFBQU1BLFVBQVMsV0FBVyxPQUFPO0FBQ2pDLFFBQU1BLFVBQVMsV0FBVyxVQUFVO0FBQ3BDLFFBQU1BLFVBQVMsV0FBVyxZQUFZO0FBQ3RDLFFBQU1BLFVBQVMsV0FBVyxTQUFTO0FBQ25DLFFBQU0sUUFBUSxXQUFXLGdCQUFnQjtBQUN6QyxRQUFNLFFBQVEsV0FBVyxpQkFBaUI7QUFDMUMsUUFBTSxVQUFVLFdBQVcsU0FBUztBQUN4QyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8saUJBQWlCLEdBQUcsQ0FBQyxFQUFFLE9BQU8sT0FBTyxNQUFNO0FBQzdELFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxPQUFPLFdBQVcsdUJBQXVCO0FBQy9DLFFBQU0sT0FBTyxXQUFXLHFCQUFxQjtBQUM3QyxRQUFNLE9BQU8sV0FBVyxzQkFBc0I7QUFDOUMsUUFBTSxPQUFPLFdBQVcsb0JBQW9CO0FBQzVDLFFBQU0sT0FBTyxXQUFXLFVBQVU7QUFDdEMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLG1CQUFtQixHQUFHLENBQUMsRUFBRSxLQUFLLE1BQU07QUFDdEQsUUFBTSxLQUFLLFdBQVcsZUFBZTtBQUNyQyxRQUFNLEtBQUssV0FBVyxjQUFjO0FBQ3hDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxrQkFBa0IsR0FBRyxDQUFDLEVBQUUsUUFBUSxhQUFhLE1BQU07QUFDckUsUUFBTSxPQUFPLFdBQVcsZUFBZTtBQUN2QyxRQUFNLGFBQWEsV0FBVyxTQUFTO0FBQzNDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyx5QkFBeUIsR0FBRyxDQUFDLEVBQUUsY0FBYyxNQUFNO0FBQ3JFLFFBQU0sY0FBYyxXQUFXLFNBQVM7QUFDNUMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLGNBQWMsR0FBRyxDQUFDLEVBQUUsSUFBQUMsS0FBSSxPQUFPLE1BQU0sTUFBTTtBQUM3RCxRQUFNQSxJQUFHLFdBQVcsU0FBUztBQUM3QixRQUFNLE1BQU0sV0FBVyxTQUFTO0FBQ2hDLFFBQU0sTUFBTSxXQUFXLFdBQVc7QUFDbEMsUUFBTSxNQUFNLFdBQVcsYUFBYTtBQUNwQyxRQUFNLE1BQU0sV0FBVyxVQUFVO0FBQ2pDLFFBQU0sTUFBTSxXQUFXLFNBQVM7QUFDaEMsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNoQyxRQUFNLE1BQU0sV0FBVyxXQUFXO0FBQ2xDLFFBQU0sTUFBTSxXQUFXLE9BQU87QUFDOUIsUUFBTSxNQUFNLFdBQVcsU0FBUztBQUNoQyxRQUFNLE1BQU0sV0FBVyxTQUFTO0FBQ3BDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxnQkFBZ0IsR0FBRyxDQUFDLEVBQUUsS0FBSyxNQUFNO0FBQ25ELFFBQU0sS0FBSyxXQUFXLE9BQU87QUFDakMsQ0FBQzs7O0FDMUZELFNBQVMsMkJBQTJCO0FBQ3BDLFNBQVMsTUFBTSxtQkFBbUI7QUFFbEMsT0FBTyxRQUFRO0FBQ2YsT0FBT0MsY0FBYTtBQXdDYixTQUFTLE1BQU0sS0FBa0I7QUFDcEMsU0FBTyxJQUFLLE1BQU0sZ0JBQWdCLElBQUk7QUFBQSxJQUdsQyxPQUFPO0FBQ0gsTUFBQUEsU0FBUSxjQUFjLEVBQUUsV0FBVyxVQUFVLEdBQUcsSUFBVztBQUFBLElBQy9EO0FBQUEsSUFFQSxLQUFLLE1BQTRCO0FBQzdCLGFBQU8sSUFBSSxRQUFRLENBQUMsS0FBSyxRQUFRO0FBQzdCLFlBQUk7QUFDQSxnQkFBTSxLQUFLLFNBQVM7QUFBQSwwQkFDZCxLQUFLLFNBQVMsR0FBRyxJQUFJLE9BQU8sVUFBVSxJQUFJLEdBQUc7QUFBQSx1QkFDaEQ7QUFDSCxhQUFHLEVBQUUsRUFBRSxLQUFLLEdBQUcsRUFBRSxNQUFNLEdBQUc7QUFBQSxRQUM5QixTQUFTLE9BQU87QUFDWixjQUFJLEtBQUs7QUFBQSxRQUNiO0FBQUEsTUFDSixDQUFDO0FBQUEsSUFDTDtBQUFBLElBSUEsaUJBQXVCO0FBQ25CLFlBQU0sZUFBZTtBQUNyQixXQUFLLGNBQWM7QUFBQSxJQUN2QjtBQUFBLElBRUEsY0FBYyxLQUFhLE1BQWtDO0FBQ3pELFVBQUksT0FBTyxLQUFLLG1CQUFtQixZQUFZO0FBQzNDLGFBQUssZUFBZSxLQUFLLENBQUMsYUFBYTtBQUNuQyxhQUFHLFdBQVcsTUFBTSxPQUFPLFFBQVEsR0FBRyxDQUFDLEdBQUcsUUFBUSxHQUFHLGtCQUFrQixHQUFHLENBQUM7QUFBQSxRQUMvRSxDQUFDO0FBQUEsTUFDTCxPQUFPO0FBQ0gsY0FBTSxjQUFjLEtBQUssSUFBSTtBQUFBLE1BQ2pDO0FBQUEsSUFDSjtBQUFBLElBRUEsVUFBVSxPQUFlLFFBQVEsT0FBTztBQUNwQyxZQUFNLFVBQVUsT0FBTyxLQUFLO0FBQUEsSUFDaEM7QUFBQSxJQUVBLEtBQUssTUFBcUI7QUFDdEIsWUFBTSxLQUFLO0FBQ1gsV0FBSyxRQUFRLENBQUM7QUFBQSxJQUNsQjtBQUFBLElBRUEsTUFBTSxFQUFFLGdCQUFnQixLQUFLLE1BQU0sTUFBQUMsT0FBTSxRQUFRLE9BQU8sR0FBRyxJQUFJLElBQVksQ0FBQyxHQUFHO0FBQzNFLFlBQU0sTUFBTTtBQUVaLGlCQUFXLE1BQU07QUFDYixjQUFNLG1CQUFtQixJQUFJLFlBQVksbUJBQW1CO0FBQzVELGFBQUssQ0FBQztBQUFBLE1BQ1Y7QUFFQSxhQUFPLE9BQU8sTUFBTSxHQUFHO0FBQ3ZCLDBCQUFvQixJQUFJLFlBQVk7QUFFcEMsV0FBSyxpQkFBaUI7QUFDdEIsVUFBSSxRQUFRLFlBQVksTUFBTTtBQUMxQixtQkFBVyxDQUFDLFlBQVk7QUFDcEIsZUFBSyxjQUFjO0FBQ25CLFVBQUFBLFFBQU8sR0FBRyxXQUFXO0FBQUEsUUFDekIsQ0FBQztBQUFBLE1BQ0wsQ0FBQztBQUVELFVBQUk7QUFDQSxZQUFJLGVBQWU7QUFBQSxNQUN2QixRQUFRO0FBQ0osZUFBTyxPQUFPLENBQUMsUUFBUSxHQUFHLGFBQWEsSUFBSSxjQUFjLEdBQUcsR0FBSSxHQUFHLFdBQVc7QUFBQSxNQUNsRjtBQUVBLFVBQUksSUFBSyxNQUFLLFVBQVUsS0FBSyxLQUFLO0FBRWxDLFVBQUksTUFBTyxLQUFJLFVBQVUsS0FBSztBQUU5QixlQUFTO0FBQ1QsVUFBSSxLQUFNLEtBQUksS0FBSztBQUVuQixVQUFJLFNBQVMsQ0FBQyxDQUFDO0FBQUEsSUFDbkI7QUFBQSxFQUNKLEVBQUc7QUFDUDs7O0FGMUhBQyxLQUFJLEtBQUs7QUFJVEMsTUFBSyxTQUFTLFlBQVk7QUFJMUIsTUFBTSxPQUFPLG9CQUFvQixFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsSUFBSSxNQUFNLElBQUksS0FBSyxDQUFDLEVBQUUsTUFBTSxNQUFNLE1BQU07QUFFNUYsSUFBTyxjQUFRLE1BQU1DLE9BQU0sV0FBVzs7O0FHYnRDLE9BQU9DLFdBQVU7QUFHakIsSUFBTUMsWUFBVztBQUVqQixJQUFNLGdCQUFOLE1BQW9CO0FBQUEsRUFLVCxjQUFjO0FBSnJCLFNBQVEsZ0JBQWdCO0FBQ3hCLFNBQVEsZ0JBQWdCO0FBSXBCLFNBQUssWUFBWSxXQUFXLEVBQUUsTUFBTSxJQUFJLE1BQU0sR0FBRyxHQUFHQSxXQUFVLE1BQU07QUFDaEUsWUFBTSxNQUFNQyxNQUFLLFNBQVMsY0FBYztBQUN4QyxhQUFPO0FBQUEsUUFDSCxNQUFNLElBQUksT0FBTyxLQUFLLGFBQWE7QUFBQSxRQUNuQyxNQUFNLElBQUksT0FBTyxLQUFLLGFBQWE7QUFBQSxNQUN2QztBQUFBLElBQ0osQ0FBQztBQUFBLEVBQ0w7QUFBQSxFQUVBLElBQVksa0JBQWtCO0FBQzFCLFdBQ0ksb0JBQUMsSUFBSSxTQUFKLEVBQ0csOEJBQUMsSUFBSSxVQUFKLEVBQWEsWUFBWSxDQUFDLFVBQVUsR0FBRyxHQUM1QztBQUFBLEVBRVI7QUFBQSxFQUVBLElBQVcsV0FBVztBQUNsQixXQUNJLG9CQUFDLGdCQUFXLFlBQVksQ0FBQyxrQkFBa0IsR0FBRyxTQUFTLEtBQUssaUJBQ3hELDhCQUFDLFdBQU0sWUFBWSxDQUFDLE1BQU0sR0FBRyxPQUFPLEtBQUssVUFBVSxHQUFHLE9BQUssVUFBSyxFQUFFLElBQUksRUFBRSxHQUFHLGVBQWUsS0FBSyxVQUFVLEdBQUcsT0FBSyxhQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsR0FDdEk7QUFBQSxFQUVSO0FBQ0o7QUFFQSxJQUFNLFdBQVcsSUFBSTtBQUVyQixJQUFPLG1CQUFROzs7QUN2Q2YsT0FBTyxtQkFBbUI7QUFFbkIsSUFBTSxXQUFOLE1BQWU7QUFBQSxFQUtYLGNBQWM7QUFDakIsU0FBSyxVQUFVLGNBQWMsWUFBWTtBQUN6QyxTQUFLLGNBQWMsY0FBYyxLQUFLLFNBQVMsWUFBWSxFQUFFLEdBQUcsQ0FBQ0MsZ0JBQWVBLFlBQVcsS0FBSyxDQUFDLEdBQUcsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUM7QUFDdEgsU0FBSyxvQkFBb0IsY0FBYyxLQUFLLFNBQVMsa0JBQWtCO0FBQUEsRUFDM0U7QUFBQSxFQUVBLElBQVcsYUFBYTtBQUNwQixXQUFPLEtBQUs7QUFBQSxFQUNoQjtBQUFBLEVBRUEsSUFBVyxtQkFBbUI7QUFDMUIsV0FBTyxLQUFLO0FBQUEsRUFDaEI7QUFBQSxFQUVPLGlCQUFpQixTQUFzQixhQUFvQztBQUM5RSxVQUFNLFdBQVcsUUFBUSxhQUFhO0FBQ3RDLFFBQUcsWUFBWSxVQUFVLE1BQU0sUUFBUSxVQUFVLEtBQzlDLFlBQVksV0FBVyxNQUFNLFNBQVMsVUFDdEMsWUFBWSxVQUFVLE1BQU0sU0FBUyxTQUNyQyxZQUFZLE1BQU0sTUFBTSxTQUFTLEtBQ2pDLFlBQVksTUFBTSxNQUFNLFNBQVMsR0FBRztBQUNuQyxhQUFPO0FBQUEsSUFDWDtBQUNBLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFTyxtQkFBbUIsU0FBc0I7QUFDNUMsVUFBTSxtQkFBbUIsS0FBSyxRQUFRLGFBQWE7QUFDbkQsV0FBTyxpQkFBaUIsS0FBSyxpQkFBZSxLQUFLLGlCQUFpQixTQUFTLFdBQVcsQ0FBQyxLQUFLLGlCQUFpQixDQUFDO0FBQUEsRUFDbEg7QUFDSjtBQUVBLElBQU0sa0JBQWtCLElBQUk7QUFFNUIsSUFBTyxtQkFBUTs7O0FDM0NmLE9BQU8sUUFBUTtBQUNmLE9BQU9DLFdBQVU7QUFJakIsSUFBTSxvQkFBTixNQUF3QjtBQUFBLEVBTWIsY0FBYztBQUZyQixTQUFpQixPQUFlO0FBRzVCLFNBQUssVUFBVSxHQUFHLFlBQVk7QUFDOUIsU0FBSyxpQkFBaUIsY0FBYyxLQUFLLFNBQVMsZ0JBQWdCO0FBQ2xFLFNBQUssb0JBQW9CLGNBQWMsS0FBSyxTQUFTLG1CQUFtQjtBQUFBLEVBQzVFO0FBQUEsRUFFUSxhQUFhLEtBQWtCLElBQVk7QUFDL0MsUUFBSSxZQUFZLElBQUksV0FBVztBQUMvQixRQUFHLEtBQUssRUFBRyxjQUFhLEtBQUs7QUFBQSxRQUN4QixjQUFhLEtBQUs7QUFDdkIsUUFBSSxXQUFXLEtBQUssSUFBSSxXQUFXLENBQUMsQ0FBQztBQUFBLEVBQ3pDO0FBQUEsRUFFUSxTQUFTLEVBQUUsU0FBUyxHQUF3QztBQUNoRSxXQUNJLG9CQUFDLFNBQ0QsOEJBQUMsUUFBSyxPQUFPLFVBQ1IsbUJBQU87QUFDSixZQUFNLE9BQU8sY0FBYyxLQUFLLFlBQVk7QUFDNUMsWUFBTSxTQUFTLGNBQWMsS0FBSyxRQUFRLEVBQUUsR0FBRyxPQUFLLEdBQUcsS0FBSyxNQUFNLElBQUksR0FBRyxDQUFDLEdBQUc7QUFDN0UsWUFBTSxZQUFZLElBQUksSUFBSSxhQUFhLEVBQUUsUUFBUSxJQUFJLGVBQWUsQ0FBQztBQUNyRSxZQUFNLGNBQWMsVUFBVSxRQUFRLFdBQVcsTUFBTSxJQUFJLFNBQVMsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDO0FBRXBGLFlBQU0sU0FBUyxJQUFJLElBQUksc0JBQXNCLEVBQUUsT0FBTyxJQUFJLDJCQUEyQixTQUFTLENBQUM7QUFDL0YsWUFBTSxnQkFBZ0IsT0FBTyxRQUFRLFVBQVUsQ0FBQyxXQUFzQyxJQUFZLE9BQWUsS0FBSyxhQUFhLEtBQUssRUFBRSxDQUFDO0FBRTNJLGdCQUFVLE1BQU07QUFDWixrQkFBVSxXQUFXLFdBQVc7QUFDaEMsZUFBTyxXQUFXLGFBQWE7QUFBQSxNQUNuQyxDQUFDO0FBQ0QsYUFDSTtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQUksWUFBWSxDQUFDLFVBQVU7QUFBQSxVQUN4QixHQUNJLENBQUMsU0FBUztBQUNOLGlCQUFLLGVBQWUsU0FBUztBQUM3QixpQkFBSyxlQUFlLE1BQU07QUFBQSxVQUM5QjtBQUFBLFVBR0o7QUFBQSxnQ0FBQyxXQUFNLFlBQVksQ0FBQyxNQUFNLEdBQUcsVUFBVSxNQUFNO0FBQUEsWUFDN0Msb0JBQUMsV0FBTSxZQUFZLENBQUMsUUFBUSxHQUFHLE9BQU8sUUFBUSxZQUFZLEdBQUc7QUFBQTtBQUFBO0FBQUEsTUFDakU7QUFBQSxJQUVSLEdBQ0osR0FDQTtBQUFBLEVBRVI7QUFBQSxFQUVRLFdBQVcsRUFBRSxTQUFTLEdBQXdDO0FBQ2xFLFdBQ0ksb0JBQUMsU0FDRyw4QkFBQyxRQUFLLE9BQU8sVUFDUixtQkFBTztBQUNKLFlBQU0sT0FBTyxjQUFjLEtBQUssWUFBWTtBQUM1QyxZQUFNLFNBQVMsY0FBYyxLQUFLLFFBQVE7QUFDMUMsWUFBTSxrQkFBa0IsSUFBSSxJQUFJLGFBQWEsRUFBRSxRQUFRLElBQUksZUFBZSxDQUFDO0FBQzNFLFlBQU0sb0JBQW9CLGdCQUFnQixRQUFRLFdBQVcsTUFBTSxJQUFJLFNBQVMsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDO0FBRWhHLFlBQU0sU0FBUyxJQUFJLElBQUksc0JBQXNCLEVBQUUsT0FBTyxJQUFJLDJCQUEyQixTQUFTLENBQUM7QUFDL0YsWUFBTSxnQkFBZ0IsT0FBTyxRQUFRLFVBQVUsQ0FBQyxXQUFzQyxJQUFZLE9BQWUsS0FBSyxhQUFhLEtBQUssRUFBRSxDQUFDO0FBRTNJLGdCQUFVLE1BQU07QUFDWix3QkFBZ0IsV0FBVyxpQkFBaUI7QUFDNUMsZUFBTyxXQUFXLGFBQWE7QUFBQSxNQUNuQyxDQUFDO0FBRUQsYUFDSSxxQkFBQyxTQUFJLFlBQVksQ0FBQyxZQUFZLEdBQzFCO0FBQUEsNEJBQUMsV0FBTSxZQUFZLENBQUMsTUFBTSxHQUFHLFVBQVUsTUFBTSxHQUFHLFVBQVEsS0FBSyxlQUFlLGVBQWUsR0FBRztBQUFBLFFBQzlGLG9CQUFDLFlBQU8sWUFBWSxDQUFDLFFBQVEsR0FBRyxHQUFHLFVBQVEsS0FBSyxlQUFlLE1BQU0sR0FBRyxPQUFPLFFBQVEsTUFBTSxLQUFLLEtBQUssR0FBRyxLQUFLLEdBQUcsZUFBZSxDQUFDLEVBQUUsTUFBTSxNQUFNLElBQUksV0FBVyxLQUFLLEdBQUc7QUFBQSxTQUMzSztBQUFBLElBRVIsR0FDSixHQUNKO0FBQUEsRUFFUjtBQUFBLEVBRVEsUUFBUTtBQUNaLFdBQ0ksb0JBQUMsYUFBUSxZQUFZLENBQUMsT0FBTyxHQUN6QiwrQkFBQyxTQUFJLGFBQWEsSUFBSSxZQUFZLFVBQzlCO0FBQUEsMEJBQUMsV0FBTSxZQUFZLENBQUMsT0FBTyxHQUFHLE9BQU8sU0FBUztBQUFBLE1BQzdDLEtBQUssV0FBVyxFQUFFLFVBQVUsS0FBSyxlQUFlLENBQUM7QUFBQSxNQUNqRCxLQUFLLFdBQVcsRUFBRSxVQUFVLEtBQUssa0JBQWtCLENBQUM7QUFBQSxPQUN6RCxHQUNKO0FBQUEsRUFFUjtBQUFBLEVBRUEsSUFBVyxlQUFlO0FBQ3RCLFVBQU0sd0JBQXdCLElBQUksSUFBSSxhQUFhLEVBQUUsUUFBUSxJQUFJLGlCQUFpQixDQUFDO0FBQ25GLFVBQU0sMEJBQTBCLHNCQUFzQixRQUFRLFdBQVcsTUFBTUMsTUFBSyx5QkFBeUIsYUFBYSxDQUFDO0FBRTNILGNBQVUsTUFBTSxzQkFBc0IsV0FBVyx1QkFBdUIsQ0FBQztBQUV6RSxXQUNJLHFCQUFDLFNBQUksWUFBWSxDQUFDLGNBQWMsR0FBRyxHQUFHLFVBQVEsS0FBSyxlQUFlLHFCQUFxQixHQUNsRjtBQUFBLFdBQUssU0FBUyxFQUFFLFVBQVUsS0FBSyxlQUFlLENBQUM7QUFBQSxNQUNoRCxvQkFBQyxnQkFBVyxTQUFTLEtBQUssTUFBTSxHQUFrQixPQUFPLG9CQUFDLFdBQU0sT0FBTyxVQUFLLEdBQXdCO0FBQUEsT0FDeEc7QUFBQSxFQUVSO0FBQ0o7QUFFQSxJQUFNLGVBQWUsSUFBSTtBQUV6QixJQUFPLHVCQUFROzs7QUN2SGYsT0FBT0MsV0FBVTs7O0FDQWpCLE9BQU9DLFlBQVc7QUFHWCxTQUFTLFNBQVNDLE9BQXNCO0FBQzNDLFNBQU9ELE9BQU0sVUFBVUMsS0FBSSxLQUFLO0FBQ3BDO0FBY08sU0FBUyxVQUFVQyxPQUFjLFNBQXVCO0FBQzNELEVBQUFDLE9BQU0sV0FBV0QsT0FBTSxPQUFPO0FBQ2xDOzs7QURYQSxJQUFNLGtCQUEyQjtBQUFBLEVBQzdCLG1CQUFtQjtBQUFBLEVBQ25CLGFBQWE7QUFBQSxFQUNiLHlCQUF5QjtBQUM3QjtBQUVBLElBQU0sT0FBT0UsTUFBSyxhQUFhLElBQUk7QUFFbkMsSUFBTSxnQkFBTixNQUFvQjtBQUFBLEVBUWhCLGNBQWM7QUFDVixVQUFNLFVBQVUsU0FBUyxJQUFJO0FBQzdCLFFBQUk7QUFDQSxZQUFNLFNBQVMsS0FBSyxNQUFNLE9BQU87QUFDakMsT0FBQyxLQUFLLG9CQUFvQixLQUFLLHFCQUFxQixJQUFJLFlBQVksT0FBTyxpQkFBaUI7QUFDNUYsT0FBQyxLQUFLLGNBQWMsS0FBSyxlQUFlLElBQUksWUFBWSxPQUFPLFdBQVc7QUFDMUUsT0FBQyxLQUFLLDBCQUEwQixLQUFLLDJCQUEyQixJQUFJLFlBQVksT0FBTyx1QkFBdUI7QUFBQSxJQUVsSCxTQUFRLEtBQUs7QUFDVCxjQUFRLE1BQU0sK0JBQStCLEdBQUc7QUFDaEQsT0FBQyxLQUFLLG9CQUFvQixLQUFLLHFCQUFxQixJQUFJLFlBQVksZ0JBQWdCLGlCQUFpQjtBQUNyRyxPQUFDLEtBQUssY0FBYyxLQUFLLGVBQWUsSUFBSSxZQUFZLGdCQUFnQixXQUFXO0FBQ25GLE9BQUMsS0FBSywwQkFBMEIsS0FBSywyQkFBMkIsSUFBSSxZQUFZLGdCQUFnQix1QkFBdUI7QUFBQSxJQUMzSDtBQUFBLEVBQ0o7QUFBQSxFQUVPLGNBQWM7QUFDakIsVUFBTSxVQUFVO0FBQUEsTUFDWixtQkFBbUIsS0FBSyxtQkFBbUIsSUFBSTtBQUFBLE1BQy9DLGFBQWEsS0FBSyxhQUFhLElBQUk7QUFBQSxNQUNuQyx5QkFBeUIsS0FBSyx5QkFBeUIsSUFBSTtBQUFBLElBQy9EO0FBQ0EsY0FBVSxNQUFNLEtBQUssVUFBVSxTQUFTLE1BQU0sQ0FBQyxDQUFDO0FBQUEsRUFDcEQ7QUFBQSxFQUVBLElBQVcsb0JBQW9CO0FBQzNCLFdBQU8sS0FBSztBQUFBLEVBQ2hCO0FBQUEsRUFFQSxJQUFXLGNBQWM7QUFDckIsV0FBTyxLQUFLO0FBQUEsRUFDaEI7QUFBQSxFQUVBLElBQVcsMEJBQTBCO0FBQ2pDLFdBQU8sS0FBSztBQUFBLEVBQ2hCO0FBQUEsRUFFQSxJQUFXLDJCQUEyQixVQUFtQjtBQUNyRCxRQUFHLEtBQUsseUJBQXlCLElBQUksTUFBTSxTQUFVLE1BQUssNEJBQTRCLFFBQVE7QUFBQSxFQUNsRztBQUFBLEVBRUEsSUFBVyxxQkFBcUIsVUFBbUI7QUFDL0MsUUFBRyxLQUFLLG1CQUFtQixJQUFJLE1BQU0sU0FBVSxNQUFLLHNCQUFzQixRQUFRO0FBQUEsRUFDdEY7QUFBQSxFQUVBLElBQVcsZUFBZSxVQUFtQjtBQUN6QyxRQUFHLEtBQUssYUFBYSxJQUFJLE1BQU0sU0FBVSxNQUFLLGdCQUFnQixRQUFRO0FBQUEsRUFDMUU7QUFDSjtBQUVBLElBQU0sa0JBQWtCLElBQUk7QUFFNUIsSUFBTyxtQkFBUTs7O0FFNUVmLE9BQU9DLFVBQVM7QUFDaEIsT0FBT0MsV0FBVTs7O0FDRmpCLE9BQU9DLFdBQVU7QUFFVixJQUFVO0FBQUEsQ0FBVixDQUFVQyxVQUFWO0FBQ0ksTUFBSztBQUFMLElBQUtDLFlBQUw7QUFDSCxJQUFBQSxRQUFBLFFBQUs7QUFDTCxJQUFBQSxRQUFBLFVBQU87QUFDUCxJQUFBQSxRQUFBLFNBQU07QUFDTixJQUFBQSxRQUFBLGFBQVU7QUFBQSxLQUpGLFNBQUFELE1BQUEsV0FBQUEsTUFBQTtBQU9MLE1BQUs7QUFBTCxJQUFLRSxZQUFMO0FBQ0gsSUFBQUEsUUFBQSxhQUFVO0FBQ1YsSUFBQUEsUUFBQSxjQUFXO0FBQ1gsSUFBQUEsUUFBQSxnQkFBYTtBQUNiLElBQUFBLFFBQUEsY0FBVztBQUNYLElBQUFBLFFBQUEsY0FBVztBQUFBLEtBTEgsU0FBQUYsTUFBQSxXQUFBQSxNQUFBO0FBUUwsTUFBSztBQUFMLElBQUtHLG9CQUFMO0FBQ0gsSUFBQUEsZ0JBQUEsVUFBTztBQUNQLElBQUFBLGdCQUFBLFlBQVM7QUFDVCxJQUFBQSxnQkFBQSxVQUFPO0FBQ1AsSUFBQUEsZ0JBQUEsVUFBTztBQUNQLElBQUFBLGdCQUFBLFdBQVE7QUFDUixJQUFBQSxnQkFBQSxTQUFNO0FBQ04sSUFBQUEsZ0JBQUEsWUFBUztBQUNULElBQUFBLGdCQUFBLFVBQU87QUFDUCxJQUFBQSxnQkFBQSxVQUFPO0FBQ1AsSUFBQUEsZ0JBQUEsVUFBTztBQUNQLElBQUFBLGdCQUFBLFlBQVM7QUFDVCxJQUFBQSxnQkFBQSxTQUFNO0FBQ04sSUFBQUEsZ0JBQUEsWUFBUztBQUFBLEtBYkQsaUJBQUFILE1BQUEsbUJBQUFBLE1BQUE7QUFnQkwsTUFBSztBQUFMLElBQUtJLG1CQUFMO0FBQ0gsSUFBQUEsZUFBQSxZQUFTO0FBQ1QsSUFBQUEsZUFBQSxTQUFNO0FBQ04sSUFBQUEsZUFBQSxVQUFPO0FBQ1AsSUFBQUEsZUFBQSxXQUFRO0FBQ1IsSUFBQUEsZUFBQSxZQUFTO0FBQ1QsSUFBQUEsZUFBQSxjQUFXO0FBQ1gsSUFBQUEsZUFBQSxlQUFZO0FBQ1osSUFBQUEsZUFBQSxpQkFBYztBQUNkLElBQUFBLGVBQUEsa0JBQWU7QUFBQSxLQVRQLGdCQUFBSixNQUFBLGtCQUFBQSxNQUFBO0FBQUEsRUEyQlosTUFBTSxRQUFRO0FBQUEsSUFDVixjQUFjO0FBQ1YsTUFBQUQsTUFBSyx5QkFBeUIsWUFBWTtBQUFBLElBQzlDO0FBQUEsSUFFTyxhQUFhTSxPQUFjLFNBQTJDO0FBQ3pFLFVBQUksVUFBVSxZQUFZQSxLQUFJO0FBQzlCLFVBQUcsU0FBUztBQUNSLFlBQUcsUUFBUSxPQUFRLFlBQVcsYUFBYSxRQUFRLE1BQU07QUFDekQsWUFBRyxRQUFRLE9BQVEsWUFBVyxPQUFPLFFBQVEsTUFBTTtBQUNuRCxZQUFHLFFBQVEsUUFBUyxZQUFXLGVBQWUsUUFBUSxRQUFRLFFBQVEsQ0FBQztBQUN2RSxZQUFHLFFBQVEsZ0JBQWlCLFlBQVcsdUJBQXVCLFFBQVEsZUFBZTtBQUNyRixZQUFHLFFBQVEsb0JBQXFCLFlBQVcsMEJBQTBCLFFBQVEsbUJBQW1CO0FBQ2hHLFlBQUcsUUFBUSxjQUFlLFlBQVcscUJBQXFCLFFBQVEsYUFBYTtBQUMvRSxZQUFHLFFBQVEsZUFBZ0IsWUFBVyxzQkFBc0IsUUFBUSxjQUFjO0FBQ2xGLFlBQUcsUUFBUSxlQUFnQixZQUFXLHNCQUFzQixRQUFRLGNBQWM7QUFDbEYsWUFBRyxRQUFRLGVBQWdCLFlBQVcsc0JBQXNCLFFBQVEsZUFBZSxDQUFDLElBQUksUUFBUSxlQUFlLENBQUM7QUFDaEgsWUFBRyxRQUFRLFFBQVMsWUFBVyxjQUFjLFFBQVEsT0FBTztBQUFBLE1BQ2hFO0FBQ0EsTUFBQU4sTUFBSyx5QkFBeUIsT0FBTztBQUNyQyxhQUFPO0FBQUEsSUFDWDtBQUFBLEVBQ0o7QUFDTyxFQUFNQyxNQUFBLFVBQVUsSUFBSTtBQUFBLEdBbEZkOzs7QURNakIsSUFBTU0sUUFBT0MsTUFBSyxhQUFhLElBQUk7QUFDbkMsSUFBTUMsWUFBVztBQUNqQixJQUFNLGtCQUFrQixDQUFDLFFBQVEsU0FBUyxRQUFRLFFBQVEsUUFBUSxTQUFTLE1BQU07QUFFakYsSUFBTSx5QkFBTixNQUFNLHdCQUF1QjtBQUFBLEVBTXpCO0FBQUEsU0FBZSxjQUFzQjtBQUFBO0FBQUEsRUFHckMsY0FBYztBQUNWLEtBQUMsS0FBSyxRQUFRLEtBQUssU0FBUyxJQUFJLFlBQVksQ0FBQyxDQUFhO0FBQzFELEtBQUMsS0FBSyxjQUFjLEtBQUssZUFBZSxJQUFJLFlBQVksaUJBQWdCLHdCQUF3QixJQUFJLENBQUM7QUFDckcsU0FBSyxVQUFVLFdBQVcsTUFBTUEsV0FBVSxDQUFDLFNBQWtCLENBQUMsSUFBSTtBQUVsRSxTQUFLLFFBQVEsaUJBQWdCLHdCQUF3QixVQUFVLE1BQU0sS0FBSyxnQkFBZ0IsaUJBQWdCLHdCQUF3QixJQUFJLENBQUMsQ0FBQztBQUN4SSxTQUFLLFVBQVUsS0FBSyxlQUFlRixLQUFJLENBQUM7QUFBQSxFQUM1QztBQUFBLEVBRVEsWUFBWSxVQUFrQjtBQUNsQyxVQUFNLFlBQVksU0FBUyxZQUFZLEVBQUUsVUFBVSxTQUFTLFlBQVksR0FBRyxDQUFDO0FBQzVFLFdBQU8sZ0JBQWdCLFNBQVMsU0FBUyxJQUFJLFlBQVc7QUFBQSxFQUM1RDtBQUFBLEVBRVEsZUFBZSxlQUF1QjtBQUMxQyxRQUFJO0FBQ0EsWUFBTSxPQUFPRyxLQUFJLEtBQUssYUFBYSxhQUFhO0FBRWhELFVBQUksQ0FBQyxLQUFLLGFBQWEsSUFBSSxFQUFHLFFBQU8sQ0FBQztBQUV0QyxZQUFNLGFBQWEsS0FBSyxtQkFBbUIsaUNBQWlDQSxLQUFJLG1CQUFtQixNQUFNLElBQUk7QUFFN0csWUFBTSxTQUFtQixDQUFDO0FBQzFCLFVBQUk7QUFFSixjQUFRLFdBQVcsV0FBVyxVQUFVLElBQUksT0FBTyxNQUFNO0FBQ3JELFlBQUksU0FBUyxjQUFjLE1BQU1BLEtBQUksU0FBUyxTQUFTO0FBQ25ELGdCQUFNLFdBQVcsU0FBUyxTQUFTO0FBQ25DLGdCQUFNLE1BQU0sS0FBSyxZQUFZLFFBQVE7QUFDckMsY0FBRyxJQUFLLFFBQU8sS0FBSyxRQUFRO0FBQUEsUUFDaEM7QUFBQSxNQUNKO0FBRUEsaUJBQVcsTUFBTSxJQUFJO0FBQ3JCLGFBQU87QUFBQSxJQUNYLFNBQVMsT0FBTztBQUNaLGNBQVEsTUFBTSx3Q0FBZ0MsZUFBZSxLQUFLO0FBQ2xFLGFBQU8sQ0FBQztBQUFBLElBQ1o7QUFBQSxFQUNKO0FBQUEsRUFFQSxJQUFXLGNBQWM7QUFDckIsV0FBTyxLQUFLO0FBQUEsRUFDaEI7QUFBQSxFQUVPLGtCQUFrQixZQUF5QjtBQUM5QyxVQUFNLFFBQVEsSUFBSSxJQUFJLGFBQWEsRUFBRSxRQUFRLElBQUksZUFBZSxDQUFDO0FBQ2pFLFVBQU0sVUFBVSxNQUFNLFFBQVEsV0FBVyxNQUFNLEtBQUssZ0JBQWdCLENBQUMsS0FBSyxhQUFhLElBQUksQ0FBQyxDQUFDO0FBQzdGLFVBQU0sUUFBUSxLQUFLLFFBQVEsVUFBVSxNQUFNO0FBQ3ZDLFVBQUksS0FBSyxhQUFhLElBQUksR0FBRztBQUN6QixjQUFNLFlBQVksV0FBVyxjQUFjO0FBQzNDLFlBQUcsV0FBVztBQUNWLGdCQUFNLFdBQVcsS0FBSyxPQUFPLElBQUk7QUFDakMsZ0JBQU0sTUFBTSxTQUFTLEtBQUssTUFBTSxLQUFLLE9BQU8sSUFBSSxTQUFTLE1BQU0sQ0FBQztBQUNoRSxlQUFLLFFBQVEsYUFBYSxHQUFHSCxLQUFJLElBQUksR0FBRyxJQUFJLEVBQUUsU0FBUyxXQUFXLGdCQUFnQixLQUFLLGVBQWUsS0FBSyxDQUFDO0FBQUEsUUFDaEgsT0FBTztBQUNILG9CQUFVLHdCQUF3QixXQUFXLGdCQUFnQixDQUFDLDBCQUF1QixXQUFXLGdCQUFnQixDQUFDLHdCQUFxQjtBQUFBLFFBQzFJO0FBQUEsTUFDSjtBQUFBLElBQ0osQ0FBQztBQUNELFdBQ0k7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNHLFlBQVksQ0FBQyxtQkFBbUI7QUFBQSxRQUNoQyxhQUFhLElBQUksWUFBWTtBQUFBLFFBQzdCLEdBQUcsTUFBTSx3QkFBdUIsZUFBZTtBQUFBLFFBQy9DLFdBQ0ksTUFBTTtBQUNGLGtDQUF1QixlQUFlO0FBQ3RDLGNBQUksd0JBQXVCLGVBQWUsRUFBRyxNQUFLLE1BQU07QUFDeEQsZ0JBQU0sV0FBVyxPQUFPO0FBQ3hCLGdCQUFNO0FBQUEsUUFDVjtBQUFBLFFBR0o7QUFBQTtBQUFBLFlBQUM7QUFBQTtBQUFBLGNBQ0csWUFBWSxDQUFDLFVBQVU7QUFBQSxjQUN2QixPQUFPO0FBQUE7QUFBQSxVQUNYO0FBQUEsVUFDQTtBQUFBLFlBQUM7QUFBQTtBQUFBLGNBQ0csWUFBWSxDQUFDLFVBQVUsY0FBYztBQUFBLGNBQ3JDLE9BQU8sS0FBSyxhQUFhLEdBQUcsUUFBTSxXQUFXLEtBQUssVUFBUyxZQUFZLEVBQUU7QUFBQSxjQUFHLEdBQUcsVUFBUSxLQUFLLGVBQWUsS0FBSztBQUFBO0FBQUEsVUFDcEg7QUFBQTtBQUFBO0FBQUEsSUFDSjtBQUFBLEVBRVI7QUFDSjtBQUVBLElBQU0sb0JBQW9CLElBQUk7QUFFOUIsSUFBTyw0QkFBUTs7O0FFMUdmLElBQU0scUJBQU4sTUFBeUI7QUFBQSxFQUNkLGNBQWM7QUFBQSxFQUNyQjtBQUFBLEVBRVEsWUFBWSxNQUFrQixVQUFzQjtBQUN4RCxVQUFNLFFBQVEsSUFBSSxJQUFJLGFBQWEsRUFBRSxRQUFRLElBQUksZUFBZSxDQUFDO0FBQ2pFLFVBQU0sVUFBVSxNQUFNLFFBQVEsV0FBVyxRQUFRO0FBQ2pELFNBQUssZUFBZSxLQUFLO0FBQ3pCLGNBQVUsTUFBTSxNQUFNLFdBQVcsT0FBTyxDQUFDO0FBQUEsRUFDN0M7QUFBQSxFQUVRLHdCQUF3QixHQUFZO0FBQ3hDLFFBQUcsRUFBRyxRQUFPO0FBQ2IsV0FBTztBQUFBLEVBQ1g7QUFBQSxFQUVBLElBQVksMEJBQTBCO0FBQ2xDLGNBQVUsTUFBTSxpQkFBZ0IsWUFBWSxDQUFDO0FBQzdDLFdBQ0kscUJBQUMsU0FBSSxZQUFZLENBQUMseUJBQXlCLEdBQUcsYUFBYSxJQUFJLFlBQVksVUFDdkU7QUFBQSwwQkFBQyxXQUFNLFlBQVksQ0FBQyxVQUFVLEdBQUcsT0FBTyxpQ0FBMkI7QUFBQSxNQUNuRTtBQUFBLFFBQUM7QUFBQTtBQUFBLFVBQ0csWUFBWSxDQUFDLG9CQUFvQixRQUFRO0FBQUEsVUFDekMsR0FBRyxVQUFRLEtBQUssWUFBWSxNQUFNLE1BQU0saUJBQWdCLHVCQUF1QixDQUFDLGlCQUFnQixrQkFBa0IsSUFBSSxDQUFDO0FBQUEsVUFDdkgsT0FBTyxpQkFBZ0Isa0JBQWtCLEdBQUcsUUFBTSxLQUFLLDhCQUF3Qix3QkFBa0I7QUFBQSxVQUNqRyxZQUFZO0FBQUE7QUFBQSxNQUNoQjtBQUFBLE1BQ0E7QUFBQSxRQUFDO0FBQUE7QUFBQSxVQUNHLFlBQVksQ0FBQyxjQUFjLFFBQVE7QUFBQSxVQUNuQyxHQUFHLFVBQVEsS0FBSyxZQUFZLE1BQU0sTUFBTSxpQkFBZ0IsaUJBQWlCLENBQUMsaUJBQWdCLFlBQVksSUFBSSxDQUFDO0FBQUEsVUFDM0csT0FBTyxpQkFBZ0IsWUFBWSxHQUFHLFFBQU0sS0FBSyx3QkFBd0IsRUFBRSxDQUFDO0FBQUEsVUFDNUUsWUFBWTtBQUFBO0FBQUEsTUFDaEI7QUFBQSxPQUNKO0FBQUEsRUFFUjtBQUFBLEVBRVEscUJBQXFCLFlBQXlCO0FBQ2xELFdBQ0ksb0JBQUMsYUFDRyw4QkFBQyxTQUFJLFlBQVksQ0FBQyxzQkFBc0IsR0FDcEMsK0JBQUMsU0FBSSxhQUFhLElBQUksWUFBWSxVQUM3QjtBQUFBLFdBQUs7QUFBQSxNQUNMLDBCQUFrQixrQkFBa0IsVUFBVTtBQUFBLE9BQ25ELEdBQ0osR0FDSjtBQUFBLEVBRVI7QUFBQSxFQUVPLGNBQWMsWUFBeUI7QUFDMUMsV0FDSSxvQkFBQyxnQkFBVyxZQUFZLENBQUMsZUFBZSxHQUFHLFNBQVMsS0FBSyxxQkFBcUIsVUFBVSxHQUNwRiw4QkFBQyxXQUFNLFlBQVksQ0FBQyxPQUFPLEdBQUcsT0FBTyxhQUFNLEdBQy9DO0FBQUEsRUFFUjtBQUNKO0FBRUEsSUFBTSxnQkFBZ0IsSUFBSTtBQUUxQixJQUFPLHdCQUFROzs7QUM3RGYsSUFBTSxrQkFBTixNQUFzQjtBQUFBLEVBRVgsY0FBYztBQURyQixTQUFpQixnQkFBd0I7QUFBQSxFQUd6QztBQUFBLEVBRVEsVUFBVSxFQUFFLFdBQVcsY0FBYyxNQUFNLEdBQWlFO0FBQ2hILFVBQU0sUUFBUSxJQUFJLElBQUksYUFBYTtBQUNuQyxVQUFNLGFBQWEsTUFBTSxRQUFRLFdBQVcsTUFBTTtBQUFFLFVBQUcsaUJBQWdCLGlCQUFpQixJQUFJLEVBQUUsT0FBTyxNQUFNLFVBQVUsT0FBTyxFQUFHLFdBQVUsTUFBTTtBQUFBLElBQUUsQ0FBQztBQUNsSixjQUFVLE1BQU07QUFBRSxVQUFJLFdBQVksT0FBTSxXQUFXLFVBQVU7QUFBQSxJQUFFLENBQUM7QUFFaEUsV0FDSTtBQUFBLE1BQUM7QUFBQTtBQUFBLFFBQ0csR0FBRyxVQUFRLEtBQUssZUFBZSxLQUFLO0FBQUEsUUFDcEMsWUFBWSxpQkFBZ0IsaUJBQWlCLEdBQUcsYUFBVyxDQUFDLGFBQWEsVUFBVSxPQUFPLE1BQU0sUUFBUSxPQUFPLElBQUksV0FBVyxVQUFVLENBQUM7QUFBQSxRQUN6SSxPQUFPLEdBQUcsVUFBVSxPQUFPLENBQUM7QUFBQSxRQUFJLFlBQVk7QUFBQSxRQUFHLGVBQWU7QUFBQSxRQUFHLFFBQVEsSUFBSSxNQUFNO0FBQUEsUUFBUSxRQUFRLElBQUksTUFBTTtBQUFBO0FBQUEsSUFDakg7QUFBQSxFQUVSO0FBQUEsRUFFUSxjQUFjLFdBQW9DO0FBQ3RELFVBQU0sUUFBUSxJQUFJLElBQUksYUFBYTtBQUNuQyxVQUFNLFVBQVUsTUFBTSxRQUFRLFdBQVcsTUFBTTtBQUMzQyxVQUFJLFVBQVUsT0FBTyxNQUFNLGlCQUFnQixpQkFBaUIsSUFBSSxFQUFFLE9BQU8sRUFBRyxXQUFVLE1BQU07QUFBQSxJQUNoRyxDQUFDO0FBRUQsY0FBVSxNQUFNO0FBQUUsVUFBSSxNQUFPLE9BQU0sV0FBVyxPQUFPO0FBQUEsSUFBRSxDQUFDO0FBQ3hELFdBQ0k7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNHLEdBQUcsQ0FBQyxTQUFTLEtBQUssZUFBZSxLQUFLO0FBQUEsUUFDdEMsWUFBWSxlQUFlLENBQUMsaUJBQWdCLGtCQUFrQixjQUFjLFdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLE9BQU8sQ0FBQyxhQUFhLE9BQU8sU0FBUyxPQUFPLElBQUksV0FBVyxVQUFVLENBQUM7QUFBQSxRQUMvSyxPQUFPLFVBQVUsT0FBTyxFQUFFLFNBQVM7QUFBQSxRQUNuQyxZQUFZO0FBQUEsUUFDWixlQUFlO0FBQUEsUUFDZixRQUFRLElBQUksTUFBTTtBQUFBLFFBQ2xCLFFBQVEsSUFBSSxNQUFNO0FBQUE7QUFBQSxJQUN0QjtBQUFBLEVBRVI7QUFBQSxFQUVRLGlCQUFpQixFQUFFLFFBQVEsR0FBcUQ7QUFDcEYsV0FDSSxvQkFBQyxhQUFRLFlBQVksQ0FBQyxrQkFBa0IsR0FDcEMsOEJBQUMsSUFBSSxTQUFKLEVBQVksb0JBQW9CLEdBQzdCLDhCQUFDLE9BQUksTUFBTSxTQUFTLFVBQVUsVUFBUSxLQUFLLFVBQVUsRUFBRSxXQUFXLE1BQU0sYUFBYSxLQUFLLENBQUMsR0FBRyxHQUNsRyxHQUNKO0FBQUEsRUFFUjtBQUFBLEVBRVEscUJBQXFCLEVBQUUsUUFBUSxHQUFxRDtBQUN4RixXQUNJLG9CQUFDLGdCQUFXLFlBQVksQ0FBQyxzQkFBc0IsR0FBRyxXQUFXLFFBQVEsR0FBRyxRQUFNLEdBQUcsU0FBUyxDQUFDLEdBQUcsU0FBUyxLQUFLLGlCQUFpQixFQUFFLFFBQWlCLENBQUMsR0FDN0ksOEJBQUMsV0FBTSxPQUFPLGFBQU0sR0FDeEI7QUFBQSxFQUVSO0FBQUEsRUFFTyxXQUFXLEVBQUUsUUFBUSxHQUF1QztBQUMvRCxVQUFNLG9CQUFvQixpQkFBZ0IsV0FBVyxHQUFHLFFBQU07QUFDMUQsWUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLGNBQWMsVUFBVSxZQUFZLE1BQU0sT0FBTztBQUM3RSxhQUFPO0FBQUEsUUFDSCxNQUFNLFNBQVMsTUFBTSxHQUFHLEtBQUssYUFBYTtBQUFBLFFBQzFDLFNBQVMsU0FBUyxNQUFNLEtBQUssYUFBYTtBQUFBLE1BQzlDO0FBQUEsSUFDSixDQUFDO0FBRUQsV0FDSSxxQkFBQyxTQUFJLFlBQVksQ0FBQyxZQUFZLEdBQzFCO0FBQUEsMEJBQUMsU0FDRyw4QkFBQyxPQUFJLE1BQU0sa0JBQWtCLEdBQUcsUUFBTSxHQUFHLElBQUksR0FBRyxVQUFVLENBQUMsTUFBK0IsS0FBSyxjQUFjLENBQUMsR0FBRyxHQUNySDtBQUFBLE1BQ0MsS0FBSyxxQkFBcUIsRUFBRSxTQUFTLGtCQUFrQixHQUFHLENBQUMsRUFBRSxRQUFRLE1BQU0sT0FBTyxFQUFFLENBQUM7QUFBQSxPQUMxRjtBQUFBLEVBRVI7QUFDSjtBQUVBLElBQU0sYUFBYSxJQUFJO0FBRXZCLElBQU8scUJBQVE7OztBQ3pFQSxTQUFSLElBQXFCLEVBQUUsV0FBVyxHQUFnQztBQUNyRSxRQUFNLEVBQUUsS0FBSyxNQUFNLE1BQU0sSUFBSSxNQUFNO0FBQ25DLFFBQU0sY0FBYyxpQkFBZ0IsbUJBQW1CLFVBQVU7QUFFakUsU0FDSTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0csV0FBVTtBQUFBLE1BQ1YsWUFBWSxDQUFDLEtBQUs7QUFBQSxNQUNsQixTQUFPO0FBQUEsTUFDUCxhQUFhLE1BQU0sWUFBWTtBQUFBLE1BQy9CLE9BQU8sTUFBTSxNQUFNO0FBQUEsTUFDbkI7QUFBQSxNQUNBLFFBQVEsTUFBTSxRQUFRO0FBQUEsTUFDdEIsYUFBYTtBQUFBLE1BQ2IsR0FBRyxDQUFDLFNBQVMsVUFBVSxNQUFNLEtBQUssUUFBUSxDQUFDO0FBQUEsTUFFM0MsK0JBQUMsU0FBSSxZQUFZLENBQUMsS0FBSyxHQUFHLFFBQVEsSUFBSSxNQUFNLE1BQU0sYUFBVyxNQUN6RDtBQUFBLDRCQUFDLFNBQUksUUFBUSxJQUFJLE1BQU0sT0FDbEIsNkJBQVcsWUFDaEI7QUFBQSxRQUNBLHFCQUFDLFNBQUksUUFBUSxJQUFJLE1BQU0sUUFDbEI7QUFBQSx3QkFBTTtBQUFBLFVBQ04sbUJBQVcsV0FBVyxFQUFFLFNBQVMsWUFBWSxDQUFDO0FBQUEsV0FDbkQ7QUFBQSxRQUNBLHFCQUFDLFNBQUksUUFBUSxJQUFJLE1BQU0sS0FDbEI7QUFBQSwyQkFBUztBQUFBLFVBQ1QscUJBQWE7QUFBQSxVQUNiLHNCQUFjO0FBQUEsVUFDZCxzQkFBYyxjQUFjLFVBQVU7QUFBQSxXQUMzQztBQUFBLFNBQ0o7QUFBQTtBQUFBLEVBQ0o7QUFFUjs7O0FDM0NBLE9BQU8sU0FBUztBQUNoQixPQUFPLGVBQWU7QUFDdEIsT0FBT0ksY0FBYTtBQUtwQixJQUFNLGFBQWE7QUFBQSxFQUNmLFVBQVU7QUFBQSxFQUNWLE1BQU07QUFBQSxFQUNOLFdBQVc7QUFBQSxFQUNYLE9BQU8sVUFBVSxNQUFNO0FBQUEsRUFDdkIsZ0JBQWdCO0FBQUEsRUFDaEIsYUFBYTtBQUFBLEVBQ2IsUUFBUTtBQUNaO0FBRUEsSUFBTSxhQUFOLGNBQXlCLElBQUksWUFBWTtBQUFBLEVBSXJDLFlBQVksR0FBdUI7QUFDL0IsVUFBTTtBQUNOLFNBQUssWUFBWSxJQUFJO0FBQ3JCLFNBQUssWUFBWSxJQUFJO0FBQ3JCLFNBQUssaUJBQWlCLEVBQUUsR0FBRyxDQUFBQyxPQUFLO0FBQzVCLFlBQU0sU0FBUyxLQUFLLHFCQUFxQjtBQUN6QyxhQUFPQSxHQUFFLElBQUksT0FBSyxVQUFVLElBQUksRUFBRTtBQUFBLElBQ3RDLENBQUM7QUFDRCxTQUFLLGdCQUFnQixLQUFLLGVBQWUsVUFBVSxNQUFNLEtBQUssV0FBVyxDQUFDO0FBRTFFLGNBQVUsTUFBTSxLQUFLLGNBQWMsQ0FBQztBQUFBLEVBQ3hDO0FBQUEsRUFFUyxlQUFlLFVBQThCO0FBQ2xELFFBQUksQ0FBQyxLQUFLLFdBQVcsRUFBRztBQUV4QixRQUFJO0FBQ0EsVUFBSSxDQUFDLEtBQUssUUFBUztBQUVuQixZQUFNLFFBQVEsS0FBSyxvQkFBb0I7QUFDdkMsWUFBTSxTQUFTLEtBQUsscUJBQXFCO0FBRXpDLFVBQUksU0FBUyxLQUFLLFVBQVUsRUFBRztBQUUvQixZQUFNLFNBQVMsS0FBSyxlQUFlLElBQUk7QUFFdkMsVUFBSSxPQUFPLFdBQVcsRUFBRztBQUV6QixZQUFNLFdBQVcsU0FBUyxPQUFPLFNBQVM7QUFDMUMsWUFBTSxRQUFRLEtBQUssT0FBTyxVQUFVO0FBQ3BDLFlBQU0sVUFBVSxJQUFJLElBQUksWUFBWTtBQUNwQyxjQUFRLFFBQVEsR0FBRyxPQUFPLENBQUMsQ0FBQztBQUM1QixZQUFNLFNBQVMsSUFBSTtBQUVuQixlQUFTLElBQUksR0FBRyxJQUFJLE9BQU8sU0FBUyxHQUFHLEtBQUs7QUFDeEMsY0FBTSxPQUFPLElBQUksS0FBSztBQUN0QixjQUFNLE1BQU0sT0FBTyxLQUFLLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztBQUNyQyxjQUFNLE1BQU0sSUFBSTtBQUNoQixjQUFNLE1BQU0sT0FBTyxDQUFDO0FBQ3BCLGNBQU0sT0FBTyxJQUFJLEtBQUs7QUFDdEIsY0FBTSxNQUFNLE9BQU8sSUFBSSxDQUFDO0FBQ3hCLGNBQU0sT0FBTyxJQUFJLEtBQUs7QUFDdEIsY0FBTSxNQUFNLE9BQU8sS0FBSyxJQUFJLE9BQU8sU0FBUyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBRXJELGNBQU0sTUFBTSxPQUFPLE1BQU0sT0FBTztBQUNoQyxjQUFNLE1BQU0sT0FBTyxNQUFNLE9BQU87QUFDaEMsY0FBTSxNQUFNLE9BQU8sTUFBTSxPQUFPO0FBQ2hDLGNBQU0sTUFBTSxPQUFPLE1BQU0sT0FBTztBQUVoQyxnQkFBUSxTQUFTLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxHQUFHO0FBQUEsTUFDakQ7QUFFQSxjQUFRLFFBQVEsT0FBTyxNQUFNO0FBQzdCLGNBQVEsUUFBUSxHQUFHLE1BQU07QUFDekIsY0FBUSxNQUFNO0FBRWQsZUFBUyxZQUFZLFFBQVEsUUFBUSxHQUFHLElBQUksU0FBUyxTQUFTLEtBQUs7QUFBQSxJQUN2RSxTQUFTLE9BQU87QUFDWixjQUFRLEtBQUssNkJBQTZCLEtBQUs7QUFBQSxJQUNuRDtBQUFBLEVBQ0o7QUFDSjtBQUVBLElBQU0sUUFBUUMsU0FBUSxjQUFjLEVBQUUsV0FBVyxPQUFPLEdBQUcsVUFBVTtBQUVyRSxJQUFNLFlBQU4sTUFBTSxXQUFVO0FBQUEsRUFHWjtBQUFBLFNBQWUsY0FBc0I7QUFBQTtBQUFBLEVBTTlCLGNBQWM7QUFDakIsS0FBQyxLQUFLLGtCQUFrQixLQUFLLG1CQUFtQixJQUFJLFlBQVksaUJBQWdCLFlBQVksSUFBSSxDQUFDO0FBRWpHLFNBQUssUUFBUSxpQkFBZ0IsWUFBWSxVQUFVLE1BQU0sS0FBSyxvQkFBb0IsaUJBQWdCLFlBQVksSUFBSSxDQUFDLENBQUM7QUFFcEgsU0FBSyxVQUFVLFVBQVUsWUFBWTtBQUNyQyxRQUFJLEtBQUssU0FBUztBQUNkLFdBQUssUUFBUSxhQUFhLFdBQVcsUUFBUTtBQUM3QyxXQUFLLFFBQVEsU0FBUyxXQUFXLElBQUk7QUFDckMsV0FBSyxRQUFRLGNBQWMsV0FBVyxTQUFTO0FBQy9DLFdBQUssUUFBUSxVQUFVLFdBQVcsS0FBSztBQUN2QyxXQUFLLFFBQVEsb0JBQW9CLFdBQVcsY0FBYztBQUMxRCxXQUFLLFFBQVEsV0FBVyxXQUFXLE1BQU07QUFDekMsV0FBSyxVQUFVLGNBQWMsS0FBSyxTQUFTLFFBQVEsRUFBRSxHQUFHLENBQUMsTUFBTTtBQUMzRCxZQUFJO0FBQ0EsZ0JBQU0sT0FBTyxXQUFXO0FBQ3hCLGlCQUFPLEVBQUUsSUFBSSxPQUFLLElBQUksSUFBSTtBQUFBLFFBQzlCLFNBQVMsT0FBTztBQUNaLGtCQUFRLEtBQUssbUNBQW1DLEtBQUs7QUFDckQsaUJBQU8sQ0FBQztBQUFBLFFBQ1o7QUFBQSxNQUNKLENBQUM7QUFBQSxJQUNMLE9BQ0s7QUFDRCxjQUFRLE1BQU0sMkNBQXFDO0FBQ25ELFdBQUssVUFBVSxZQUFzQixDQUFDLENBQUMsRUFBRSxDQUFDO0FBQUEsSUFDOUM7QUFBQSxFQUNKO0FBQUEsRUFFQSxJQUFXLGtCQUFrQjtBQUN6QixXQUFPLEtBQUs7QUFBQSxFQUNoQjtBQUFBLEVBRU8sS0FBSyxZQUFzQjtBQUM5QixXQUNJO0FBQUEsTUFBQztBQUFBO0FBQUEsUUFDRyxZQUFZLENBQUMsR0FBRyxZQUFZLE1BQU07QUFBQSxRQUNsQyxVQUFVLElBQUksU0FBUztBQUFBLFFBQ3ZCLEdBQUcsTUFBTSxXQUFVLGVBQWU7QUFBQSxRQUNsQyxXQUNJLE1BQU07QUFDRixxQkFBVSxlQUFlO0FBQ3pCLGNBQUksV0FBVSxlQUFlLEVBQUcsTUFBSyxNQUFNO0FBQUEsUUFDL0M7QUFBQSxRQUdILGNBQUksTUFBTSxLQUFLLE9BQU87QUFBQTtBQUFBLElBQzNCO0FBQUEsRUFFUjtBQUNKO0FBRUEsSUFBTSxPQUFPLElBQUk7QUFFakIsSUFBTyxlQUFROzs7QUNsSkEsU0FBUixZQUE2QixFQUFFLFdBQVcsR0FBZ0M7QUFDN0UsUUFBTSxFQUFFLE1BQU0sT0FBTyxPQUFPLElBQUksTUFBTTtBQUV0QyxTQUNJO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxXQUFVO0FBQUEsTUFDVixPQUFPLE1BQU0sTUFBTTtBQUFBLE1BQ25CO0FBQUEsTUFDQSxRQUFRLFFBQVEsT0FBTztBQUFBLE1BQ3ZCLFNBQVMsYUFBSztBQUFBLE1BQ2QsYUFBYTtBQUFBLE1BQ2IsR0FBRyxDQUFDLFNBQVMsVUFBVSxNQUFNLEtBQUssUUFBUSxDQUFDO0FBQUEsTUFFM0MsOEJBQUMsU0FBSSxRQUFRLElBQUksTUFBTSxNQUFNLFFBQVEsSUFBSSxNQUFNLEtBQUssZUFBZSxLQUFLLE1BQU0sV0FBVyxhQUFhLEVBQUUsU0FBUyxJQUFHLEdBQy9HLHVCQUFLLEtBQUssQ0FBQyxhQUFhLENBQUMsR0FDOUI7QUFBQTtBQUFBLEVBQ0o7QUFFUjs7O0FDbkJBLFNBQVMsTUFBTSxFQUFFLE1BQU0sT0FBTyxHQUFxQztBQUMvRCxTQUNJLHFCQUFDLFNBQUksWUFBWSxDQUFDLE9BQU8sR0FBRyxVQUFVLElBQUksU0FBUyxRQUFRLGFBQVcsTUFDbEU7QUFBQSx3QkFBQyxXQUFNLFlBQVksQ0FBQyxNQUFNLEdBQUcsT0FBTyxNQUFNO0FBQUEsSUFDMUMsb0JBQUMsV0FBTSxZQUFZLENBQUMsUUFBUSxHQUFHLE9BQU8sUUFBUTtBQUFBLEtBQ2xEO0FBRVI7QUFFZSxTQUFSLFdBQTRCLEVBQUUsV0FBVyxHQUFnQztBQUU1RSxTQUNJO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDRyxNQUFLO0FBQUEsTUFDTCxPQUFPLE1BQU0sTUFBTTtBQUFBLE1BQ25CO0FBQUEsTUFDQSxhQUFhO0FBQUEsTUFDYixHQUFHLENBQUMsU0FBUyxVQUFVLE1BQU0sS0FBSyxRQUFRLENBQUM7QUFBQSxNQUUzQywrQkFBQyxTQUFJLFlBQVksQ0FBQyxZQUFZLEdBQUcsYUFBYSxJQUFJLFlBQVksVUFDMUQ7QUFBQSw0QkFBQyxXQUFNLFlBQVksQ0FBQyxPQUFPLEdBQUcsT0FBTyxjQUFjO0FBQUEsUUFDbkQscUJBQUMsU0FBSSxZQUFZLENBQUMsTUFBTSxHQUFHLGFBQVcsTUFDbEM7QUFBQSwrQkFBQyxTQUFJLFlBQVksQ0FBQyxTQUFTLEdBQUcsYUFBYSxJQUFJLFlBQVksVUFDdkQ7QUFBQSxnQ0FBQyxXQUFNLFlBQVksQ0FBQyxVQUFVLEdBQUcsT0FBTyx5QkFBc0I7QUFBQSxZQUM5RCxxQkFBQyxTQUFJLGFBQWEsSUFBSSxZQUFZLFVBQzlCO0FBQUEsa0NBQUMsU0FBTSxNQUFLLGFBQVksUUFBTyxpQkFBZ0I7QUFBQSxjQUMvQyxvQkFBQyxTQUFNLE1BQUssYUFBWSxRQUFPLG1CQUFrQjtBQUFBLGNBQ2pELG9CQUFDLFNBQU0sTUFBSyxhQUFZLFFBQU8sa0JBQWlCO0FBQUEsY0FDaEQsb0JBQUMsU0FBTSxNQUFLLGFBQVksUUFBTyx3QkFBb0I7QUFBQSxjQUNuRCxvQkFBQyxTQUFNLE1BQUssYUFBWSxRQUFPLHNCQUFxQjtBQUFBLGNBQ3BELG9CQUFDLFNBQU0sTUFBSyxrQkFBWSxRQUFPLGdDQUErQjtBQUFBLGNBQzlELG9CQUFDLFNBQU0sTUFBSyxrQkFBWSxRQUFPLGlDQUFnQztBQUFBLGNBQy9ELG9CQUFDLFNBQU0sTUFBSyxrQkFBWSxRQUFPLHdDQUFvQztBQUFBLGNBQ25FLG9CQUFDLFNBQU0sTUFBSyxrQkFBWSxRQUFPLHVDQUFtQztBQUFBLGVBQ3RFO0FBQUEsYUFDSjtBQUFBLFVBQ0EscUJBQUMsU0FBSSxZQUFZLENBQUMsU0FBUyxHQUFHLGFBQWEsSUFBSSxZQUFZLFVBQ3ZEO0FBQUEsZ0NBQUMsV0FBTSxZQUFZLENBQUMsVUFBVSxHQUFHLE9BQU8sMkJBQXdCO0FBQUEsWUFDaEUscUJBQUMsU0FBSSxhQUFhLElBQUksWUFBWSxVQUM5QjtBQUFBLGtDQUFDLFNBQU0sTUFBSyx5QkFBbUIsUUFBTyxtQ0FBK0I7QUFBQSxjQUNyRSxvQkFBQyxTQUFNLE1BQUsseUJBQW1CLFFBQU8sa0NBQThCO0FBQUEsY0FDcEUsb0JBQUMsU0FBTSxNQUFLLGlDQUEyQixRQUFPLHNDQUFrQztBQUFBLGNBQ2hGLG9CQUFDLFNBQU0sTUFBSyxpQ0FBMkIsUUFBTyxxQ0FBaUM7QUFBQSxjQUMvRSxvQkFBQyxTQUFNLE1BQUssYUFBWSxRQUFPLDhCQUE2QjtBQUFBLGNBQzVELG9CQUFDLFNBQU0sTUFBSyxxQkFBb0IsUUFBTyxpQ0FBZ0M7QUFBQSxlQUMzRTtBQUFBLGFBQ0o7QUFBQSxXQUNKO0FBQUEsUUFDQSxxQkFBQyxTQUFJLFlBQVksQ0FBQyxNQUFNLEdBQUcsYUFBVyxNQUNsQztBQUFBLCtCQUFDLFNBQUksWUFBWSxDQUFDLFNBQVMsR0FBRyxhQUFhLElBQUksWUFBWSxVQUN2RDtBQUFBLGdDQUFDLFdBQU0sWUFBWSxDQUFDLFVBQVUsR0FBRyxPQUFPLHVCQUFvQjtBQUFBLFlBQzVELHFCQUFDLFNBQUksYUFBYSxJQUFJLFlBQVksVUFDOUI7QUFBQSxrQ0FBQyxTQUFNLE1BQUssaUJBQWdCLFFBQU8sWUFBVztBQUFBLGNBQzlDLG9CQUFDLFNBQU0sTUFBSyxhQUFZLFFBQU8sOEJBQTBCO0FBQUEsY0FDekQsb0JBQUMsU0FBTSxNQUFLLGFBQVksUUFBTyxpQ0FBZ0M7QUFBQSxjQUMvRCxvQkFBQyxTQUFNLE1BQUssYUFBWSxRQUFPLHFCQUFvQjtBQUFBLGNBQ25ELG9CQUFDLFNBQU0sTUFBSyxhQUFZLFFBQU8sMkJBQTBCO0FBQUEsY0FDekQsb0JBQUMsU0FBTSxNQUFLLGVBQWMsUUFBTyx3QkFBdUI7QUFBQSxlQUM1RDtBQUFBLGFBQ0o7QUFBQSxVQUNBLHFCQUFDLFNBQUksWUFBWSxDQUFDLFNBQVMsR0FBRyxhQUFhLElBQUksWUFBWSxVQUN2RDtBQUFBLGdDQUFDLFdBQU0sWUFBWSxDQUFDLFVBQVUsR0FBRyxPQUFPLFVBQVU7QUFBQSxZQUNsRCxxQkFBQyxTQUFJLGFBQWEsSUFBSSxZQUFZLFVBQzlCO0FBQUEsa0NBQUMsU0FBTSxNQUFLLFNBQVEsUUFBTyxpQkFBZ0I7QUFBQSxjQUMzQyxvQkFBQyxTQUFNLE1BQUssaUJBQWdCLFFBQU8sc0JBQWtCO0FBQUEsY0FDckQsb0JBQUMsU0FBTSxNQUFLLGFBQVksUUFBTyxvQkFBZ0I7QUFBQSxjQUMvQyxvQkFBQyxTQUFNLE1BQUssYUFBWSxRQUFPLG1CQUFrQjtBQUFBLGVBQ3JEO0FBQUEsYUFDSjtBQUFBLFdBQ0o7QUFBQSxTQUNKO0FBQUE7QUFBQSxFQUNKO0FBRVI7OztBQ3RFQSxTQUFTLE9BQU87QUFDWixRQUFNLFdBQVcsY0FBYyxhQUFLLFVBQVU7QUFDOUMsU0FDSSxvQkFBQyxPQUFJLE1BQU0sVUFDTix1QkFDRyxxQkFBQyxRQUFLLE1BQU0sYUFDUjtBQUFBLHdCQUFDLE9BQUksWUFBWSxTQUFTO0FBQUEsSUFDMUIsb0JBQUMsZUFBWSxZQUFZLFNBQVM7QUFBQSxJQUNsQyxvQkFBQyxjQUFXLFlBQVksU0FBUztBQUFBLEtBQ3JDLEdBRVI7QUFFUjtBQUVBLFlBQUksTUFBTSxFQUFFLEtBQUssZ0JBQU8sS0FBVyxDQUFDOyIsCiAgIm5hbWVzIjogWyJHT2JqZWN0IiwgInNldCIsICJHT2JqZWN0IiwgImtleSIsICJvYmplY3QiLCAiR09iamVjdCIsICJtb2QiLCAiR09iamVjdCIsICJyZW1vdmUiLCAiQXN0YWxJTyIsICJBc3RhbElPIiwgImludGVydmFsIiwgInNldCIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkdpbyIsICJHT2JqZWN0IiwgIkd0ayIsICJHaW8iLCAiY3NzIiwgIkdPYmplY3QiLCAiaW5kZXgiLCAiR3RrIiwgIkFzdGFsIiwgIkdMaWIiLCAiR3RrIiwgIkFzdGFsIiwgInNuYWtlaWZ5IiwgIm1vZCIsICJwYXRjaCIsICJIeXBybGFuZCIsICJXcCIsICJHT2JqZWN0IiwgIm1haW4iLCAiR3RrIiwgIkdMaWIiLCAiQXN0YWwiLCAiR0xpYiIsICJwb2xsVGltZSIsICJHTGliIiwgIndvcmtzcGFjZXMiLCAiR0xpYiIsICJHTGliIiwgIkdMaWIiLCAiQXN0YWwiLCAicGF0aCIsICJwYXRoIiwgIkFzdGFsIiwgIkdMaWIiLCAiR2lvIiwgIkdMaWIiLCAiR0xpYiIsICJTd3d3IiwgIlJlc2l6ZSIsICJGaWx0ZXIiLCAiVHJhbnNpdGlvblR5cGUiLCAiVHJhbnNpdGlvblBvcyIsICJwYXRoIiwgInBhdGgiLCAiR0xpYiIsICJwb2xsVGltZSIsICJHaW8iLCAiR09iamVjdCIsICJ2IiwgIkdPYmplY3QiXQp9Cg==

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@